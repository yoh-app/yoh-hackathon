import { gql } from '@apollo/client';
import * as Apollo from '@apollo/client';
export type Maybe<T> = T | undefined;
export type InputMaybe<T> = T | undefined;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
const defaultOptions = {} as const;
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: string;
  String: string;
  Boolean: boolean;
  Int: number;
  Float: number;
  /** Date custom scalar type */
  DateTime: any;
  /** Json custom scalar type */
  Json: any;
  /** BigInt custom scalar type */
  BigInt: any;
  /** Decimal custom scalar type */
  Decimal: any;
};

export type Query = {
  __typename?: 'Query';
  aggregateAttachment?: Maybe<AggregateAttachment>;
  aggregateAttribute?: Maybe<AggregateAttribute>;
  aggregateAudio?: Maybe<AggregateAudio>;
  aggregateBlock?: Maybe<AggregateBlock>;
  aggregateCategory?: Maybe<AggregateCategory>;
  aggregateCollection?: Maybe<AggregateCollection>;
  aggregateCoupon?: Maybe<AggregateCoupon>;
  aggregateCustomer?: Maybe<AggregateCustomer>;
  aggregateDocument?: Maybe<AggregateDocument>;
  aggregateEmbed?: Maybe<AggregateEmbed>;
  aggregateGroup?: Maybe<AggregateGroup>;
  aggregateItem?: Maybe<AggregateItem>;
  aggregateLink?: Maybe<AggregateLink>;
  aggregateLoginToken?: Maybe<AggregateLoginToken>;
  aggregateNotification?: Maybe<AggregateNotification>;
  aggregateOrder?: Maybe<AggregateOrder>;
  aggregateOrderedAudio?: Maybe<AggregateOrderedAudio>;
  aggregateOrderedDocument?: Maybe<AggregateOrderedDocument>;
  aggregateOrderedLink?: Maybe<AggregateOrderedLink>;
  aggregateOrderedPicture?: Maybe<AggregateOrderedPicture>;
  aggregateOrderedProduct?: Maybe<AggregateOrderedProduct>;
  aggregateOrderedRedeemable?: Maybe<AggregateOrderedRedeemable>;
  aggregateOrderedVideo?: Maybe<AggregateOrderedVideo>;
  aggregatePage?: Maybe<AggregatePage>;
  aggregatePageCollection?: Maybe<AggregatePageCollection>;
  aggregatePageView?: Maybe<AggregatePageView>;
  aggregatePicture?: Maybe<AggregatePicture>;
  aggregateProduct?: Maybe<AggregateProduct>;
  aggregateProductCollection?: Maybe<AggregateProductCollection>;
  aggregateRedeemable?: Maybe<AggregateRedeemable>;
  aggregateRefreshToken?: Maybe<AggregateRefreshToken>;
  aggregateRefund?: Maybe<AggregateRefund>;
  aggregateRequest?: Maybe<AggregateRequest>;
  aggregateRequestClick?: Maybe<AggregateRequestClick>;
  aggregateShipping?: Maybe<AggregateShipping>;
  aggregateSlugCounter?: Maybe<AggregateSlugCounter>;
  aggregateSocial?: Maybe<AggregateSocial>;
  aggregateTag?: Maybe<AggregateTag>;
  aggregateTax?: Maybe<AggregateTax>;
  aggregateTrait?: Maybe<AggregateTrait>;
  aggregateType?: Maybe<AggregateType>;
  aggregateUser?: Maybe<AggregateUser>;
  aggregateValue?: Maybe<AggregateValue>;
  aggregateVideo?: Maybe<AggregateVideo>;
  aggregateWebsite?: Maybe<AggregateWebsite>;
  aggregateWithdraw?: Maybe<AggregateWithdraw>;
  findFirstAttachment?: Maybe<Attachment>;
  findFirstAttribute?: Maybe<Attribute>;
  findFirstAudio?: Maybe<Audio>;
  findFirstBlock?: Maybe<Block>;
  findFirstCategory?: Maybe<Category>;
  findFirstCollection?: Maybe<Collection>;
  findFirstCoupon?: Maybe<Coupon>;
  findFirstCustomer?: Maybe<Customer>;
  findFirstDocument?: Maybe<Document>;
  findFirstEmbed?: Maybe<Embed>;
  findFirstGroup?: Maybe<Group>;
  findFirstItem?: Maybe<Item>;
  findFirstLink?: Maybe<Link>;
  findFirstLoginToken?: Maybe<LoginToken>;
  findFirstNotification?: Maybe<Notification>;
  findFirstOrder?: Maybe<Order>;
  findFirstOrderedAudio?: Maybe<OrderedAudio>;
  findFirstOrderedDocument?: Maybe<OrderedDocument>;
  findFirstOrderedLink?: Maybe<OrderedLink>;
  findFirstOrderedPicture?: Maybe<OrderedPicture>;
  findFirstOrderedProduct?: Maybe<OrderedProduct>;
  findFirstOrderedRedeemable?: Maybe<OrderedRedeemable>;
  findFirstOrderedVideo?: Maybe<OrderedVideo>;
  findFirstPage?: Maybe<Page>;
  findFirstPageCollection?: Maybe<PageCollection>;
  findFirstPageView?: Maybe<PageView>;
  findFirstPicture?: Maybe<Picture>;
  findFirstProduct?: Maybe<Product>;
  findFirstProductCollection?: Maybe<ProductCollection>;
  findFirstRedeemable?: Maybe<Redeemable>;
  findFirstRefreshToken?: Maybe<RefreshToken>;
  findFirstRefund?: Maybe<Refund>;
  findFirstRequest?: Maybe<Request>;
  findFirstRequestClick?: Maybe<RequestClick>;
  findFirstShipping?: Maybe<Shipping>;
  findFirstSlugCounter?: Maybe<SlugCounter>;
  findFirstSocial?: Maybe<Social>;
  findFirstTag?: Maybe<Tag>;
  findFirstTax?: Maybe<Tax>;
  findFirstTrait?: Maybe<Trait>;
  findFirstType?: Maybe<Type>;
  findFirstUser?: Maybe<User>;
  findFirstValue?: Maybe<Value>;
  findFirstVideo?: Maybe<Video>;
  findFirstWebsite?: Maybe<Website>;
  findFirstWithdraw?: Maybe<Withdraw>;
  findManyAttachment: Array<Attachment>;
  findManyAttachmentCount: Scalars['Int'];
  findManyAttribute: Array<Attribute>;
  findManyAttributeCount: Scalars['Int'];
  findManyAudio: Array<Audio>;
  findManyAudioCount: Scalars['Int'];
  findManyBlock: Array<Block>;
  findManyBlockCount: Scalars['Int'];
  findManyCategory: Array<Category>;
  findManyCategoryCount: Scalars['Int'];
  findManyCollection: Array<Collection>;
  findManyCollectionCount: Scalars['Int'];
  findManyCoupon: Array<Coupon>;
  findManyCouponCount: Scalars['Int'];
  findManyCustomer: Array<Customer>;
  findManyCustomerCount: Scalars['Int'];
  findManyDocument: Array<Document>;
  findManyDocumentCount: Scalars['Int'];
  findManyEmbed: Array<Embed>;
  findManyEmbedCount: Scalars['Int'];
  findManyGroup: Array<Group>;
  findManyGroupCount: Scalars['Int'];
  findManyItem: Array<Item>;
  findManyItemCount: Scalars['Int'];
  findManyLink: Array<Link>;
  findManyLinkCount: Scalars['Int'];
  findManyLoginToken: Array<LoginToken>;
  findManyLoginTokenCount: Scalars['Int'];
  findManyNotification: Array<Notification>;
  findManyNotificationCount: Scalars['Int'];
  findManyOrder: Array<Order>;
  findManyOrderCount: Scalars['Int'];
  findManyOrderedAudio: Array<OrderedAudio>;
  findManyOrderedAudioCount: Scalars['Int'];
  findManyOrderedDocument: Array<OrderedDocument>;
  findManyOrderedDocumentCount: Scalars['Int'];
  findManyOrderedLink: Array<OrderedLink>;
  findManyOrderedLinkCount: Scalars['Int'];
  findManyOrderedPicture: Array<OrderedPicture>;
  findManyOrderedPictureCount: Scalars['Int'];
  findManyOrderedProduct: Array<OrderedProduct>;
  findManyOrderedProductCount: Scalars['Int'];
  findManyOrderedRedeemable: Array<OrderedRedeemable>;
  findManyOrderedRedeemableCount: Scalars['Int'];
  findManyOrderedVideo: Array<OrderedVideo>;
  findManyOrderedVideoCount: Scalars['Int'];
  findManyPage: Array<Page>;
  findManyPageCollection: Array<PageCollection>;
  findManyPageCollectionCount: Scalars['Int'];
  findManyPageCount: Scalars['Int'];
  findManyPageView: Array<PageView>;
  findManyPageViewCount: Scalars['Int'];
  findManyPicture: Array<Picture>;
  findManyPictureCount: Scalars['Int'];
  findManyProduct: Array<Product>;
  findManyProductCollection: Array<ProductCollection>;
  findManyProductCollectionCount: Scalars['Int'];
  findManyProductCount: Scalars['Int'];
  findManyRedeemable: Array<Redeemable>;
  findManyRedeemableCount: Scalars['Int'];
  findManyRefreshToken: Array<RefreshToken>;
  findManyRefreshTokenCount: Scalars['Int'];
  findManyRefund: Array<Refund>;
  findManyRefundCount: Scalars['Int'];
  findManyRequest: Array<Request>;
  findManyRequestClick: Array<RequestClick>;
  findManyRequestClickCount: Scalars['Int'];
  findManyRequestCount: Scalars['Int'];
  findManyShipping: Array<Shipping>;
  findManyShippingCount: Scalars['Int'];
  findManySlugCounter: Array<SlugCounter>;
  findManySlugCounterCount: Scalars['Int'];
  findManySocial: Array<Social>;
  findManySocialCount: Scalars['Int'];
  findManyTag: Array<Tag>;
  findManyTagCount: Scalars['Int'];
  findManyTax: Array<Tax>;
  findManyTaxCount: Scalars['Int'];
  findManyTrait: Array<Trait>;
  findManyTraitCount: Scalars['Int'];
  findManyType: Array<Type>;
  findManyTypeCount: Scalars['Int'];
  findManyUser: Array<User>;
  findManyUserCount: Scalars['Int'];
  findManyValue: Array<Value>;
  findManyValueCount: Scalars['Int'];
  findManyVideo: Array<Video>;
  findManyVideoCount: Scalars['Int'];
  findManyWebsite: Array<Website>;
  findManyWebsiteCount: Scalars['Int'];
  findManyWithdraw: Array<Withdraw>;
  findManyWithdrawCount: Scalars['Int'];
  findUniqueAttachment?: Maybe<Attachment>;
  findUniqueAttribute?: Maybe<Attribute>;
  findUniqueAudio?: Maybe<Audio>;
  findUniqueBlock?: Maybe<Block>;
  findUniqueCategory?: Maybe<Category>;
  findUniqueCollection?: Maybe<Collection>;
  findUniqueCoupon?: Maybe<Coupon>;
  findUniqueCustomer?: Maybe<Customer>;
  findUniqueDocument?: Maybe<Document>;
  findUniqueEmbed?: Maybe<Embed>;
  findUniqueGroup?: Maybe<Group>;
  findUniqueItem?: Maybe<Item>;
  findUniqueLink?: Maybe<Link>;
  findUniqueLoginToken?: Maybe<LoginToken>;
  findUniqueNotification?: Maybe<Notification>;
  findUniqueOrder?: Maybe<Order>;
  findUniqueOrderedAudio?: Maybe<OrderedAudio>;
  findUniqueOrderedDocument?: Maybe<OrderedDocument>;
  findUniqueOrderedLink?: Maybe<OrderedLink>;
  findUniqueOrderedPicture?: Maybe<OrderedPicture>;
  findUniqueOrderedProduct?: Maybe<OrderedProduct>;
  findUniqueOrderedRedeemable?: Maybe<OrderedRedeemable>;
  findUniqueOrderedVideo?: Maybe<OrderedVideo>;
  findUniquePage?: Maybe<Page>;
  findUniquePageCollection?: Maybe<PageCollection>;
  findUniquePageView?: Maybe<PageView>;
  findUniquePicture?: Maybe<Picture>;
  findUniqueProduct?: Maybe<Product>;
  findUniqueProductCollection?: Maybe<ProductCollection>;
  findUniqueRedeemable?: Maybe<Redeemable>;
  findUniqueRefreshToken?: Maybe<RefreshToken>;
  findUniqueRefund?: Maybe<Refund>;
  findUniqueRequest?: Maybe<Request>;
  findUniqueRequestClick?: Maybe<RequestClick>;
  findUniqueShipping?: Maybe<Shipping>;
  findUniqueSlugCounter?: Maybe<SlugCounter>;
  findUniqueSocial?: Maybe<Social>;
  findUniqueTag?: Maybe<Tag>;
  findUniqueTax?: Maybe<Tax>;
  findUniqueTrait?: Maybe<Trait>;
  findUniqueType?: Maybe<Type>;
  findUniqueUser?: Maybe<User>;
  findUniqueValue?: Maybe<Value>;
  findUniqueVideo?: Maybe<Video>;
  findUniqueWebsite?: Maybe<Website>;
  findUniqueWithdraw?: Maybe<Withdraw>;
  getAdminSettings?: Maybe<Scalars['Json']>;
  getCustomer?: Maybe<Scalars['Json']>;
  getFilters?: Maybe<Scalars['Json']>;
  getSchema: Schema;
  getTemplates?: Maybe<Scalars['Json']>;
  getUiTree?: Maybe<Scalars['Json']>;
  me?: Maybe<User>;
  permission?: Maybe<Scalars['Json']>;
  requireSubscription?: Maybe<Scalars['Boolean']>;
  slugExist?: Maybe<Scalars['Boolean']>;
  stripeAccountStatus?: Maybe<Scalars['Json']>;
  stripeEnabled?: Maybe<Scalars['Boolean']>;
};


export type QueryAggregateAttachmentArgs = {
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<AttachmentOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttachmentWhereInput>;
};


export type QueryAggregateAttributeArgs = {
  cursor?: InputMaybe<AttributeWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<AttributeOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttributeWhereInput>;
};


export type QueryAggregateAudioArgs = {
  cursor?: InputMaybe<AudioWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<AudioOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioWhereInput>;
};


export type QueryAggregateBlockArgs = {
  cursor?: InputMaybe<BlockWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<BlockOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<BlockWhereInput>;
};


export type QueryAggregateCategoryArgs = {
  cursor?: InputMaybe<CategoryWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<CategoryOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CategoryWhereInput>;
};


export type QueryAggregateCollectionArgs = {
  cursor?: InputMaybe<CollectionWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<CollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CollectionWhereInput>;
};


export type QueryAggregateCouponArgs = {
  cursor?: InputMaybe<CouponWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<CouponOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CouponWhereInput>;
};


export type QueryAggregateCustomerArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<CustomerOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type QueryAggregateDocumentArgs = {
  cursor?: InputMaybe<DocumentWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<DocumentOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DocumentWhereInput>;
};


export type QueryAggregateEmbedArgs = {
  cursor?: InputMaybe<EmbedWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<EmbedOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EmbedWhereInput>;
};


export type QueryAggregateGroupArgs = {
  cursor?: InputMaybe<GroupWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<GroupOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<GroupWhereInput>;
};


export type QueryAggregateItemArgs = {
  cursor?: InputMaybe<ItemWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<ItemOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ItemWhereInput>;
};


export type QueryAggregateLinkArgs = {
  cursor?: InputMaybe<LinkWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<LinkOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LinkWhereInput>;
};


export type QueryAggregateLoginTokenArgs = {
  cursor?: InputMaybe<LoginTokenWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<LoginTokenOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LoginTokenWhereInput>;
};


export type QueryAggregateNotificationArgs = {
  cursor?: InputMaybe<NotificationWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<NotificationOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<NotificationWhereInput>;
};


export type QueryAggregateOrderArgs = {
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderWhereInput>;
};


export type QueryAggregateOrderedAudioArgs = {
  cursor?: InputMaybe<OrderedAudioWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedAudioOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedAudioWhereInput>;
};


export type QueryAggregateOrderedDocumentArgs = {
  cursor?: InputMaybe<OrderedDocumentWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedDocumentOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedDocumentWhereInput>;
};


export type QueryAggregateOrderedLinkArgs = {
  cursor?: InputMaybe<OrderedLinkWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedLinkOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedLinkWhereInput>;
};


export type QueryAggregateOrderedPictureArgs = {
  cursor?: InputMaybe<OrderedPictureWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedPictureOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedPictureWhereInput>;
};


export type QueryAggregateOrderedProductArgs = {
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedProductOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type QueryAggregateOrderedRedeemableArgs = {
  cursor?: InputMaybe<OrderedRedeemableWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedRedeemableOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedRedeemableWhereInput>;
};


export type QueryAggregateOrderedVideoArgs = {
  cursor?: InputMaybe<OrderedVideoWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedVideoOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedVideoWhereInput>;
};


export type QueryAggregatePageArgs = {
  cursor?: InputMaybe<PageWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<PageOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageWhereInput>;
};


export type QueryAggregatePageCollectionArgs = {
  cursor?: InputMaybe<PageCollectionWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<PageCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageCollectionWhereInput>;
};


export type QueryAggregatePageViewArgs = {
  cursor?: InputMaybe<PageViewWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<PageViewOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageViewWhereInput>;
};


export type QueryAggregatePictureArgs = {
  cursor?: InputMaybe<PictureWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<PictureOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PictureWhereInput>;
};


export type QueryAggregateProductArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type QueryAggregateProductCollectionArgs = {
  cursor?: InputMaybe<ProductCollectionWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductCollectionWhereInput>;
};


export type QueryAggregateRedeemableArgs = {
  cursor?: InputMaybe<RedeemableWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<RedeemableOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RedeemableWhereInput>;
};


export type QueryAggregateRefreshTokenArgs = {
  cursor?: InputMaybe<RefreshTokenWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<RefreshTokenOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RefreshTokenWhereInput>;
};


export type QueryAggregateRefundArgs = {
  cursor?: InputMaybe<RefundWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<RefundOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RefundWhereInput>;
};


export type QueryAggregateRequestArgs = {
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<RequestOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestWhereInput>;
};


export type QueryAggregateRequestClickArgs = {
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<RequestClickOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestClickWhereInput>;
};


export type QueryAggregateShippingArgs = {
  cursor?: InputMaybe<ShippingWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<ShippingOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ShippingWhereInput>;
};


export type QueryAggregateSlugCounterArgs = {
  cursor?: InputMaybe<SlugCounterWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<SlugCounterOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SlugCounterWhereInput>;
};


export type QueryAggregateSocialArgs = {
  cursor?: InputMaybe<SocialWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<SocialOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SocialWhereInput>;
};


export type QueryAggregateTagArgs = {
  cursor?: InputMaybe<TagWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<TagOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TagWhereInput>;
};


export type QueryAggregateTaxArgs = {
  cursor?: InputMaybe<TaxWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<TaxOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TaxWhereInput>;
};


export type QueryAggregateTraitArgs = {
  cursor?: InputMaybe<TraitWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<TraitOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TraitWhereInput>;
};


export type QueryAggregateTypeArgs = {
  cursor?: InputMaybe<TypeWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<TypeOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TypeWhereInput>;
};


export type QueryAggregateUserArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<UserOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<UserWhereInput>;
};


export type QueryAggregateValueArgs = {
  cursor?: InputMaybe<ValueWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<ValueOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ValueWhereInput>;
};


export type QueryAggregateVideoArgs = {
  cursor?: InputMaybe<VideoWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<VideoOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoWhereInput>;
};


export type QueryAggregateWebsiteArgs = {
  cursor?: InputMaybe<WebsiteWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<WebsiteOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteWhereInput>;
};


export type QueryAggregateWithdrawArgs = {
  cursor?: InputMaybe<WithdrawWhereUniqueInput>;
  orderBy?: InputMaybe<Array<InputMaybe<WithdrawOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WithdrawWhereInput>;
};


export type QueryFindFirstAttachmentArgs = {
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<AttachmentScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<AttachmentOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttachmentWhereInput>;
};


export type QueryFindFirstAttributeArgs = {
  cursor?: InputMaybe<AttributeWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<AttributeScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<AttributeOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttributeWhereInput>;
};


export type QueryFindFirstAudioArgs = {
  cursor?: InputMaybe<AudioWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<AudioScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<AudioOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioWhereInput>;
};


export type QueryFindFirstBlockArgs = {
  cursor?: InputMaybe<BlockWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<BlockScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<BlockOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<BlockWhereInput>;
};


export type QueryFindFirstCategoryArgs = {
  cursor?: InputMaybe<CategoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<CategoryScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<CategoryOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CategoryWhereInput>;
};


export type QueryFindFirstCollectionArgs = {
  cursor?: InputMaybe<CollectionWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<CollectionScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<CollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CollectionWhereInput>;
};


export type QueryFindFirstCouponArgs = {
  cursor?: InputMaybe<CouponWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<CouponScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<CouponOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CouponWhereInput>;
};


export type QueryFindFirstCustomerArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<CustomerScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<CustomerOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type QueryFindFirstDocumentArgs = {
  cursor?: InputMaybe<DocumentWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<DocumentScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<DocumentOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DocumentWhereInput>;
};


export type QueryFindFirstEmbedArgs = {
  cursor?: InputMaybe<EmbedWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<EmbedScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<EmbedOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EmbedWhereInput>;
};


export type QueryFindFirstGroupArgs = {
  cursor?: InputMaybe<GroupWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<GroupScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<GroupOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<GroupWhereInput>;
};


export type QueryFindFirstItemArgs = {
  cursor?: InputMaybe<ItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<ItemScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<ItemOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ItemWhereInput>;
};


export type QueryFindFirstLinkArgs = {
  cursor?: InputMaybe<LinkWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<LinkScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<LinkOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LinkWhereInput>;
};


export type QueryFindFirstLoginTokenArgs = {
  cursor?: InputMaybe<LoginTokenWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<LoginTokenScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<LoginTokenOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LoginTokenWhereInput>;
};


export type QueryFindFirstNotificationArgs = {
  cursor?: InputMaybe<NotificationWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<NotificationScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<NotificationOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<NotificationWhereInput>;
};


export type QueryFindFirstOrderArgs = {
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderWhereInput>;
};


export type QueryFindFirstOrderedAudioArgs = {
  cursor?: InputMaybe<OrderedAudioWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedAudioScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedAudioOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedAudioWhereInput>;
};


export type QueryFindFirstOrderedDocumentArgs = {
  cursor?: InputMaybe<OrderedDocumentWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedDocumentScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedDocumentOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedDocumentWhereInput>;
};


export type QueryFindFirstOrderedLinkArgs = {
  cursor?: InputMaybe<OrderedLinkWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedLinkScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedLinkOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedLinkWhereInput>;
};


export type QueryFindFirstOrderedPictureArgs = {
  cursor?: InputMaybe<OrderedPictureWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedPictureScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedPictureOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedPictureWhereInput>;
};


export type QueryFindFirstOrderedProductArgs = {
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedProductScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedProductOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type QueryFindFirstOrderedRedeemableArgs = {
  cursor?: InputMaybe<OrderedRedeemableWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedRedeemableScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedRedeemableOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedRedeemableWhereInput>;
};


export type QueryFindFirstOrderedVideoArgs = {
  cursor?: InputMaybe<OrderedVideoWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedVideoScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedVideoOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedVideoWhereInput>;
};


export type QueryFindFirstPageArgs = {
  cursor?: InputMaybe<PageWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<PageScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<PageOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageWhereInput>;
};


export type QueryFindFirstPageCollectionArgs = {
  cursor?: InputMaybe<PageCollectionWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<PageCollectionScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<PageCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageCollectionWhereInput>;
};


export type QueryFindFirstPageViewArgs = {
  cursor?: InputMaybe<PageViewWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<PageViewScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<PageViewOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageViewWhereInput>;
};


export type QueryFindFirstPictureArgs = {
  cursor?: InputMaybe<PictureWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<PictureScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<PictureOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PictureWhereInput>;
};


export type QueryFindFirstProductArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<ProductScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type QueryFindFirstProductCollectionArgs = {
  cursor?: InputMaybe<ProductCollectionWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<ProductCollectionScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductCollectionWhereInput>;
};


export type QueryFindFirstRedeemableArgs = {
  cursor?: InputMaybe<RedeemableWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<RedeemableScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<RedeemableOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RedeemableWhereInput>;
};


export type QueryFindFirstRefreshTokenArgs = {
  cursor?: InputMaybe<RefreshTokenWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<RefreshTokenScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<RefreshTokenOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RefreshTokenWhereInput>;
};


export type QueryFindFirstRefundArgs = {
  cursor?: InputMaybe<RefundWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<RefundScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<RefundOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RefundWhereInput>;
};


export type QueryFindFirstRequestArgs = {
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<RequestScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<RequestOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestWhereInput>;
};


export type QueryFindFirstRequestClickArgs = {
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<RequestClickScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<RequestClickOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestClickWhereInput>;
};


export type QueryFindFirstShippingArgs = {
  cursor?: InputMaybe<ShippingWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<ShippingScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<ShippingOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ShippingWhereInput>;
};


export type QueryFindFirstSlugCounterArgs = {
  cursor?: InputMaybe<SlugCounterWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<SlugCounterScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<SlugCounterOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SlugCounterWhereInput>;
};


export type QueryFindFirstSocialArgs = {
  cursor?: InputMaybe<SocialWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<SocialScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<SocialOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SocialWhereInput>;
};


export type QueryFindFirstTagArgs = {
  cursor?: InputMaybe<TagWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<TagScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<TagOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TagWhereInput>;
};


export type QueryFindFirstTaxArgs = {
  cursor?: InputMaybe<TaxWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<TaxScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<TaxOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TaxWhereInput>;
};


export type QueryFindFirstTraitArgs = {
  cursor?: InputMaybe<TraitWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<TraitScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<TraitOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TraitWhereInput>;
};


export type QueryFindFirstTypeArgs = {
  cursor?: InputMaybe<TypeWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<TypeScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<TypeOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TypeWhereInput>;
};


export type QueryFindFirstUserArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<UserScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<UserOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<UserWhereInput>;
};


export type QueryFindFirstValueArgs = {
  cursor?: InputMaybe<ValueWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<ValueScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<ValueOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ValueWhereInput>;
};


export type QueryFindFirstVideoArgs = {
  cursor?: InputMaybe<VideoWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<VideoScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<VideoOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoWhereInput>;
};


export type QueryFindFirstWebsiteArgs = {
  cursor?: InputMaybe<WebsiteWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<WebsiteScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<WebsiteOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteWhereInput>;
};


export type QueryFindFirstWithdrawArgs = {
  cursor?: InputMaybe<WithdrawWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<WithdrawScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<WithdrawOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WithdrawWhereInput>;
};


export type QueryFindManyAttachmentArgs = {
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<AttachmentScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<AttachmentOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttachmentWhereInput>;
};


export type QueryFindManyAttachmentCountArgs = {
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<AttachmentScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<AttachmentOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttachmentWhereInput>;
};


export type QueryFindManyAttributeArgs = {
  cursor?: InputMaybe<AttributeWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<AttributeScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<AttributeOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttributeWhereInput>;
};


export type QueryFindManyAttributeCountArgs = {
  cursor?: InputMaybe<AttributeWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<AttributeScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<AttributeOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttributeWhereInput>;
};


export type QueryFindManyAudioArgs = {
  cursor?: InputMaybe<AudioWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<AudioScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<AudioOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioWhereInput>;
};


export type QueryFindManyAudioCountArgs = {
  cursor?: InputMaybe<AudioWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<AudioScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<AudioOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioWhereInput>;
};


export type QueryFindManyBlockArgs = {
  cursor?: InputMaybe<BlockWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<BlockScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<BlockOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<BlockWhereInput>;
};


export type QueryFindManyBlockCountArgs = {
  cursor?: InputMaybe<BlockWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<BlockScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<BlockOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<BlockWhereInput>;
};


export type QueryFindManyCategoryArgs = {
  cursor?: InputMaybe<CategoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<CategoryScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<CategoryOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CategoryWhereInput>;
};


export type QueryFindManyCategoryCountArgs = {
  cursor?: InputMaybe<CategoryWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<CategoryScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<CategoryOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CategoryWhereInput>;
};


export type QueryFindManyCollectionArgs = {
  cursor?: InputMaybe<CollectionWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<CollectionScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<CollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CollectionWhereInput>;
};


export type QueryFindManyCollectionCountArgs = {
  cursor?: InputMaybe<CollectionWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<CollectionScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<CollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CollectionWhereInput>;
};


export type QueryFindManyCouponArgs = {
  cursor?: InputMaybe<CouponWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<CouponScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<CouponOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CouponWhereInput>;
};


export type QueryFindManyCouponCountArgs = {
  cursor?: InputMaybe<CouponWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<CouponScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<CouponOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CouponWhereInput>;
};


export type QueryFindManyCustomerArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<CustomerScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<CustomerOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type QueryFindManyCustomerCountArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<CustomerScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<CustomerOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type QueryFindManyDocumentArgs = {
  cursor?: InputMaybe<DocumentWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<DocumentScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<DocumentOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DocumentWhereInput>;
};


export type QueryFindManyDocumentCountArgs = {
  cursor?: InputMaybe<DocumentWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<DocumentScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<DocumentOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DocumentWhereInput>;
};


export type QueryFindManyEmbedArgs = {
  cursor?: InputMaybe<EmbedWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<EmbedScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<EmbedOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EmbedWhereInput>;
};


export type QueryFindManyEmbedCountArgs = {
  cursor?: InputMaybe<EmbedWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<EmbedScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<EmbedOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EmbedWhereInput>;
};


export type QueryFindManyGroupArgs = {
  cursor?: InputMaybe<GroupWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<GroupScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<GroupOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<GroupWhereInput>;
};


export type QueryFindManyGroupCountArgs = {
  cursor?: InputMaybe<GroupWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<GroupScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<GroupOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<GroupWhereInput>;
};


export type QueryFindManyItemArgs = {
  cursor?: InputMaybe<ItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<ItemScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<ItemOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ItemWhereInput>;
};


export type QueryFindManyItemCountArgs = {
  cursor?: InputMaybe<ItemWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<ItemScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<ItemOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ItemWhereInput>;
};


export type QueryFindManyLinkArgs = {
  cursor?: InputMaybe<LinkWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<LinkScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<LinkOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LinkWhereInput>;
};


export type QueryFindManyLinkCountArgs = {
  cursor?: InputMaybe<LinkWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<LinkScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<LinkOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LinkWhereInput>;
};


export type QueryFindManyLoginTokenArgs = {
  cursor?: InputMaybe<LoginTokenWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<LoginTokenScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<LoginTokenOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LoginTokenWhereInput>;
};


export type QueryFindManyLoginTokenCountArgs = {
  cursor?: InputMaybe<LoginTokenWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<LoginTokenScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<LoginTokenOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LoginTokenWhereInput>;
};


export type QueryFindManyNotificationArgs = {
  cursor?: InputMaybe<NotificationWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<NotificationScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<NotificationOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<NotificationWhereInput>;
};


export type QueryFindManyNotificationCountArgs = {
  cursor?: InputMaybe<NotificationWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<NotificationScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<NotificationOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<NotificationWhereInput>;
};


export type QueryFindManyOrderArgs = {
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderWhereInput>;
};


export type QueryFindManyOrderCountArgs = {
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderWhereInput>;
};


export type QueryFindManyOrderedAudioArgs = {
  cursor?: InputMaybe<OrderedAudioWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedAudioScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedAudioOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedAudioWhereInput>;
};


export type QueryFindManyOrderedAudioCountArgs = {
  cursor?: InputMaybe<OrderedAudioWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedAudioScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedAudioOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedAudioWhereInput>;
};


export type QueryFindManyOrderedDocumentArgs = {
  cursor?: InputMaybe<OrderedDocumentWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedDocumentScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedDocumentOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedDocumentWhereInput>;
};


export type QueryFindManyOrderedDocumentCountArgs = {
  cursor?: InputMaybe<OrderedDocumentWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedDocumentScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedDocumentOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedDocumentWhereInput>;
};


export type QueryFindManyOrderedLinkArgs = {
  cursor?: InputMaybe<OrderedLinkWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedLinkScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedLinkOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedLinkWhereInput>;
};


export type QueryFindManyOrderedLinkCountArgs = {
  cursor?: InputMaybe<OrderedLinkWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedLinkScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedLinkOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedLinkWhereInput>;
};


export type QueryFindManyOrderedPictureArgs = {
  cursor?: InputMaybe<OrderedPictureWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedPictureScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedPictureOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedPictureWhereInput>;
};


export type QueryFindManyOrderedPictureCountArgs = {
  cursor?: InputMaybe<OrderedPictureWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedPictureScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedPictureOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedPictureWhereInput>;
};


export type QueryFindManyOrderedProductArgs = {
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedProductScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedProductOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type QueryFindManyOrderedProductCountArgs = {
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedProductScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedProductOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type QueryFindManyOrderedRedeemableArgs = {
  cursor?: InputMaybe<OrderedRedeemableWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedRedeemableScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedRedeemableOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedRedeemableWhereInput>;
};


export type QueryFindManyOrderedRedeemableCountArgs = {
  cursor?: InputMaybe<OrderedRedeemableWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedRedeemableScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedRedeemableOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedRedeemableWhereInput>;
};


export type QueryFindManyOrderedVideoArgs = {
  cursor?: InputMaybe<OrderedVideoWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedVideoScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedVideoOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedVideoWhereInput>;
};


export type QueryFindManyOrderedVideoCountArgs = {
  cursor?: InputMaybe<OrderedVideoWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<OrderedVideoScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<OrderedVideoOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedVideoWhereInput>;
};


export type QueryFindManyPageArgs = {
  cursor?: InputMaybe<PageWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<PageScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<PageOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageWhereInput>;
};


export type QueryFindManyPageCollectionArgs = {
  cursor?: InputMaybe<PageCollectionWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<PageCollectionScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<PageCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageCollectionWhereInput>;
};


export type QueryFindManyPageCollectionCountArgs = {
  cursor?: InputMaybe<PageCollectionWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<PageCollectionScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<PageCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageCollectionWhereInput>;
};


export type QueryFindManyPageCountArgs = {
  cursor?: InputMaybe<PageWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<PageScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<PageOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageWhereInput>;
};


export type QueryFindManyPageViewArgs = {
  cursor?: InputMaybe<PageViewWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<PageViewScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<PageViewOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageViewWhereInput>;
};


export type QueryFindManyPageViewCountArgs = {
  cursor?: InputMaybe<PageViewWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<PageViewScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<PageViewOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageViewWhereInput>;
};


export type QueryFindManyPictureArgs = {
  cursor?: InputMaybe<PictureWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<PictureScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<PictureOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PictureWhereInput>;
};


export type QueryFindManyPictureCountArgs = {
  cursor?: InputMaybe<PictureWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<PictureScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<PictureOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PictureWhereInput>;
};


export type QueryFindManyProductArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<ProductScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type QueryFindManyProductCollectionArgs = {
  cursor?: InputMaybe<ProductCollectionWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<ProductCollectionScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductCollectionWhereInput>;
};


export type QueryFindManyProductCollectionCountArgs = {
  cursor?: InputMaybe<ProductCollectionWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<ProductCollectionScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductCollectionOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductCollectionWhereInput>;
};


export type QueryFindManyProductCountArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<ProductScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<ProductOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type QueryFindManyRedeemableArgs = {
  cursor?: InputMaybe<RedeemableWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<RedeemableScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<RedeemableOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RedeemableWhereInput>;
};


export type QueryFindManyRedeemableCountArgs = {
  cursor?: InputMaybe<RedeemableWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<RedeemableScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<RedeemableOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RedeemableWhereInput>;
};


export type QueryFindManyRefreshTokenArgs = {
  cursor?: InputMaybe<RefreshTokenWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<RefreshTokenScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<RefreshTokenOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RefreshTokenWhereInput>;
};


export type QueryFindManyRefreshTokenCountArgs = {
  cursor?: InputMaybe<RefreshTokenWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<RefreshTokenScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<RefreshTokenOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RefreshTokenWhereInput>;
};


export type QueryFindManyRefundArgs = {
  cursor?: InputMaybe<RefundWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<RefundScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<RefundOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RefundWhereInput>;
};


export type QueryFindManyRefundCountArgs = {
  cursor?: InputMaybe<RefundWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<RefundScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<RefundOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RefundWhereInput>;
};


export type QueryFindManyRequestArgs = {
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<RequestScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<RequestOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestWhereInput>;
};


export type QueryFindManyRequestClickArgs = {
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<RequestClickScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<RequestClickOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestClickWhereInput>;
};


export type QueryFindManyRequestClickCountArgs = {
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<RequestClickScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<RequestClickOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestClickWhereInput>;
};


export type QueryFindManyRequestCountArgs = {
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<RequestScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<RequestOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestWhereInput>;
};


export type QueryFindManyShippingArgs = {
  cursor?: InputMaybe<ShippingWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<ShippingScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<ShippingOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ShippingWhereInput>;
};


export type QueryFindManyShippingCountArgs = {
  cursor?: InputMaybe<ShippingWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<ShippingScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<ShippingOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ShippingWhereInput>;
};


export type QueryFindManySlugCounterArgs = {
  cursor?: InputMaybe<SlugCounterWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<SlugCounterScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<SlugCounterOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SlugCounterWhereInput>;
};


export type QueryFindManySlugCounterCountArgs = {
  cursor?: InputMaybe<SlugCounterWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<SlugCounterScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<SlugCounterOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SlugCounterWhereInput>;
};


export type QueryFindManySocialArgs = {
  cursor?: InputMaybe<SocialWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<SocialScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<SocialOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SocialWhereInput>;
};


export type QueryFindManySocialCountArgs = {
  cursor?: InputMaybe<SocialWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<SocialScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<SocialOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SocialWhereInput>;
};


export type QueryFindManyTagArgs = {
  cursor?: InputMaybe<TagWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<TagScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<TagOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TagWhereInput>;
};


export type QueryFindManyTagCountArgs = {
  cursor?: InputMaybe<TagWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<TagScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<TagOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TagWhereInput>;
};


export type QueryFindManyTaxArgs = {
  cursor?: InputMaybe<TaxWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<TaxScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<TaxOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TaxWhereInput>;
};


export type QueryFindManyTaxCountArgs = {
  cursor?: InputMaybe<TaxWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<TaxScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<TaxOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TaxWhereInput>;
};


export type QueryFindManyTraitArgs = {
  cursor?: InputMaybe<TraitWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<TraitScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<TraitOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TraitWhereInput>;
};


export type QueryFindManyTraitCountArgs = {
  cursor?: InputMaybe<TraitWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<TraitScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<TraitOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TraitWhereInput>;
};


export type QueryFindManyTypeArgs = {
  cursor?: InputMaybe<TypeWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<TypeScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<TypeOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TypeWhereInput>;
};


export type QueryFindManyTypeCountArgs = {
  cursor?: InputMaybe<TypeWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<TypeScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<TypeOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TypeWhereInput>;
};


export type QueryFindManyUserArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<UserScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<UserOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<UserWhereInput>;
};


export type QueryFindManyUserCountArgs = {
  cursor?: InputMaybe<UserWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<UserScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<UserOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<UserWhereInput>;
};


export type QueryFindManyValueArgs = {
  cursor?: InputMaybe<ValueWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<ValueScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<ValueOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ValueWhereInput>;
};


export type QueryFindManyValueCountArgs = {
  cursor?: InputMaybe<ValueWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<ValueScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<ValueOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ValueWhereInput>;
};


export type QueryFindManyVideoArgs = {
  cursor?: InputMaybe<VideoWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<VideoScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<VideoOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoWhereInput>;
};


export type QueryFindManyVideoCountArgs = {
  cursor?: InputMaybe<VideoWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<VideoScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<VideoOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoWhereInput>;
};


export type QueryFindManyWebsiteArgs = {
  cursor?: InputMaybe<WebsiteWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<WebsiteScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<WebsiteOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteWhereInput>;
};


export type QueryFindManyWebsiteCountArgs = {
  cursor?: InputMaybe<WebsiteWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<WebsiteScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<WebsiteOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteWhereInput>;
};


export type QueryFindManyWithdrawArgs = {
  cursor?: InputMaybe<WithdrawWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<WithdrawScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<WithdrawOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WithdrawWhereInput>;
};


export type QueryFindManyWithdrawCountArgs = {
  cursor?: InputMaybe<WithdrawWhereUniqueInput>;
  distinct?: InputMaybe<Array<InputMaybe<WithdrawScalarFieldEnum>>>;
  orderBy?: InputMaybe<Array<InputMaybe<WithdrawOrderByWithRelationInput>>>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WithdrawWhereInput>;
};


export type QueryFindUniqueAttachmentArgs = {
  where: AttachmentWhereUniqueInput;
};


export type QueryFindUniqueAttributeArgs = {
  where: AttributeWhereUniqueInput;
};


export type QueryFindUniqueAudioArgs = {
  where: AudioWhereUniqueInput;
};


export type QueryFindUniqueBlockArgs = {
  where: BlockWhereUniqueInput;
};


export type QueryFindUniqueCategoryArgs = {
  where: CategoryWhereUniqueInput;
};


export type QueryFindUniqueCollectionArgs = {
  where: CollectionWhereUniqueInput;
};


export type QueryFindUniqueCouponArgs = {
  where: CouponWhereUniqueInput;
};


export type QueryFindUniqueCustomerArgs = {
  where: CustomerWhereUniqueInput;
};


export type QueryFindUniqueDocumentArgs = {
  where: DocumentWhereUniqueInput;
};


export type QueryFindUniqueEmbedArgs = {
  where: EmbedWhereUniqueInput;
};


export type QueryFindUniqueGroupArgs = {
  where: GroupWhereUniqueInput;
};


export type QueryFindUniqueItemArgs = {
  where: ItemWhereUniqueInput;
};


export type QueryFindUniqueLinkArgs = {
  where: LinkWhereUniqueInput;
};


export type QueryFindUniqueLoginTokenArgs = {
  where: LoginTokenWhereUniqueInput;
};


export type QueryFindUniqueNotificationArgs = {
  where: NotificationWhereUniqueInput;
};


export type QueryFindUniqueOrderArgs = {
  where: OrderWhereUniqueInput;
};


export type QueryFindUniqueOrderedAudioArgs = {
  where: OrderedAudioWhereUniqueInput;
};


export type QueryFindUniqueOrderedDocumentArgs = {
  where: OrderedDocumentWhereUniqueInput;
};


export type QueryFindUniqueOrderedLinkArgs = {
  where: OrderedLinkWhereUniqueInput;
};


export type QueryFindUniqueOrderedPictureArgs = {
  where: OrderedPictureWhereUniqueInput;
};


export type QueryFindUniqueOrderedProductArgs = {
  where: OrderedProductWhereUniqueInput;
};


export type QueryFindUniqueOrderedRedeemableArgs = {
  where: OrderedRedeemableWhereUniqueInput;
};


export type QueryFindUniqueOrderedVideoArgs = {
  where: OrderedVideoWhereUniqueInput;
};


export type QueryFindUniquePageArgs = {
  where: PageWhereUniqueInput;
};


export type QueryFindUniquePageCollectionArgs = {
  where: PageCollectionWhereUniqueInput;
};


export type QueryFindUniquePageViewArgs = {
  where: PageViewWhereUniqueInput;
};


export type QueryFindUniquePictureArgs = {
  where: PictureWhereUniqueInput;
};


export type QueryFindUniqueProductArgs = {
  where: ProductWhereUniqueInput;
};


export type QueryFindUniqueProductCollectionArgs = {
  where: ProductCollectionWhereUniqueInput;
};


export type QueryFindUniqueRedeemableArgs = {
  where: RedeemableWhereUniqueInput;
};


export type QueryFindUniqueRefreshTokenArgs = {
  where: RefreshTokenWhereUniqueInput;
};


export type QueryFindUniqueRefundArgs = {
  where: RefundWhereUniqueInput;
};


export type QueryFindUniqueRequestArgs = {
  where: RequestWhereUniqueInput;
};


export type QueryFindUniqueRequestClickArgs = {
  where: RequestClickWhereUniqueInput;
};


export type QueryFindUniqueShippingArgs = {
  where: ShippingWhereUniqueInput;
};


export type QueryFindUniqueSlugCounterArgs = {
  where: SlugCounterWhereUniqueInput;
};


export type QueryFindUniqueSocialArgs = {
  where: SocialWhereUniqueInput;
};


export type QueryFindUniqueTagArgs = {
  where: TagWhereUniqueInput;
};


export type QueryFindUniqueTaxArgs = {
  where: TaxWhereUniqueInput;
};


export type QueryFindUniqueTraitArgs = {
  where: TraitWhereUniqueInput;
};


export type QueryFindUniqueTypeArgs = {
  where: TypeWhereUniqueInput;
};


export type QueryFindUniqueUserArgs = {
  where: UserWhereUniqueInput;
};


export type QueryFindUniqueValueArgs = {
  where: ValueWhereUniqueInput;
};


export type QueryFindUniqueVideoArgs = {
  where: VideoWhereUniqueInput;
};


export type QueryFindUniqueWebsiteArgs = {
  where: WebsiteWhereUniqueInput;
};


export type QueryFindUniqueWithdrawArgs = {
  where: WithdrawWhereUniqueInput;
};


export type QueryGetAdminSettingsArgs = {
  admin: Scalars['String'];
  Admin?: InputMaybe<Scalars['String']>;
  Version: Scalars['String'];
};


export type QueryGetCustomerArgs = {
  websiteSlug: Scalars['String'];
};


export type QueryGetFiltersArgs = {
  modelName: Scalars['String'];
  pagesPath: Scalars['String'];
};


export type QueryGetUiTreeArgs = {
  adminId: Scalars['String'];
};


export type QueryRequireSubscriptionArgs = {
  id: Scalars['String'];
  model: Scalars['String'];
};


export type QuerySlugExistArgs = {
  slug: Scalars['String'];
};


export type QueryStripeEnabledArgs = {
  websiteSlug: Scalars['String'];
};

export type AttachmentWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  url?: InputMaybe<Scalars['String']>;
};

export type AttachmentOrderByWithRelationInput = {
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  staked?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  upload?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
};

export enum SortOrder {
  Asc = 'asc',
  Desc = 'desc'
}

export type UserOrderByWithRelationInput = {
  attachments?: InputMaybe<AttachmentOrderByRelationAggregateInput>;
  audios?: InputMaybe<AudioOrderByRelationAggregateInput>;
  blocks?: InputMaybe<BlockOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  currentBalance?: InputMaybe<SortOrder>;
  customers?: InputMaybe<CustomerOrderByRelationAggregateInput>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  documents?: InputMaybe<DocumentOrderByRelationAggregateInput>;
  email?: InputMaybe<SortOrder>;
  embeds?: InputMaybe<EmbedOrderByRelationAggregateInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  links?: InputMaybe<LinkOrderByRelationAggregateInput>;
  loginTokens?: InputMaybe<LoginTokenOrderByRelationAggregateInput>;
  name?: InputMaybe<SortOrder>;
  notifications?: InputMaybe<NotificationOrderByRelationAggregateInput>;
  password?: InputMaybe<SortOrder>;
  pictures?: InputMaybe<PictureOrderByRelationAggregateInput>;
  redeemables?: InputMaybe<RedeemableOrderByRelationAggregateInput>;
  refreshTokens?: InputMaybe<RefreshTokenOrderByRelationAggregateInput>;
  stripeAccountId?: InputMaybe<SortOrder>;
  stripeCustomerId?: InputMaybe<SortOrder>;
  totalEarnings?: InputMaybe<SortOrder>;
  videos?: InputMaybe<VideoOrderByRelationAggregateInput>;
  websites?: InputMaybe<WebsiteOrderByRelationAggregateInput>;
  withdrawnAmount?: InputMaybe<SortOrder>;
};

export type AttachmentOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AudioOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type BlockOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CustomerOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type DocumentOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type EmbedOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type LinkOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type LoginTokenOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type NotificationOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type PictureOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type RedeemableOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type RefreshTokenOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type VideoOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type WebsiteOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type WebsiteOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  address?: InputMaybe<SortOrder>;
  adminFilters?: InputMaybe<SortOrder>;
  attachments?: InputMaybe<AttachmentOrderByRelationAggregateInput>;
  attributes?: InputMaybe<AttributeOrderByRelationAggregateInput>;
  canonicalUrl?: InputMaybe<SortOrder>;
  categories?: InputMaybe<CategoryOrderByRelationAggregateInput>;
  chain?: InputMaybe<SortOrder>;
  collections?: InputMaybe<CollectionOrderByRelationAggregateInput>;
  contact?: InputMaybe<SortOrder>;
  countryCode?: InputMaybe<SortOrder>;
  coupons?: InputMaybe<CouponOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  cryptoCurrencyCode?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  currentBalance?: InputMaybe<SortOrder>;
  customers?: InputMaybe<CustomerOrderByRelationAggregateInput>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  discordLink?: InputMaybe<SortOrder>;
  externalName?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  facebookAppId?: InputMaybe<SortOrder>;
  facebookIsEnable?: InputMaybe<SortOrder>;
  facebookLink?: InputMaybe<SortOrder>;
  facebookPageId?: InputMaybe<SortOrder>;
  googleIsEnable?: InputMaybe<SortOrder>;
  googleTagManagerId?: InputMaybe<SortOrder>;
  Group?: InputMaybe<GroupOrderByRelationAggregateInput>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  instagramLink?: InputMaybe<SortOrder>;
  languageCode?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  logoObj?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  metaTags?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  notifications?: InputMaybe<NotificationOrderByRelationAggregateInput>;
  orderedProducts?: InputMaybe<OrderedProductOrderByRelationAggregateInput>;
  orders?: InputMaybe<OrderOrderByRelationAggregateInput>;
  pageCollections?: InputMaybe<PageCollectionOrderByRelationAggregateInput>;
  pageOrder?: InputMaybe<SortOrder>;
  pages?: InputMaybe<PageOrderByRelationAggregateInput>;
  paymentMethod?: InputMaybe<SortOrder>;
  productCollections?: InputMaybe<ProductCollectionOrderByRelationAggregateInput>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  shippings?: InputMaybe<ShippingOrderByRelationAggregateInput>;
  slug?: InputMaybe<SortOrder>;
  socials?: InputMaybe<SocialOrderByRelationAggregateInput>;
  stripeAccountId?: InputMaybe<SortOrder>;
  taxes?: InputMaybe<TaxOrderByRelationAggregateInput>;
  themeColor?: InputMaybe<SortOrder>;
  tikTokLink?: InputMaybe<SortOrder>;
  totalEarnings?: InputMaybe<SortOrder>;
  twitterCardType?: InputMaybe<SortOrder>;
  twitterHandle?: InputMaybe<SortOrder>;
  twitterLink?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteUrl?: InputMaybe<SortOrder>;
  withdrawnAmount?: InputMaybe<SortOrder>;
  withdraws?: InputMaybe<WithdrawOrderByRelationAggregateInput>;
};

export type AttributeOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CategoryOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CollectionOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type CouponOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type GroupOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type OrderedProductOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type OrderOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type PageCollectionOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type PageOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductCollectionOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ShippingOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type SocialOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type TaxOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type WithdrawOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AttachmentWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AttachmentWhereInput>>>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<AttachmentWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AttachmentWhereInput>>>;
  staked?: InputMaybe<BoolNullableFilter>;
  type?: InputMaybe<EnumAttachmentTypeNullableFilter>;
  upload?: InputMaybe<JsonFilter>;
  url?: InputMaybe<StringFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type BoolNullableFilter = {
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolNullableFilter>;
};

export type NestedBoolNullableFilter = {
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolNullableFilter>;
};

export type DateTimeNullableFilter = {
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
};

export type NestedDateTimeNullableFilter = {
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
};

export type StringFilter = {
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export enum QueryMode {
  Default = 'default',
  Insensitive = 'insensitive'
}

export type NestedStringFilter = {
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  not?: InputMaybe<NestedStringFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type EnumAttachmentTypeNullableFilter = {
  equals?: InputMaybe<AttachmentType>;
  in?: InputMaybe<Array<InputMaybe<AttachmentType>>>;
  not?: InputMaybe<NestedEnumAttachmentTypeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<AttachmentType>>>;
};

export enum AttachmentType {
  Audio = 'audio',
  Document = 'document',
  Image = 'image',
  Video = 'video'
}

export type NestedEnumAttachmentTypeNullableFilter = {
  equals?: InputMaybe<AttachmentType>;
  in?: InputMaybe<Array<InputMaybe<AttachmentType>>>;
  not?: InputMaybe<NestedEnumAttachmentTypeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<AttachmentType>>>;
};

export type JsonFilter = {
  array_contains?: InputMaybe<Scalars['Json']>;
  array_ends_with?: InputMaybe<Scalars['Json']>;
  array_starts_with?: InputMaybe<Scalars['Json']>;
  equals?: InputMaybe<Scalars['Json']>;
  gt?: InputMaybe<Scalars['Json']>;
  gte?: InputMaybe<Scalars['Json']>;
  lt?: InputMaybe<Scalars['Json']>;
  lte?: InputMaybe<Scalars['Json']>;
  not?: InputMaybe<Scalars['Json']>;
  path?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  string_contains?: InputMaybe<Scalars['String']>;
  string_ends_with?: InputMaybe<Scalars['String']>;
  string_starts_with?: InputMaybe<Scalars['String']>;
};

export type UserWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<UserWhereInput>>>;
  attachments?: InputMaybe<AttachmentListRelationFilter>;
  audios?: InputMaybe<AudioListRelationFilter>;
  blocks?: InputMaybe<BlockListRelationFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  currentBalance?: InputMaybe<FloatNullableFilter>;
  customers?: InputMaybe<CustomerListRelationFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  documents?: InputMaybe<DocumentListRelationFilter>;
  email?: InputMaybe<StringFilter>;
  embeds?: InputMaybe<EmbedListRelationFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  links?: InputMaybe<LinkListRelationFilter>;
  loginTokens?: InputMaybe<LoginTokenListRelationFilter>;
  name?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<UserWhereInput>>>;
  notifications?: InputMaybe<NotificationListRelationFilter>;
  OR?: InputMaybe<Array<InputMaybe<UserWhereInput>>>;
  password?: InputMaybe<StringNullableFilter>;
  pictures?: InputMaybe<PictureListRelationFilter>;
  redeemables?: InputMaybe<RedeemableListRelationFilter>;
  refreshTokens?: InputMaybe<RefreshTokenListRelationFilter>;
  stripeAccountId?: InputMaybe<StringNullableFilter>;
  stripeCustomerId?: InputMaybe<StringNullableFilter>;
  totalEarnings?: InputMaybe<FloatNullableFilter>;
  videos?: InputMaybe<VideoListRelationFilter>;
  websites?: InputMaybe<WebsiteListRelationFilter>;
  withdrawnAmount?: InputMaybe<FloatNullableFilter>;
};

export type AttachmentListRelationFilter = {
  every?: InputMaybe<AttachmentWhereInput>;
  none?: InputMaybe<AttachmentWhereInput>;
  some?: InputMaybe<AttachmentWhereInput>;
};

export type AudioListRelationFilter = {
  every?: InputMaybe<AudioWhereInput>;
  none?: InputMaybe<AudioWhereInput>;
  some?: InputMaybe<AudioWhereInput>;
};

export type AudioWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AudioWhereInput>>>;
  audioObj?: InputMaybe<JsonNullableFilter>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<AudioWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AudioWhereInput>>>;
  orderedAudios?: InputMaybe<OrderedAudioListRelationFilter>;
  paid?: InputMaybe<BoolNullableFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type JsonNullableFilter = {
  array_contains?: InputMaybe<Scalars['Json']>;
  array_ends_with?: InputMaybe<Scalars['Json']>;
  array_starts_with?: InputMaybe<Scalars['Json']>;
  equals?: InputMaybe<Scalars['Json']>;
  gt?: InputMaybe<Scalars['Json']>;
  gte?: InputMaybe<Scalars['Json']>;
  lt?: InputMaybe<Scalars['Json']>;
  lte?: InputMaybe<Scalars['Json']>;
  not?: InputMaybe<Scalars['Json']>;
  path?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  string_contains?: InputMaybe<Scalars['String']>;
  string_ends_with?: InputMaybe<Scalars['String']>;
  string_starts_with?: InputMaybe<Scalars['String']>;
};

export type DateTimeFilter = {
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
};

export type NestedDateTimeFilter = {
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
};

export type BoolFilter = {
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolFilter>;
};

export type NestedBoolFilter = {
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolFilter>;
};

export type StringNullableFilter = {
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type NestedStringNullableFilter = {
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  not?: InputMaybe<NestedStringNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type OrderedAudioListRelationFilter = {
  every?: InputMaybe<OrderedAudioWhereInput>;
  none?: InputMaybe<OrderedAudioWhereInput>;
  some?: InputMaybe<OrderedAudioWhereInput>;
};

export type OrderedAudioWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedAudioWhereInput>>>;
  audio?: InputMaybe<AudioWhereInput>;
  audioId?: InputMaybe<StringNullableFilter>;
  audioObj?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedAudioWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedAudioWhereInput>>>;
  orderedProduct?: InputMaybe<OrderedProductWhereInput>;
  orderedProductId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringNullableFilter>;
};

export type OrderedProductWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedProductWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  itemTotal?: InputMaybe<FloatNullableFilter>;
  minted?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedProductWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedProductWhereInput>>>;
  order?: InputMaybe<OrderWhereInput>;
  orderedAudios?: InputMaybe<OrderedAudioListRelationFilter>;
  orderedDocuments?: InputMaybe<OrderedDocumentListRelationFilter>;
  orderedLinks?: InputMaybe<OrderedLinkListRelationFilter>;
  orderedPictures?: InputMaybe<OrderedPictureListRelationFilter>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableListRelationFilter>;
  orderedVideos?: InputMaybe<OrderedVideoListRelationFilter>;
  orderId?: InputMaybe<StringNullableFilter>;
  orderNumber?: InputMaybe<StringNullableFilter>;
  price?: InputMaybe<FloatNullableFilter>;
  product?: InputMaybe<ProductWhereInput>;
  productId?: InputMaybe<StringNullableFilter>;
  productSlug?: InputMaybe<StringFilter>;
  productType?: InputMaybe<EnumProductTypeNullableFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  refund?: InputMaybe<RefundWhereInput>;
  refundId?: InputMaybe<StringNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringNullableFilter>;
  variationId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type FloatNullableFilter = {
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
};

export type NestedFloatNullableFilter = {
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
};

export type OrderWhereInput = {
  amount?: InputMaybe<FloatNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<OrderWhereInput>>>;
  applicationFee?: InputMaybe<FloatNullableFilter>;
  billing_address?: InputMaybe<JsonNullableFilter>;
  completedAt?: InputMaybe<DateTimeNullableFilter>;
  coupon?: InputMaybe<CouponWhereInput>;
  couponId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  cryptoCurrencyCode?: InputMaybe<EnumCryptoCurrencyNullableFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableFilter>;
  customer?: InputMaybe<CustomerWhereInput>;
  customerContact?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  delivery_fee?: InputMaybe<FloatNullableFilter>;
  delivery_name?: InputMaybe<StringNullableFilter>;
  delivery_time?: InputMaybe<StringNullableFilter>;
  discount?: InputMaybe<FloatNullableFilter>;
  id?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderWhereInput>>>;
  orderedProducts?: InputMaybe<OrderedProductListRelationFilter>;
  orderNumber?: InputMaybe<StringNullableFilter>;
  orderStatus?: InputMaybe<EnumOrderStatusFilter>;
  paid_total?: InputMaybe<FloatNullableFilter>;
  paymentGateway?: InputMaybe<StringNullableFilter>;
  paymentId?: InputMaybe<StringNullableFilter>;
  received?: InputMaybe<BoolNullableFilter>;
  refundObj?: InputMaybe<JsonNullableListFilter>;
  refunds?: InputMaybe<RefundListRelationFilter>;
  requireShipping?: InputMaybe<BoolNullableFilter>;
  sales_tax?: InputMaybe<FloatNullableFilter>;
  shipping_address?: InputMaybe<JsonNullableFilter>;
  shippingImages?: InputMaybe<JsonNullableListFilter>;
  storageFee?: InputMaybe<FloatNullableFilter>;
  stripePrivateSessionId?: InputMaybe<StringNullableFilter>;
  total?: InputMaybe<FloatNullableFilter>;
  tracking_number?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type CouponWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  active_from?: InputMaybe<DateTimeNullableFilter>;
  amount_off?: InputMaybe<FloatNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<CouponWhereInput>>>;
  code?: InputMaybe<StringNullableFilter>;
  couponType?: InputMaybe<EnumCouponTypeFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  expire_at?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<CouponWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<CouponWhereInput>>>;
  orders?: InputMaybe<OrderListRelationFilter>;
  percent_off?: InputMaybe<FloatNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type EnumCouponTypeFilter = {
  equals?: InputMaybe<CouponType>;
  in?: InputMaybe<Array<InputMaybe<CouponType>>>;
  not?: InputMaybe<NestedEnumCouponTypeFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CouponType>>>;
};

export enum CouponType {
  AmountOff = 'amount_off',
  PercentOff = 'percent_off'
}

export type NestedEnumCouponTypeFilter = {
  equals?: InputMaybe<CouponType>;
  in?: InputMaybe<Array<InputMaybe<CouponType>>>;
  not?: InputMaybe<NestedEnumCouponTypeFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CouponType>>>;
};

export type OrderListRelationFilter = {
  every?: InputMaybe<OrderWhereInput>;
  none?: InputMaybe<OrderWhereInput>;
  some?: InputMaybe<OrderWhereInput>;
};

export type WebsiteWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  address?: InputMaybe<JsonNullableFilter>;
  adminFilters?: InputMaybe<JsonNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<WebsiteWhereInput>>>;
  attachments?: InputMaybe<AttachmentListRelationFilter>;
  attributes?: InputMaybe<AttributeListRelationFilter>;
  canonicalUrl?: InputMaybe<StringNullableFilter>;
  categories?: InputMaybe<CategoryListRelationFilter>;
  chain?: InputMaybe<JsonNullableFilter>;
  collections?: InputMaybe<CollectionListRelationFilter>;
  contact?: InputMaybe<StringNullableFilter>;
  countryCode?: InputMaybe<EnumCountryCodeNullableFilter>;
  coupons?: InputMaybe<CouponListRelationFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  cryptoCurrencyCode?: InputMaybe<EnumCryptoCurrencyNullableFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableFilter>;
  currentBalance?: InputMaybe<FloatNullableFilter>;
  customers?: InputMaybe<CustomerListRelationFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  discordLink?: InputMaybe<StringNullableFilter>;
  externalName?: InputMaybe<StringNullableFilter>;
  externalUrl?: InputMaybe<StringNullableFilter>;
  facebookAppId?: InputMaybe<StringNullableFilter>;
  facebookIsEnable?: InputMaybe<BoolNullableFilter>;
  facebookLink?: InputMaybe<StringNullableFilter>;
  facebookPageId?: InputMaybe<StringNullableFilter>;
  googleIsEnable?: InputMaybe<BoolNullableFilter>;
  googleTagManagerId?: InputMaybe<StringNullableFilter>;
  Group?: InputMaybe<GroupListRelationFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  instagramLink?: InputMaybe<StringNullableFilter>;
  languageCode?: InputMaybe<EnumLanguageCodeFilter>;
  location?: InputMaybe<JsonNullableFilter>;
  logoObj?: InputMaybe<JsonNullableFilter>;
  menu?: InputMaybe<JsonNullableFilter>;
  metaTags?: InputMaybe<StringNullableListFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<WebsiteWhereInput>>>;
  notifications?: InputMaybe<NotificationListRelationFilter>;
  OR?: InputMaybe<Array<InputMaybe<WebsiteWhereInput>>>;
  orderedProducts?: InputMaybe<OrderedProductListRelationFilter>;
  orders?: InputMaybe<OrderListRelationFilter>;
  pageCollections?: InputMaybe<PageCollectionListRelationFilter>;
  pageOrder?: InputMaybe<StringNullableListFilter>;
  pages?: InputMaybe<PageListRelationFilter>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFilter>;
  productCollections?: InputMaybe<ProductCollectionListRelationFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  shippings?: InputMaybe<ShippingListRelationFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  socials?: InputMaybe<SocialListRelationFilter>;
  stripeAccountId?: InputMaybe<StringNullableFilter>;
  taxes?: InputMaybe<TaxListRelationFilter>;
  themeColor?: InputMaybe<EnumColorFilter>;
  tikTokLink?: InputMaybe<StringNullableFilter>;
  totalEarnings?: InputMaybe<FloatNullableFilter>;
  twitterCardType?: InputMaybe<StringNullableFilter>;
  twitterHandle?: InputMaybe<StringNullableFilter>;
  twitterLink?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
  websiteUrl?: InputMaybe<StringNullableFilter>;
  withdrawnAmount?: InputMaybe<FloatNullableFilter>;
  withdraws?: InputMaybe<WithdrawListRelationFilter>;
};

export type AttributeListRelationFilter = {
  every?: InputMaybe<AttributeWhereInput>;
  none?: InputMaybe<AttributeWhereInput>;
  some?: InputMaybe<AttributeWhereInput>;
};

export type AttributeWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AttributeWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<AttributeWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AttributeWhereInput>>>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  values?: InputMaybe<JsonNullableListFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type JsonNullableListFilter = {
  equals?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  has?: InputMaybe<Scalars['Json']>;
  hasEvery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  hasSome?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  isEmpty?: InputMaybe<Scalars['Boolean']>;
};

export type CategoryListRelationFilter = {
  every?: InputMaybe<CategoryWhereInput>;
  none?: InputMaybe<CategoryWhereInput>;
  some?: InputMaybe<CategoryWhereInput>;
};

export type CategoryWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<CategoryWhereInput>>>;
  children?: InputMaybe<CategoryListRelationFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  details?: InputMaybe<StringNullableFilter>;
  icon?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  links?: InputMaybe<LinkListRelationFilter>;
  name?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<CategoryWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<CategoryWhereInput>>>;
  pages?: InputMaybe<PageListRelationFilter>;
  parent?: InputMaybe<CategoryWhereInput>;
  parentId?: InputMaybe<StringNullableFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type LinkListRelationFilter = {
  every?: InputMaybe<LinkWhereInput>;
  none?: InputMaybe<LinkWhereInput>;
  some?: InputMaybe<LinkWhereInput>;
};

export type LinkWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<LinkWhereInput>>>;
  categories?: InputMaybe<CategoryListRelationFilter>;
  collections?: InputMaybe<CollectionListRelationFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  hiddenMessage?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<LinkWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<LinkWhereInput>>>;
  orderedLinks?: InputMaybe<OrderedLinkListRelationFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type CollectionListRelationFilter = {
  every?: InputMaybe<CollectionWhereInput>;
  none?: InputMaybe<CollectionWhereInput>;
  some?: InputMaybe<CollectionWhereInput>;
};

export type CollectionWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<CollectionWhereInput>>>;
  collectionStyle?: InputMaybe<EnumCollectionStyleNullableFilter>;
  collectionType?: InputMaybe<EnumCollectionTypeNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayTitle?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  items?: InputMaybe<ItemListRelationFilter>;
  links?: InputMaybe<LinkListRelationFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<CollectionWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<CollectionWhereInput>>>;
  pages?: InputMaybe<PageListRelationFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  requests?: InputMaybe<RequestListRelationFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type EnumCollectionStyleNullableFilter = {
  equals?: InputMaybe<CollectionStyle>;
  in?: InputMaybe<Array<InputMaybe<CollectionStyle>>>;
  not?: InputMaybe<NestedEnumCollectionStyleNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CollectionStyle>>>;
};

export enum CollectionStyle {
  BannerBlock = 'bannerBlock',
  BannerCarouselBlock = 'bannerCarouselBlock',
  BannerGridBlock = 'bannerGridBlock',
  BannerSliderBlock = 'bannerSliderBlock',
  HeroBlock = 'heroBlock',
  ItemBlock = 'itemBlock'
}

export type NestedEnumCollectionStyleNullableFilter = {
  equals?: InputMaybe<CollectionStyle>;
  in?: InputMaybe<Array<InputMaybe<CollectionStyle>>>;
  not?: InputMaybe<NestedEnumCollectionStyleNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CollectionStyle>>>;
};

export type EnumCollectionTypeNullableFilter = {
  equals?: InputMaybe<CollectionType>;
  in?: InputMaybe<Array<InputMaybe<CollectionType>>>;
  not?: InputMaybe<NestedEnumCollectionTypeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CollectionType>>>;
};

export enum CollectionType {
  Link = 'link',
  Page = 'page',
  Product = 'product'
}

export type NestedEnumCollectionTypeNullableFilter = {
  equals?: InputMaybe<CollectionType>;
  in?: InputMaybe<Array<InputMaybe<CollectionType>>>;
  not?: InputMaybe<NestedEnumCollectionTypeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CollectionType>>>;
};

export type ItemListRelationFilter = {
  every?: InputMaybe<ItemWhereInput>;
  none?: InputMaybe<ItemWhereInput>;
  some?: InputMaybe<ItemWhereInput>;
};

export type ItemWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<ItemWhereInput>>>;
  block?: InputMaybe<BlockWhereInput>;
  blockId?: InputMaybe<StringNullableFilter>;
  collection?: InputMaybe<CollectionWhereInput>;
  collectionId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  embed?: InputMaybe<EmbedWhereInput>;
  embedId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  itemType?: InputMaybe<EnumItemTypeFilter>;
  name?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<ItemWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ItemWhereInput>>>;
  page?: InputMaybe<PageWhereInput>;
  pageId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
};

export type BlockWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<BlockWhereInput>>>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  favourite?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  items?: InputMaybe<ItemListRelationFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<BlockWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<BlockWhereInput>>>;
  products?: InputMaybe<ProductListRelationFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type ProductListRelationFilter = {
  every?: InputMaybe<ProductWhereInput>;
  none?: InputMaybe<ProductWhereInput>;
  some?: InputMaybe<ProductWhereInput>;
};

export type ProductWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<ProductWhereInput>>>;
  audios?: InputMaybe<AudioListRelationFilter>;
  blocks?: InputMaybe<BlockListRelationFilter>;
  categories?: InputMaybe<CategoryListRelationFilter>;
  collections?: InputMaybe<CollectionListRelationFilter>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  creatorEarnings?: InputMaybe<IntFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  documents?: InputMaybe<DocumentListRelationFilter>;
  editionAddress?: InputMaybe<StringNullableFilter>;
  editionMinted?: InputMaybe<IntNullableFilter>;
  editionSize?: InputMaybe<IntFilter>;
  editionType?: InputMaybe<EnumEditionTypeNullableFilter>;
  externalNftChain?: InputMaybe<EnumChainNullableFilter>;
  externalNftContractAddress?: InputMaybe<StringNullableFilter>;
  externalUrl?: InputMaybe<StringNullableFilter>;
  gallery?: InputMaybe<JsonNullableListFilter>;
  height?: InputMaybe<FloatNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  inStock?: InputMaybe<BoolNullableFilter>;
  isExternalNft?: InputMaybe<BoolNullableFilter>;
  length?: InputMaybe<FloatNullableFilter>;
  links?: InputMaybe<LinkListRelationFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<ProductWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ProductWhereInput>>>;
  orderedProducts?: InputMaybe<OrderedProductListRelationFilter>;
  pictures?: InputMaybe<PictureListRelationFilter>;
  price?: InputMaybe<FloatFilter>;
  productCollections?: InputMaybe<ProductCollectionListRelationFilter>;
  productType?: InputMaybe<EnumProductTypeNullableFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  redeemables?: InputMaybe<RedeemableListRelationFilter>;
  sale_price?: InputMaybe<FloatNullableFilter>;
  sku?: InputMaybe<StringNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  storageSize?: InputMaybe<IntNullableFilter>;
  tags?: InputMaybe<TagListRelationFilter>;
  tax_code?: InputMaybe<StringNullableFilter>;
  traits?: InputMaybe<TraitListRelationFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<TypeWhereInput>;
  typeId?: InputMaybe<StringNullableFilter>;
  unit?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  variation_options?: InputMaybe<JsonNullableListFilter>;
  variations?: InputMaybe<JsonNullableListFilter>;
  videos?: InputMaybe<VideoListRelationFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
  width?: InputMaybe<FloatNullableFilter>;
};

export type BlockListRelationFilter = {
  every?: InputMaybe<BlockWhereInput>;
  none?: InputMaybe<BlockWhereInput>;
  some?: InputMaybe<BlockWhereInput>;
};

export type IntFilter = {
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
};

export type NestedIntFilter = {
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
};

export type DocumentListRelationFilter = {
  every?: InputMaybe<DocumentWhereInput>;
  none?: InputMaybe<DocumentWhereInput>;
  some?: InputMaybe<DocumentWhereInput>;
};

export type DocumentWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<DocumentWhereInput>>>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  documentObj?: InputMaybe<JsonNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<DocumentWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<DocumentWhereInput>>>;
  orderedDocuments?: InputMaybe<OrderedDocumentListRelationFilter>;
  paid?: InputMaybe<BoolNullableFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type OrderedDocumentListRelationFilter = {
  every?: InputMaybe<OrderedDocumentWhereInput>;
  none?: InputMaybe<OrderedDocumentWhereInput>;
  some?: InputMaybe<OrderedDocumentWhereInput>;
};

export type OrderedDocumentWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  document?: InputMaybe<DocumentWhereInput>;
  documentId?: InputMaybe<StringNullableFilter>;
  documentObj?: InputMaybe<JsonNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereInput>>>;
  orderedProduct?: InputMaybe<OrderedProductWhereInput>;
  orderedProductId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringNullableFilter>;
};

export type IntNullableFilter = {
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
};

export type NestedIntNullableFilter = {
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
};

export type EnumEditionTypeNullableFilter = {
  equals?: InputMaybe<EditionType>;
  in?: InputMaybe<Array<InputMaybe<EditionType>>>;
  not?: InputMaybe<NestedEnumEditionTypeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<EditionType>>>;
};

export enum EditionType {
  Limited = 'limited',
  Open = 'open'
}

export type NestedEnumEditionTypeNullableFilter = {
  equals?: InputMaybe<EditionType>;
  in?: InputMaybe<Array<InputMaybe<EditionType>>>;
  not?: InputMaybe<NestedEnumEditionTypeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<EditionType>>>;
};

export type EnumChainNullableFilter = {
  equals?: InputMaybe<Chain>;
  in?: InputMaybe<Array<InputMaybe<Chain>>>;
  not?: InputMaybe<NestedEnumChainNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Chain>>>;
};

export enum Chain {
  Klaytn = 'klaytn',
  Mainnet = 'mainnet',
  Polygon = 'polygon'
}

export type NestedEnumChainNullableFilter = {
  equals?: InputMaybe<Chain>;
  in?: InputMaybe<Array<InputMaybe<Chain>>>;
  not?: InputMaybe<NestedEnumChainNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Chain>>>;
};

export type OrderedProductListRelationFilter = {
  every?: InputMaybe<OrderedProductWhereInput>;
  none?: InputMaybe<OrderedProductWhereInput>;
  some?: InputMaybe<OrderedProductWhereInput>;
};

export type PictureListRelationFilter = {
  every?: InputMaybe<PictureWhereInput>;
  none?: InputMaybe<PictureWhereInput>;
  some?: InputMaybe<PictureWhereInput>;
};

export type PictureWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<PictureWhereInput>>>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<PictureWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PictureWhereInput>>>;
  orderedPictures?: InputMaybe<OrderedPictureListRelationFilter>;
  paid?: InputMaybe<BoolNullableFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type OrderedPictureListRelationFilter = {
  every?: InputMaybe<OrderedPictureWhereInput>;
  none?: InputMaybe<OrderedPictureWhereInput>;
  some?: InputMaybe<OrderedPictureWhereInput>;
};

export type OrderedPictureWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedPictureWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedPictureWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedPictureWhereInput>>>;
  orderedProduct?: InputMaybe<OrderedProductWhereInput>;
  orderedProductId?: InputMaybe<StringNullableFilter>;
  picture?: InputMaybe<PictureWhereInput>;
  pictureId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringNullableFilter>;
};

export type FloatFilter = {
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
};

export type NestedFloatFilter = {
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
};

export type ProductCollectionListRelationFilter = {
  every?: InputMaybe<ProductCollectionWhereInput>;
  none?: InputMaybe<ProductCollectionWhereInput>;
  some?: InputMaybe<ProductCollectionWhereInput>;
};

export type ProductCollectionWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<ProductCollectionWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayTitle?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<ProductCollectionWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ProductCollectionWhereInput>>>;
  products?: InputMaybe<ProductListRelationFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type EnumProductTypeNullableFilter = {
  equals?: InputMaybe<ProductType>;
  in?: InputMaybe<Array<InputMaybe<ProductType>>>;
  not?: InputMaybe<NestedEnumProductTypeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<ProductType>>>;
};

export enum ProductType {
  Digital = 'digital',
  Simple = 'simple',
  Variable = 'variable'
}

export type NestedEnumProductTypeNullableFilter = {
  equals?: InputMaybe<ProductType>;
  in?: InputMaybe<Array<InputMaybe<ProductType>>>;
  not?: InputMaybe<NestedEnumProductTypeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<ProductType>>>;
};

export type RedeemableListRelationFilter = {
  every?: InputMaybe<RedeemableWhereInput>;
  none?: InputMaybe<RedeemableWhereInput>;
  some?: InputMaybe<RedeemableWhereInput>;
};

export type RedeemableWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<RedeemableWhereInput>>>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<RedeemableWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RedeemableWhereInput>>>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableListRelationFilter>;
  paid?: InputMaybe<BoolNullableFilter>;
  perLimit?: InputMaybe<IntFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  quantity?: InputMaybe<IntFilter>;
  redeemInfo?: InputMaybe<JsonNullableFilter>;
  redeemPassword?: InputMaybe<StringNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type OrderedRedeemableListRelationFilter = {
  every?: InputMaybe<OrderedRedeemableWhereInput>;
  none?: InputMaybe<OrderedRedeemableWhereInput>;
  some?: InputMaybe<OrderedRedeemableWhereInput>;
};

export type OrderedRedeemableWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereInput>>>;
  orderedProduct?: InputMaybe<OrderedProductWhereInput>;
  orderedProductId?: InputMaybe<StringNullableFilter>;
  perLimit?: InputMaybe<IntNullableFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  redeemable?: InputMaybe<RedeemableWhereInput>;
  redeemableId?: InputMaybe<StringNullableFilter>;
  redeemInfo?: InputMaybe<JsonNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringNullableFilter>;
};

export type TagListRelationFilter = {
  every?: InputMaybe<TagWhereInput>;
  none?: InputMaybe<TagWhereInput>;
  some?: InputMaybe<TagWhereInput>;
};

export type TagWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<TagWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  icon?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<TagWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<TagWhereInput>>>;
  products?: InputMaybe<ProductListRelationFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<TypeWhereInput>;
  typeId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
};

export type TypeWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<TypeWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<TypeWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<TypeWhereInput>>>;
  products?: InputMaybe<ProductListRelationFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  tags?: InputMaybe<TagListRelationFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
};

export type TraitListRelationFilter = {
  every?: InputMaybe<TraitWhereInput>;
  none?: InputMaybe<TraitWhereInput>;
  some?: InputMaybe<TraitWhereInput>;
};

export type TraitWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<TraitWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<TraitWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<TraitWhereInput>>>;
  product?: InputMaybe<ProductWhereInput>;
  productId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  values?: InputMaybe<ValueListRelationFilter>;
};

export type ValueListRelationFilter = {
  every?: InputMaybe<ValueWhereInput>;
  none?: InputMaybe<ValueWhereInput>;
  some?: InputMaybe<ValueWhereInput>;
};

export type ValueWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<ValueWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<ValueWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ValueWhereInput>>>;
  percentage?: InputMaybe<FloatNullableFilter>;
  trait?: InputMaybe<TraitWhereInput>;
  traitId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
};

export type VideoListRelationFilter = {
  every?: InputMaybe<VideoWhereInput>;
  none?: InputMaybe<VideoWhereInput>;
  some?: InputMaybe<VideoWhereInput>;
};

export type VideoWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<VideoWhereInput>>>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<VideoWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<VideoWhereInput>>>;
  orderedVideos?: InputMaybe<OrderedVideoListRelationFilter>;
  paid?: InputMaybe<BoolNullableFilter>;
  products?: InputMaybe<ProductListRelationFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
  videoObj?: InputMaybe<JsonNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type OrderedVideoListRelationFilter = {
  every?: InputMaybe<OrderedVideoWhereInput>;
  none?: InputMaybe<OrderedVideoWhereInput>;
  some?: InputMaybe<OrderedVideoWhereInput>;
};

export type OrderedVideoWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedVideoWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedVideoWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedVideoWhereInput>>>;
  orderedProduct?: InputMaybe<OrderedProductWhereInput>;
  orderedProductId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringNullableFilter>;
  video?: InputMaybe<VideoWhereInput>;
  videoId?: InputMaybe<StringNullableFilter>;
  videoObj?: InputMaybe<JsonNullableFilter>;
};

export type EmbedWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<EmbedWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  embedCode?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  items?: InputMaybe<ItemListRelationFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<EmbedWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<EmbedWhereInput>>>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type EnumItemTypeFilter = {
  equals?: InputMaybe<ItemType>;
  in?: InputMaybe<Array<InputMaybe<ItemType>>>;
  not?: InputMaybe<NestedEnumItemTypeFilter>;
  notIn?: InputMaybe<Array<InputMaybe<ItemType>>>;
};

export enum ItemType {
  Block = 'block',
  Collection = 'collection',
  Embed = 'embed'
}

export type NestedEnumItemTypeFilter = {
  equals?: InputMaybe<ItemType>;
  in?: InputMaybe<Array<InputMaybe<ItemType>>>;
  not?: InputMaybe<NestedEnumItemTypeFilter>;
  notIn?: InputMaybe<Array<InputMaybe<ItemType>>>;
};

export type PageWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<PageWhereInput>>>;
  categories?: InputMaybe<CategoryListRelationFilter>;
  collections?: InputMaybe<CollectionListRelationFilter>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  isIndex?: InputMaybe<BoolNullableFilter>;
  itemIds?: InputMaybe<StringNullableListFilter>;
  items?: InputMaybe<ItemListRelationFilter>;
  menu?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringFilter>;
  navColor?: InputMaybe<EnumNavColorNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<PageWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageWhereInput>>>;
  pageCollections?: InputMaybe<PageCollectionListRelationFilter>;
  pageViews?: InputMaybe<PageViewListRelationFilter>;
  requestClicks?: InputMaybe<RequestClickListRelationFilter>;
  requests?: InputMaybe<RequestListRelationFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type StringNullableListFilter = {
  equals?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  has?: InputMaybe<Scalars['String']>;
  hasEvery?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  hasSome?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  isEmpty?: InputMaybe<Scalars['Boolean']>;
};

export type EnumNavColorNullableFilter = {
  equals?: InputMaybe<NavColor>;
  in?: InputMaybe<Array<InputMaybe<NavColor>>>;
  not?: InputMaybe<NestedEnumNavColorNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<NavColor>>>;
};

export enum NavColor {
  Black = 'black',
  White = 'white'
}

export type NestedEnumNavColorNullableFilter = {
  equals?: InputMaybe<NavColor>;
  in?: InputMaybe<Array<InputMaybe<NavColor>>>;
  not?: InputMaybe<NestedEnumNavColorNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<NavColor>>>;
};

export type PageCollectionListRelationFilter = {
  every?: InputMaybe<PageCollectionWhereInput>;
  none?: InputMaybe<PageCollectionWhereInput>;
  some?: InputMaybe<PageCollectionWhereInput>;
};

export type PageCollectionWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<PageCollectionWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayTitle?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<PageCollectionWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageCollectionWhereInput>>>;
  pages?: InputMaybe<PageListRelationFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type PageListRelationFilter = {
  every?: InputMaybe<PageWhereInput>;
  none?: InputMaybe<PageWhereInput>;
  some?: InputMaybe<PageWhereInput>;
};

export type PageViewListRelationFilter = {
  every?: InputMaybe<PageViewWhereInput>;
  none?: InputMaybe<PageViewWhereInput>;
  some?: InputMaybe<PageViewWhereInput>;
};

export type PageViewWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<PageViewWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<PageViewWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageViewWhereInput>>>;
  page?: InputMaybe<PageWhereInput>;
  pageId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
};

export type RequestClickListRelationFilter = {
  every?: InputMaybe<RequestClickWhereInput>;
  none?: InputMaybe<RequestClickWhereInput>;
  some?: InputMaybe<RequestClickWhereInput>;
};

export type RequestClickWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<RequestClickWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<RequestClickWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RequestClickWhereInput>>>;
  page?: InputMaybe<PageWhereInput>;
  pageId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
};

export type RequestListRelationFilter = {
  every?: InputMaybe<RequestWhereInput>;
  none?: InputMaybe<RequestWhereInput>;
  some?: InputMaybe<RequestWhereInput>;
};

export type RequestWhereInput = {
  accept?: InputMaybe<BoolNullableFilter>;
  acceptBefore?: InputMaybe<DateTimeNullableFilter>;
  active?: InputMaybe<BoolNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<RequestWhereInput>>>;
  applicationFee?: InputMaybe<FloatNullableFilter>;
  collection?: InputMaybe<CollectionWhereInput>;
  collectionId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  cryptoCurrencyCode?: InputMaybe<EnumCryptoCurrencyNullableFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableFilter>;
  customer?: InputMaybe<CustomerWhereInput>;
  customerId?: InputMaybe<StringNullableFilter>;
  days?: InputMaybe<IntFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringFilter>;
  expiredAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  message?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<RequestWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RequestWhereInput>>>;
  page?: InputMaybe<PageWhereInput>;
  pageId?: InputMaybe<StringNullableFilter>;
  paid?: InputMaybe<BoolNullableFilter>;
  paidAt?: InputMaybe<DateTimeNullableFilter>;
  paymentId?: InputMaybe<StringNullableFilter>;
  price?: InputMaybe<FloatNullableFilter>;
  requestAccept?: InputMaybe<EnumRequestAcceptNullableFilter>;
  requestStatus?: InputMaybe<EnumRequestStatusNullableFilter>;
  stripeSessionId?: InputMaybe<StringNullableFilter>;
  subject?: InputMaybe<StringFilter>;
  total?: InputMaybe<FloatNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type EnumCryptoCurrencyNullableFilter = {
  equals?: InputMaybe<CryptoCurrency>;
  in?: InputMaybe<Array<InputMaybe<CryptoCurrency>>>;
  not?: InputMaybe<NestedEnumCryptoCurrencyNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CryptoCurrency>>>;
};

export enum CryptoCurrency {
  EthereumMainnet = 'ethereumMainnet',
  EthereumRinkeby = 'ethereumRinkeby',
  PolygonMainnet = 'polygonMainnet',
  PolygonMumbai = 'polygonMumbai'
}

export type NestedEnumCryptoCurrencyNullableFilter = {
  equals?: InputMaybe<CryptoCurrency>;
  in?: InputMaybe<Array<InputMaybe<CryptoCurrency>>>;
  not?: InputMaybe<NestedEnumCryptoCurrencyNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CryptoCurrency>>>;
};

export type EnumCurrencyCodeNullableFilter = {
  equals?: InputMaybe<CurrencyCode>;
  in?: InputMaybe<Array<InputMaybe<CurrencyCode>>>;
  not?: InputMaybe<NestedEnumCurrencyCodeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CurrencyCode>>>;
};

export enum CurrencyCode {
  Usd = 'usd'
}

export type NestedEnumCurrencyCodeNullableFilter = {
  equals?: InputMaybe<CurrencyCode>;
  in?: InputMaybe<Array<InputMaybe<CurrencyCode>>>;
  not?: InputMaybe<NestedEnumCurrencyCodeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CurrencyCode>>>;
};

export type CustomerWhereInput = {
  age?: InputMaybe<IntNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<CustomerWhereInput>>>;
  city?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  gender?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  latestSales?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<CustomerWhereInput>>>;
  note?: InputMaybe<StringNullableFilter>;
  OR?: InputMaybe<Array<InputMaybe<CustomerWhereInput>>>;
  orders?: InputMaybe<OrderListRelationFilter>;
  requests?: InputMaybe<RequestListRelationFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type EnumRequestAcceptNullableFilter = {
  equals?: InputMaybe<RequestAccept>;
  in?: InputMaybe<Array<InputMaybe<RequestAccept>>>;
  not?: InputMaybe<NestedEnumRequestAcceptNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<RequestAccept>>>;
};

export enum RequestAccept {
  Accept = 'accept',
  Reject = 'reject'
}

export type NestedEnumRequestAcceptNullableFilter = {
  equals?: InputMaybe<RequestAccept>;
  in?: InputMaybe<Array<InputMaybe<RequestAccept>>>;
  not?: InputMaybe<NestedEnumRequestAcceptNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<RequestAccept>>>;
};

export type EnumRequestStatusNullableFilter = {
  equals?: InputMaybe<RequestStatus>;
  in?: InputMaybe<Array<InputMaybe<RequestStatus>>>;
  not?: InputMaybe<NestedEnumRequestStatusNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<RequestStatus>>>;
};

export enum RequestStatus {
  Active = 'active',
  Completed = 'completed',
  Expired = 'expired',
  Pending = 'pending',
  Processing = 'processing',
  Rejected = 'rejected'
}

export type NestedEnumRequestStatusNullableFilter = {
  equals?: InputMaybe<RequestStatus>;
  in?: InputMaybe<Array<InputMaybe<RequestStatus>>>;
  not?: InputMaybe<NestedEnumRequestStatusNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<RequestStatus>>>;
};

export type OrderedLinkListRelationFilter = {
  every?: InputMaybe<OrderedLinkWhereInput>;
  none?: InputMaybe<OrderedLinkWhereInput>;
  some?: InputMaybe<OrderedLinkWhereInput>;
};

export type OrderedLinkWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedLinkWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  hiddenMessage?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  link?: InputMaybe<LinkWhereInput>;
  linkId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedLinkWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedLinkWhereInput>>>;
  orderedProduct?: InputMaybe<OrderedProductWhereInput>;
  orderedProductId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringFilter>;
};

export type EnumCountryCodeNullableFilter = {
  equals?: InputMaybe<CountryCode>;
  in?: InputMaybe<Array<InputMaybe<CountryCode>>>;
  not?: InputMaybe<NestedEnumCountryCodeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CountryCode>>>;
};

export enum CountryCode {
  Tw = 'TW',
  Us = 'US'
}

export type NestedEnumCountryCodeNullableFilter = {
  equals?: InputMaybe<CountryCode>;
  in?: InputMaybe<Array<InputMaybe<CountryCode>>>;
  not?: InputMaybe<NestedEnumCountryCodeNullableFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CountryCode>>>;
};

export type CouponListRelationFilter = {
  every?: InputMaybe<CouponWhereInput>;
  none?: InputMaybe<CouponWhereInput>;
  some?: InputMaybe<CouponWhereInput>;
};

export type CustomerListRelationFilter = {
  every?: InputMaybe<CustomerWhereInput>;
  none?: InputMaybe<CustomerWhereInput>;
  some?: InputMaybe<CustomerWhereInput>;
};

export type GroupListRelationFilter = {
  every?: InputMaybe<GroupWhereInput>;
  none?: InputMaybe<GroupWhereInput>;
  some?: InputMaybe<GroupWhereInput>;
};

export type GroupWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<GroupWhereInput>>>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<GroupWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<GroupWhereInput>>>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type EnumLanguageCodeFilter = {
  equals?: InputMaybe<LanguageCode>;
  in?: InputMaybe<Array<InputMaybe<LanguageCode>>>;
  not?: InputMaybe<NestedEnumLanguageCodeFilter>;
  notIn?: InputMaybe<Array<InputMaybe<LanguageCode>>>;
};

export enum LanguageCode {
  En = 'en',
  Zh = 'zh'
}

export type NestedEnumLanguageCodeFilter = {
  equals?: InputMaybe<LanguageCode>;
  in?: InputMaybe<Array<InputMaybe<LanguageCode>>>;
  not?: InputMaybe<NestedEnumLanguageCodeFilter>;
  notIn?: InputMaybe<Array<InputMaybe<LanguageCode>>>;
};

export type NotificationListRelationFilter = {
  every?: InputMaybe<NotificationWhereInput>;
  none?: InputMaybe<NotificationWhereInput>;
  some?: InputMaybe<NotificationWhereInput>;
};

export type NotificationWhereInput = {
  action?: InputMaybe<StringNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<NotificationWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isUnRead?: InputMaybe<BoolNullableFilter>;
  message?: InputMaybe<StringNullableFilter>;
  model?: InputMaybe<StringNullableFilter>;
  modelId?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<NotificationWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<NotificationWhereInput>>>;
  title?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  url?: InputMaybe<StringNullableFilter>;
  user?: InputMaybe<UserWhereInput>;
  userId?: InputMaybe<StringNullableFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type EnumPaymentMethodFilter = {
  equals?: InputMaybe<PaymentMethod>;
  in?: InputMaybe<Array<InputMaybe<PaymentMethod>>>;
  not?: InputMaybe<NestedEnumPaymentMethodFilter>;
  notIn?: InputMaybe<Array<InputMaybe<PaymentMethod>>>;
};

export enum PaymentMethod {
  Crypto = 'crypto',
  Stripe = 'stripe'
}

export type NestedEnumPaymentMethodFilter = {
  equals?: InputMaybe<PaymentMethod>;
  in?: InputMaybe<Array<InputMaybe<PaymentMethod>>>;
  not?: InputMaybe<NestedEnumPaymentMethodFilter>;
  notIn?: InputMaybe<Array<InputMaybe<PaymentMethod>>>;
};

export type ShippingListRelationFilter = {
  every?: InputMaybe<ShippingWhereInput>;
  none?: InputMaybe<ShippingWhereInput>;
  some?: InputMaybe<ShippingWhereInput>;
};

export type ShippingWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  amount?: InputMaybe<FloatFilter>;
  AND?: InputMaybe<Array<InputMaybe<ShippingWhereInput>>>;
  countryCode?: InputMaybe<EnumCountryCodeNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isGlobal?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<ShippingWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ShippingWhereInput>>>;
  state?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type SocialListRelationFilter = {
  every?: InputMaybe<SocialWhereInput>;
  none?: InputMaybe<SocialWhereInput>;
  some?: InputMaybe<SocialWhereInput>;
};

export type SocialWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<SocialWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<SocialWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<SocialWhereInput>>>;
  socialType?: InputMaybe<EnumSocialTypeFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type EnumSocialTypeFilter = {
  equals?: InputMaybe<SocialType>;
  in?: InputMaybe<Array<InputMaybe<SocialType>>>;
  not?: InputMaybe<NestedEnumSocialTypeFilter>;
  notIn?: InputMaybe<Array<InputMaybe<SocialType>>>;
};

export enum SocialType {
  Facebook = 'facebook',
  Instagram = 'instagram',
  Twitter = 'twitter'
}

export type NestedEnumSocialTypeFilter = {
  equals?: InputMaybe<SocialType>;
  in?: InputMaybe<Array<InputMaybe<SocialType>>>;
  not?: InputMaybe<NestedEnumSocialTypeFilter>;
  notIn?: InputMaybe<Array<InputMaybe<SocialType>>>;
};

export type TaxListRelationFilter = {
  every?: InputMaybe<TaxWhereInput>;
  none?: InputMaybe<TaxWhereInput>;
  some?: InputMaybe<TaxWhereInput>;
};

export type TaxWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<TaxWhereInput>>>;
  city?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  countryCode?: InputMaybe<EnumCountryCodeNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  inclusive?: InputMaybe<BoolFilter>;
  isGlobal?: InputMaybe<BoolNullableFilter>;
  jurisdiction?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<TaxWhereInput>>>;
  onShipping?: InputMaybe<BoolNullableFilter>;
  OR?: InputMaybe<Array<InputMaybe<TaxWhereInput>>>;
  percentage?: InputMaybe<FloatFilter>;
  priority?: InputMaybe<IntNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
  stripePrivateTaxId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
  zip?: InputMaybe<StringNullableFilter>;
};

export type EnumColorFilter = {
  equals?: InputMaybe<Color>;
  in?: InputMaybe<Array<InputMaybe<Color>>>;
  not?: InputMaybe<NestedEnumColorFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Color>>>;
};

export enum Color {
  Amber = 'amber',
  Blue = 'blue',
  Bluegrey = 'bluegrey',
  Brown = 'brown',
  Cyan = 'cyan',
  Deeporange = 'deeporange',
  Deeppurple = 'deeppurple',
  Green = 'green',
  Indigo = 'indigo',
  Lightblue = 'lightblue',
  Lightbrown = 'lightbrown',
  Lightgreen = 'lightgreen',
  Orange = 'orange',
  Pink = 'pink',
  Purple = 'purple',
  Red = 'red',
  Rose = 'rose',
  Teal = 'teal'
}

export type NestedEnumColorFilter = {
  equals?: InputMaybe<Color>;
  in?: InputMaybe<Array<InputMaybe<Color>>>;
  not?: InputMaybe<NestedEnumColorFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Color>>>;
};

export type WithdrawListRelationFilter = {
  every?: InputMaybe<WithdrawWhereInput>;
  none?: InputMaybe<WithdrawWhereInput>;
  some?: InputMaybe<WithdrawWhereInput>;
};

export type WithdrawWhereInput = {
  amount?: InputMaybe<FloatFilter>;
  AND?: InputMaybe<Array<InputMaybe<WithdrawWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<WithdrawWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<WithdrawWhereInput>>>;
  processed?: InputMaybe<BoolFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  website?: InputMaybe<WebsiteWhereInput>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type EnumOrderStatusFilter = {
  equals?: InputMaybe<OrderStatus>;
  in?: InputMaybe<Array<InputMaybe<OrderStatus>>>;
  not?: InputMaybe<NestedEnumOrderStatusFilter>;
  notIn?: InputMaybe<Array<InputMaybe<OrderStatus>>>;
};

export enum OrderStatus {
  Completed = 'completed',
  Pending = 'pending',
  Processing = 'processing',
  Shipped = 'shipped'
}

export type NestedEnumOrderStatusFilter = {
  equals?: InputMaybe<OrderStatus>;
  in?: InputMaybe<Array<InputMaybe<OrderStatus>>>;
  not?: InputMaybe<NestedEnumOrderStatusFilter>;
  notIn?: InputMaybe<Array<InputMaybe<OrderStatus>>>;
};

export type RefundListRelationFilter = {
  every?: InputMaybe<RefundWhereInput>;
  none?: InputMaybe<RefundWhereInput>;
  some?: InputMaybe<RefundWhereInput>;
};

export type RefundWhereInput = {
  accept?: InputMaybe<BoolNullableFilter>;
  amount?: InputMaybe<FloatNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<RefundWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<RefundWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RefundWhereInput>>>;
  order?: InputMaybe<OrderWhereInput>;
  orderedProducts?: InputMaybe<OrderedProductListRelationFilter>;
  orderId?: InputMaybe<StringNullableFilter>;
  received?: InputMaybe<BoolNullableFilter>;
  shippingImages?: InputMaybe<JsonNullableListFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
};

export type EmbedListRelationFilter = {
  every?: InputMaybe<EmbedWhereInput>;
  none?: InputMaybe<EmbedWhereInput>;
  some?: InputMaybe<EmbedWhereInput>;
};

export type LoginTokenListRelationFilter = {
  every?: InputMaybe<LoginTokenWhereInput>;
  none?: InputMaybe<LoginTokenWhereInput>;
  some?: InputMaybe<LoginTokenWhereInput>;
};

export type LoginTokenWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<LoginTokenWhereInput>>>;
  approved?: InputMaybe<BoolFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  domain?: InputMaybe<StringFilter>;
  email?: InputMaybe<StringFilter>;
  expires?: InputMaybe<DateTimeFilter>;
  geo?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<LoginTokenWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<LoginTokenWhereInput>>>;
  secret?: InputMaybe<StringFilter>;
  user?: InputMaybe<UserWhereInput>;
  userAgent?: InputMaybe<StringFilter>;
  userAgentRaw?: InputMaybe<StringFilter>;
  userId?: InputMaybe<StringFilter>;
};

export type RefreshTokenListRelationFilter = {
  every?: InputMaybe<RefreshTokenWhereInput>;
  none?: InputMaybe<RefreshTokenWhereInput>;
  some?: InputMaybe<RefreshTokenWhereInput>;
};

export type RefreshTokenWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<RefreshTokenWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  expires?: InputMaybe<DateTimeFilter>;
  geo?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringFilter>;
  lastActive?: InputMaybe<DateTimeFilter>;
  loginTokenId?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<RefreshTokenWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RefreshTokenWhereInput>>>;
  user?: InputMaybe<UserWhereInput>;
  userAgent?: InputMaybe<StringFilter>;
  userAgentRaw?: InputMaybe<StringFilter>;
  userId?: InputMaybe<StringFilter>;
  value?: InputMaybe<StringFilter>;
};

export type WebsiteListRelationFilter = {
  every?: InputMaybe<WebsiteWhereInput>;
  none?: InputMaybe<WebsiteWhereInput>;
  some?: InputMaybe<WebsiteWhereInput>;
};

export type AggregateAttachment = {
  __typename?: 'AggregateAttachment';
  _count?: Maybe<AttachmentCountAggregateOutputType>;
  _max?: Maybe<AttachmentMaxAggregateOutputType>;
  _min?: Maybe<AttachmentMinAggregateOutputType>;
};

export type AttachmentCountAggregateOutputType = {
  __typename?: 'AttachmentCountAggregateOutputType';
  _all: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  staked: Scalars['Int'];
  type: Scalars['Int'];
  upload: Scalars['Int'];
  url: Scalars['Int'];
  userId: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type AttachmentMaxAggregateOutputType = {
  __typename?: 'AttachmentMaxAggregateOutputType';
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  staked?: Maybe<Scalars['Boolean']>;
  type?: Maybe<AttachmentType>;
  url?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AttachmentMinAggregateOutputType = {
  __typename?: 'AttachmentMinAggregateOutputType';
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  staked?: Maybe<Scalars['Boolean']>;
  type?: Maybe<AttachmentType>;
  url?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AttributeWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type AttributeOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  values?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AggregateAttribute = {
  __typename?: 'AggregateAttribute';
  _count?: Maybe<AttributeCountAggregateOutputType>;
  _max?: Maybe<AttributeMaxAggregateOutputType>;
  _min?: Maybe<AttributeMinAggregateOutputType>;
};

export type AttributeCountAggregateOutputType = {
  __typename?: 'AttributeCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  slug: Scalars['Int'];
  updatedAt: Scalars['Int'];
  values: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type AttributeMaxAggregateOutputType = {
  __typename?: 'AttributeMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AttributeMinAggregateOutputType = {
  __typename?: 'AttributeMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type AudioWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type AudioOrderByWithRelationInput = {
  audioObj?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedAudios?: InputMaybe<OrderedAudioOrderByRelationAggregateInput>;
  paid?: InputMaybe<SortOrder>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type OrderedAudioOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AggregateAudio = {
  __typename?: 'AggregateAudio';
  _count?: Maybe<AudioCountAggregateOutputType>;
  _max?: Maybe<AudioMaxAggregateOutputType>;
  _min?: Maybe<AudioMinAggregateOutputType>;
};

export type AudioCountAggregateOutputType = {
  __typename?: 'AudioCountAggregateOutputType';
  _all: Scalars['Int'];
  audioObj: Scalars['Int'];
  content: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  paid: Scalars['Int'];
  slug: Scalars['Int'];
  transactionHash: Scalars['Int'];
  updatedAt: Scalars['Int'];
  userId: Scalars['Int'];
  walletAddress: Scalars['Int'];
};

export type AudioMaxAggregateOutputType = {
  __typename?: 'AudioMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  paid?: Maybe<Scalars['Boolean']>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type AudioMinAggregateOutputType = {
  __typename?: 'AudioMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  paid?: Maybe<Scalars['Boolean']>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type BlockWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type BlockOrderByWithRelationInput = {
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  favourite?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  items?: InputMaybe<ItemOrderByRelationAggregateInput>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrder>;
};

export type ItemOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AggregateBlock = {
  __typename?: 'AggregateBlock';
  _count?: Maybe<BlockCountAggregateOutputType>;
  _max?: Maybe<BlockMaxAggregateOutputType>;
  _min?: Maybe<BlockMinAggregateOutputType>;
};

export type BlockCountAggregateOutputType = {
  __typename?: 'BlockCountAggregateOutputType';
  _all: Scalars['Int'];
  content: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  favourite: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  slug: Scalars['Int'];
  updatedAt: Scalars['Int'];
  userId: Scalars['Int'];
};

export type BlockMaxAggregateOutputType = {
  __typename?: 'BlockMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  favourite?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
};

export type BlockMinAggregateOutputType = {
  __typename?: 'BlockMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  favourite?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
};

export type CategoryWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type CategoryOrderByWithRelationInput = {
  children?: InputMaybe<CategoryOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  details?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  links?: InputMaybe<LinkOrderByRelationAggregateInput>;
  name?: InputMaybe<SortOrder>;
  pages?: InputMaybe<PageOrderByRelationAggregateInput>;
  parent?: InputMaybe<CategoryOrderByWithRelationInput>;
  parentId?: InputMaybe<SortOrder>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AggregateCategory = {
  __typename?: 'AggregateCategory';
  _count?: Maybe<CategoryCountAggregateOutputType>;
  _max?: Maybe<CategoryMaxAggregateOutputType>;
  _min?: Maybe<CategoryMinAggregateOutputType>;
};

export type CategoryCountAggregateOutputType = {
  __typename?: 'CategoryCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  details: Scalars['Int'];
  icon: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  parentId: Scalars['Int'];
  slug: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type CategoryMaxAggregateOutputType = {
  __typename?: 'CategoryMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  details?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  parentId?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type CategoryMinAggregateOutputType = {
  __typename?: 'CategoryMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  details?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  parentId?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type CollectionWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type CollectionOrderByWithRelationInput = {
  collectionStyle?: InputMaybe<SortOrder>;
  collectionType?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  items?: InputMaybe<ItemOrderByRelationAggregateInput>;
  links?: InputMaybe<LinkOrderByRelationAggregateInput>;
  name?: InputMaybe<SortOrder>;
  pages?: InputMaybe<PageOrderByRelationAggregateInput>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  requests?: InputMaybe<RequestOrderByRelationAggregateInput>;
  updatedAt?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
};

export type RequestOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AggregateCollection = {
  __typename?: 'AggregateCollection';
  _count?: Maybe<CollectionCountAggregateOutputType>;
  _max?: Maybe<CollectionMaxAggregateOutputType>;
  _min?: Maybe<CollectionMinAggregateOutputType>;
};

export type CollectionCountAggregateOutputType = {
  __typename?: 'CollectionCountAggregateOutputType';
  _all: Scalars['Int'];
  collectionStyle: Scalars['Int'];
  collectionType: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  displayTitle: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type CollectionMaxAggregateOutputType = {
  __typename?: 'CollectionMaxAggregateOutputType';
  collectionStyle?: Maybe<CollectionStyle>;
  collectionType?: Maybe<CollectionType>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type CollectionMinAggregateOutputType = {
  __typename?: 'CollectionMinAggregateOutputType';
  collectionStyle?: Maybe<CollectionStyle>;
  collectionType?: Maybe<CollectionType>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type CouponWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type CouponOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  active_from?: InputMaybe<SortOrder>;
  amount_off?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  couponType?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expire_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orders?: InputMaybe<OrderOrderByRelationAggregateInput>;
  percent_off?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AggregateCoupon = {
  __typename?: 'AggregateCoupon';
  _avg?: Maybe<CouponAvgAggregateOutputType>;
  _count?: Maybe<CouponCountAggregateOutputType>;
  _max?: Maybe<CouponMaxAggregateOutputType>;
  _min?: Maybe<CouponMinAggregateOutputType>;
  _sum?: Maybe<CouponSumAggregateOutputType>;
};

export type CouponAvgAggregateOutputType = {
  __typename?: 'CouponAvgAggregateOutputType';
  amount_off?: Maybe<Scalars['Float']>;
  percent_off?: Maybe<Scalars['Float']>;
};

export type CouponCountAggregateOutputType = {
  __typename?: 'CouponCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  active_from: Scalars['Int'];
  amount_off: Scalars['Int'];
  code: Scalars['Int'];
  couponType: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  expire_at: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  percent_off: Scalars['Int'];
  type: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type CouponMaxAggregateOutputType = {
  __typename?: 'CouponMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  active_from?: Maybe<Scalars['DateTime']>;
  amount_off?: Maybe<Scalars['Float']>;
  code?: Maybe<Scalars['String']>;
  couponType?: Maybe<CouponType>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  expire_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  percent_off?: Maybe<Scalars['Float']>;
  type?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type CouponMinAggregateOutputType = {
  __typename?: 'CouponMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  active_from?: Maybe<Scalars['DateTime']>;
  amount_off?: Maybe<Scalars['Float']>;
  code?: Maybe<Scalars['String']>;
  couponType?: Maybe<CouponType>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  expire_at?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  percent_off?: Maybe<Scalars['Float']>;
  type?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type CouponSumAggregateOutputType = {
  __typename?: 'CouponSumAggregateOutputType';
  amount_off?: Maybe<Scalars['Float']>;
  percent_off?: Maybe<Scalars['Float']>;
};

export type CustomerWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type CustomerOrderByWithRelationInput = {
  age?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  gender?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  isActive?: InputMaybe<SortOrder>;
  latestSales?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  orders?: InputMaybe<OrderOrderByRelationAggregateInput>;
  requests?: InputMaybe<RequestOrderByRelationAggregateInput>;
  updatedAt?: InputMaybe<SortOrder>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AggregateCustomer = {
  __typename?: 'AggregateCustomer';
  _avg?: Maybe<CustomerAvgAggregateOutputType>;
  _count?: Maybe<CustomerCountAggregateOutputType>;
  _max?: Maybe<CustomerMaxAggregateOutputType>;
  _min?: Maybe<CustomerMinAggregateOutputType>;
  _sum?: Maybe<CustomerSumAggregateOutputType>;
};

export type CustomerAvgAggregateOutputType = {
  __typename?: 'CustomerAvgAggregateOutputType';
  age?: Maybe<Scalars['Float']>;
};

export type CustomerCountAggregateOutputType = {
  __typename?: 'CustomerCountAggregateOutputType';
  _all: Scalars['Int'];
  age: Scalars['Int'];
  city: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  email: Scalars['Int'];
  gender: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  isActive: Scalars['Int'];
  latestSales: Scalars['Int'];
  name: Scalars['Int'];
  note: Scalars['Int'];
  updatedAt: Scalars['Int'];
  userId: Scalars['Int'];
  walletAddress: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type CustomerMaxAggregateOutputType = {
  __typename?: 'CustomerMaxAggregateOutputType';
  age?: Maybe<Scalars['Int']>;
  city?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  gender?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type CustomerMinAggregateOutputType = {
  __typename?: 'CustomerMinAggregateOutputType';
  age?: Maybe<Scalars['Int']>;
  city?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  gender?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isActive?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type CustomerSumAggregateOutputType = {
  __typename?: 'CustomerSumAggregateOutputType';
  age?: Maybe<Scalars['Int']>;
};

export type DocumentWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type DocumentOrderByWithRelationInput = {
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  documentObj?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedDocuments?: InputMaybe<OrderedDocumentOrderByRelationAggregateInput>;
  paid?: InputMaybe<SortOrder>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type OrderedDocumentOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AggregateDocument = {
  __typename?: 'AggregateDocument';
  _count?: Maybe<DocumentCountAggregateOutputType>;
  _max?: Maybe<DocumentMaxAggregateOutputType>;
  _min?: Maybe<DocumentMinAggregateOutputType>;
};

export type DocumentCountAggregateOutputType = {
  __typename?: 'DocumentCountAggregateOutputType';
  _all: Scalars['Int'];
  content: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  documentObj: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  paid: Scalars['Int'];
  slug: Scalars['Int'];
  transactionHash: Scalars['Int'];
  updatedAt: Scalars['Int'];
  userId: Scalars['Int'];
  walletAddress: Scalars['Int'];
};

export type DocumentMaxAggregateOutputType = {
  __typename?: 'DocumentMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  paid?: Maybe<Scalars['Boolean']>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type DocumentMinAggregateOutputType = {
  __typename?: 'DocumentMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  paid?: Maybe<Scalars['Boolean']>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type EmbedWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type EmbedOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  embedCode?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  items?: InputMaybe<ItemOrderByRelationAggregateInput>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrder>;
};

export type AggregateEmbed = {
  __typename?: 'AggregateEmbed';
  _count?: Maybe<EmbedCountAggregateOutputType>;
  _max?: Maybe<EmbedMaxAggregateOutputType>;
  _min?: Maybe<EmbedMinAggregateOutputType>;
};

export type EmbedCountAggregateOutputType = {
  __typename?: 'EmbedCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  embedCode: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  slug: Scalars['Int'];
  updatedAt: Scalars['Int'];
  userId: Scalars['Int'];
};

export type EmbedMaxAggregateOutputType = {
  __typename?: 'EmbedMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  embedCode?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
};

export type EmbedMinAggregateOutputType = {
  __typename?: 'EmbedMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  embedCode?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
};

export type GroupWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type GroupOrderByWithRelationInput = {
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AggregateGroup = {
  __typename?: 'AggregateGroup';
  _count?: Maybe<GroupCountAggregateOutputType>;
  _max?: Maybe<GroupMaxAggregateOutputType>;
  _min?: Maybe<GroupMinAggregateOutputType>;
};

export type GroupCountAggregateOutputType = {
  __typename?: 'GroupCountAggregateOutputType';
  _all: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type GroupMaxAggregateOutputType = {
  __typename?: 'GroupMaxAggregateOutputType';
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type GroupMinAggregateOutputType = {
  __typename?: 'GroupMinAggregateOutputType';
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type ItemWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type ItemOrderByWithRelationInput = {
  block?: InputMaybe<BlockOrderByWithRelationInput>;
  blockId?: InputMaybe<SortOrder>;
  collection?: InputMaybe<CollectionOrderByWithRelationInput>;
  collectionId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  embed?: InputMaybe<EmbedOrderByWithRelationInput>;
  embedId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  itemType?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  page?: InputMaybe<PageOrderByWithRelationInput>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type PageOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  categories?: InputMaybe<CategoryOrderByRelationAggregateInput>;
  collections?: InputMaybe<CollectionOrderByRelationAggregateInput>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  isIndex?: InputMaybe<SortOrder>;
  itemIds?: InputMaybe<SortOrder>;
  items?: InputMaybe<ItemOrderByRelationAggregateInput>;
  menu?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  navColor?: InputMaybe<SortOrder>;
  pageCollections?: InputMaybe<PageCollectionOrderByRelationAggregateInput>;
  pageViews?: InputMaybe<PageViewOrderByRelationAggregateInput>;
  requestClicks?: InputMaybe<RequestClickOrderByRelationAggregateInput>;
  requests?: InputMaybe<RequestOrderByRelationAggregateInput>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
};

export type PageViewOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type RequestClickOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AggregateItem = {
  __typename?: 'AggregateItem';
  _count?: Maybe<ItemCountAggregateOutputType>;
  _max?: Maybe<ItemMaxAggregateOutputType>;
  _min?: Maybe<ItemMinAggregateOutputType>;
};

export type ItemCountAggregateOutputType = {
  __typename?: 'ItemCountAggregateOutputType';
  _all: Scalars['Int'];
  blockId: Scalars['Int'];
  collectionId: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  embedId: Scalars['Int'];
  id: Scalars['Int'];
  itemType: Scalars['Int'];
  name: Scalars['Int'];
  pageId: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type ItemMaxAggregateOutputType = {
  __typename?: 'ItemMaxAggregateOutputType';
  blockId?: Maybe<Scalars['String']>;
  collectionId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  embedId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  itemType?: Maybe<ItemType>;
  name?: Maybe<Scalars['String']>;
  pageId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type ItemMinAggregateOutputType = {
  __typename?: 'ItemMinAggregateOutputType';
  blockId?: Maybe<Scalars['String']>;
  collectionId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  embedId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  itemType?: Maybe<ItemType>;
  name?: Maybe<Scalars['String']>;
  pageId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type LinkWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type LinkOrderByWithRelationInput = {
  categories?: InputMaybe<CategoryOrderByRelationAggregateInput>;
  collections?: InputMaybe<CollectionOrderByRelationAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  hiddenMessage?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedLinks?: InputMaybe<OrderedLinkOrderByRelationAggregateInput>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrder>;
};

export type OrderedLinkOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AggregateLink = {
  __typename?: 'AggregateLink';
  _count?: Maybe<LinkCountAggregateOutputType>;
  _max?: Maybe<LinkMaxAggregateOutputType>;
  _min?: Maybe<LinkMinAggregateOutputType>;
};

export type LinkCountAggregateOutputType = {
  __typename?: 'LinkCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  hiddenMessage: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  slug: Scalars['Int'];
  updatedAt: Scalars['Int'];
  url: Scalars['Int'];
  userId: Scalars['Int'];
};

export type LinkMaxAggregateOutputType = {
  __typename?: 'LinkMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  hiddenMessage?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type LinkMinAggregateOutputType = {
  __typename?: 'LinkMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  hiddenMessage?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type LoginTokenWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type LoginTokenOrderByWithRelationInput = {
  approved?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  domain?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  expires?: InputMaybe<SortOrder>;
  geo?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  secret?: InputMaybe<SortOrder>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userAgent?: InputMaybe<SortOrder>;
  userAgentRaw?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type AggregateLoginToken = {
  __typename?: 'AggregateLoginToken';
  _count?: Maybe<LoginTokenCountAggregateOutputType>;
  _max?: Maybe<LoginTokenMaxAggregateOutputType>;
  _min?: Maybe<LoginTokenMinAggregateOutputType>;
};

export type LoginTokenCountAggregateOutputType = {
  __typename?: 'LoginTokenCountAggregateOutputType';
  _all: Scalars['Int'];
  approved: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  domain: Scalars['Int'];
  email: Scalars['Int'];
  expires: Scalars['Int'];
  geo: Scalars['Int'];
  id: Scalars['Int'];
  ip: Scalars['Int'];
  secret: Scalars['Int'];
  userAgent: Scalars['Int'];
  userAgentRaw: Scalars['Int'];
  userId: Scalars['Int'];
};

export type LoginTokenMaxAggregateOutputType = {
  __typename?: 'LoginTokenMaxAggregateOutputType';
  approved?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  domain?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  expires?: Maybe<Scalars['DateTime']>;
  geo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  secret?: Maybe<Scalars['String']>;
  userAgent?: Maybe<Scalars['String']>;
  userAgentRaw?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type LoginTokenMinAggregateOutputType = {
  __typename?: 'LoginTokenMinAggregateOutputType';
  approved?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  domain?: Maybe<Scalars['String']>;
  email?: Maybe<Scalars['String']>;
  expires?: Maybe<Scalars['DateTime']>;
  geo?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  secret?: Maybe<Scalars['String']>;
  userAgent?: Maybe<Scalars['String']>;
  userAgentRaw?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
};

export type NotificationWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type NotificationOrderByWithRelationInput = {
  action?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isUnRead?: InputMaybe<SortOrder>;
  message?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrder>;
  modelId?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AggregateNotification = {
  __typename?: 'AggregateNotification';
  _count?: Maybe<NotificationCountAggregateOutputType>;
  _max?: Maybe<NotificationMaxAggregateOutputType>;
  _min?: Maybe<NotificationMinAggregateOutputType>;
};

export type NotificationCountAggregateOutputType = {
  __typename?: 'NotificationCountAggregateOutputType';
  _all: Scalars['Int'];
  action: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  isUnRead: Scalars['Int'];
  message: Scalars['Int'];
  model: Scalars['Int'];
  modelId: Scalars['Int'];
  title: Scalars['Int'];
  updatedAt: Scalars['Int'];
  url: Scalars['Int'];
  userId: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type NotificationMaxAggregateOutputType = {
  __typename?: 'NotificationMaxAggregateOutputType';
  action?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isUnRead?: Maybe<Scalars['Boolean']>;
  message?: Maybe<Scalars['String']>;
  model?: Maybe<Scalars['String']>;
  modelId?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type NotificationMinAggregateOutputType = {
  __typename?: 'NotificationMinAggregateOutputType';
  action?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isUnRead?: Maybe<Scalars['Boolean']>;
  message?: Maybe<Scalars['String']>;
  model?: Maybe<Scalars['String']>;
  modelId?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type OrderWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type OrderOrderByWithRelationInput = {
  amount?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  billing_address?: InputMaybe<SortOrder>;
  completedAt?: InputMaybe<SortOrder>;
  coupon?: InputMaybe<CouponOrderByWithRelationInput>;
  couponId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  cryptoCurrencyCode?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  customer?: InputMaybe<CustomerOrderByWithRelationInput>;
  customerContact?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  delivery_fee?: InputMaybe<SortOrder>;
  delivery_name?: InputMaybe<SortOrder>;
  delivery_time?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  orderedProducts?: InputMaybe<OrderedProductOrderByRelationAggregateInput>;
  orderNumber?: InputMaybe<SortOrder>;
  orderStatus?: InputMaybe<SortOrder>;
  paid_total?: InputMaybe<SortOrder>;
  paymentGateway?: InputMaybe<SortOrder>;
  paymentId?: InputMaybe<SortOrder>;
  received?: InputMaybe<SortOrder>;
  refundObj?: InputMaybe<SortOrder>;
  refunds?: InputMaybe<RefundOrderByRelationAggregateInput>;
  requireShipping?: InputMaybe<SortOrder>;
  sales_tax?: InputMaybe<SortOrder>;
  shipping_address?: InputMaybe<SortOrder>;
  shippingImages?: InputMaybe<SortOrder>;
  storageFee?: InputMaybe<SortOrder>;
  stripePrivateSessionId?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  tracking_number?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
};

export type RefundOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AggregateOrder = {
  __typename?: 'AggregateOrder';
  _avg?: Maybe<OrderAvgAggregateOutputType>;
  _count?: Maybe<OrderCountAggregateOutputType>;
  _max?: Maybe<OrderMaxAggregateOutputType>;
  _min?: Maybe<OrderMinAggregateOutputType>;
  _sum?: Maybe<OrderSumAggregateOutputType>;
};

export type OrderAvgAggregateOutputType = {
  __typename?: 'OrderAvgAggregateOutputType';
  amount?: Maybe<Scalars['Float']>;
  applicationFee?: Maybe<Scalars['Float']>;
  delivery_fee?: Maybe<Scalars['Float']>;
  discount?: Maybe<Scalars['Float']>;
  paid_total?: Maybe<Scalars['Float']>;
  sales_tax?: Maybe<Scalars['Float']>;
  storageFee?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

export type OrderCountAggregateOutputType = {
  __typename?: 'OrderCountAggregateOutputType';
  _all: Scalars['Int'];
  amount: Scalars['Int'];
  applicationFee: Scalars['Int'];
  billing_address: Scalars['Int'];
  completedAt: Scalars['Int'];
  couponId: Scalars['Int'];
  createdAt: Scalars['Int'];
  cryptoCurrencyCode: Scalars['Int'];
  currencyCode: Scalars['Int'];
  customerContact: Scalars['Int'];
  customerId: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  delivery_fee: Scalars['Int'];
  delivery_name: Scalars['Int'];
  delivery_time: Scalars['Int'];
  discount: Scalars['Int'];
  id: Scalars['Int'];
  orderNumber: Scalars['Int'];
  orderStatus: Scalars['Int'];
  paid_total: Scalars['Int'];
  paymentGateway: Scalars['Int'];
  paymentId: Scalars['Int'];
  received: Scalars['Int'];
  refundObj: Scalars['Int'];
  requireShipping: Scalars['Int'];
  sales_tax: Scalars['Int'];
  shipping_address: Scalars['Int'];
  shippingImages: Scalars['Int'];
  storageFee: Scalars['Int'];
  stripePrivateSessionId: Scalars['Int'];
  total: Scalars['Int'];
  tracking_number: Scalars['Int'];
  transactionHash: Scalars['Int'];
  updatedAt: Scalars['Int'];
  walletAddress: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type OrderMaxAggregateOutputType = {
  __typename?: 'OrderMaxAggregateOutputType';
  amount?: Maybe<Scalars['Float']>;
  applicationFee?: Maybe<Scalars['Float']>;
  completedAt?: Maybe<Scalars['DateTime']>;
  couponId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: Maybe<CryptoCurrency>;
  currencyCode?: Maybe<CurrencyCode>;
  customerContact?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  delivery_fee?: Maybe<Scalars['Float']>;
  delivery_name?: Maybe<Scalars['String']>;
  delivery_time?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['String']>;
  orderNumber?: Maybe<Scalars['String']>;
  orderStatus?: Maybe<OrderStatus>;
  paid_total?: Maybe<Scalars['Float']>;
  paymentGateway?: Maybe<Scalars['String']>;
  paymentId?: Maybe<Scalars['String']>;
  received?: Maybe<Scalars['Boolean']>;
  requireShipping?: Maybe<Scalars['Boolean']>;
  sales_tax?: Maybe<Scalars['Float']>;
  storageFee?: Maybe<Scalars['Float']>;
  stripePrivateSessionId?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['Float']>;
  tracking_number?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type OrderMinAggregateOutputType = {
  __typename?: 'OrderMinAggregateOutputType';
  amount?: Maybe<Scalars['Float']>;
  applicationFee?: Maybe<Scalars['Float']>;
  completedAt?: Maybe<Scalars['DateTime']>;
  couponId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: Maybe<CryptoCurrency>;
  currencyCode?: Maybe<CurrencyCode>;
  customerContact?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  delivery_fee?: Maybe<Scalars['Float']>;
  delivery_name?: Maybe<Scalars['String']>;
  delivery_time?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['String']>;
  orderNumber?: Maybe<Scalars['String']>;
  orderStatus?: Maybe<OrderStatus>;
  paid_total?: Maybe<Scalars['Float']>;
  paymentGateway?: Maybe<Scalars['String']>;
  paymentId?: Maybe<Scalars['String']>;
  received?: Maybe<Scalars['Boolean']>;
  requireShipping?: Maybe<Scalars['Boolean']>;
  sales_tax?: Maybe<Scalars['Float']>;
  storageFee?: Maybe<Scalars['Float']>;
  stripePrivateSessionId?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['Float']>;
  tracking_number?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type OrderSumAggregateOutputType = {
  __typename?: 'OrderSumAggregateOutputType';
  amount?: Maybe<Scalars['Float']>;
  applicationFee?: Maybe<Scalars['Float']>;
  delivery_fee?: Maybe<Scalars['Float']>;
  discount?: Maybe<Scalars['Float']>;
  paid_total?: Maybe<Scalars['Float']>;
  sales_tax?: Maybe<Scalars['Float']>;
  storageFee?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

export type OrderedAudioWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type OrderedAudioOrderByWithRelationInput = {
  audio?: InputMaybe<AudioOrderByWithRelationInput>;
  audioId?: InputMaybe<SortOrder>;
  audioObj?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProduct?: InputMaybe<OrderedProductOrderByWithRelationInput>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedProductOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  itemTotal?: InputMaybe<SortOrder>;
  minted?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  order?: InputMaybe<OrderOrderByWithRelationInput>;
  orderedAudios?: InputMaybe<OrderedAudioOrderByRelationAggregateInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentOrderByRelationAggregateInput>;
  orderedLinks?: InputMaybe<OrderedLinkOrderByRelationAggregateInput>;
  orderedPictures?: InputMaybe<OrderedPictureOrderByRelationAggregateInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableOrderByRelationAggregateInput>;
  orderedVideos?: InputMaybe<OrderedVideoOrderByRelationAggregateInput>;
  orderId?: InputMaybe<SortOrder>;
  orderNumber?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  product?: InputMaybe<ProductOrderByWithRelationInput>;
  productId?: InputMaybe<SortOrder>;
  productSlug?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  refund?: InputMaybe<RefundOrderByWithRelationInput>;
  refundId?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  variationId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
};

export type OrderedPictureOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type OrderedRedeemableOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type OrderedVideoOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type ProductOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  audios?: InputMaybe<AudioOrderByRelationAggregateInput>;
  blocks?: InputMaybe<BlockOrderByRelationAggregateInput>;
  categories?: InputMaybe<CategoryOrderByRelationAggregateInput>;
  collections?: InputMaybe<CollectionOrderByRelationAggregateInput>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  creatorEarnings?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  documents?: InputMaybe<DocumentOrderByRelationAggregateInput>;
  editionAddress?: InputMaybe<SortOrder>;
  editionMinted?: InputMaybe<SortOrder>;
  editionSize?: InputMaybe<SortOrder>;
  editionType?: InputMaybe<SortOrder>;
  externalNftChain?: InputMaybe<SortOrder>;
  externalNftContractAddress?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  gallery?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  inStock?: InputMaybe<SortOrder>;
  isExternalNft?: InputMaybe<SortOrder>;
  length?: InputMaybe<SortOrder>;
  links?: InputMaybe<LinkOrderByRelationAggregateInput>;
  name?: InputMaybe<SortOrder>;
  orderedProducts?: InputMaybe<OrderedProductOrderByRelationAggregateInput>;
  pictures?: InputMaybe<PictureOrderByRelationAggregateInput>;
  price?: InputMaybe<SortOrder>;
  productCollections?: InputMaybe<ProductCollectionOrderByRelationAggregateInput>;
  productType?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  redeemables?: InputMaybe<RedeemableOrderByRelationAggregateInput>;
  sale_price?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  storageSize?: InputMaybe<SortOrder>;
  tags?: InputMaybe<TagOrderByRelationAggregateInput>;
  tax_code?: InputMaybe<SortOrder>;
  traits?: InputMaybe<TraitOrderByRelationAggregateInput>;
  transactionHash?: InputMaybe<SortOrder>;
  type?: InputMaybe<TypeOrderByWithRelationInput>;
  typeId?: InputMaybe<SortOrder>;
  unit?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  variation_options?: InputMaybe<SortOrder>;
  variations?: InputMaybe<SortOrder>;
  videos?: InputMaybe<VideoOrderByRelationAggregateInput>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
  width?: InputMaybe<SortOrder>;
};

export type TagOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type TraitOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type TypeOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  slug?: InputMaybe<SortOrder>;
  tags?: InputMaybe<TagOrderByRelationAggregateInput>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type RefundOrderByWithRelationInput = {
  accept?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  order?: InputMaybe<OrderOrderByWithRelationInput>;
  orderedProducts?: InputMaybe<OrderedProductOrderByRelationAggregateInput>;
  orderId?: InputMaybe<SortOrder>;
  received?: InputMaybe<SortOrder>;
  shippingImages?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type AggregateOrderedAudio = {
  __typename?: 'AggregateOrderedAudio';
  _count?: Maybe<OrderedAudioCountAggregateOutputType>;
  _max?: Maybe<OrderedAudioMaxAggregateOutputType>;
  _min?: Maybe<OrderedAudioMinAggregateOutputType>;
};

export type OrderedAudioCountAggregateOutputType = {
  __typename?: 'OrderedAudioCountAggregateOutputType';
  _all: Scalars['Int'];
  audioId: Scalars['Int'];
  audioObj: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  orderedProductId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  url: Scalars['Int'];
};

export type OrderedAudioMaxAggregateOutputType = {
  __typename?: 'OrderedAudioMaxAggregateOutputType';
  audioId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orderedProductId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
};

export type OrderedAudioMinAggregateOutputType = {
  __typename?: 'OrderedAudioMinAggregateOutputType';
  audioId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orderedProductId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
};

export type OrderedDocumentWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type OrderedDocumentOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  document?: InputMaybe<DocumentOrderByWithRelationInput>;
  documentId?: InputMaybe<SortOrder>;
  documentObj?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProduct?: InputMaybe<OrderedProductOrderByWithRelationInput>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type AggregateOrderedDocument = {
  __typename?: 'AggregateOrderedDocument';
  _count?: Maybe<OrderedDocumentCountAggregateOutputType>;
  _max?: Maybe<OrderedDocumentMaxAggregateOutputType>;
  _min?: Maybe<OrderedDocumentMinAggregateOutputType>;
};

export type OrderedDocumentCountAggregateOutputType = {
  __typename?: 'OrderedDocumentCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  documentId: Scalars['Int'];
  documentObj: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  orderedProductId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  url: Scalars['Int'];
};

export type OrderedDocumentMaxAggregateOutputType = {
  __typename?: 'OrderedDocumentMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  documentId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orderedProductId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
};

export type OrderedDocumentMinAggregateOutputType = {
  __typename?: 'OrderedDocumentMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  documentId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orderedProductId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
};

export type OrderedLinkWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type OrderedLinkOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  hiddenMessage?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  link?: InputMaybe<LinkOrderByWithRelationInput>;
  linkId?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProduct?: InputMaybe<OrderedProductOrderByWithRelationInput>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type AggregateOrderedLink = {
  __typename?: 'AggregateOrderedLink';
  _count?: Maybe<OrderedLinkCountAggregateOutputType>;
  _max?: Maybe<OrderedLinkMaxAggregateOutputType>;
  _min?: Maybe<OrderedLinkMinAggregateOutputType>;
};

export type OrderedLinkCountAggregateOutputType = {
  __typename?: 'OrderedLinkCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  hiddenMessage: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  linkId: Scalars['Int'];
  name: Scalars['Int'];
  orderedProductId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  url: Scalars['Int'];
};

export type OrderedLinkMaxAggregateOutputType = {
  __typename?: 'OrderedLinkMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  hiddenMessage?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  linkId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orderedProductId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
};

export type OrderedLinkMinAggregateOutputType = {
  __typename?: 'OrderedLinkMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  hiddenMessage?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  linkId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orderedProductId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
};

export type OrderedPictureWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type OrderedPictureOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProduct?: InputMaybe<OrderedProductOrderByWithRelationInput>;
  orderedProductId?: InputMaybe<SortOrder>;
  picture?: InputMaybe<PictureOrderByWithRelationInput>;
  pictureId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type PictureOrderByWithRelationInput = {
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedPictures?: InputMaybe<OrderedPictureOrderByRelationAggregateInput>;
  paid?: InputMaybe<SortOrder>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type AggregateOrderedPicture = {
  __typename?: 'AggregateOrderedPicture';
  _count?: Maybe<OrderedPictureCountAggregateOutputType>;
  _max?: Maybe<OrderedPictureMaxAggregateOutputType>;
  _min?: Maybe<OrderedPictureMinAggregateOutputType>;
};

export type OrderedPictureCountAggregateOutputType = {
  __typename?: 'OrderedPictureCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  orderedProductId: Scalars['Int'];
  pictureId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  url: Scalars['Int'];
};

export type OrderedPictureMaxAggregateOutputType = {
  __typename?: 'OrderedPictureMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orderedProductId?: Maybe<Scalars['String']>;
  pictureId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
};

export type OrderedPictureMinAggregateOutputType = {
  __typename?: 'OrderedPictureMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orderedProductId?: Maybe<Scalars['String']>;
  pictureId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
};

export type OrderedProductWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type AggregateOrderedProduct = {
  __typename?: 'AggregateOrderedProduct';
  _avg?: Maybe<OrderedProductAvgAggregateOutputType>;
  _count?: Maybe<OrderedProductCountAggregateOutputType>;
  _max?: Maybe<OrderedProductMaxAggregateOutputType>;
  _min?: Maybe<OrderedProductMinAggregateOutputType>;
  _sum?: Maybe<OrderedProductSumAggregateOutputType>;
};

export type OrderedProductAvgAggregateOutputType = {
  __typename?: 'OrderedProductAvgAggregateOutputType';
  itemTotal?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
};

export type OrderedProductCountAggregateOutputType = {
  __typename?: 'OrderedProductCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  itemTotal: Scalars['Int'];
  minted: Scalars['Int'];
  name: Scalars['Int'];
  orderId: Scalars['Int'];
  orderNumber: Scalars['Int'];
  price: Scalars['Int'];
  productId: Scalars['Int'];
  productSlug: Scalars['Int'];
  productType: Scalars['Int'];
  quantity: Scalars['Int'];
  refundId: Scalars['Int'];
  slug: Scalars['Int'];
  transactionHash: Scalars['Int'];
  updatedAt: Scalars['Int'];
  url: Scalars['Int'];
  variationId: Scalars['Int'];
  walletAddress: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type OrderedProductMaxAggregateOutputType = {
  __typename?: 'OrderedProductMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  itemTotal?: Maybe<Scalars['Float']>;
  minted?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  orderId?: Maybe<Scalars['String']>;
  orderNumber?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Float']>;
  productId?: Maybe<Scalars['String']>;
  productSlug?: Maybe<Scalars['String']>;
  productType?: Maybe<ProductType>;
  quantity?: Maybe<Scalars['Int']>;
  refundId?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  variationId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type OrderedProductMinAggregateOutputType = {
  __typename?: 'OrderedProductMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  itemTotal?: Maybe<Scalars['Float']>;
  minted?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  orderId?: Maybe<Scalars['String']>;
  orderNumber?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Float']>;
  productId?: Maybe<Scalars['String']>;
  productSlug?: Maybe<Scalars['String']>;
  productType?: Maybe<ProductType>;
  quantity?: Maybe<Scalars['Int']>;
  refundId?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  variationId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type OrderedProductSumAggregateOutputType = {
  __typename?: 'OrderedProductSumAggregateOutputType';
  itemTotal?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Int']>;
};

export type OrderedRedeemableWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type OrderedRedeemableOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProduct?: InputMaybe<OrderedProductOrderByWithRelationInput>;
  orderedProductId?: InputMaybe<SortOrder>;
  perLimit?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  redeemable?: InputMaybe<RedeemableOrderByWithRelationInput>;
  redeemableId?: InputMaybe<SortOrder>;
  redeemInfo?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type RedeemableOrderByWithRelationInput = {
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableOrderByRelationAggregateInput>;
  paid?: InputMaybe<SortOrder>;
  perLimit?: InputMaybe<SortOrder>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  quantity?: InputMaybe<SortOrder>;
  redeemInfo?: InputMaybe<SortOrder>;
  redeemPassword?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type AggregateOrderedRedeemable = {
  __typename?: 'AggregateOrderedRedeemable';
  _avg?: Maybe<OrderedRedeemableAvgAggregateOutputType>;
  _count?: Maybe<OrderedRedeemableCountAggregateOutputType>;
  _max?: Maybe<OrderedRedeemableMaxAggregateOutputType>;
  _min?: Maybe<OrderedRedeemableMinAggregateOutputType>;
  _sum?: Maybe<OrderedRedeemableSumAggregateOutputType>;
};

export type OrderedRedeemableAvgAggregateOutputType = {
  __typename?: 'OrderedRedeemableAvgAggregateOutputType';
  perLimit?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
};

export type OrderedRedeemableCountAggregateOutputType = {
  __typename?: 'OrderedRedeemableCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  orderedProductId: Scalars['Int'];
  perLimit: Scalars['Int'];
  quantity: Scalars['Int'];
  redeemableId: Scalars['Int'];
  redeemInfo: Scalars['Int'];
  updatedAt: Scalars['Int'];
  url: Scalars['Int'];
};

export type OrderedRedeemableMaxAggregateOutputType = {
  __typename?: 'OrderedRedeemableMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orderedProductId?: Maybe<Scalars['String']>;
  perLimit?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
  redeemableId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
};

export type OrderedRedeemableMinAggregateOutputType = {
  __typename?: 'OrderedRedeemableMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orderedProductId?: Maybe<Scalars['String']>;
  perLimit?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
  redeemableId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
};

export type OrderedRedeemableSumAggregateOutputType = {
  __typename?: 'OrderedRedeemableSumAggregateOutputType';
  perLimit?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
};

export type OrderedVideoWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type OrderedVideoOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProduct?: InputMaybe<OrderedProductOrderByWithRelationInput>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  video?: InputMaybe<VideoOrderByWithRelationInput>;
  videoId?: InputMaybe<SortOrder>;
  videoObj?: InputMaybe<SortOrder>;
};

export type VideoOrderByWithRelationInput = {
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedVideos?: InputMaybe<OrderedVideoOrderByRelationAggregateInput>;
  paid?: InputMaybe<SortOrder>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userId?: InputMaybe<SortOrder>;
  videoObj?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type AggregateOrderedVideo = {
  __typename?: 'AggregateOrderedVideo';
  _count?: Maybe<OrderedVideoCountAggregateOutputType>;
  _max?: Maybe<OrderedVideoMaxAggregateOutputType>;
  _min?: Maybe<OrderedVideoMinAggregateOutputType>;
};

export type OrderedVideoCountAggregateOutputType = {
  __typename?: 'OrderedVideoCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  orderedProductId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  url: Scalars['Int'];
  videoId: Scalars['Int'];
  videoObj: Scalars['Int'];
};

export type OrderedVideoMaxAggregateOutputType = {
  __typename?: 'OrderedVideoMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orderedProductId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  videoId?: Maybe<Scalars['String']>;
};

export type OrderedVideoMinAggregateOutputType = {
  __typename?: 'OrderedVideoMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orderedProductId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  videoId?: Maybe<Scalars['String']>;
};

export type PageWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type AggregatePage = {
  __typename?: 'AggregatePage';
  _count?: Maybe<PageCountAggregateOutputType>;
  _max?: Maybe<PageMaxAggregateOutputType>;
  _min?: Maybe<PageMinAggregateOutputType>;
};

export type PageCountAggregateOutputType = {
  __typename?: 'PageCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  content: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  isIndex: Scalars['Int'];
  itemIds: Scalars['Int'];
  menu: Scalars['Int'];
  name: Scalars['Int'];
  navColor: Scalars['Int'];
  slug: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type PageMaxAggregateOutputType = {
  __typename?: 'PageMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isIndex?: Maybe<Scalars['Boolean']>;
  menu?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  navColor?: Maybe<NavColor>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type PageMinAggregateOutputType = {
  __typename?: 'PageMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  isIndex?: Maybe<Scalars['Boolean']>;
  menu?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  navColor?: Maybe<NavColor>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type PageCollectionWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type PageCollectionOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  pages?: InputMaybe<PageOrderByRelationAggregateInput>;
  updatedAt?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AggregatePageCollection = {
  __typename?: 'AggregatePageCollection';
  _count?: Maybe<PageCollectionCountAggregateOutputType>;
  _max?: Maybe<PageCollectionMaxAggregateOutputType>;
  _min?: Maybe<PageCollectionMinAggregateOutputType>;
};

export type PageCollectionCountAggregateOutputType = {
  __typename?: 'PageCollectionCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  displayTitle: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type PageCollectionMaxAggregateOutputType = {
  __typename?: 'PageCollectionMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type PageCollectionMinAggregateOutputType = {
  __typename?: 'PageCollectionMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type PageViewWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type PageViewOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  page?: InputMaybe<PageOrderByWithRelationInput>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type AggregatePageView = {
  __typename?: 'AggregatePageView';
  _count?: Maybe<PageViewCountAggregateOutputType>;
  _max?: Maybe<PageViewMaxAggregateOutputType>;
  _min?: Maybe<PageViewMinAggregateOutputType>;
};

export type PageViewCountAggregateOutputType = {
  __typename?: 'PageViewCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  ip: Scalars['Int'];
  pageId: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type PageViewMaxAggregateOutputType = {
  __typename?: 'PageViewMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  pageId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type PageViewMinAggregateOutputType = {
  __typename?: 'PageViewMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  pageId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type PictureWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type AggregatePicture = {
  __typename?: 'AggregatePicture';
  _count?: Maybe<PictureCountAggregateOutputType>;
  _max?: Maybe<PictureMaxAggregateOutputType>;
  _min?: Maybe<PictureMinAggregateOutputType>;
};

export type PictureCountAggregateOutputType = {
  __typename?: 'PictureCountAggregateOutputType';
  _all: Scalars['Int'];
  content: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  paid: Scalars['Int'];
  slug: Scalars['Int'];
  transactionHash: Scalars['Int'];
  updatedAt: Scalars['Int'];
  userId: Scalars['Int'];
  walletAddress: Scalars['Int'];
};

export type PictureMaxAggregateOutputType = {
  __typename?: 'PictureMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  paid?: Maybe<Scalars['Boolean']>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type PictureMinAggregateOutputType = {
  __typename?: 'PictureMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  paid?: Maybe<Scalars['Boolean']>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type ProductWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type AggregateProduct = {
  __typename?: 'AggregateProduct';
  _avg?: Maybe<ProductAvgAggregateOutputType>;
  _count?: Maybe<ProductCountAggregateOutputType>;
  _max?: Maybe<ProductMaxAggregateOutputType>;
  _min?: Maybe<ProductMinAggregateOutputType>;
  _sum?: Maybe<ProductSumAggregateOutputType>;
};

export type ProductAvgAggregateOutputType = {
  __typename?: 'ProductAvgAggregateOutputType';
  creatorEarnings?: Maybe<Scalars['Float']>;
  editionMinted?: Maybe<Scalars['Float']>;
  editionSize?: Maybe<Scalars['Float']>;
  height?: Maybe<Scalars['Float']>;
  length?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
  sale_price?: Maybe<Scalars['Float']>;
  storageSize?: Maybe<Scalars['Float']>;
  width?: Maybe<Scalars['Float']>;
};

export type ProductCountAggregateOutputType = {
  __typename?: 'ProductCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  content: Scalars['Int'];
  createdAt: Scalars['Int'];
  creatorEarnings: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  editionAddress: Scalars['Int'];
  editionMinted: Scalars['Int'];
  editionSize: Scalars['Int'];
  editionType: Scalars['Int'];
  externalNftChain: Scalars['Int'];
  externalNftContractAddress: Scalars['Int'];
  externalUrl: Scalars['Int'];
  gallery: Scalars['Int'];
  height: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  inStock: Scalars['Int'];
  isExternalNft: Scalars['Int'];
  length: Scalars['Int'];
  name: Scalars['Int'];
  price: Scalars['Int'];
  productType: Scalars['Int'];
  quantity: Scalars['Int'];
  sale_price: Scalars['Int'];
  sku: Scalars['Int'];
  slug: Scalars['Int'];
  storageSize: Scalars['Int'];
  tax_code: Scalars['Int'];
  transactionHash: Scalars['Int'];
  typeId: Scalars['Int'];
  unit: Scalars['Int'];
  updatedAt: Scalars['Int'];
  variation_options: Scalars['Int'];
  variations: Scalars['Int'];
  websiteId: Scalars['Int'];
  width: Scalars['Int'];
};

export type ProductMaxAggregateOutputType = {
  __typename?: 'ProductMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  creatorEarnings?: Maybe<Scalars['Int']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  editionAddress?: Maybe<Scalars['String']>;
  editionMinted?: Maybe<Scalars['Int']>;
  editionSize?: Maybe<Scalars['Int']>;
  editionType?: Maybe<EditionType>;
  externalNftChain?: Maybe<Chain>;
  externalNftContractAddress?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['String']>;
  inStock?: Maybe<Scalars['Boolean']>;
  isExternalNft?: Maybe<Scalars['Boolean']>;
  length?: Maybe<Scalars['Float']>;
  name?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Float']>;
  productType?: Maybe<ProductType>;
  quantity?: Maybe<Scalars['Int']>;
  sale_price?: Maybe<Scalars['Float']>;
  sku?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  storageSize?: Maybe<Scalars['Int']>;
  tax_code?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  typeId?: Maybe<Scalars['String']>;
  unit?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Float']>;
};

export type ProductMinAggregateOutputType = {
  __typename?: 'ProductMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  creatorEarnings?: Maybe<Scalars['Int']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  editionAddress?: Maybe<Scalars['String']>;
  editionMinted?: Maybe<Scalars['Int']>;
  editionSize?: Maybe<Scalars['Int']>;
  editionType?: Maybe<EditionType>;
  externalNftChain?: Maybe<Chain>;
  externalNftContractAddress?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  height?: Maybe<Scalars['Float']>;
  id?: Maybe<Scalars['String']>;
  inStock?: Maybe<Scalars['Boolean']>;
  isExternalNft?: Maybe<Scalars['Boolean']>;
  length?: Maybe<Scalars['Float']>;
  name?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Float']>;
  productType?: Maybe<ProductType>;
  quantity?: Maybe<Scalars['Int']>;
  sale_price?: Maybe<Scalars['Float']>;
  sku?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  storageSize?: Maybe<Scalars['Int']>;
  tax_code?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  typeId?: Maybe<Scalars['String']>;
  unit?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Float']>;
};

export type ProductSumAggregateOutputType = {
  __typename?: 'ProductSumAggregateOutputType';
  creatorEarnings?: Maybe<Scalars['Int']>;
  editionMinted?: Maybe<Scalars['Int']>;
  editionSize?: Maybe<Scalars['Int']>;
  height?: Maybe<Scalars['Float']>;
  length?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Int']>;
  sale_price?: Maybe<Scalars['Float']>;
  storageSize?: Maybe<Scalars['Int']>;
  width?: Maybe<Scalars['Float']>;
};

export type ProductCollectionWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type ProductCollectionOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  updatedAt?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AggregateProductCollection = {
  __typename?: 'AggregateProductCollection';
  _count?: Maybe<ProductCollectionCountAggregateOutputType>;
  _max?: Maybe<ProductCollectionMaxAggregateOutputType>;
  _min?: Maybe<ProductCollectionMinAggregateOutputType>;
};

export type ProductCollectionCountAggregateOutputType = {
  __typename?: 'ProductCollectionCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  displayTitle: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type ProductCollectionMaxAggregateOutputType = {
  __typename?: 'ProductCollectionMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type ProductCollectionMinAggregateOutputType = {
  __typename?: 'ProductCollectionMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type RedeemableWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type AggregateRedeemable = {
  __typename?: 'AggregateRedeemable';
  _avg?: Maybe<RedeemableAvgAggregateOutputType>;
  _count?: Maybe<RedeemableCountAggregateOutputType>;
  _max?: Maybe<RedeemableMaxAggregateOutputType>;
  _min?: Maybe<RedeemableMinAggregateOutputType>;
  _sum?: Maybe<RedeemableSumAggregateOutputType>;
};

export type RedeemableAvgAggregateOutputType = {
  __typename?: 'RedeemableAvgAggregateOutputType';
  perLimit?: Maybe<Scalars['Float']>;
  quantity?: Maybe<Scalars['Float']>;
};

export type RedeemableCountAggregateOutputType = {
  __typename?: 'RedeemableCountAggregateOutputType';
  _all: Scalars['Int'];
  content: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  paid: Scalars['Int'];
  perLimit: Scalars['Int'];
  quantity: Scalars['Int'];
  redeemInfo: Scalars['Int'];
  redeemPassword: Scalars['Int'];
  slug: Scalars['Int'];
  transactionHash: Scalars['Int'];
  updatedAt: Scalars['Int'];
  userId: Scalars['Int'];
  walletAddress: Scalars['Int'];
};

export type RedeemableMaxAggregateOutputType = {
  __typename?: 'RedeemableMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  paid?: Maybe<Scalars['Boolean']>;
  perLimit?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
  redeemPassword?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type RedeemableMinAggregateOutputType = {
  __typename?: 'RedeemableMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  paid?: Maybe<Scalars['Boolean']>;
  perLimit?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
  redeemPassword?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type RedeemableSumAggregateOutputType = {
  __typename?: 'RedeemableSumAggregateOutputType';
  perLimit?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
};

export type RefreshTokenWhereUniqueInput = {
  loginTokenId?: InputMaybe<Scalars['String']>;
};

export type RefreshTokenOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  expires?: InputMaybe<SortOrder>;
  geo?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  lastActive?: InputMaybe<SortOrder>;
  loginTokenId?: InputMaybe<SortOrder>;
  user?: InputMaybe<UserOrderByWithRelationInput>;
  userAgent?: InputMaybe<SortOrder>;
  userAgentRaw?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
};

export type AggregateRefreshToken = {
  __typename?: 'AggregateRefreshToken';
  _count?: Maybe<RefreshTokenCountAggregateOutputType>;
  _max?: Maybe<RefreshTokenMaxAggregateOutputType>;
  _min?: Maybe<RefreshTokenMinAggregateOutputType>;
};

export type RefreshTokenCountAggregateOutputType = {
  __typename?: 'RefreshTokenCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  expires: Scalars['Int'];
  geo: Scalars['Int'];
  ip: Scalars['Int'];
  lastActive: Scalars['Int'];
  loginTokenId: Scalars['Int'];
  userAgent: Scalars['Int'];
  userAgentRaw: Scalars['Int'];
  userId: Scalars['Int'];
  value: Scalars['Int'];
};

export type RefreshTokenMaxAggregateOutputType = {
  __typename?: 'RefreshTokenMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  expires?: Maybe<Scalars['DateTime']>;
  geo?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  lastActive?: Maybe<Scalars['DateTime']>;
  loginTokenId?: Maybe<Scalars['String']>;
  userAgent?: Maybe<Scalars['String']>;
  userAgentRaw?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
  value?: Maybe<Scalars['String']>;
};

export type RefreshTokenMinAggregateOutputType = {
  __typename?: 'RefreshTokenMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  expires?: Maybe<Scalars['DateTime']>;
  geo?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  lastActive?: Maybe<Scalars['DateTime']>;
  loginTokenId?: Maybe<Scalars['String']>;
  userAgent?: Maybe<Scalars['String']>;
  userAgentRaw?: Maybe<Scalars['String']>;
  userId?: Maybe<Scalars['String']>;
  value?: Maybe<Scalars['String']>;
};

export type RefundWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type AggregateRefund = {
  __typename?: 'AggregateRefund';
  _avg?: Maybe<RefundAvgAggregateOutputType>;
  _count?: Maybe<RefundCountAggregateOutputType>;
  _max?: Maybe<RefundMaxAggregateOutputType>;
  _min?: Maybe<RefundMinAggregateOutputType>;
  _sum?: Maybe<RefundSumAggregateOutputType>;
};

export type RefundAvgAggregateOutputType = {
  __typename?: 'RefundAvgAggregateOutputType';
  amount?: Maybe<Scalars['Float']>;
};

export type RefundCountAggregateOutputType = {
  __typename?: 'RefundCountAggregateOutputType';
  _all: Scalars['Int'];
  accept: Scalars['Int'];
  amount: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  orderId: Scalars['Int'];
  received: Scalars['Int'];
  shippingImages: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type RefundMaxAggregateOutputType = {
  __typename?: 'RefundMaxAggregateOutputType';
  accept?: Maybe<Scalars['Boolean']>;
  amount?: Maybe<Scalars['Float']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  orderId?: Maybe<Scalars['String']>;
  received?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type RefundMinAggregateOutputType = {
  __typename?: 'RefundMinAggregateOutputType';
  accept?: Maybe<Scalars['Boolean']>;
  amount?: Maybe<Scalars['Float']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  orderId?: Maybe<Scalars['String']>;
  received?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type RefundSumAggregateOutputType = {
  __typename?: 'RefundSumAggregateOutputType';
  amount?: Maybe<Scalars['Float']>;
};

export type RequestWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type RequestOrderByWithRelationInput = {
  accept?: InputMaybe<SortOrder>;
  acceptBefore?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  collection?: InputMaybe<CollectionOrderByWithRelationInput>;
  collectionId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  cryptoCurrencyCode?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  customer?: InputMaybe<CustomerOrderByWithRelationInput>;
  customerId?: InputMaybe<SortOrder>;
  days?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expiredAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  message?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  page?: InputMaybe<PageOrderByWithRelationInput>;
  pageId?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  paidAt?: InputMaybe<SortOrder>;
  paymentId?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  requestAccept?: InputMaybe<SortOrder>;
  requestStatus?: InputMaybe<SortOrder>;
  stripeSessionId?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type AggregateRequest = {
  __typename?: 'AggregateRequest';
  _avg?: Maybe<RequestAvgAggregateOutputType>;
  _count?: Maybe<RequestCountAggregateOutputType>;
  _max?: Maybe<RequestMaxAggregateOutputType>;
  _min?: Maybe<RequestMinAggregateOutputType>;
  _sum?: Maybe<RequestSumAggregateOutputType>;
};

export type RequestAvgAggregateOutputType = {
  __typename?: 'RequestAvgAggregateOutputType';
  applicationFee?: Maybe<Scalars['Float']>;
  days?: Maybe<Scalars['Float']>;
  price?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

export type RequestCountAggregateOutputType = {
  __typename?: 'RequestCountAggregateOutputType';
  _all: Scalars['Int'];
  accept: Scalars['Int'];
  acceptBefore: Scalars['Int'];
  active: Scalars['Int'];
  applicationFee: Scalars['Int'];
  collectionId: Scalars['Int'];
  createdAt: Scalars['Int'];
  cryptoCurrencyCode: Scalars['Int'];
  currencyCode: Scalars['Int'];
  customerId: Scalars['Int'];
  days: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  expiredAt: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  message: Scalars['Int'];
  name: Scalars['Int'];
  pageId: Scalars['Int'];
  paid: Scalars['Int'];
  paidAt: Scalars['Int'];
  paymentId: Scalars['Int'];
  price: Scalars['Int'];
  requestAccept: Scalars['Int'];
  requestStatus: Scalars['Int'];
  stripeSessionId: Scalars['Int'];
  subject: Scalars['Int'];
  total: Scalars['Int'];
  transactionHash: Scalars['Int'];
  updatedAt: Scalars['Int'];
  url: Scalars['Int'];
  walletAddress: Scalars['Int'];
};

export type RequestMaxAggregateOutputType = {
  __typename?: 'RequestMaxAggregateOutputType';
  accept?: Maybe<Scalars['Boolean']>;
  acceptBefore?: Maybe<Scalars['DateTime']>;
  active?: Maybe<Scalars['Boolean']>;
  applicationFee?: Maybe<Scalars['Float']>;
  collectionId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: Maybe<CryptoCurrency>;
  currencyCode?: Maybe<CurrencyCode>;
  customerId?: Maybe<Scalars['String']>;
  days?: Maybe<Scalars['Int']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  pageId?: Maybe<Scalars['String']>;
  paid?: Maybe<Scalars['Boolean']>;
  paidAt?: Maybe<Scalars['DateTime']>;
  paymentId?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Float']>;
  requestAccept?: Maybe<RequestAccept>;
  requestStatus?: Maybe<RequestStatus>;
  stripeSessionId?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['Float']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type RequestMinAggregateOutputType = {
  __typename?: 'RequestMinAggregateOutputType';
  accept?: Maybe<Scalars['Boolean']>;
  acceptBefore?: Maybe<Scalars['DateTime']>;
  active?: Maybe<Scalars['Boolean']>;
  applicationFee?: Maybe<Scalars['Float']>;
  collectionId?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: Maybe<CryptoCurrency>;
  currencyCode?: Maybe<CurrencyCode>;
  customerId?: Maybe<Scalars['String']>;
  days?: Maybe<Scalars['Int']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  expiredAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  message?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  pageId?: Maybe<Scalars['String']>;
  paid?: Maybe<Scalars['Boolean']>;
  paidAt?: Maybe<Scalars['DateTime']>;
  paymentId?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Float']>;
  requestAccept?: Maybe<RequestAccept>;
  requestStatus?: Maybe<RequestStatus>;
  stripeSessionId?: Maybe<Scalars['String']>;
  subject?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['Float']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type RequestSumAggregateOutputType = {
  __typename?: 'RequestSumAggregateOutputType';
  applicationFee?: Maybe<Scalars['Float']>;
  days?: Maybe<Scalars['Int']>;
  price?: Maybe<Scalars['Float']>;
  total?: Maybe<Scalars['Float']>;
};

export type RequestClickWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type RequestClickOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  page?: InputMaybe<PageOrderByWithRelationInput>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type AggregateRequestClick = {
  __typename?: 'AggregateRequestClick';
  _count?: Maybe<RequestClickCountAggregateOutputType>;
  _max?: Maybe<RequestClickMaxAggregateOutputType>;
  _min?: Maybe<RequestClickMinAggregateOutputType>;
};

export type RequestClickCountAggregateOutputType = {
  __typename?: 'RequestClickCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  ip: Scalars['Int'];
  pageId: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type RequestClickMaxAggregateOutputType = {
  __typename?: 'RequestClickMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  pageId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type RequestClickMinAggregateOutputType = {
  __typename?: 'RequestClickMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  ip?: Maybe<Scalars['String']>;
  pageId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type ShippingWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type ShippingOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  countryCode?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isGlobal?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AggregateShipping = {
  __typename?: 'AggregateShipping';
  _avg?: Maybe<ShippingAvgAggregateOutputType>;
  _count?: Maybe<ShippingCountAggregateOutputType>;
  _max?: Maybe<ShippingMaxAggregateOutputType>;
  _min?: Maybe<ShippingMinAggregateOutputType>;
  _sum?: Maybe<ShippingSumAggregateOutputType>;
};

export type ShippingAvgAggregateOutputType = {
  __typename?: 'ShippingAvgAggregateOutputType';
  amount?: Maybe<Scalars['Float']>;
};

export type ShippingCountAggregateOutputType = {
  __typename?: 'ShippingCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  amount: Scalars['Int'];
  countryCode: Scalars['Int'];
  createdAt: Scalars['Int'];
  currencyCode: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  isGlobal: Scalars['Int'];
  name: Scalars['Int'];
  state: Scalars['Int'];
  type: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type ShippingMaxAggregateOutputType = {
  __typename?: 'ShippingMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  amount?: Maybe<Scalars['Float']>;
  countryCode?: Maybe<CountryCode>;
  createdAt?: Maybe<Scalars['DateTime']>;
  currencyCode?: Maybe<CurrencyCode>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  isGlobal?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type ShippingMinAggregateOutputType = {
  __typename?: 'ShippingMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  amount?: Maybe<Scalars['Float']>;
  countryCode?: Maybe<CountryCode>;
  createdAt?: Maybe<Scalars['DateTime']>;
  currencyCode?: Maybe<CurrencyCode>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  isGlobal?: Maybe<Scalars['Boolean']>;
  name?: Maybe<Scalars['String']>;
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type ShippingSumAggregateOutputType = {
  __typename?: 'ShippingSumAggregateOutputType';
  amount?: Maybe<Scalars['Float']>;
};

export type SlugCounterWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type SlugCounterOrderByWithRelationInput = {
  counter?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type SlugCounterWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<SlugCounterWhereInput>>>;
  counter?: InputMaybe<IntNullableFilter>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  model?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<SlugCounterWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<SlugCounterWhereInput>>>;
  slug?: InputMaybe<StringNullableFilter>;
  title?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
};

export type AggregateSlugCounter = {
  __typename?: 'AggregateSlugCounter';
  _avg?: Maybe<SlugCounterAvgAggregateOutputType>;
  _count?: Maybe<SlugCounterCountAggregateOutputType>;
  _max?: Maybe<SlugCounterMaxAggregateOutputType>;
  _min?: Maybe<SlugCounterMinAggregateOutputType>;
  _sum?: Maybe<SlugCounterSumAggregateOutputType>;
};

export type SlugCounterAvgAggregateOutputType = {
  __typename?: 'SlugCounterAvgAggregateOutputType';
  counter?: Maybe<Scalars['Float']>;
};

export type SlugCounterCountAggregateOutputType = {
  __typename?: 'SlugCounterCountAggregateOutputType';
  _all: Scalars['Int'];
  counter: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  model: Scalars['Int'];
  slug: Scalars['Int'];
  title: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type SlugCounterMaxAggregateOutputType = {
  __typename?: 'SlugCounterMaxAggregateOutputType';
  counter?: Maybe<Scalars['Int']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  model?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type SlugCounterMinAggregateOutputType = {
  __typename?: 'SlugCounterMinAggregateOutputType';
  counter?: Maybe<Scalars['Int']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  model?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type SlugCounterSumAggregateOutputType = {
  __typename?: 'SlugCounterSumAggregateOutputType';
  counter?: Maybe<Scalars['Int']>;
};

export type SocialWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type SocialOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  socialType?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AggregateSocial = {
  __typename?: 'AggregateSocial';
  _count?: Maybe<SocialCountAggregateOutputType>;
  _max?: Maybe<SocialMaxAggregateOutputType>;
  _min?: Maybe<SocialMinAggregateOutputType>;
};

export type SocialCountAggregateOutputType = {
  __typename?: 'SocialCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  socialType: Scalars['Int'];
  updatedAt: Scalars['Int'];
  url: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type SocialMaxAggregateOutputType = {
  __typename?: 'SocialMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  socialType?: Maybe<SocialType>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type SocialMinAggregateOutputType = {
  __typename?: 'SocialMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  socialType?: Maybe<SocialType>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type TagWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type TagOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  products?: InputMaybe<ProductOrderByRelationAggregateInput>;
  slug?: InputMaybe<SortOrder>;
  type?: InputMaybe<TypeOrderByWithRelationInput>;
  typeId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type AggregateTag = {
  __typename?: 'AggregateTag';
  _count?: Maybe<TagCountAggregateOutputType>;
  _max?: Maybe<TagMaxAggregateOutputType>;
  _min?: Maybe<TagMinAggregateOutputType>;
};

export type TagCountAggregateOutputType = {
  __typename?: 'TagCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  icon: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  slug: Scalars['Int'];
  typeId: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type TagMaxAggregateOutputType = {
  __typename?: 'TagMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  icon?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  typeId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type TagMinAggregateOutputType = {
  __typename?: 'TagMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  icon?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  typeId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type TaxWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type TaxOrderByWithRelationInput = {
  active?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  countryCode?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  inclusive?: InputMaybe<SortOrder>;
  isGlobal?: InputMaybe<SortOrder>;
  jurisdiction?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  onShipping?: InputMaybe<SortOrder>;
  percentage?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  stripePrivateTaxId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
  zip?: InputMaybe<SortOrder>;
};

export type AggregateTax = {
  __typename?: 'AggregateTax';
  _avg?: Maybe<TaxAvgAggregateOutputType>;
  _count?: Maybe<TaxCountAggregateOutputType>;
  _max?: Maybe<TaxMaxAggregateOutputType>;
  _min?: Maybe<TaxMinAggregateOutputType>;
  _sum?: Maybe<TaxSumAggregateOutputType>;
};

export type TaxAvgAggregateOutputType = {
  __typename?: 'TaxAvgAggregateOutputType';
  percentage?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Float']>;
};

export type TaxCountAggregateOutputType = {
  __typename?: 'TaxCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  city: Scalars['Int'];
  country: Scalars['Int'];
  countryCode: Scalars['Int'];
  createdAt: Scalars['Int'];
  currencyCode: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  inclusive: Scalars['Int'];
  isGlobal: Scalars['Int'];
  jurisdiction: Scalars['Int'];
  name: Scalars['Int'];
  onShipping: Scalars['Int'];
  percentage: Scalars['Int'];
  priority: Scalars['Int'];
  state: Scalars['Int'];
  stripePrivateTaxId: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
  zip: Scalars['Int'];
};

export type TaxMaxAggregateOutputType = {
  __typename?: 'TaxMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  countryCode?: Maybe<CountryCode>;
  createdAt?: Maybe<Scalars['DateTime']>;
  currencyCode?: Maybe<CurrencyCode>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  inclusive?: Maybe<Scalars['Boolean']>;
  isGlobal?: Maybe<Scalars['Boolean']>;
  jurisdiction?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  onShipping?: Maybe<Scalars['Boolean']>;
  percentage?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Int']>;
  state?: Maybe<Scalars['String']>;
  stripePrivateTaxId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
  zip?: Maybe<Scalars['String']>;
};

export type TaxMinAggregateOutputType = {
  __typename?: 'TaxMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  countryCode?: Maybe<CountryCode>;
  createdAt?: Maybe<Scalars['DateTime']>;
  currencyCode?: Maybe<CurrencyCode>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  inclusive?: Maybe<Scalars['Boolean']>;
  isGlobal?: Maybe<Scalars['Boolean']>;
  jurisdiction?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  onShipping?: Maybe<Scalars['Boolean']>;
  percentage?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Int']>;
  state?: Maybe<Scalars['String']>;
  stripePrivateTaxId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
  zip?: Maybe<Scalars['String']>;
};

export type TaxSumAggregateOutputType = {
  __typename?: 'TaxSumAggregateOutputType';
  percentage?: Maybe<Scalars['Float']>;
  priority?: Maybe<Scalars['Int']>;
};

export type TraitWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type TraitOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  product?: InputMaybe<ProductOrderByWithRelationInput>;
  productId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  values?: InputMaybe<ValueOrderByRelationAggregateInput>;
};

export type ValueOrderByRelationAggregateInput = {
  _count?: InputMaybe<SortOrder>;
};

export type AggregateTrait = {
  __typename?: 'AggregateTrait';
  _count?: Maybe<TraitCountAggregateOutputType>;
  _max?: Maybe<TraitMaxAggregateOutputType>;
  _min?: Maybe<TraitMinAggregateOutputType>;
};

export type TraitCountAggregateOutputType = {
  __typename?: 'TraitCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  productId: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type TraitMaxAggregateOutputType = {
  __typename?: 'TraitMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  productId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type TraitMinAggregateOutputType = {
  __typename?: 'TraitMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  productId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type TypeWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type AggregateType = {
  __typename?: 'AggregateType';
  _count?: Maybe<TypeCountAggregateOutputType>;
  _max?: Maybe<TypeMaxAggregateOutputType>;
  _min?: Maybe<TypeMinAggregateOutputType>;
};

export type TypeCountAggregateOutputType = {
  __typename?: 'TypeCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  name: Scalars['Int'];
  slug: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type TypeMaxAggregateOutputType = {
  __typename?: 'TypeMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type TypeMinAggregateOutputType = {
  __typename?: 'TypeMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type UserWhereUniqueInput = {
  email?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
};

export type AggregateUser = {
  __typename?: 'AggregateUser';
  _avg?: Maybe<UserAvgAggregateOutputType>;
  _count?: Maybe<UserCountAggregateOutputType>;
  _max?: Maybe<UserMaxAggregateOutputType>;
  _min?: Maybe<UserMinAggregateOutputType>;
  _sum?: Maybe<UserSumAggregateOutputType>;
};

export type UserAvgAggregateOutputType = {
  __typename?: 'UserAvgAggregateOutputType';
  currentBalance?: Maybe<Scalars['Float']>;
  totalEarnings?: Maybe<Scalars['Float']>;
  withdrawnAmount?: Maybe<Scalars['Float']>;
};

export type UserCountAggregateOutputType = {
  __typename?: 'UserCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  currentBalance: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  email: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  password: Scalars['Int'];
  stripeAccountId: Scalars['Int'];
  stripeCustomerId: Scalars['Int'];
  totalEarnings: Scalars['Int'];
  withdrawnAmount: Scalars['Int'];
};

export type UserMaxAggregateOutputType = {
  __typename?: 'UserMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  currentBalance?: Maybe<Scalars['Float']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  password?: Maybe<Scalars['String']>;
  stripeAccountId?: Maybe<Scalars['String']>;
  stripeCustomerId?: Maybe<Scalars['String']>;
  totalEarnings?: Maybe<Scalars['Float']>;
  withdrawnAmount?: Maybe<Scalars['Float']>;
};

export type UserMinAggregateOutputType = {
  __typename?: 'UserMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  currentBalance?: Maybe<Scalars['Float']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  password?: Maybe<Scalars['String']>;
  stripeAccountId?: Maybe<Scalars['String']>;
  stripeCustomerId?: Maybe<Scalars['String']>;
  totalEarnings?: Maybe<Scalars['Float']>;
  withdrawnAmount?: Maybe<Scalars['Float']>;
};

export type UserSumAggregateOutputType = {
  __typename?: 'UserSumAggregateOutputType';
  currentBalance?: Maybe<Scalars['Float']>;
  totalEarnings?: Maybe<Scalars['Float']>;
  withdrawnAmount?: Maybe<Scalars['Float']>;
};

export type ValueWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type ValueOrderByWithRelationInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percentage?: InputMaybe<SortOrder>;
  trait?: InputMaybe<TraitOrderByWithRelationInput>;
  traitId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type AggregateValue = {
  __typename?: 'AggregateValue';
  _avg?: Maybe<ValueAvgAggregateOutputType>;
  _count?: Maybe<ValueCountAggregateOutputType>;
  _max?: Maybe<ValueMaxAggregateOutputType>;
  _min?: Maybe<ValueMinAggregateOutputType>;
  _sum?: Maybe<ValueSumAggregateOutputType>;
};

export type ValueAvgAggregateOutputType = {
  __typename?: 'ValueAvgAggregateOutputType';
  percentage?: Maybe<Scalars['Float']>;
};

export type ValueCountAggregateOutputType = {
  __typename?: 'ValueCountAggregateOutputType';
  _all: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  percentage: Scalars['Int'];
  traitId: Scalars['Int'];
  updatedAt: Scalars['Int'];
};

export type ValueMaxAggregateOutputType = {
  __typename?: 'ValueMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  percentage?: Maybe<Scalars['Float']>;
  traitId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type ValueMinAggregateOutputType = {
  __typename?: 'ValueMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  percentage?: Maybe<Scalars['Float']>;
  traitId?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export type ValueSumAggregateOutputType = {
  __typename?: 'ValueSumAggregateOutputType';
  percentage?: Maybe<Scalars['Float']>;
};

export type VideoWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type AggregateVideo = {
  __typename?: 'AggregateVideo';
  _count?: Maybe<VideoCountAggregateOutputType>;
  _max?: Maybe<VideoMaxAggregateOutputType>;
  _min?: Maybe<VideoMinAggregateOutputType>;
};

export type VideoCountAggregateOutputType = {
  __typename?: 'VideoCountAggregateOutputType';
  _all: Scalars['Int'];
  content: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  name: Scalars['Int'];
  paid: Scalars['Int'];
  slug: Scalars['Int'];
  transactionHash: Scalars['Int'];
  updatedAt: Scalars['Int'];
  userId: Scalars['Int'];
  videoObj: Scalars['Int'];
  walletAddress: Scalars['Int'];
};

export type VideoMaxAggregateOutputType = {
  __typename?: 'VideoMaxAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  paid?: Maybe<Scalars['Boolean']>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type VideoMinAggregateOutputType = {
  __typename?: 'VideoMinAggregateOutputType';
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  paid?: Maybe<Scalars['Boolean']>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};

export type WebsiteWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
};

export type AggregateWebsite = {
  __typename?: 'AggregateWebsite';
  _avg?: Maybe<WebsiteAvgAggregateOutputType>;
  _count?: Maybe<WebsiteCountAggregateOutputType>;
  _max?: Maybe<WebsiteMaxAggregateOutputType>;
  _min?: Maybe<WebsiteMinAggregateOutputType>;
  _sum?: Maybe<WebsiteSumAggregateOutputType>;
};

export type WebsiteAvgAggregateOutputType = {
  __typename?: 'WebsiteAvgAggregateOutputType';
  currentBalance?: Maybe<Scalars['Float']>;
  totalEarnings?: Maybe<Scalars['Float']>;
  withdrawnAmount?: Maybe<Scalars['Float']>;
};

export type WebsiteCountAggregateOutputType = {
  __typename?: 'WebsiteCountAggregateOutputType';
  _all: Scalars['Int'];
  active: Scalars['Int'];
  address: Scalars['Int'];
  adminFilters: Scalars['Int'];
  canonicalUrl: Scalars['Int'];
  chain: Scalars['Int'];
  contact: Scalars['Int'];
  countryCode: Scalars['Int'];
  createdAt: Scalars['Int'];
  cryptoCurrencyCode: Scalars['Int'];
  currencyCode: Scalars['Int'];
  currentBalance: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  description: Scalars['Int'];
  discordLink: Scalars['Int'];
  externalName: Scalars['Int'];
  externalUrl: Scalars['Int'];
  facebookAppId: Scalars['Int'];
  facebookIsEnable: Scalars['Int'];
  facebookLink: Scalars['Int'];
  facebookPageId: Scalars['Int'];
  googleIsEnable: Scalars['Int'];
  googleTagManagerId: Scalars['Int'];
  id: Scalars['Int'];
  imageObj: Scalars['Int'];
  instagramLink: Scalars['Int'];
  languageCode: Scalars['Int'];
  location: Scalars['Int'];
  logoObj: Scalars['Int'];
  menu: Scalars['Int'];
  metaTags: Scalars['Int'];
  name: Scalars['Int'];
  pageOrder: Scalars['Int'];
  paymentMethod: Scalars['Int'];
  slug: Scalars['Int'];
  stripeAccountId: Scalars['Int'];
  themeColor: Scalars['Int'];
  tikTokLink: Scalars['Int'];
  totalEarnings: Scalars['Int'];
  twitterCardType: Scalars['Int'];
  twitterHandle: Scalars['Int'];
  twitterLink: Scalars['Int'];
  updatedAt: Scalars['Int'];
  userId: Scalars['Int'];
  walletAddress: Scalars['Int'];
  websiteUrl: Scalars['Int'];
  withdrawnAmount: Scalars['Int'];
};

export type WebsiteMaxAggregateOutputType = {
  __typename?: 'WebsiteMaxAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  canonicalUrl?: Maybe<Scalars['String']>;
  contact?: Maybe<Scalars['String']>;
  countryCode?: Maybe<CountryCode>;
  createdAt?: Maybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: Maybe<CryptoCurrency>;
  currencyCode?: Maybe<CurrencyCode>;
  currentBalance?: Maybe<Scalars['Float']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  discordLink?: Maybe<Scalars['String']>;
  externalName?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  facebookAppId?: Maybe<Scalars['String']>;
  facebookIsEnable?: Maybe<Scalars['Boolean']>;
  facebookLink?: Maybe<Scalars['String']>;
  facebookPageId?: Maybe<Scalars['String']>;
  googleIsEnable?: Maybe<Scalars['Boolean']>;
  googleTagManagerId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  instagramLink?: Maybe<Scalars['String']>;
  languageCode?: Maybe<LanguageCode>;
  name?: Maybe<Scalars['String']>;
  paymentMethod?: Maybe<PaymentMethod>;
  slug?: Maybe<Scalars['String']>;
  stripeAccountId?: Maybe<Scalars['String']>;
  themeColor?: Maybe<Color>;
  tikTokLink?: Maybe<Scalars['String']>;
  totalEarnings?: Maybe<Scalars['Float']>;
  twitterCardType?: Maybe<Scalars['String']>;
  twitterHandle?: Maybe<Scalars['String']>;
  twitterLink?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteUrl?: Maybe<Scalars['String']>;
  withdrawnAmount?: Maybe<Scalars['Float']>;
};

export type WebsiteMinAggregateOutputType = {
  __typename?: 'WebsiteMinAggregateOutputType';
  active?: Maybe<Scalars['Boolean']>;
  canonicalUrl?: Maybe<Scalars['String']>;
  contact?: Maybe<Scalars['String']>;
  countryCode?: Maybe<CountryCode>;
  createdAt?: Maybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: Maybe<CryptoCurrency>;
  currencyCode?: Maybe<CurrencyCode>;
  currentBalance?: Maybe<Scalars['Float']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  discordLink?: Maybe<Scalars['String']>;
  externalName?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  facebookAppId?: Maybe<Scalars['String']>;
  facebookIsEnable?: Maybe<Scalars['Boolean']>;
  facebookLink?: Maybe<Scalars['String']>;
  facebookPageId?: Maybe<Scalars['String']>;
  googleIsEnable?: Maybe<Scalars['Boolean']>;
  googleTagManagerId?: Maybe<Scalars['String']>;
  id?: Maybe<Scalars['String']>;
  instagramLink?: Maybe<Scalars['String']>;
  languageCode?: Maybe<LanguageCode>;
  name?: Maybe<Scalars['String']>;
  paymentMethod?: Maybe<PaymentMethod>;
  slug?: Maybe<Scalars['String']>;
  stripeAccountId?: Maybe<Scalars['String']>;
  themeColor?: Maybe<Color>;
  tikTokLink?: Maybe<Scalars['String']>;
  totalEarnings?: Maybe<Scalars['Float']>;
  twitterCardType?: Maybe<Scalars['String']>;
  twitterHandle?: Maybe<Scalars['String']>;
  twitterLink?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteUrl?: Maybe<Scalars['String']>;
  withdrawnAmount?: Maybe<Scalars['Float']>;
};

export type WebsiteSumAggregateOutputType = {
  __typename?: 'WebsiteSumAggregateOutputType';
  currentBalance?: Maybe<Scalars['Float']>;
  totalEarnings?: Maybe<Scalars['Float']>;
  withdrawnAmount?: Maybe<Scalars['Float']>;
};

export type WithdrawWhereUniqueInput = {
  id?: InputMaybe<Scalars['String']>;
};

export type WithdrawOrderByWithRelationInput = {
  amount?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  processed?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  website?: InputMaybe<WebsiteOrderByWithRelationInput>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AggregateWithdraw = {
  __typename?: 'AggregateWithdraw';
  _avg?: Maybe<WithdrawAvgAggregateOutputType>;
  _count?: Maybe<WithdrawCountAggregateOutputType>;
  _max?: Maybe<WithdrawMaxAggregateOutputType>;
  _min?: Maybe<WithdrawMinAggregateOutputType>;
  _sum?: Maybe<WithdrawSumAggregateOutputType>;
};

export type WithdrawAvgAggregateOutputType = {
  __typename?: 'WithdrawAvgAggregateOutputType';
  amount?: Maybe<Scalars['Float']>;
};

export type WithdrawCountAggregateOutputType = {
  __typename?: 'WithdrawCountAggregateOutputType';
  _all: Scalars['Int'];
  amount: Scalars['Int'];
  createdAt: Scalars['Int'];
  deleted: Scalars['Int'];
  deletedAt: Scalars['Int'];
  id: Scalars['Int'];
  processed: Scalars['Int'];
  updatedAt: Scalars['Int'];
  websiteId: Scalars['Int'];
};

export type WithdrawMaxAggregateOutputType = {
  __typename?: 'WithdrawMaxAggregateOutputType';
  amount?: Maybe<Scalars['Float']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  processed?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type WithdrawMinAggregateOutputType = {
  __typename?: 'WithdrawMinAggregateOutputType';
  amount?: Maybe<Scalars['Float']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id?: Maybe<Scalars['String']>;
  processed?: Maybe<Scalars['Boolean']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  websiteId?: Maybe<Scalars['String']>;
};

export type WithdrawSumAggregateOutputType = {
  __typename?: 'WithdrawSumAggregateOutputType';
  amount?: Maybe<Scalars['Float']>;
};

export enum AttachmentScalarFieldEnum {
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Staked = 'staked',
  Type = 'type',
  Upload = 'upload',
  Url = 'url',
  UserId = 'userId',
  WebsiteId = 'websiteId'
}

export type Attachment = {
  __typename?: 'Attachment';
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  staked?: Maybe<Scalars['Boolean']>;
  type?: Maybe<AttachmentType>;
  upload: Scalars['Json'];
  url: Scalars['String'];
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};

export type User = {
  __typename?: 'User';
  _count: UserCountOutputType;
  attachments: Array<Attachment>;
  audios: Array<Audio>;
  blocks: Array<Block>;
  createdAt?: Maybe<Scalars['DateTime']>;
  currentBalance?: Maybe<Scalars['Float']>;
  customers: Array<Customer>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  documents: Array<Document>;
  email: Scalars['String'];
  embeds: Array<Embed>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  links: Array<Link>;
  loginTokens: Array<LoginToken>;
  name?: Maybe<Scalars['String']>;
  notifications: Array<Notification>;
  password?: Maybe<Scalars['String']>;
  pictures: Array<Picture>;
  redeemables: Array<Redeemable>;
  refreshTokens: Array<RefreshToken>;
  stripeAccountId?: Maybe<Scalars['String']>;
  stripeCustomerId?: Maybe<Scalars['String']>;
  totalEarnings?: Maybe<Scalars['Float']>;
  videos: Array<Video>;
  websites: Array<Website>;
  withdrawnAmount?: Maybe<Scalars['Float']>;
};


export type UserAttachmentsArgs = {
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  distinct?: InputMaybe<AttachmentScalarFieldEnum>;
  orderBy?: InputMaybe<AttachmentOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttachmentWhereInput>;
};


export type UserAudiosArgs = {
  cursor?: InputMaybe<AudioWhereUniqueInput>;
  distinct?: InputMaybe<AudioScalarFieldEnum>;
  orderBy?: InputMaybe<AudioOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioWhereInput>;
};


export type UserBlocksArgs = {
  cursor?: InputMaybe<BlockWhereUniqueInput>;
  distinct?: InputMaybe<BlockScalarFieldEnum>;
  orderBy?: InputMaybe<BlockOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<BlockWhereInput>;
};


export type UserCustomersArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  distinct?: InputMaybe<CustomerScalarFieldEnum>;
  orderBy?: InputMaybe<CustomerOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type UserDocumentsArgs = {
  cursor?: InputMaybe<DocumentWhereUniqueInput>;
  distinct?: InputMaybe<DocumentScalarFieldEnum>;
  orderBy?: InputMaybe<DocumentOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DocumentWhereInput>;
};


export type UserEmbedsArgs = {
  cursor?: InputMaybe<EmbedWhereUniqueInput>;
  distinct?: InputMaybe<EmbedScalarFieldEnum>;
  orderBy?: InputMaybe<EmbedOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<EmbedWhereInput>;
};


export type UserLinksArgs = {
  cursor?: InputMaybe<LinkWhereUniqueInput>;
  distinct?: InputMaybe<LinkScalarFieldEnum>;
  orderBy?: InputMaybe<LinkOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LinkWhereInput>;
};


export type UserLoginTokensArgs = {
  cursor?: InputMaybe<LoginTokenWhereUniqueInput>;
  distinct?: InputMaybe<LoginTokenScalarFieldEnum>;
  orderBy?: InputMaybe<LoginTokenOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LoginTokenWhereInput>;
};


export type UserNotificationsArgs = {
  cursor?: InputMaybe<NotificationWhereUniqueInput>;
  distinct?: InputMaybe<NotificationScalarFieldEnum>;
  orderBy?: InputMaybe<NotificationOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<NotificationWhereInput>;
};


export type UserPicturesArgs = {
  cursor?: InputMaybe<PictureWhereUniqueInput>;
  distinct?: InputMaybe<PictureScalarFieldEnum>;
  orderBy?: InputMaybe<PictureOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PictureWhereInput>;
};


export type UserRedeemablesArgs = {
  cursor?: InputMaybe<RedeemableWhereUniqueInput>;
  distinct?: InputMaybe<RedeemableScalarFieldEnum>;
  orderBy?: InputMaybe<RedeemableOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RedeemableWhereInput>;
};


export type UserRefreshTokensArgs = {
  cursor?: InputMaybe<RefreshTokenWhereUniqueInput>;
  distinct?: InputMaybe<RefreshTokenScalarFieldEnum>;
  orderBy?: InputMaybe<RefreshTokenOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RefreshTokenWhereInput>;
};


export type UserVideosArgs = {
  cursor?: InputMaybe<VideoWhereUniqueInput>;
  distinct?: InputMaybe<VideoScalarFieldEnum>;
  orderBy?: InputMaybe<VideoOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoWhereInput>;
};


export type UserWebsitesArgs = {
  cursor?: InputMaybe<WebsiteWhereUniqueInput>;
  distinct?: InputMaybe<WebsiteScalarFieldEnum>;
  orderBy?: InputMaybe<WebsiteOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WebsiteWhereInput>;
};

export type UserCountOutputType = {
  __typename?: 'UserCountOutputType';
  attachments: Scalars['Int'];
  audios: Scalars['Int'];
  blocks: Scalars['Int'];
  customers: Scalars['Int'];
  documents: Scalars['Int'];
  embeds: Scalars['Int'];
  links: Scalars['Int'];
  loginTokens: Scalars['Int'];
  notifications: Scalars['Int'];
  pictures: Scalars['Int'];
  redeemables: Scalars['Int'];
  refreshTokens: Scalars['Int'];
  videos: Scalars['Int'];
  websites: Scalars['Int'];
};

export enum AudioScalarFieldEnum {
  AudioObj = 'audioObj',
  Content = 'content',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  Paid = 'paid',
  Slug = 'slug',
  TransactionHash = 'transactionHash',
  UpdatedAt = 'updatedAt',
  UserId = 'userId',
  WalletAddress = 'walletAddress'
}

export type Audio = {
  __typename?: 'Audio';
  _count: AudioCountOutputType;
  audioObj?: Maybe<Scalars['Json']>;
  content?: Maybe<Scalars['Json']>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedAudios: Array<OrderedAudio>;
  paid?: Maybe<Scalars['Boolean']>;
  products: Array<Product>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};


export type AudioOrderedAudiosArgs = {
  cursor?: InputMaybe<OrderedAudioWhereUniqueInput>;
  distinct?: InputMaybe<OrderedAudioScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedAudioOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedAudioWhereInput>;
};


export type AudioProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type AudioCountOutputType = {
  __typename?: 'AudioCountOutputType';
  orderedAudios: Scalars['Int'];
  products: Scalars['Int'];
};

export enum OrderedAudioScalarFieldEnum {
  AudioId = 'audioId',
  AudioObj = 'audioObj',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  OrderedProductId = 'orderedProductId',
  UpdatedAt = 'updatedAt',
  Url = 'url'
}

export type OrderedAudio = {
  __typename?: 'OrderedAudio';
  audio?: Maybe<Audio>;
  audioId?: Maybe<Scalars['String']>;
  audioObj?: Maybe<Scalars['Json']>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProduct?: Maybe<OrderedProduct>;
  orderedProductId?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  url?: Maybe<Scalars['String']>;
};

export type OrderedProduct = {
  __typename?: 'OrderedProduct';
  _count: OrderedProductCountOutputType;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  itemTotal?: Maybe<Scalars['Float']>;
  minted?: Maybe<Scalars['Boolean']>;
  name: Scalars['String'];
  order?: Maybe<Order>;
  orderedAudios: Array<OrderedAudio>;
  orderedDocuments: Array<OrderedDocument>;
  orderedLinks: Array<OrderedLink>;
  orderedPictures: Array<OrderedPicture>;
  orderedRedeemables: Array<OrderedRedeemable>;
  orderedVideos: Array<OrderedVideo>;
  orderId?: Maybe<Scalars['String']>;
  orderNumber?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Float']>;
  product?: Maybe<Product>;
  productId?: Maybe<Scalars['String']>;
  productSlug: Scalars['String'];
  productType?: Maybe<ProductType>;
  quantity?: Maybe<Scalars['Int']>;
  refund?: Maybe<Refund>;
  refundId?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  url?: Maybe<Scalars['String']>;
  variationId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type OrderedProductOrderedAudiosArgs = {
  cursor?: InputMaybe<OrderedAudioWhereUniqueInput>;
  distinct?: InputMaybe<OrderedAudioScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedAudioOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedAudioWhereInput>;
};


export type OrderedProductOrderedDocumentsArgs = {
  cursor?: InputMaybe<OrderedDocumentWhereUniqueInput>;
  distinct?: InputMaybe<OrderedDocumentScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedDocumentOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedDocumentWhereInput>;
};


export type OrderedProductOrderedLinksArgs = {
  cursor?: InputMaybe<OrderedLinkWhereUniqueInput>;
  distinct?: InputMaybe<OrderedLinkScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedLinkOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedLinkWhereInput>;
};


export type OrderedProductOrderedPicturesArgs = {
  cursor?: InputMaybe<OrderedPictureWhereUniqueInput>;
  distinct?: InputMaybe<OrderedPictureScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedPictureOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedPictureWhereInput>;
};


export type OrderedProductOrderedRedeemablesArgs = {
  cursor?: InputMaybe<OrderedRedeemableWhereUniqueInput>;
  distinct?: InputMaybe<OrderedRedeemableScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedRedeemableOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedRedeemableWhereInput>;
};


export type OrderedProductOrderedVideosArgs = {
  cursor?: InputMaybe<OrderedVideoWhereUniqueInput>;
  distinct?: InputMaybe<OrderedVideoScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedVideoOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedVideoWhereInput>;
};

export type OrderedProductCountOutputType = {
  __typename?: 'OrderedProductCountOutputType';
  orderedAudios: Scalars['Int'];
  orderedDocuments: Scalars['Int'];
  orderedLinks: Scalars['Int'];
  orderedPictures: Scalars['Int'];
  orderedRedeemables: Scalars['Int'];
  orderedVideos: Scalars['Int'];
};

export type Order = {
  __typename?: 'Order';
  _count: OrderCountOutputType;
  amount?: Maybe<Scalars['Float']>;
  applicationFee?: Maybe<Scalars['Float']>;
  billing_address?: Maybe<Scalars['Json']>;
  completedAt?: Maybe<Scalars['DateTime']>;
  coupon?: Maybe<Coupon>;
  couponId?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  cryptoCurrencyCode?: Maybe<CryptoCurrency>;
  currencyCode?: Maybe<CurrencyCode>;
  customer?: Maybe<Customer>;
  customerContact?: Maybe<Scalars['String']>;
  customerId?: Maybe<Scalars['String']>;
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  delivery_fee?: Maybe<Scalars['Float']>;
  delivery_name?: Maybe<Scalars['String']>;
  delivery_time?: Maybe<Scalars['String']>;
  discount?: Maybe<Scalars['Float']>;
  id: Scalars['String'];
  orderedProducts: Array<OrderedProduct>;
  orderNumber?: Maybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: Maybe<Scalars['Float']>;
  paymentGateway?: Maybe<Scalars['String']>;
  paymentId?: Maybe<Scalars['String']>;
  received?: Maybe<Scalars['Boolean']>;
  refundObj: Array<Scalars['Json']>;
  refunds: Array<Refund>;
  requireShipping?: Maybe<Scalars['Boolean']>;
  sales_tax?: Maybe<Scalars['Float']>;
  shipping_address?: Maybe<Scalars['Json']>;
  shippingImages: Array<Scalars['Json']>;
  storageFee?: Maybe<Scalars['Float']>;
  stripePrivateSessionId?: Maybe<Scalars['String']>;
  total?: Maybe<Scalars['Float']>;
  tracking_number?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  walletAddress?: Maybe<Scalars['String']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type OrderOrderedProductsArgs = {
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  distinct?: InputMaybe<OrderedProductScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type OrderRefundsArgs = {
  cursor?: InputMaybe<RefundWhereUniqueInput>;
  distinct?: InputMaybe<RefundScalarFieldEnum>;
  orderBy?: InputMaybe<RefundOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RefundWhereInput>;
};

export type OrderCountOutputType = {
  __typename?: 'OrderCountOutputType';
  orderedProducts: Scalars['Int'];
  refunds: Scalars['Int'];
};

export type Coupon = {
  __typename?: 'Coupon';
  _count: CouponCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  active_from?: Maybe<Scalars['DateTime']>;
  amount_off?: Maybe<Scalars['Float']>;
  code?: Maybe<Scalars['String']>;
  couponType: CouponType;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  expire_at?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name: Scalars['String'];
  orders: Array<Order>;
  percent_off?: Maybe<Scalars['Float']>;
  type?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type CouponOrdersArgs = {
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  distinct?: InputMaybe<OrderScalarFieldEnum>;
  orderBy?: InputMaybe<OrderOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderWhereInput>;
};

export type CouponCountOutputType = {
  __typename?: 'CouponCountOutputType';
  orders: Scalars['Int'];
};

export enum OrderScalarFieldEnum {
  Amount = 'amount',
  ApplicationFee = 'applicationFee',
  BillingAddress = 'billing_address',
  CompletedAt = 'completedAt',
  CouponId = 'couponId',
  CreatedAt = 'createdAt',
  CryptoCurrencyCode = 'cryptoCurrencyCode',
  CurrencyCode = 'currencyCode',
  CustomerContact = 'customerContact',
  CustomerId = 'customerId',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  DeliveryFee = 'delivery_fee',
  DeliveryName = 'delivery_name',
  DeliveryTime = 'delivery_time',
  Discount = 'discount',
  Id = 'id',
  OrderNumber = 'orderNumber',
  OrderStatus = 'orderStatus',
  PaidTotal = 'paid_total',
  PaymentGateway = 'paymentGateway',
  PaymentId = 'paymentId',
  Received = 'received',
  RefundObj = 'refundObj',
  RequireShipping = 'requireShipping',
  SalesTax = 'sales_tax',
  ShippingAddress = 'shipping_address',
  ShippingImages = 'shippingImages',
  StorageFee = 'storageFee',
  StripePrivateSessionId = 'stripePrivateSessionId',
  Total = 'total',
  TrackingNumber = 'tracking_number',
  TransactionHash = 'transactionHash',
  UpdatedAt = 'updatedAt',
  WalletAddress = 'walletAddress',
  WebsiteId = 'websiteId'
}

export type Website = {
  __typename?: 'Website';
  _count: WebsiteCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  address?: Maybe<Scalars['Json']>;
  adminFilters?: Maybe<Scalars['Json']>;
  attachments: Array<Attachment>;
  attributes: Array<Attribute>;
  canonicalUrl?: Maybe<Scalars['String']>;
  categories: Array<Category>;
  chain?: Maybe<Scalars['Json']>;
  collections: Array<Collection>;
  contact?: Maybe<Scalars['String']>;
  countryCode?: Maybe<CountryCode>;
  coupons: Array<Coupon>;
  createdAt: Scalars['DateTime'];
  cryptoCurrencyCode?: Maybe<CryptoCurrency>;
  currencyCode?: Maybe<CurrencyCode>;
  currentBalance?: Maybe<Scalars['Float']>;
  customers: Array<Customer>;
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  discordLink?: Maybe<Scalars['String']>;
  externalName?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  facebookAppId?: Maybe<Scalars['String']>;
  facebookIsEnable?: Maybe<Scalars['Boolean']>;
  facebookLink?: Maybe<Scalars['String']>;
  facebookPageId?: Maybe<Scalars['String']>;
  googleIsEnable?: Maybe<Scalars['Boolean']>;
  googleTagManagerId?: Maybe<Scalars['String']>;
  Group: Array<Group>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  instagramLink?: Maybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: Maybe<Scalars['Json']>;
  logoObj?: Maybe<Scalars['Json']>;
  menu?: Maybe<Scalars['Json']>;
  metaTags: Array<Scalars['String']>;
  name: Scalars['String'];
  notifications: Array<Notification>;
  orderedProducts: Array<OrderedProduct>;
  orders: Array<Order>;
  pageCollections: Array<PageCollection>;
  pageOrder: Array<Scalars['String']>;
  pages: Array<Page>;
  paymentMethod: PaymentMethod;
  productCollections: Array<ProductCollection>;
  products: Array<Product>;
  shippings: Array<Shipping>;
  slug?: Maybe<Scalars['String']>;
  socials: Array<Social>;
  stripeAccountId?: Maybe<Scalars['String']>;
  taxes: Array<Tax>;
  themeColor: Color;
  tikTokLink?: Maybe<Scalars['String']>;
  totalEarnings?: Maybe<Scalars['Float']>;
  twitterCardType?: Maybe<Scalars['String']>;
  twitterHandle?: Maybe<Scalars['String']>;
  twitterLink?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
  websiteUrl?: Maybe<Scalars['String']>;
  withdrawnAmount?: Maybe<Scalars['Float']>;
  withdraws: Array<Withdraw>;
};


export type WebsiteAttachmentsArgs = {
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  distinct?: InputMaybe<AttachmentScalarFieldEnum>;
  orderBy?: InputMaybe<AttachmentOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttachmentWhereInput>;
};


export type WebsiteAttributesArgs = {
  cursor?: InputMaybe<AttributeWhereUniqueInput>;
  distinct?: InputMaybe<AttributeScalarFieldEnum>;
  orderBy?: InputMaybe<AttributeOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AttributeWhereInput>;
};


export type WebsiteCategoriesArgs = {
  cursor?: InputMaybe<CategoryWhereUniqueInput>;
  distinct?: InputMaybe<CategoryScalarFieldEnum>;
  orderBy?: InputMaybe<CategoryOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CategoryWhereInput>;
};


export type WebsiteCollectionsArgs = {
  cursor?: InputMaybe<CollectionWhereUniqueInput>;
  distinct?: InputMaybe<CollectionScalarFieldEnum>;
  orderBy?: InputMaybe<CollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CollectionWhereInput>;
};


export type WebsiteCouponsArgs = {
  cursor?: InputMaybe<CouponWhereUniqueInput>;
  distinct?: InputMaybe<CouponScalarFieldEnum>;
  orderBy?: InputMaybe<CouponOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CouponWhereInput>;
};


export type WebsiteCustomersArgs = {
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  distinct?: InputMaybe<CustomerScalarFieldEnum>;
  orderBy?: InputMaybe<CustomerOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CustomerWhereInput>;
};


export type WebsiteGroupArgs = {
  cursor?: InputMaybe<GroupWhereUniqueInput>;
  distinct?: InputMaybe<GroupScalarFieldEnum>;
  orderBy?: InputMaybe<GroupOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<GroupWhereInput>;
};


export type WebsiteNotificationsArgs = {
  cursor?: InputMaybe<NotificationWhereUniqueInput>;
  distinct?: InputMaybe<NotificationScalarFieldEnum>;
  orderBy?: InputMaybe<NotificationOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<NotificationWhereInput>;
};


export type WebsiteOrderedProductsArgs = {
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  distinct?: InputMaybe<OrderedProductScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type WebsiteOrdersArgs = {
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  distinct?: InputMaybe<OrderScalarFieldEnum>;
  orderBy?: InputMaybe<OrderOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderWhereInput>;
};


export type WebsitePageCollectionsArgs = {
  cursor?: InputMaybe<PageCollectionWhereUniqueInput>;
  distinct?: InputMaybe<PageCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<PageCollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageCollectionWhereInput>;
};


export type WebsitePagesArgs = {
  cursor?: InputMaybe<PageWhereUniqueInput>;
  distinct?: InputMaybe<PageScalarFieldEnum>;
  orderBy?: InputMaybe<PageOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageWhereInput>;
};


export type WebsiteProductCollectionsArgs = {
  cursor?: InputMaybe<ProductCollectionWhereUniqueInput>;
  distinct?: InputMaybe<ProductCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<ProductCollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductCollectionWhereInput>;
};


export type WebsiteProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type WebsiteShippingsArgs = {
  cursor?: InputMaybe<ShippingWhereUniqueInput>;
  distinct?: InputMaybe<ShippingScalarFieldEnum>;
  orderBy?: InputMaybe<ShippingOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ShippingWhereInput>;
};


export type WebsiteSocialsArgs = {
  cursor?: InputMaybe<SocialWhereUniqueInput>;
  distinct?: InputMaybe<SocialScalarFieldEnum>;
  orderBy?: InputMaybe<SocialOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<SocialWhereInput>;
};


export type WebsiteTaxesArgs = {
  cursor?: InputMaybe<TaxWhereUniqueInput>;
  distinct?: InputMaybe<TaxScalarFieldEnum>;
  orderBy?: InputMaybe<TaxOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TaxWhereInput>;
};


export type WebsiteWithdrawsArgs = {
  cursor?: InputMaybe<WithdrawWhereUniqueInput>;
  distinct?: InputMaybe<WithdrawScalarFieldEnum>;
  orderBy?: InputMaybe<WithdrawOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<WithdrawWhereInput>;
};

export type WebsiteCountOutputType = {
  __typename?: 'WebsiteCountOutputType';
  attachments: Scalars['Int'];
  attributes: Scalars['Int'];
  categories: Scalars['Int'];
  collections: Scalars['Int'];
  coupons: Scalars['Int'];
  customers: Scalars['Int'];
  Group: Scalars['Int'];
  notifications: Scalars['Int'];
  orderedProducts: Scalars['Int'];
  orders: Scalars['Int'];
  pageCollections: Scalars['Int'];
  pages: Scalars['Int'];
  productCollections: Scalars['Int'];
  products: Scalars['Int'];
  shippings: Scalars['Int'];
  socials: Scalars['Int'];
  taxes: Scalars['Int'];
  withdraws: Scalars['Int'];
};

export enum AttributeScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Name = 'name',
  Slug = 'slug',
  UpdatedAt = 'updatedAt',
  Values = 'values',
  WebsiteId = 'websiteId'
}

export type Attribute = {
  __typename?: 'Attribute';
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  name: Scalars['String'];
  slug?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  values: Array<Scalars['Json']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};

export enum CategoryScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Details = 'details',
  Icon = 'icon',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  ParentId = 'parentId',
  Slug = 'slug',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type Category = {
  __typename?: 'Category';
  _count: CategoryCountOutputType;
  children: Array<Category>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  details?: Maybe<Scalars['String']>;
  icon?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  links: Array<Link>;
  name?: Maybe<Scalars['String']>;
  pages: Array<Page>;
  parent?: Maybe<Category>;
  parentId?: Maybe<Scalars['String']>;
  products: Array<Product>;
  slug?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type CategoryChildrenArgs = {
  cursor?: InputMaybe<CategoryWhereUniqueInput>;
  distinct?: InputMaybe<CategoryScalarFieldEnum>;
  orderBy?: InputMaybe<CategoryOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CategoryWhereInput>;
};


export type CategoryLinksArgs = {
  cursor?: InputMaybe<LinkWhereUniqueInput>;
  distinct?: InputMaybe<LinkScalarFieldEnum>;
  orderBy?: InputMaybe<LinkOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LinkWhereInput>;
};


export type CategoryPagesArgs = {
  cursor?: InputMaybe<PageWhereUniqueInput>;
  distinct?: InputMaybe<PageScalarFieldEnum>;
  orderBy?: InputMaybe<PageOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageWhereInput>;
};


export type CategoryProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type CategoryCountOutputType = {
  __typename?: 'CategoryCountOutputType';
  children: Scalars['Int'];
  links: Scalars['Int'];
  pages: Scalars['Int'];
  products: Scalars['Int'];
};

export enum LinkScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenMessage = 'hiddenMessage',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  Slug = 'slug',
  UpdatedAt = 'updatedAt',
  Url = 'url',
  UserId = 'userId'
}

export type Link = {
  __typename?: 'Link';
  _count: LinkCountOutputType;
  categories: Array<Category>;
  collections: Array<Collection>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  hiddenMessage?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedLinks: Array<OrderedLink>;
  products: Array<Product>;
  slug?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  url: Scalars['String'];
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
};


export type LinkCategoriesArgs = {
  cursor?: InputMaybe<CategoryWhereUniqueInput>;
  distinct?: InputMaybe<CategoryScalarFieldEnum>;
  orderBy?: InputMaybe<CategoryOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CategoryWhereInput>;
};


export type LinkCollectionsArgs = {
  cursor?: InputMaybe<CollectionWhereUniqueInput>;
  distinct?: InputMaybe<CollectionScalarFieldEnum>;
  orderBy?: InputMaybe<CollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CollectionWhereInput>;
};


export type LinkOrderedLinksArgs = {
  cursor?: InputMaybe<OrderedLinkWhereUniqueInput>;
  distinct?: InputMaybe<OrderedLinkScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedLinkOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedLinkWhereInput>;
};


export type LinkProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type LinkCountOutputType = {
  __typename?: 'LinkCountOutputType';
  categories: Scalars['Int'];
  collections: Scalars['Int'];
  orderedLinks: Scalars['Int'];
  products: Scalars['Int'];
};

export enum CollectionScalarFieldEnum {
  CollectionStyle = 'collectionStyle',
  CollectionType = 'collectionType',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  DisplayTitle = 'displayTitle',
  Id = 'id',
  Name = 'name',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type Collection = {
  __typename?: 'Collection';
  _count: CollectionCountOutputType;
  collectionStyle?: Maybe<CollectionStyle>;
  collectionType?: Maybe<CollectionType>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id: Scalars['String'];
  items: Array<Item>;
  links: Array<Link>;
  name: Scalars['String'];
  pages: Array<Page>;
  products: Array<Product>;
  requests: Array<Request>;
  updatedAt: Scalars['DateTime'];
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type CollectionItemsArgs = {
  cursor?: InputMaybe<ItemWhereUniqueInput>;
  distinct?: InputMaybe<ItemScalarFieldEnum>;
  orderBy?: InputMaybe<ItemOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ItemWhereInput>;
};


export type CollectionLinksArgs = {
  cursor?: InputMaybe<LinkWhereUniqueInput>;
  distinct?: InputMaybe<LinkScalarFieldEnum>;
  orderBy?: InputMaybe<LinkOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LinkWhereInput>;
};


export type CollectionPagesArgs = {
  cursor?: InputMaybe<PageWhereUniqueInput>;
  distinct?: InputMaybe<PageScalarFieldEnum>;
  orderBy?: InputMaybe<PageOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageWhereInput>;
};


export type CollectionProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type CollectionRequestsArgs = {
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  distinct?: InputMaybe<RequestScalarFieldEnum>;
  orderBy?: InputMaybe<RequestOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestWhereInput>;
};

export type CollectionCountOutputType = {
  __typename?: 'CollectionCountOutputType';
  items: Scalars['Int'];
  links: Scalars['Int'];
  pages: Scalars['Int'];
  products: Scalars['Int'];
  requests: Scalars['Int'];
};

export enum ItemScalarFieldEnum {
  BlockId = 'blockId',
  CollectionId = 'collectionId',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  EmbedId = 'embedId',
  Id = 'id',
  ItemType = 'itemType',
  Name = 'name',
  PageId = 'pageId',
  UpdatedAt = 'updatedAt'
}

export type Item = {
  __typename?: 'Item';
  block?: Maybe<Block>;
  blockId?: Maybe<Scalars['String']>;
  collection?: Maybe<Collection>;
  collectionId?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  embed?: Maybe<Embed>;
  embedId?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  itemType: ItemType;
  name?: Maybe<Scalars['String']>;
  page?: Maybe<Page>;
  pageId?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
};

export type Block = {
  __typename?: 'Block';
  _count: BlockCountOutputType;
  content?: Maybe<Scalars['Json']>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  favourite?: Maybe<Scalars['Boolean']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  items: Array<Item>;
  name: Scalars['String'];
  products: Array<Product>;
  slug?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
};


export type BlockItemsArgs = {
  cursor?: InputMaybe<ItemWhereUniqueInput>;
  distinct?: InputMaybe<ItemScalarFieldEnum>;
  orderBy?: InputMaybe<ItemOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ItemWhereInput>;
};


export type BlockProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type BlockCountOutputType = {
  __typename?: 'BlockCountOutputType';
  items: Scalars['Int'];
  products: Scalars['Int'];
};

export enum ProductScalarFieldEnum {
  Active = 'active',
  Content = 'content',
  CreatedAt = 'createdAt',
  CreatorEarnings = 'creatorEarnings',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EditionAddress = 'editionAddress',
  EditionMinted = 'editionMinted',
  EditionSize = 'editionSize',
  EditionType = 'editionType',
  ExternalNftChain = 'externalNftChain',
  ExternalNftContractAddress = 'externalNftContractAddress',
  ExternalUrl = 'externalUrl',
  Gallery = 'gallery',
  Height = 'height',
  Id = 'id',
  ImageObj = 'imageObj',
  InStock = 'inStock',
  IsExternalNft = 'isExternalNft',
  Length = 'length',
  Name = 'name',
  Price = 'price',
  ProductType = 'productType',
  Quantity = 'quantity',
  SalePrice = 'sale_price',
  Sku = 'sku',
  Slug = 'slug',
  StorageSize = 'storageSize',
  TaxCode = 'tax_code',
  TransactionHash = 'transactionHash',
  TypeId = 'typeId',
  Unit = 'unit',
  UpdatedAt = 'updatedAt',
  VariationOptions = 'variation_options',
  Variations = 'variations',
  WebsiteId = 'websiteId',
  Width = 'width'
}

export type Product = {
  __typename?: 'Product';
  _count: ProductCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  audios: Array<Audio>;
  blocks: Array<Block>;
  categories: Array<Category>;
  collections: Array<Collection>;
  content?: Maybe<Scalars['Json']>;
  createdAt: Scalars['DateTime'];
  creatorEarnings: Scalars['Int'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  documents: Array<Document>;
  editionAddress?: Maybe<Scalars['String']>;
  editionMinted?: Maybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: Maybe<EditionType>;
  externalNftChain?: Maybe<Chain>;
  externalNftContractAddress?: Maybe<Scalars['String']>;
  externalUrl?: Maybe<Scalars['String']>;
  gallery: Array<Scalars['Json']>;
  height?: Maybe<Scalars['Float']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  inStock?: Maybe<Scalars['Boolean']>;
  isExternalNft?: Maybe<Scalars['Boolean']>;
  length?: Maybe<Scalars['Float']>;
  links: Array<Link>;
  name: Scalars['String'];
  orderedProducts: Array<OrderedProduct>;
  pictures: Array<Picture>;
  price: Scalars['Float'];
  productCollections: Array<ProductCollection>;
  productType?: Maybe<ProductType>;
  quantity?: Maybe<Scalars['Int']>;
  redeemables: Array<Redeemable>;
  sale_price?: Maybe<Scalars['Float']>;
  sku?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  storageSize?: Maybe<Scalars['Int']>;
  tags: Array<Tag>;
  tax_code?: Maybe<Scalars['String']>;
  traits: Array<Trait>;
  transactionHash?: Maybe<Scalars['String']>;
  type?: Maybe<Type>;
  typeId?: Maybe<Scalars['String']>;
  unit?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  variation_options: Array<Scalars['Json']>;
  variations: Array<Scalars['Json']>;
  videos: Array<Video>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
  width?: Maybe<Scalars['Float']>;
};


export type ProductAudiosArgs = {
  cursor?: InputMaybe<AudioWhereUniqueInput>;
  distinct?: InputMaybe<AudioScalarFieldEnum>;
  orderBy?: InputMaybe<AudioOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<AudioWhereInput>;
};


export type ProductBlocksArgs = {
  cursor?: InputMaybe<BlockWhereUniqueInput>;
  distinct?: InputMaybe<BlockScalarFieldEnum>;
  orderBy?: InputMaybe<BlockOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<BlockWhereInput>;
};


export type ProductCategoriesArgs = {
  cursor?: InputMaybe<CategoryWhereUniqueInput>;
  distinct?: InputMaybe<CategoryScalarFieldEnum>;
  orderBy?: InputMaybe<CategoryOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CategoryWhereInput>;
};


export type ProductCollectionsArgs = {
  cursor?: InputMaybe<CollectionWhereUniqueInput>;
  distinct?: InputMaybe<CollectionScalarFieldEnum>;
  orderBy?: InputMaybe<CollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CollectionWhereInput>;
};


export type ProductDocumentsArgs = {
  cursor?: InputMaybe<DocumentWhereUniqueInput>;
  distinct?: InputMaybe<DocumentScalarFieldEnum>;
  orderBy?: InputMaybe<DocumentOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<DocumentWhereInput>;
};


export type ProductLinksArgs = {
  cursor?: InputMaybe<LinkWhereUniqueInput>;
  distinct?: InputMaybe<LinkScalarFieldEnum>;
  orderBy?: InputMaybe<LinkOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<LinkWhereInput>;
};


export type ProductOrderedProductsArgs = {
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  distinct?: InputMaybe<OrderedProductScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type ProductPicturesArgs = {
  cursor?: InputMaybe<PictureWhereUniqueInput>;
  distinct?: InputMaybe<PictureScalarFieldEnum>;
  orderBy?: InputMaybe<PictureOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PictureWhereInput>;
};


export type ProductProductCollectionsArgs = {
  cursor?: InputMaybe<ProductCollectionWhereUniqueInput>;
  distinct?: InputMaybe<ProductCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<ProductCollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductCollectionWhereInput>;
};


export type ProductRedeemablesArgs = {
  cursor?: InputMaybe<RedeemableWhereUniqueInput>;
  distinct?: InputMaybe<RedeemableScalarFieldEnum>;
  orderBy?: InputMaybe<RedeemableOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RedeemableWhereInput>;
};


export type ProductTagsArgs = {
  cursor?: InputMaybe<TagWhereUniqueInput>;
  distinct?: InputMaybe<TagScalarFieldEnum>;
  orderBy?: InputMaybe<TagOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TagWhereInput>;
};


export type ProductTraitsArgs = {
  cursor?: InputMaybe<TraitWhereUniqueInput>;
  distinct?: InputMaybe<TraitScalarFieldEnum>;
  orderBy?: InputMaybe<TraitOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TraitWhereInput>;
};


export type ProductVideosArgs = {
  cursor?: InputMaybe<VideoWhereUniqueInput>;
  distinct?: InputMaybe<VideoScalarFieldEnum>;
  orderBy?: InputMaybe<VideoOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<VideoWhereInput>;
};

export type ProductCountOutputType = {
  __typename?: 'ProductCountOutputType';
  audios: Scalars['Int'];
  blocks: Scalars['Int'];
  categories: Scalars['Int'];
  collections: Scalars['Int'];
  documents: Scalars['Int'];
  links: Scalars['Int'];
  orderedProducts: Scalars['Int'];
  pictures: Scalars['Int'];
  productCollections: Scalars['Int'];
  redeemables: Scalars['Int'];
  tags: Scalars['Int'];
  traits: Scalars['Int'];
  videos: Scalars['Int'];
};

export enum BlockScalarFieldEnum {
  Content = 'content',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Favourite = 'favourite',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  Slug = 'slug',
  UpdatedAt = 'updatedAt',
  UserId = 'userId'
}

export enum DocumentScalarFieldEnum {
  Content = 'content',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  DocumentObj = 'documentObj',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  Paid = 'paid',
  Slug = 'slug',
  TransactionHash = 'transactionHash',
  UpdatedAt = 'updatedAt',
  UserId = 'userId',
  WalletAddress = 'walletAddress'
}

export type Document = {
  __typename?: 'Document';
  _count: DocumentCountOutputType;
  content?: Maybe<Scalars['Json']>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  documentObj?: Maybe<Scalars['Json']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedDocuments: Array<OrderedDocument>;
  paid?: Maybe<Scalars['Boolean']>;
  products: Array<Product>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};


export type DocumentOrderedDocumentsArgs = {
  cursor?: InputMaybe<OrderedDocumentWhereUniqueInput>;
  distinct?: InputMaybe<OrderedDocumentScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedDocumentOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedDocumentWhereInput>;
};


export type DocumentProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type DocumentCountOutputType = {
  __typename?: 'DocumentCountOutputType';
  orderedDocuments: Scalars['Int'];
  products: Scalars['Int'];
};

export enum OrderedDocumentScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  DocumentId = 'documentId',
  DocumentObj = 'documentObj',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  OrderedProductId = 'orderedProductId',
  UpdatedAt = 'updatedAt',
  Url = 'url'
}

export type OrderedDocument = {
  __typename?: 'OrderedDocument';
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  document?: Maybe<Document>;
  documentId?: Maybe<Scalars['String']>;
  documentObj?: Maybe<Scalars['Json']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProduct?: Maybe<OrderedProduct>;
  orderedProductId?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  url?: Maybe<Scalars['String']>;
};

export enum OrderedProductScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  ImageObj = 'imageObj',
  ItemTotal = 'itemTotal',
  Minted = 'minted',
  Name = 'name',
  OrderId = 'orderId',
  OrderNumber = 'orderNumber',
  Price = 'price',
  ProductId = 'productId',
  ProductSlug = 'productSlug',
  ProductType = 'productType',
  Quantity = 'quantity',
  RefundId = 'refundId',
  Slug = 'slug',
  TransactionHash = 'transactionHash',
  UpdatedAt = 'updatedAt',
  Url = 'url',
  VariationId = 'variationId',
  WalletAddress = 'walletAddress',
  WebsiteId = 'websiteId'
}

export enum PictureScalarFieldEnum {
  Content = 'content',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  Paid = 'paid',
  Slug = 'slug',
  TransactionHash = 'transactionHash',
  UpdatedAt = 'updatedAt',
  UserId = 'userId',
  WalletAddress = 'walletAddress'
}

export type Picture = {
  __typename?: 'Picture';
  _count: PictureCountOutputType;
  content?: Maybe<Scalars['Json']>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedPictures: Array<OrderedPicture>;
  paid?: Maybe<Scalars['Boolean']>;
  products: Array<Product>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};


export type PictureOrderedPicturesArgs = {
  cursor?: InputMaybe<OrderedPictureWhereUniqueInput>;
  distinct?: InputMaybe<OrderedPictureScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedPictureOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedPictureWhereInput>;
};


export type PictureProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type PictureCountOutputType = {
  __typename?: 'PictureCountOutputType';
  orderedPictures: Scalars['Int'];
  products: Scalars['Int'];
};

export enum OrderedPictureScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  OrderedProductId = 'orderedProductId',
  PictureId = 'pictureId',
  UpdatedAt = 'updatedAt',
  Url = 'url'
}

export type OrderedPicture = {
  __typename?: 'OrderedPicture';
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProduct?: Maybe<OrderedProduct>;
  orderedProductId?: Maybe<Scalars['String']>;
  picture?: Maybe<Picture>;
  pictureId?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  url?: Maybe<Scalars['String']>;
};

export enum ProductCollectionScalarFieldEnum {
  Active = 'active',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  DisplayTitle = 'displayTitle',
  Id = 'id',
  Name = 'name',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type ProductCollection = {
  __typename?: 'ProductCollection';
  _count: ProductCollectionCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id: Scalars['String'];
  name: Scalars['String'];
  products: Array<Product>;
  updatedAt: Scalars['DateTime'];
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type ProductCollectionProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type ProductCollectionCountOutputType = {
  __typename?: 'ProductCollectionCountOutputType';
  products: Scalars['Int'];
};

export enum RedeemableScalarFieldEnum {
  Content = 'content',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  Paid = 'paid',
  PerLimit = 'perLimit',
  Quantity = 'quantity',
  RedeemInfo = 'redeemInfo',
  RedeemPassword = 'redeemPassword',
  Slug = 'slug',
  TransactionHash = 'transactionHash',
  UpdatedAt = 'updatedAt',
  UserId = 'userId',
  WalletAddress = 'walletAddress'
}

export type Redeemable = {
  __typename?: 'Redeemable';
  _count: RedeemableCountOutputType;
  content?: Maybe<Scalars['Json']>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedRedeemables: Array<OrderedRedeemable>;
  paid?: Maybe<Scalars['Boolean']>;
  perLimit: Scalars['Int'];
  products: Array<Product>;
  quantity: Scalars['Int'];
  redeemInfo?: Maybe<Scalars['Json']>;
  redeemPassword?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
};


export type RedeemableOrderedRedeemablesArgs = {
  cursor?: InputMaybe<OrderedRedeemableWhereUniqueInput>;
  distinct?: InputMaybe<OrderedRedeemableScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedRedeemableOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedRedeemableWhereInput>;
};


export type RedeemableProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type RedeemableCountOutputType = {
  __typename?: 'RedeemableCountOutputType';
  orderedRedeemables: Scalars['Int'];
  products: Scalars['Int'];
};

export enum OrderedRedeemableScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  OrderedProductId = 'orderedProductId',
  PerLimit = 'perLimit',
  Quantity = 'quantity',
  RedeemableId = 'redeemableId',
  RedeemInfo = 'redeemInfo',
  UpdatedAt = 'updatedAt',
  Url = 'url'
}

export type OrderedRedeemable = {
  __typename?: 'OrderedRedeemable';
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProduct?: Maybe<OrderedProduct>;
  orderedProductId?: Maybe<Scalars['String']>;
  perLimit?: Maybe<Scalars['Int']>;
  quantity?: Maybe<Scalars['Int']>;
  redeemable?: Maybe<Redeemable>;
  redeemableId?: Maybe<Scalars['String']>;
  redeemInfo?: Maybe<Scalars['Json']>;
  updatedAt: Scalars['DateTime'];
  url?: Maybe<Scalars['String']>;
};

export enum TagScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Icon = 'icon',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  Slug = 'slug',
  TypeId = 'typeId',
  UpdatedAt = 'updatedAt'
}

export type Tag = {
  __typename?: 'Tag';
  _count: TagCountOutputType;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  icon?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name: Scalars['String'];
  products: Array<Product>;
  slug?: Maybe<Scalars['String']>;
  type?: Maybe<Type>;
  typeId?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
};


export type TagProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type TagCountOutputType = {
  __typename?: 'TagCountOutputType';
  products: Scalars['Int'];
};

export type Type = {
  __typename?: 'Type';
  _count: TypeCountOutputType;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  name: Scalars['String'];
  products: Array<Product>;
  slug?: Maybe<Scalars['String']>;
  tags: Array<Tag>;
  updatedAt: Scalars['DateTime'];
};


export type TypeProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};


export type TypeTagsArgs = {
  cursor?: InputMaybe<TagWhereUniqueInput>;
  distinct?: InputMaybe<TagScalarFieldEnum>;
  orderBy?: InputMaybe<TagOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<TagWhereInput>;
};

export type TypeCountOutputType = {
  __typename?: 'TypeCountOutputType';
  products: Scalars['Int'];
  tags: Scalars['Int'];
};

export enum TraitScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Name = 'name',
  ProductId = 'productId',
  UpdatedAt = 'updatedAt'
}

export type Trait = {
  __typename?: 'Trait';
  _count: TraitCountOutputType;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  name?: Maybe<Scalars['String']>;
  product?: Maybe<Product>;
  productId?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  values: Array<Value>;
};


export type TraitValuesArgs = {
  cursor?: InputMaybe<ValueWhereUniqueInput>;
  distinct?: InputMaybe<ValueScalarFieldEnum>;
  orderBy?: InputMaybe<ValueOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ValueWhereInput>;
};

export type TraitCountOutputType = {
  __typename?: 'TraitCountOutputType';
  values: Scalars['Int'];
};

export enum ValueScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  Percentage = 'percentage',
  TraitId = 'traitId',
  UpdatedAt = 'updatedAt'
}

export type Value = {
  __typename?: 'Value';
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name?: Maybe<Scalars['String']>;
  percentage?: Maybe<Scalars['Float']>;
  trait?: Maybe<Trait>;
  traitId?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
};

export enum VideoScalarFieldEnum {
  Content = 'content',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  Paid = 'paid',
  Slug = 'slug',
  TransactionHash = 'transactionHash',
  UpdatedAt = 'updatedAt',
  UserId = 'userId',
  VideoObj = 'videoObj',
  WalletAddress = 'walletAddress'
}

export type Video = {
  __typename?: 'Video';
  _count: VideoCountOutputType;
  content?: Maybe<Scalars['Json']>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedVideos: Array<OrderedVideo>;
  paid?: Maybe<Scalars['Boolean']>;
  products: Array<Product>;
  slug?: Maybe<Scalars['String']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
  videoObj?: Maybe<Scalars['Json']>;
  walletAddress?: Maybe<Scalars['String']>;
};


export type VideoOrderedVideosArgs = {
  cursor?: InputMaybe<OrderedVideoWhereUniqueInput>;
  distinct?: InputMaybe<OrderedVideoScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedVideoOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedVideoWhereInput>;
};


export type VideoProductsArgs = {
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  distinct?: InputMaybe<ProductScalarFieldEnum>;
  orderBy?: InputMaybe<ProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ProductWhereInput>;
};

export type VideoCountOutputType = {
  __typename?: 'VideoCountOutputType';
  orderedVideos: Scalars['Int'];
  products: Scalars['Int'];
};

export enum OrderedVideoScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  OrderedProductId = 'orderedProductId',
  UpdatedAt = 'updatedAt',
  Url = 'url',
  VideoId = 'videoId',
  VideoObj = 'videoObj'
}

export type OrderedVideo = {
  __typename?: 'OrderedVideo';
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProduct?: Maybe<OrderedProduct>;
  orderedProductId?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  url?: Maybe<Scalars['String']>;
  video?: Maybe<Video>;
  videoId?: Maybe<Scalars['String']>;
  videoObj?: Maybe<Scalars['Json']>;
};

export type Embed = {
  __typename?: 'Embed';
  _count: EmbedCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  embedCode?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  items: Array<Item>;
  name: Scalars['String'];
  slug?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
};


export type EmbedItemsArgs = {
  cursor?: InputMaybe<ItemWhereUniqueInput>;
  distinct?: InputMaybe<ItemScalarFieldEnum>;
  orderBy?: InputMaybe<ItemOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ItemWhereInput>;
};

export type EmbedCountOutputType = {
  __typename?: 'EmbedCountOutputType';
  items: Scalars['Int'];
};

export type Page = {
  __typename?: 'Page';
  _count: PageCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  categories: Array<Category>;
  collections: Array<Collection>;
  content?: Maybe<Scalars['Json']>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  isIndex?: Maybe<Scalars['Boolean']>;
  itemIds: Array<Scalars['String']>;
  items: Array<Item>;
  menu?: Maybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: Maybe<NavColor>;
  pageCollections: Array<PageCollection>;
  pageViews: Array<PageView>;
  requestClicks: Array<RequestClick>;
  requests: Array<Request>;
  slug?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type PageCategoriesArgs = {
  cursor?: InputMaybe<CategoryWhereUniqueInput>;
  distinct?: InputMaybe<CategoryScalarFieldEnum>;
  orderBy?: InputMaybe<CategoryOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CategoryWhereInput>;
};


export type PageCollectionsArgs = {
  cursor?: InputMaybe<CollectionWhereUniqueInput>;
  distinct?: InputMaybe<CollectionScalarFieldEnum>;
  orderBy?: InputMaybe<CollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<CollectionWhereInput>;
};


export type PageItemsArgs = {
  cursor?: InputMaybe<ItemWhereUniqueInput>;
  distinct?: InputMaybe<ItemScalarFieldEnum>;
  orderBy?: InputMaybe<ItemOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<ItemWhereInput>;
};


export type PagePageCollectionsArgs = {
  cursor?: InputMaybe<PageCollectionWhereUniqueInput>;
  distinct?: InputMaybe<PageCollectionScalarFieldEnum>;
  orderBy?: InputMaybe<PageCollectionOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageCollectionWhereInput>;
};


export type PagePageViewsArgs = {
  cursor?: InputMaybe<PageViewWhereUniqueInput>;
  distinct?: InputMaybe<PageViewScalarFieldEnum>;
  orderBy?: InputMaybe<PageViewOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageViewWhereInput>;
};


export type PageRequestClicksArgs = {
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  distinct?: InputMaybe<RequestClickScalarFieldEnum>;
  orderBy?: InputMaybe<RequestClickOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestClickWhereInput>;
};


export type PageRequestsArgs = {
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  distinct?: InputMaybe<RequestScalarFieldEnum>;
  orderBy?: InputMaybe<RequestOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestWhereInput>;
};

export type PageCountOutputType = {
  __typename?: 'PageCountOutputType';
  categories: Scalars['Int'];
  collections: Scalars['Int'];
  items: Scalars['Int'];
  pageCollections: Scalars['Int'];
  pageViews: Scalars['Int'];
  requestClicks: Scalars['Int'];
  requests: Scalars['Int'];
};

export enum PageCollectionScalarFieldEnum {
  Active = 'active',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  DisplayTitle = 'displayTitle',
  Id = 'id',
  Name = 'name',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type PageCollection = {
  __typename?: 'PageCollection';
  _count: PageCollectionCountOutputType;
  active?: Maybe<Scalars['Boolean']>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  displayTitle?: Maybe<Scalars['Boolean']>;
  id: Scalars['String'];
  name: Scalars['String'];
  pages: Array<Page>;
  updatedAt: Scalars['DateTime'];
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type PageCollectionPagesArgs = {
  cursor?: InputMaybe<PageWhereUniqueInput>;
  distinct?: InputMaybe<PageScalarFieldEnum>;
  orderBy?: InputMaybe<PageOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<PageWhereInput>;
};

export type PageCollectionCountOutputType = {
  __typename?: 'PageCollectionCountOutputType';
  pages: Scalars['Int'];
};

export enum PageScalarFieldEnum {
  Active = 'active',
  Content = 'content',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  ImageObj = 'imageObj',
  IsIndex = 'isIndex',
  ItemIds = 'itemIds',
  Menu = 'menu',
  Name = 'name',
  NavColor = 'navColor',
  Slug = 'slug',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export enum PageViewScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Ip = 'ip',
  PageId = 'pageId',
  UpdatedAt = 'updatedAt'
}

export type PageView = {
  __typename?: 'PageView';
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  ip?: Maybe<Scalars['String']>;
  page?: Maybe<Page>;
  pageId?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
};

export enum RequestClickScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Ip = 'ip',
  PageId = 'pageId',
  UpdatedAt = 'updatedAt'
}

export type RequestClick = {
  __typename?: 'RequestClick';
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  ip?: Maybe<Scalars['String']>;
  page?: Maybe<Page>;
  pageId?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
};

export enum RequestScalarFieldEnum {
  Accept = 'accept',
  AcceptBefore = 'acceptBefore',
  Active = 'active',
  ApplicationFee = 'applicationFee',
  CollectionId = 'collectionId',
  CreatedAt = 'createdAt',
  CryptoCurrencyCode = 'cryptoCurrencyCode',
  CurrencyCode = 'currencyCode',
  CustomerId = 'customerId',
  Days = 'days',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  ExpiredAt = 'expiredAt',
  Id = 'id',
  ImageObj = 'imageObj',
  Message = 'message',
  Name = 'name',
  PageId = 'pageId',
  Paid = 'paid',
  PaidAt = 'paidAt',
  PaymentId = 'paymentId',
  Price = 'price',
  RequestAccept = 'requestAccept',
  RequestStatus = 'requestStatus',
  StripeSessionId = 'stripeSessionId',
  Subject = 'subject',
  Total = 'total',
  TransactionHash = 'transactionHash',
  UpdatedAt = 'updatedAt',
  Url = 'url',
  WalletAddress = 'walletAddress'
}

export type Request = {
  __typename?: 'Request';
  accept?: Maybe<Scalars['Boolean']>;
  acceptBefore?: Maybe<Scalars['DateTime']>;
  active?: Maybe<Scalars['Boolean']>;
  applicationFee?: Maybe<Scalars['Float']>;
  collection?: Maybe<Collection>;
  collectionId?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  cryptoCurrencyCode?: Maybe<CryptoCurrency>;
  currencyCode?: Maybe<CurrencyCode>;
  customer?: Maybe<Customer>;
  customerId?: Maybe<Scalars['String']>;
  days: Scalars['Int'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description: Scalars['String'];
  expiredAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  message: Scalars['String'];
  name: Scalars['String'];
  page?: Maybe<Page>;
  pageId?: Maybe<Scalars['String']>;
  paid?: Maybe<Scalars['Boolean']>;
  paidAt?: Maybe<Scalars['DateTime']>;
  paymentId?: Maybe<Scalars['String']>;
  price?: Maybe<Scalars['Float']>;
  requestAccept?: Maybe<RequestAccept>;
  requestStatus?: Maybe<RequestStatus>;
  stripeSessionId?: Maybe<Scalars['String']>;
  subject: Scalars['String'];
  total?: Maybe<Scalars['Float']>;
  transactionHash?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  url: Scalars['String'];
  walletAddress?: Maybe<Scalars['String']>;
};

export type Customer = {
  __typename?: 'Customer';
  _count: CustomerCountOutputType;
  age?: Maybe<Scalars['Int']>;
  city?: Maybe<Scalars['String']>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  email?: Maybe<Scalars['String']>;
  gender?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  isActive?: Maybe<Scalars['Boolean']>;
  latestSales?: Maybe<Scalars['Json']>;
  name?: Maybe<Scalars['String']>;
  note?: Maybe<Scalars['String']>;
  orders: Array<Order>;
  requests: Array<Request>;
  updatedAt: Scalars['DateTime'];
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
  walletAddress?: Maybe<Scalars['String']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};


export type CustomerOrdersArgs = {
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  distinct?: InputMaybe<OrderScalarFieldEnum>;
  orderBy?: InputMaybe<OrderOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderWhereInput>;
};


export type CustomerRequestsArgs = {
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  distinct?: InputMaybe<RequestScalarFieldEnum>;
  orderBy?: InputMaybe<RequestOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<RequestWhereInput>;
};

export type CustomerCountOutputType = {
  __typename?: 'CustomerCountOutputType';
  orders: Scalars['Int'];
  requests: Scalars['Int'];
};

export enum OrderedLinkScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  HiddenMessage = 'hiddenMessage',
  Id = 'id',
  ImageObj = 'imageObj',
  LinkId = 'linkId',
  Name = 'name',
  OrderedProductId = 'orderedProductId',
  UpdatedAt = 'updatedAt',
  Url = 'url'
}

export type OrderedLink = {
  __typename?: 'OrderedLink';
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  hiddenMessage?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  imageObj?: Maybe<Scalars['Json']>;
  link?: Maybe<Link>;
  linkId?: Maybe<Scalars['String']>;
  name?: Maybe<Scalars['String']>;
  orderedProduct?: Maybe<OrderedProduct>;
  orderedProductId?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  url: Scalars['String'];
};

export enum CouponScalarFieldEnum {
  Active = 'active',
  ActiveFrom = 'active_from',
  AmountOff = 'amount_off',
  Code = 'code',
  CouponType = 'couponType',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  ExpireAt = 'expire_at',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  PercentOff = 'percent_off',
  Type = 'type',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export enum CustomerScalarFieldEnum {
  Age = 'age',
  City = 'city',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Email = 'email',
  Gender = 'gender',
  Id = 'id',
  ImageObj = 'imageObj',
  IsActive = 'isActive',
  LatestSales = 'latestSales',
  Name = 'name',
  Note = 'note',
  UpdatedAt = 'updatedAt',
  UserId = 'userId',
  WalletAddress = 'walletAddress',
  WebsiteId = 'websiteId'
}

export enum GroupScalarFieldEnum {
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  WebsiteId = 'websiteId'
}

export type Group = {
  __typename?: 'Group';
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};

export enum NotificationScalarFieldEnum {
  Action = 'action',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  IsUnRead = 'isUnRead',
  Message = 'message',
  Model = 'model',
  ModelId = 'modelId',
  Title = 'title',
  UpdatedAt = 'updatedAt',
  Url = 'url',
  UserId = 'userId',
  WebsiteId = 'websiteId'
}

export type Notification = {
  __typename?: 'Notification';
  action?: Maybe<Scalars['String']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  isUnRead?: Maybe<Scalars['Boolean']>;
  message?: Maybe<Scalars['String']>;
  model?: Maybe<Scalars['String']>;
  modelId?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
  url?: Maybe<Scalars['String']>;
  user?: Maybe<User>;
  userId?: Maybe<Scalars['String']>;
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};

export enum ShippingScalarFieldEnum {
  Active = 'active',
  Amount = 'amount',
  CountryCode = 'countryCode',
  CreatedAt = 'createdAt',
  CurrencyCode = 'currencyCode',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  IsGlobal = 'isGlobal',
  Name = 'name',
  State = 'state',
  Type = 'type',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type Shipping = {
  __typename?: 'Shipping';
  active?: Maybe<Scalars['Boolean']>;
  amount: Scalars['Float'];
  countryCode?: Maybe<CountryCode>;
  createdAt: Scalars['DateTime'];
  currencyCode?: Maybe<CurrencyCode>;
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  isGlobal?: Maybe<Scalars['Boolean']>;
  name: Scalars['String'];
  state?: Maybe<Scalars['String']>;
  type?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};

export enum SocialScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  SocialType = 'socialType',
  UpdatedAt = 'updatedAt',
  Url = 'url',
  WebsiteId = 'websiteId'
}

export type Social = {
  __typename?: 'Social';
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  socialType: SocialType;
  updatedAt: Scalars['DateTime'];
  url: Scalars['String'];
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};

export enum TaxScalarFieldEnum {
  Active = 'active',
  City = 'city',
  Country = 'country',
  CountryCode = 'countryCode',
  CreatedAt = 'createdAt',
  CurrencyCode = 'currencyCode',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  Id = 'id',
  Inclusive = 'inclusive',
  IsGlobal = 'isGlobal',
  Jurisdiction = 'jurisdiction',
  Name = 'name',
  OnShipping = 'onShipping',
  Percentage = 'percentage',
  Priority = 'priority',
  State = 'state',
  StripePrivateTaxId = 'stripePrivateTaxId',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId',
  Zip = 'zip'
}

export type Tax = {
  __typename?: 'Tax';
  active?: Maybe<Scalars['Boolean']>;
  city?: Maybe<Scalars['String']>;
  country?: Maybe<Scalars['String']>;
  countryCode?: Maybe<CountryCode>;
  createdAt: Scalars['DateTime'];
  currencyCode?: Maybe<CurrencyCode>;
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  description?: Maybe<Scalars['String']>;
  id: Scalars['String'];
  inclusive: Scalars['Boolean'];
  isGlobal?: Maybe<Scalars['Boolean']>;
  jurisdiction?: Maybe<Scalars['String']>;
  name: Scalars['String'];
  onShipping?: Maybe<Scalars['Boolean']>;
  percentage: Scalars['Float'];
  priority?: Maybe<Scalars['Int']>;
  state?: Maybe<Scalars['String']>;
  stripePrivateTaxId?: Maybe<Scalars['String']>;
  updatedAt: Scalars['DateTime'];
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
  zip?: Maybe<Scalars['String']>;
};

export enum WithdrawScalarFieldEnum {
  Amount = 'amount',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Processed = 'processed',
  UpdatedAt = 'updatedAt',
  WebsiteId = 'websiteId'
}

export type Withdraw = {
  __typename?: 'Withdraw';
  amount: Scalars['Float'];
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  processed: Scalars['Boolean'];
  updatedAt: Scalars['DateTime'];
  website?: Maybe<Website>;
  websiteId?: Maybe<Scalars['String']>;
};

export enum RefundScalarFieldEnum {
  Accept = 'accept',
  Amount = 'amount',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  OrderId = 'orderId',
  Received = 'received',
  ShippingImages = 'shippingImages',
  UpdatedAt = 'updatedAt'
}

export type Refund = {
  __typename?: 'Refund';
  _count: RefundCountOutputType;
  accept?: Maybe<Scalars['Boolean']>;
  amount?: Maybe<Scalars['Float']>;
  createdAt: Scalars['DateTime'];
  deleted: Scalars['Boolean'];
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  order?: Maybe<Order>;
  orderedProducts: Array<OrderedProduct>;
  orderId?: Maybe<Scalars['String']>;
  received?: Maybe<Scalars['Boolean']>;
  shippingImages: Array<Scalars['Json']>;
  updatedAt: Scalars['DateTime'];
};


export type RefundOrderedProductsArgs = {
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  distinct?: InputMaybe<OrderedProductScalarFieldEnum>;
  orderBy?: InputMaybe<OrderedProductOrderByWithRelationInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
  where?: InputMaybe<OrderedProductWhereInput>;
};

export type RefundCountOutputType = {
  __typename?: 'RefundCountOutputType';
  orderedProducts: Scalars['Int'];
};

export enum EmbedScalarFieldEnum {
  Active = 'active',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  EmbedCode = 'embedCode',
  Id = 'id',
  Name = 'name',
  Slug = 'slug',
  UpdatedAt = 'updatedAt',
  UserId = 'userId'
}

export enum LoginTokenScalarFieldEnum {
  Approved = 'approved',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Domain = 'domain',
  Email = 'email',
  Expires = 'expires',
  Geo = 'geo',
  Id = 'id',
  Ip = 'ip',
  Secret = 'secret',
  UserAgent = 'userAgent',
  UserAgentRaw = 'userAgentRaw',
  UserId = 'userId'
}

export type LoginToken = {
  __typename?: 'LoginToken';
  approved: Scalars['Boolean'];
  createdAt: Scalars['DateTime'];
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  domain: Scalars['String'];
  email: Scalars['String'];
  expires: Scalars['DateTime'];
  geo: Scalars['String'];
  id: Scalars['String'];
  ip: Scalars['String'];
  secret: Scalars['String'];
  user: User;
  userAgent: Scalars['String'];
  userAgentRaw: Scalars['String'];
  userId: Scalars['String'];
};

export enum RefreshTokenScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Expires = 'expires',
  Geo = 'geo',
  Ip = 'ip',
  LastActive = 'lastActive',
  LoginTokenId = 'loginTokenId',
  UserAgent = 'userAgent',
  UserAgentRaw = 'userAgentRaw',
  UserId = 'userId',
  Value = 'value'
}

export type RefreshToken = {
  __typename?: 'RefreshToken';
  createdAt: Scalars['DateTime'];
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  expires: Scalars['DateTime'];
  geo: Scalars['String'];
  ip: Scalars['String'];
  lastActive: Scalars['DateTime'];
  loginTokenId: Scalars['String'];
  user: User;
  userAgent: Scalars['String'];
  userAgentRaw: Scalars['String'];
  userId: Scalars['String'];
  value: Scalars['String'];
};

export enum WebsiteScalarFieldEnum {
  Active = 'active',
  Address = 'address',
  AdminFilters = 'adminFilters',
  CanonicalUrl = 'canonicalUrl',
  Chain = 'chain',
  Contact = 'contact',
  CountryCode = 'countryCode',
  CreatedAt = 'createdAt',
  CryptoCurrencyCode = 'cryptoCurrencyCode',
  CurrencyCode = 'currencyCode',
  CurrentBalance = 'currentBalance',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Description = 'description',
  DiscordLink = 'discordLink',
  ExternalName = 'externalName',
  ExternalUrl = 'externalUrl',
  FacebookAppId = 'facebookAppId',
  FacebookIsEnable = 'facebookIsEnable',
  FacebookLink = 'facebookLink',
  FacebookPageId = 'facebookPageId',
  GoogleIsEnable = 'googleIsEnable',
  GoogleTagManagerId = 'googleTagManagerId',
  Id = 'id',
  ImageObj = 'imageObj',
  InstagramLink = 'instagramLink',
  LanguageCode = 'languageCode',
  Location = 'location',
  LogoObj = 'logoObj',
  Menu = 'menu',
  MetaTags = 'metaTags',
  Name = 'name',
  PageOrder = 'pageOrder',
  PaymentMethod = 'paymentMethod',
  Slug = 'slug',
  StripeAccountId = 'stripeAccountId',
  ThemeColor = 'themeColor',
  TikTokLink = 'tikTokLink',
  TotalEarnings = 'totalEarnings',
  TwitterCardType = 'twitterCardType',
  TwitterHandle = 'twitterHandle',
  TwitterLink = 'twitterLink',
  UpdatedAt = 'updatedAt',
  UserId = 'userId',
  WalletAddress = 'walletAddress',
  WebsiteUrl = 'websiteUrl',
  WithdrawnAmount = 'withdrawnAmount'
}

export enum SlugCounterScalarFieldEnum {
  Counter = 'counter',
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Model = 'model',
  Slug = 'slug',
  Title = 'title',
  UpdatedAt = 'updatedAt'
}

export type SlugCounter = {
  __typename?: 'SlugCounter';
  counter?: Maybe<Scalars['Int']>;
  createdAt?: Maybe<Scalars['DateTime']>;
  deleted?: Maybe<Scalars['Boolean']>;
  deletedAt?: Maybe<Scalars['DateTime']>;
  id: Scalars['String'];
  model?: Maybe<Scalars['String']>;
  slug?: Maybe<Scalars['String']>;
  title?: Maybe<Scalars['String']>;
  updatedAt?: Maybe<Scalars['DateTime']>;
};

export enum TypeScalarFieldEnum {
  CreatedAt = 'createdAt',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Id = 'id',
  Name = 'name',
  Slug = 'slug',
  UpdatedAt = 'updatedAt'
}

export enum UserScalarFieldEnum {
  CreatedAt = 'createdAt',
  CurrentBalance = 'currentBalance',
  Deleted = 'deleted',
  DeletedAt = 'deletedAt',
  Email = 'email',
  Id = 'id',
  ImageObj = 'imageObj',
  Name = 'name',
  Password = 'password',
  StripeAccountId = 'stripeAccountId',
  StripeCustomerId = 'stripeCustomerId',
  TotalEarnings = 'totalEarnings',
  WithdrawnAmount = 'withdrawnAmount'
}

export type Schema = {
  __typename?: 'Schema';
  enums: Array<Enum>;
  models: Array<Model>;
};

export type Enum = {
  __typename?: 'Enum';
  fields: Array<Scalars['String']>;
  name: Scalars['String'];
};

export type Model = {
  __typename?: 'Model';
  create: Scalars['Boolean'];
  delete: Scalars['Boolean'];
  displayFields: Array<Scalars['String']>;
  fields: Array<Field>;
  id: Scalars['String'];
  idField: Scalars['String'];
  name: Scalars['String'];
  update: Scalars['Boolean'];
};

export type Field = {
  __typename?: 'Field';
  create: Scalars['Boolean'];
  editor: Scalars['Boolean'];
  filter: Scalars['Boolean'];
  id: Scalars['String'];
  isId: Scalars['Boolean'];
  kind: KindEnum;
  list: Scalars['Boolean'];
  name: Scalars['String'];
  order: Scalars['Int'];
  read: Scalars['Boolean'];
  relationField?: Maybe<Scalars['Boolean']>;
  required: Scalars['Boolean'];
  sort: Scalars['Boolean'];
  title: Scalars['String'];
  type: Scalars['String'];
  unique: Scalars['Boolean'];
  update: Scalars['Boolean'];
  upload: Scalars['Boolean'];
};

export enum KindEnum {
  Enum = 'enum',
  Object = 'object',
  Scalar = 'scalar'
}

export type Mutation = {
  __typename?: 'Mutation';
  addCollection?: Maybe<Scalars['Json']>;
  addResource?: Maybe<Scalars['Json']>;
  addTemplate?: Maybe<Scalars['Json']>;
  adminMintNft?: Maybe<Order>;
  createCheckoutSession?: Maybe<Scalars['Json']>;
  createOneAttachment: Attachment;
  createOneAttribute: Attribute;
  createOneAudio: Audio;
  createOneBlock: Block;
  createOneCategory: Category;
  createOneCollection: Collection;
  createOneCoupon: Coupon;
  createOneCustomer: Customer;
  createOneDocument: Document;
  createOneEmbed: Embed;
  createOneGroup: Group;
  createOneItem: Item;
  createOneLink: Link;
  createOneLoginToken: LoginToken;
  createOneNotification: Notification;
  createOneOrder: Order;
  createOneOrderedAudio: OrderedAudio;
  createOneOrderedDocument: OrderedDocument;
  createOneOrderedLink: OrderedLink;
  createOneOrderedPicture: OrderedPicture;
  createOneOrderedProduct: OrderedProduct;
  createOneOrderedRedeemable: OrderedRedeemable;
  createOneOrderedVideo: OrderedVideo;
  createOnePage: Page;
  createOnePageCollection: PageCollection;
  createOnePageView: PageView;
  createOnePicture: Picture;
  createOneProduct: Product;
  createOneProductCollection: ProductCollection;
  createOneRedeemable: Redeemable;
  createOneRefreshToken: RefreshToken;
  createOneRefund: Refund;
  createOneRequest: Request;
  createOneRequestClick: RequestClick;
  createOneShipping: Shipping;
  createOneSlugCounter: SlugCounter;
  createOneSocial: Social;
  createOneTag: Tag;
  createOneTax: Tax;
  createOneTrait: Trait;
  createOneType: Type;
  createOneUser: User;
  createOneValue: Value;
  createOneVideo: Video;
  createOneWebsite: Website;
  createOneWithdraw: Withdraw;
  deleteManyAttachment: BatchPayload;
  deleteManyAttribute: BatchPayload;
  deleteManyAudio: BatchPayload;
  deleteManyBlock: BatchPayload;
  deleteManyCategory: BatchPayload;
  deleteManyCollection: BatchPayload;
  deleteManyCoupon: BatchPayload;
  deleteManyCustomer: BatchPayload;
  deleteManyDocument: BatchPayload;
  deleteManyEmbed: BatchPayload;
  deleteManyGroup: BatchPayload;
  deleteManyItem: BatchPayload;
  deleteManyLink: BatchPayload;
  deleteManyLoginToken: BatchPayload;
  deleteManyNotification: BatchPayload;
  deleteManyOrder: BatchPayload;
  deleteManyOrderedAudio: BatchPayload;
  deleteManyOrderedDocument: BatchPayload;
  deleteManyOrderedLink: BatchPayload;
  deleteManyOrderedPicture: BatchPayload;
  deleteManyOrderedProduct: BatchPayload;
  deleteManyOrderedRedeemable: BatchPayload;
  deleteManyOrderedVideo: BatchPayload;
  deleteManyPage: BatchPayload;
  deleteManyPageCollection: BatchPayload;
  deleteManyPageView: BatchPayload;
  deleteManyPicture: BatchPayload;
  deleteManyProduct: BatchPayload;
  deleteManyProductCollection: BatchPayload;
  deleteManyRedeemable: BatchPayload;
  deleteManyRefreshToken: BatchPayload;
  deleteManyRefund: BatchPayload;
  deleteManyRequest: BatchPayload;
  deleteManyRequestClick: BatchPayload;
  deleteManyShipping: BatchPayload;
  deleteManySlugCounter: BatchPayload;
  deleteManySocial: BatchPayload;
  deleteManyTag: BatchPayload;
  deleteManyTax: BatchPayload;
  deleteManyTrait: BatchPayload;
  deleteManyType: BatchPayload;
  deleteManyUser: BatchPayload;
  deleteManyValue: BatchPayload;
  deleteManyVideo: BatchPayload;
  deleteManyWebsite: BatchPayload;
  deleteManyWithdraw: BatchPayload;
  deleteOneAttachment?: Maybe<Attachment>;
  deleteOneAttribute?: Maybe<Attribute>;
  deleteOneAudio?: Maybe<Audio>;
  deleteOneBlock?: Maybe<Block>;
  deleteOneCategory?: Maybe<Category>;
  deleteOneCollection?: Maybe<Collection>;
  deleteOneCoupon?: Maybe<Coupon>;
  deleteOneCustomer?: Maybe<Customer>;
  deleteOneDocument?: Maybe<Document>;
  deleteOneEmbed?: Maybe<Embed>;
  deleteOneGroup?: Maybe<Group>;
  deleteOneItem?: Maybe<Item>;
  deleteOneLink?: Maybe<Link>;
  deleteOneLoginToken?: Maybe<LoginToken>;
  deleteOneNotification?: Maybe<Notification>;
  deleteOneOrder?: Maybe<Order>;
  deleteOneOrderedAudio?: Maybe<OrderedAudio>;
  deleteOneOrderedDocument?: Maybe<OrderedDocument>;
  deleteOneOrderedLink?: Maybe<OrderedLink>;
  deleteOneOrderedPicture?: Maybe<OrderedPicture>;
  deleteOneOrderedProduct?: Maybe<OrderedProduct>;
  deleteOneOrderedRedeemable?: Maybe<OrderedRedeemable>;
  deleteOneOrderedVideo?: Maybe<OrderedVideo>;
  deleteOnePage?: Maybe<Page>;
  deleteOnePageCollection?: Maybe<PageCollection>;
  deleteOnePageView?: Maybe<PageView>;
  deleteOnePicture?: Maybe<Picture>;
  deleteOneProduct?: Maybe<Product>;
  deleteOneProductCollection?: Maybe<ProductCollection>;
  deleteOneRedeemable?: Maybe<Redeemable>;
  deleteOneRefreshToken?: Maybe<RefreshToken>;
  deleteOneRefund?: Maybe<Refund>;
  deleteOneRequest?: Maybe<Request>;
  deleteOneRequestClick?: Maybe<RequestClick>;
  deleteOneShipping?: Maybe<Shipping>;
  deleteOneSlugCounter?: Maybe<SlugCounter>;
  deleteOneSocial?: Maybe<Social>;
  deleteOneTag?: Maybe<Tag>;
  deleteOneTax?: Maybe<Tax>;
  deleteOneTrait?: Maybe<Trait>;
  deleteOneType?: Maybe<Type>;
  deleteOneUser?: Maybe<User>;
  deleteOneValue?: Maybe<Value>;
  deleteOneVideo?: Maybe<Video>;
  deleteOneWebsite?: Maybe<Website>;
  deleteOneWithdraw?: Maybe<Withdraw>;
  enterAdmin?: Maybe<Scalars['Json']>;
  getAnalytics?: Maybe<Scalars['Json']>;
  getMetadata?: Maybe<Scalars['Json']>;
  login?: Maybe<User>;
  logout?: Maybe<Scalars['Boolean']>;
  logoutAdmin?: Maybe<Scalars['Json']>;
  payProduct?: Maybe<Order>;
  preparePurchase?: Maybe<Order>;
  prepareRequest?: Maybe<Scalars['Json']>;
  prepareStripePurchase?: Maybe<Scalars['Json']>;
  serverMint?: Maybe<Scalars['Json']>;
  signup?: Maybe<User>;
  signUploadUrl?: Maybe<Scalars['String']>;
  stripeCheckout?: Maybe<Scalars['Json']>;
  updateAdminSettingsField?: Maybe<Field>;
  updateAdminSettingsModel?: Maybe<Model>;
  updateField: Field;
  updateManyAttachment: BatchPayload;
  updateManyAttribute: BatchPayload;
  updateManyAudio: BatchPayload;
  updateManyBlock: BatchPayload;
  updateManyCategory: BatchPayload;
  updateManyCollection: BatchPayload;
  updateManyCoupon: BatchPayload;
  updateManyCustomer: BatchPayload;
  updateManyDocument: BatchPayload;
  updateManyEmbed: BatchPayload;
  updateManyGroup: BatchPayload;
  updateManyItem: BatchPayload;
  updateManyLink: BatchPayload;
  updateManyLoginToken: BatchPayload;
  updateManyNotification: BatchPayload;
  updateManyOrder: BatchPayload;
  updateManyOrderedAudio: BatchPayload;
  updateManyOrderedDocument: BatchPayload;
  updateManyOrderedLink: BatchPayload;
  updateManyOrderedPicture: BatchPayload;
  updateManyOrderedProduct: BatchPayload;
  updateManyOrderedRedeemable: BatchPayload;
  updateManyOrderedVideo: BatchPayload;
  updateManyPage: BatchPayload;
  updateManyPageCollection: BatchPayload;
  updateManyPageView: BatchPayload;
  updateManyPicture: BatchPayload;
  updateManyProduct: BatchPayload;
  updateManyProductCollection: BatchPayload;
  updateManyRedeemable: BatchPayload;
  updateManyRefreshToken: BatchPayload;
  updateManyRefund: BatchPayload;
  updateManyRequest: BatchPayload;
  updateManyRequestClick: BatchPayload;
  updateManyShipping: BatchPayload;
  updateManySlugCounter: BatchPayload;
  updateManySocial: BatchPayload;
  updateManyTag: BatchPayload;
  updateManyTax: BatchPayload;
  updateManyTrait: BatchPayload;
  updateManyType: BatchPayload;
  updateManyUser: BatchPayload;
  updateManyValue: BatchPayload;
  updateManyVideo: BatchPayload;
  updateManyWebsite: BatchPayload;
  updateManyWithdraw: BatchPayload;
  updateModel: Model;
  updateOneAttachment: Attachment;
  updateOneAttribute: Attribute;
  updateOneAudio: Audio;
  updateOneBlock: Block;
  updateOneCategory: Category;
  updateOneCollection: Collection;
  updateOneCoupon: Coupon;
  updateOneCustomer: Customer;
  updateOneDocument: Document;
  updateOneEmbed: Embed;
  updateOneGroup: Group;
  updateOneItem: Item;
  updateOneLink: Link;
  updateOneLoginToken: LoginToken;
  updateOneNotification: Notification;
  updateOneOrder: Order;
  updateOneOrderedAudio: OrderedAudio;
  updateOneOrderedDocument: OrderedDocument;
  updateOneOrderedLink: OrderedLink;
  updateOneOrderedPicture: OrderedPicture;
  updateOneOrderedProduct: OrderedProduct;
  updateOneOrderedRedeemable: OrderedRedeemable;
  updateOneOrderedVideo: OrderedVideo;
  updateOnePage: Page;
  updateOnePageCollection: PageCollection;
  updateOnePageView: PageView;
  updateOnePicture: Picture;
  updateOneProduct: Product;
  updateOneProductCollection: ProductCollection;
  updateOneRedeemable: Redeemable;
  updateOneRefreshToken: RefreshToken;
  updateOneRefund: Refund;
  updateOneRequest: Request;
  updateOneRequestClick: RequestClick;
  updateOneShipping: Shipping;
  updateOneSlugCounter: SlugCounter;
  updateOneSocial: Social;
  updateOneTag: Tag;
  updateOneTax: Tax;
  updateOneTrait: Trait;
  updateOneType: Type;
  updateOneUser: User;
  updateOneValue: Value;
  updateOneVideo: Video;
  updateOneWebsite: Website;
  updateOneWithdraw: Withdraw;
  updateOrder?: Maybe<Order>;
  updatePassword?: Maybe<Scalars['Boolean']>;
  upsertOneAttachment: Attachment;
  upsertOneAttribute: Attribute;
  upsertOneAudio: Audio;
  upsertOneBlock: Block;
  upsertOneCategory: Category;
  upsertOneCollection: Collection;
  upsertOneCoupon: Coupon;
  upsertOneCustomer: Customer;
  upsertOneDocument: Document;
  upsertOneEmbed: Embed;
  upsertOneGroup: Group;
  upsertOneItem: Item;
  upsertOneLink: Link;
  upsertOneLoginToken: LoginToken;
  upsertOneNotification: Notification;
  upsertOneOrder: Order;
  upsertOneOrderedAudio: OrderedAudio;
  upsertOneOrderedDocument: OrderedDocument;
  upsertOneOrderedLink: OrderedLink;
  upsertOneOrderedPicture: OrderedPicture;
  upsertOneOrderedProduct: OrderedProduct;
  upsertOneOrderedRedeemable: OrderedRedeemable;
  upsertOneOrderedVideo: OrderedVideo;
  upsertOnePage: Page;
  upsertOnePageCollection: PageCollection;
  upsertOnePageView: PageView;
  upsertOnePicture: Picture;
  upsertOneProduct: Product;
  upsertOneProductCollection: ProductCollection;
  upsertOneRedeemable: Redeemable;
  upsertOneRefreshToken: RefreshToken;
  upsertOneRefund: Refund;
  upsertOneRequest: Request;
  upsertOneRequestClick: RequestClick;
  upsertOneShipping: Shipping;
  upsertOneSlugCounter: SlugCounter;
  upsertOneSocial: Social;
  upsertOneTag: Tag;
  upsertOneTax: Tax;
  upsertOneTrait: Trait;
  upsertOneType: Type;
  upsertOneUser: User;
  upsertOneValue: Value;
  upsertOneVideo: Video;
  upsertOneWebsite: Website;
  upsertOneWithdraw: Withdraw;
};


export type MutationAddCollectionArgs = {
  collectionId: Scalars['String'];
  currentJson: Scalars['String'];
};


export type MutationAddResourceArgs = {
  currentJson: Scalars['String'];
  items?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  resource: Scalars['String'];
};


export type MutationAddTemplateArgs = {
  currentJson: Scalars['String'];
  id: Scalars['String'];
};


export type MutationAdminMintNftArgs = {
  orderId: Scalars['String'];
};


export type MutationCreateCheckoutSessionArgs = {
  id: Scalars['String'];
  model: Scalars['String'];
  priceId: Scalars['String'];
};


export type MutationCreateOneAttachmentArgs = {
  data: AttachmentCreateInput;
};


export type MutationCreateOneAttributeArgs = {
  data: AttributeCreateInput;
};


export type MutationCreateOneAudioArgs = {
  data: AudioCreateInput;
};


export type MutationCreateOneBlockArgs = {
  data: BlockCreateInput;
};


export type MutationCreateOneCategoryArgs = {
  data: CategoryCreateInput;
};


export type MutationCreateOneCollectionArgs = {
  data: CollectionCreateInput;
};


export type MutationCreateOneCouponArgs = {
  data: CouponCreateInput;
};


export type MutationCreateOneCustomerArgs = {
  data: CustomerCreateInput;
};


export type MutationCreateOneDocumentArgs = {
  data: DocumentCreateInput;
};


export type MutationCreateOneEmbedArgs = {
  data: EmbedCreateInput;
};


export type MutationCreateOneGroupArgs = {
  data: GroupCreateInput;
};


export type MutationCreateOneItemArgs = {
  data: ItemCreateInput;
};


export type MutationCreateOneLinkArgs = {
  data: LinkCreateInput;
};


export type MutationCreateOneLoginTokenArgs = {
  data: LoginTokenCreateInput;
};


export type MutationCreateOneNotificationArgs = {
  data: NotificationCreateInput;
};


export type MutationCreateOneOrderArgs = {
  data: OrderCreateInput;
};


export type MutationCreateOneOrderedAudioArgs = {
  data: OrderedAudioCreateInput;
};


export type MutationCreateOneOrderedDocumentArgs = {
  data: OrderedDocumentCreateInput;
};


export type MutationCreateOneOrderedLinkArgs = {
  data: OrderedLinkCreateInput;
};


export type MutationCreateOneOrderedPictureArgs = {
  data: OrderedPictureCreateInput;
};


export type MutationCreateOneOrderedProductArgs = {
  data: OrderedProductCreateInput;
};


export type MutationCreateOneOrderedRedeemableArgs = {
  data: OrderedRedeemableCreateInput;
};


export type MutationCreateOneOrderedVideoArgs = {
  data: OrderedVideoCreateInput;
};


export type MutationCreateOnePageArgs = {
  data: PageCreateInput;
};


export type MutationCreateOnePageCollectionArgs = {
  data: PageCollectionCreateInput;
};


export type MutationCreateOnePageViewArgs = {
  data: PageViewCreateInput;
};


export type MutationCreateOnePictureArgs = {
  data: PictureCreateInput;
};


export type MutationCreateOneProductArgs = {
  data: ProductCreateInput;
};


export type MutationCreateOneProductCollectionArgs = {
  data: ProductCollectionCreateInput;
};


export type MutationCreateOneRedeemableArgs = {
  data: RedeemableCreateInput;
};


export type MutationCreateOneRefreshTokenArgs = {
  data: RefreshTokenCreateInput;
};


export type MutationCreateOneRefundArgs = {
  data: RefundCreateInput;
};


export type MutationCreateOneRequestArgs = {
  data: RequestCreateInput;
};


export type MutationCreateOneRequestClickArgs = {
  data: RequestClickCreateInput;
};


export type MutationCreateOneShippingArgs = {
  data: ShippingCreateInput;
};


export type MutationCreateOneSlugCounterArgs = {
  data: SlugCounterCreateInput;
};


export type MutationCreateOneSocialArgs = {
  data: SocialCreateInput;
};


export type MutationCreateOneTagArgs = {
  data: TagCreateInput;
};


export type MutationCreateOneTaxArgs = {
  data: TaxCreateInput;
};


export type MutationCreateOneTraitArgs = {
  data: TraitCreateInput;
};


export type MutationCreateOneTypeArgs = {
  data: TypeCreateInput;
};


export type MutationCreateOneUserArgs = {
  data: UserCreateInput;
};


export type MutationCreateOneValueArgs = {
  data: ValueCreateInput;
};


export type MutationCreateOneVideoArgs = {
  data: VideoCreateInput;
};


export type MutationCreateOneWebsiteArgs = {
  data: WebsiteCreateInput;
};


export type MutationCreateOneWithdrawArgs = {
  data: WithdrawCreateInput;
};


export type MutationDeleteManyAttachmentArgs = {
  where?: InputMaybe<AttachmentWhereInput>;
};


export type MutationDeleteManyAttributeArgs = {
  where?: InputMaybe<AttributeWhereInput>;
};


export type MutationDeleteManyAudioArgs = {
  where?: InputMaybe<AudioWhereInput>;
};


export type MutationDeleteManyBlockArgs = {
  where?: InputMaybe<BlockWhereInput>;
};


export type MutationDeleteManyCategoryArgs = {
  where?: InputMaybe<CategoryWhereInput>;
};


export type MutationDeleteManyCollectionArgs = {
  where?: InputMaybe<CollectionWhereInput>;
};


export type MutationDeleteManyCouponArgs = {
  where?: InputMaybe<CouponWhereInput>;
};


export type MutationDeleteManyCustomerArgs = {
  where?: InputMaybe<CustomerWhereInput>;
};


export type MutationDeleteManyDocumentArgs = {
  where?: InputMaybe<DocumentWhereInput>;
};


export type MutationDeleteManyEmbedArgs = {
  where?: InputMaybe<EmbedWhereInput>;
};


export type MutationDeleteManyGroupArgs = {
  where?: InputMaybe<GroupWhereInput>;
};


export type MutationDeleteManyItemArgs = {
  where?: InputMaybe<ItemWhereInput>;
};


export type MutationDeleteManyLinkArgs = {
  where?: InputMaybe<LinkWhereInput>;
};


export type MutationDeleteManyLoginTokenArgs = {
  where?: InputMaybe<LoginTokenWhereInput>;
};


export type MutationDeleteManyNotificationArgs = {
  where?: InputMaybe<NotificationWhereInput>;
};


export type MutationDeleteManyOrderArgs = {
  where?: InputMaybe<OrderWhereInput>;
};


export type MutationDeleteManyOrderedAudioArgs = {
  where?: InputMaybe<OrderedAudioWhereInput>;
};


export type MutationDeleteManyOrderedDocumentArgs = {
  where?: InputMaybe<OrderedDocumentWhereInput>;
};


export type MutationDeleteManyOrderedLinkArgs = {
  where?: InputMaybe<OrderedLinkWhereInput>;
};


export type MutationDeleteManyOrderedPictureArgs = {
  where?: InputMaybe<OrderedPictureWhereInput>;
};


export type MutationDeleteManyOrderedProductArgs = {
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type MutationDeleteManyOrderedRedeemableArgs = {
  where?: InputMaybe<OrderedRedeemableWhereInput>;
};


export type MutationDeleteManyOrderedVideoArgs = {
  where?: InputMaybe<OrderedVideoWhereInput>;
};


export type MutationDeleteManyPageArgs = {
  where?: InputMaybe<PageWhereInput>;
};


export type MutationDeleteManyPageCollectionArgs = {
  where?: InputMaybe<PageCollectionWhereInput>;
};


export type MutationDeleteManyPageViewArgs = {
  where?: InputMaybe<PageViewWhereInput>;
};


export type MutationDeleteManyPictureArgs = {
  where?: InputMaybe<PictureWhereInput>;
};


export type MutationDeleteManyProductArgs = {
  where?: InputMaybe<ProductWhereInput>;
};


export type MutationDeleteManyProductCollectionArgs = {
  where?: InputMaybe<ProductCollectionWhereInput>;
};


export type MutationDeleteManyRedeemableArgs = {
  where?: InputMaybe<RedeemableWhereInput>;
};


export type MutationDeleteManyRefreshTokenArgs = {
  where?: InputMaybe<RefreshTokenWhereInput>;
};


export type MutationDeleteManyRefundArgs = {
  where?: InputMaybe<RefundWhereInput>;
};


export type MutationDeleteManyRequestArgs = {
  where?: InputMaybe<RequestWhereInput>;
};


export type MutationDeleteManyRequestClickArgs = {
  where?: InputMaybe<RequestClickWhereInput>;
};


export type MutationDeleteManyShippingArgs = {
  where?: InputMaybe<ShippingWhereInput>;
};


export type MutationDeleteManySlugCounterArgs = {
  where?: InputMaybe<SlugCounterWhereInput>;
};


export type MutationDeleteManySocialArgs = {
  where?: InputMaybe<SocialWhereInput>;
};


export type MutationDeleteManyTagArgs = {
  where?: InputMaybe<TagWhereInput>;
};


export type MutationDeleteManyTaxArgs = {
  where?: InputMaybe<TaxWhereInput>;
};


export type MutationDeleteManyTraitArgs = {
  where?: InputMaybe<TraitWhereInput>;
};


export type MutationDeleteManyTypeArgs = {
  where?: InputMaybe<TypeWhereInput>;
};


export type MutationDeleteManyUserArgs = {
  where?: InputMaybe<UserWhereInput>;
};


export type MutationDeleteManyValueArgs = {
  where?: InputMaybe<ValueWhereInput>;
};


export type MutationDeleteManyVideoArgs = {
  where?: InputMaybe<VideoWhereInput>;
};


export type MutationDeleteManyWebsiteArgs = {
  where?: InputMaybe<WebsiteWhereInput>;
};


export type MutationDeleteManyWithdrawArgs = {
  where?: InputMaybe<WithdrawWhereInput>;
};


export type MutationDeleteOneAttachmentArgs = {
  where: AttachmentWhereUniqueInput;
};


export type MutationDeleteOneAttributeArgs = {
  where: AttributeWhereUniqueInput;
};


export type MutationDeleteOneAudioArgs = {
  where: AudioWhereUniqueInput;
};


export type MutationDeleteOneBlockArgs = {
  where: BlockWhereUniqueInput;
};


export type MutationDeleteOneCategoryArgs = {
  where: CategoryWhereUniqueInput;
};


export type MutationDeleteOneCollectionArgs = {
  where: CollectionWhereUniqueInput;
};


export type MutationDeleteOneCouponArgs = {
  where: CouponWhereUniqueInput;
};


export type MutationDeleteOneCustomerArgs = {
  where: CustomerWhereUniqueInput;
};


export type MutationDeleteOneDocumentArgs = {
  where: DocumentWhereUniqueInput;
};


export type MutationDeleteOneEmbedArgs = {
  where: EmbedWhereUniqueInput;
};


export type MutationDeleteOneGroupArgs = {
  where: GroupWhereUniqueInput;
};


export type MutationDeleteOneItemArgs = {
  where: ItemWhereUniqueInput;
};


export type MutationDeleteOneLinkArgs = {
  where: LinkWhereUniqueInput;
};


export type MutationDeleteOneLoginTokenArgs = {
  where: LoginTokenWhereUniqueInput;
};


export type MutationDeleteOneNotificationArgs = {
  where: NotificationWhereUniqueInput;
};


export type MutationDeleteOneOrderArgs = {
  where: OrderWhereUniqueInput;
};


export type MutationDeleteOneOrderedAudioArgs = {
  where: OrderedAudioWhereUniqueInput;
};


export type MutationDeleteOneOrderedDocumentArgs = {
  where: OrderedDocumentWhereUniqueInput;
};


export type MutationDeleteOneOrderedLinkArgs = {
  where: OrderedLinkWhereUniqueInput;
};


export type MutationDeleteOneOrderedPictureArgs = {
  where: OrderedPictureWhereUniqueInput;
};


export type MutationDeleteOneOrderedProductArgs = {
  where: OrderedProductWhereUniqueInput;
};


export type MutationDeleteOneOrderedRedeemableArgs = {
  where: OrderedRedeemableWhereUniqueInput;
};


export type MutationDeleteOneOrderedVideoArgs = {
  where: OrderedVideoWhereUniqueInput;
};


export type MutationDeleteOnePageArgs = {
  where: PageWhereUniqueInput;
};


export type MutationDeleteOnePageCollectionArgs = {
  where: PageCollectionWhereUniqueInput;
};


export type MutationDeleteOnePageViewArgs = {
  where: PageViewWhereUniqueInput;
};


export type MutationDeleteOnePictureArgs = {
  where: PictureWhereUniqueInput;
};


export type MutationDeleteOneProductArgs = {
  where: ProductWhereUniqueInput;
};


export type MutationDeleteOneProductCollectionArgs = {
  where: ProductCollectionWhereUniqueInput;
};


export type MutationDeleteOneRedeemableArgs = {
  where: RedeemableWhereUniqueInput;
};


export type MutationDeleteOneRefreshTokenArgs = {
  where: RefreshTokenWhereUniqueInput;
};


export type MutationDeleteOneRefundArgs = {
  where: RefundWhereUniqueInput;
};


export type MutationDeleteOneRequestArgs = {
  where: RequestWhereUniqueInput;
};


export type MutationDeleteOneRequestClickArgs = {
  where: RequestClickWhereUniqueInput;
};


export type MutationDeleteOneShippingArgs = {
  where: ShippingWhereUniqueInput;
};


export type MutationDeleteOneSlugCounterArgs = {
  where: SlugCounterWhereUniqueInput;
};


export type MutationDeleteOneSocialArgs = {
  where: SocialWhereUniqueInput;
};


export type MutationDeleteOneTagArgs = {
  where: TagWhereUniqueInput;
};


export type MutationDeleteOneTaxArgs = {
  where: TaxWhereUniqueInput;
};


export type MutationDeleteOneTraitArgs = {
  where: TraitWhereUniqueInput;
};


export type MutationDeleteOneTypeArgs = {
  where: TypeWhereUniqueInput;
};


export type MutationDeleteOneUserArgs = {
  where: UserWhereUniqueInput;
};


export type MutationDeleteOneValueArgs = {
  where: ValueWhereUniqueInput;
};


export type MutationDeleteOneVideoArgs = {
  where: VideoWhereUniqueInput;
};


export type MutationDeleteOneWebsiteArgs = {
  where: WebsiteWhereUniqueInput;
};


export type MutationDeleteOneWithdrawArgs = {
  where: WithdrawWhereUniqueInput;
};


export type MutationEnterAdminArgs = {
  admin: Scalars['String'];
  id: Scalars['String'];
};


export type MutationGetAnalyticsArgs = {
  beginSec: Scalars['Int'];
  endSec: Scalars['Int'];
  isRenew?: InputMaybe<Scalars['Boolean']>;
  type: Scalars['String'];
  wedsiteId: Scalars['String'];
};


export type MutationGetMetadataArgs = {
  pageUrl: Scalars['String'];
};


export type MutationLoginArgs = {
  email: Scalars['String'];
  password: Scalars['String'];
};


export type MutationPayProductArgs = {
  customerId: Scalars['String'];
  paymentAddress: Scalars['String'];
  productId: Scalars['String'];
  websiteSlug: Scalars['String'];
};


export type MutationPreparePurchaseArgs = {
  customerId?: InputMaybe<Scalars['String']>;
  paymentAddress: Scalars['String'];
  productId: Scalars['String'];
  websiteSlug: Scalars['String'];
};


export type MutationPrepareRequestArgs = {
  requestId: Scalars['String'];
};


export type MutationPrepareStripePurchaseArgs = {
  customerId: Scalars['String'];
  productId: Scalars['String'];
  websiteSlug: Scalars['String'];
};


export type MutationServerMintArgs = {
  orderedProductId: Scalars['String'];
  walletAddress: Scalars['String'];
};


export type MutationSignupArgs = {
  email: Scalars['String'];
  name?: InputMaybe<Scalars['String']>;
  password: Scalars['String'];
};


export type MutationSignUploadUrlArgs = {
  acl?: InputMaybe<Scalars['String']>;
  contentType?: InputMaybe<Scalars['String']>;
  filename?: InputMaybe<Scalars['String']>;
};


export type MutationStripeCheckoutArgs = {
  couponCode?: InputMaybe<Scalars['String']>;
  customerId: Scalars['String'];
  items: Scalars['Json'];
  shippingId?: InputMaybe<Scalars['String']>;
  websiteSlug: Scalars['String'];
};


export type MutationUpdateAdminSettingsFieldArgs = {
  data?: InputMaybe<Scalars['Json']>;
  fieldName: Scalars['String'];
  modelName: Scalars['String'];
};


export type MutationUpdateAdminSettingsModelArgs = {
  data?: InputMaybe<Scalars['Json']>;
  modelName: Scalars['String'];
};


export type MutationUpdateFieldArgs = {
  data: UpdateFieldInput;
  id: Scalars['String'];
  modelId: Scalars['String'];
};


export type MutationUpdateManyAttachmentArgs = {
  data: AttachmentUpdateManyMutationInput;
  where?: InputMaybe<AttachmentWhereInput>;
};


export type MutationUpdateManyAttributeArgs = {
  data: AttributeUpdateManyMutationInput;
  where?: InputMaybe<AttributeWhereInput>;
};


export type MutationUpdateManyAudioArgs = {
  data: AudioUpdateManyMutationInput;
  where?: InputMaybe<AudioWhereInput>;
};


export type MutationUpdateManyBlockArgs = {
  data: BlockUpdateManyMutationInput;
  where?: InputMaybe<BlockWhereInput>;
};


export type MutationUpdateManyCategoryArgs = {
  data: CategoryUpdateManyMutationInput;
  where?: InputMaybe<CategoryWhereInput>;
};


export type MutationUpdateManyCollectionArgs = {
  data: CollectionUpdateManyMutationInput;
  where?: InputMaybe<CollectionWhereInput>;
};


export type MutationUpdateManyCouponArgs = {
  data: CouponUpdateManyMutationInput;
  where?: InputMaybe<CouponWhereInput>;
};


export type MutationUpdateManyCustomerArgs = {
  data: CustomerUpdateManyMutationInput;
  where?: InputMaybe<CustomerWhereInput>;
};


export type MutationUpdateManyDocumentArgs = {
  data: DocumentUpdateManyMutationInput;
  where?: InputMaybe<DocumentWhereInput>;
};


export type MutationUpdateManyEmbedArgs = {
  data: EmbedUpdateManyMutationInput;
  where?: InputMaybe<EmbedWhereInput>;
};


export type MutationUpdateManyGroupArgs = {
  data: GroupUpdateManyMutationInput;
  where?: InputMaybe<GroupWhereInput>;
};


export type MutationUpdateManyItemArgs = {
  data: ItemUpdateManyMutationInput;
  where?: InputMaybe<ItemWhereInput>;
};


export type MutationUpdateManyLinkArgs = {
  data: LinkUpdateManyMutationInput;
  where?: InputMaybe<LinkWhereInput>;
};


export type MutationUpdateManyLoginTokenArgs = {
  data: LoginTokenUpdateManyMutationInput;
  where?: InputMaybe<LoginTokenWhereInput>;
};


export type MutationUpdateManyNotificationArgs = {
  data: NotificationUpdateManyMutationInput;
  where?: InputMaybe<NotificationWhereInput>;
};


export type MutationUpdateManyOrderArgs = {
  data: OrderUpdateManyMutationInput;
  where?: InputMaybe<OrderWhereInput>;
};


export type MutationUpdateManyOrderedAudioArgs = {
  data: OrderedAudioUpdateManyMutationInput;
  where?: InputMaybe<OrderedAudioWhereInput>;
};


export type MutationUpdateManyOrderedDocumentArgs = {
  data: OrderedDocumentUpdateManyMutationInput;
  where?: InputMaybe<OrderedDocumentWhereInput>;
};


export type MutationUpdateManyOrderedLinkArgs = {
  data: OrderedLinkUpdateManyMutationInput;
  where?: InputMaybe<OrderedLinkWhereInput>;
};


export type MutationUpdateManyOrderedPictureArgs = {
  data: OrderedPictureUpdateManyMutationInput;
  where?: InputMaybe<OrderedPictureWhereInput>;
};


export type MutationUpdateManyOrderedProductArgs = {
  data: OrderedProductUpdateManyMutationInput;
  where?: InputMaybe<OrderedProductWhereInput>;
};


export type MutationUpdateManyOrderedRedeemableArgs = {
  data: OrderedRedeemableUpdateManyMutationInput;
  where?: InputMaybe<OrderedRedeemableWhereInput>;
};


export type MutationUpdateManyOrderedVideoArgs = {
  data: OrderedVideoUpdateManyMutationInput;
  where?: InputMaybe<OrderedVideoWhereInput>;
};


export type MutationUpdateManyPageArgs = {
  data: PageUpdateManyMutationInput;
  where?: InputMaybe<PageWhereInput>;
};


export type MutationUpdateManyPageCollectionArgs = {
  data: PageCollectionUpdateManyMutationInput;
  where?: InputMaybe<PageCollectionWhereInput>;
};


export type MutationUpdateManyPageViewArgs = {
  data: PageViewUpdateManyMutationInput;
  where?: InputMaybe<PageViewWhereInput>;
};


export type MutationUpdateManyPictureArgs = {
  data: PictureUpdateManyMutationInput;
  where?: InputMaybe<PictureWhereInput>;
};


export type MutationUpdateManyProductArgs = {
  data: ProductUpdateManyMutationInput;
  where?: InputMaybe<ProductWhereInput>;
};


export type MutationUpdateManyProductCollectionArgs = {
  data: ProductCollectionUpdateManyMutationInput;
  where?: InputMaybe<ProductCollectionWhereInput>;
};


export type MutationUpdateManyRedeemableArgs = {
  data: RedeemableUpdateManyMutationInput;
  where?: InputMaybe<RedeemableWhereInput>;
};


export type MutationUpdateManyRefreshTokenArgs = {
  data: RefreshTokenUpdateManyMutationInput;
  where?: InputMaybe<RefreshTokenWhereInput>;
};


export type MutationUpdateManyRefundArgs = {
  data: RefundUpdateManyMutationInput;
  where?: InputMaybe<RefundWhereInput>;
};


export type MutationUpdateManyRequestArgs = {
  data: RequestUpdateManyMutationInput;
  where?: InputMaybe<RequestWhereInput>;
};


export type MutationUpdateManyRequestClickArgs = {
  data: RequestClickUpdateManyMutationInput;
  where?: InputMaybe<RequestClickWhereInput>;
};


export type MutationUpdateManyShippingArgs = {
  data: ShippingUpdateManyMutationInput;
  where?: InputMaybe<ShippingWhereInput>;
};


export type MutationUpdateManySlugCounterArgs = {
  data: SlugCounterUpdateManyMutationInput;
  where?: InputMaybe<SlugCounterWhereInput>;
};


export type MutationUpdateManySocialArgs = {
  data: SocialUpdateManyMutationInput;
  where?: InputMaybe<SocialWhereInput>;
};


export type MutationUpdateManyTagArgs = {
  data: TagUpdateManyMutationInput;
  where?: InputMaybe<TagWhereInput>;
};


export type MutationUpdateManyTaxArgs = {
  data: TaxUpdateManyMutationInput;
  where?: InputMaybe<TaxWhereInput>;
};


export type MutationUpdateManyTraitArgs = {
  data: TraitUpdateManyMutationInput;
  where?: InputMaybe<TraitWhereInput>;
};


export type MutationUpdateManyTypeArgs = {
  data: TypeUpdateManyMutationInput;
  where?: InputMaybe<TypeWhereInput>;
};


export type MutationUpdateManyUserArgs = {
  data: UserUpdateManyMutationInput;
  where?: InputMaybe<UserWhereInput>;
};


export type MutationUpdateManyValueArgs = {
  data: ValueUpdateManyMutationInput;
  where?: InputMaybe<ValueWhereInput>;
};


export type MutationUpdateManyVideoArgs = {
  data: VideoUpdateManyMutationInput;
  where?: InputMaybe<VideoWhereInput>;
};


export type MutationUpdateManyWebsiteArgs = {
  data: WebsiteUpdateManyMutationInput;
  where?: InputMaybe<WebsiteWhereInput>;
};


export type MutationUpdateManyWithdrawArgs = {
  data: WithdrawUpdateManyMutationInput;
  where?: InputMaybe<WithdrawWhereInput>;
};


export type MutationUpdateModelArgs = {
  data: UpdateModelInput;
  id: Scalars['String'];
};


export type MutationUpdateOneAttachmentArgs = {
  data: AttachmentUpdateInput;
  where: AttachmentWhereUniqueInput;
};


export type MutationUpdateOneAttributeArgs = {
  data: AttributeUpdateInput;
  where: AttributeWhereUniqueInput;
};


export type MutationUpdateOneAudioArgs = {
  data: AudioUpdateInput;
  where: AudioWhereUniqueInput;
};


export type MutationUpdateOneBlockArgs = {
  data: BlockUpdateInput;
  where: BlockWhereUniqueInput;
};


export type MutationUpdateOneCategoryArgs = {
  data: CategoryUpdateInput;
  where: CategoryWhereUniqueInput;
};


export type MutationUpdateOneCollectionArgs = {
  data: CollectionUpdateInput;
  where: CollectionWhereUniqueInput;
};


export type MutationUpdateOneCouponArgs = {
  data: CouponUpdateInput;
  where: CouponWhereUniqueInput;
};


export type MutationUpdateOneCustomerArgs = {
  data: CustomerUpdateInput;
  where: CustomerWhereUniqueInput;
};


export type MutationUpdateOneDocumentArgs = {
  data: DocumentUpdateInput;
  where: DocumentWhereUniqueInput;
};


export type MutationUpdateOneEmbedArgs = {
  data: EmbedUpdateInput;
  where: EmbedWhereUniqueInput;
};


export type MutationUpdateOneGroupArgs = {
  data: GroupUpdateInput;
  where: GroupWhereUniqueInput;
};


export type MutationUpdateOneItemArgs = {
  data: ItemUpdateInput;
  where: ItemWhereUniqueInput;
};


export type MutationUpdateOneLinkArgs = {
  data: LinkUpdateInput;
  where: LinkWhereUniqueInput;
};


export type MutationUpdateOneLoginTokenArgs = {
  data: LoginTokenUpdateInput;
  where: LoginTokenWhereUniqueInput;
};


export type MutationUpdateOneNotificationArgs = {
  data: NotificationUpdateInput;
  where: NotificationWhereUniqueInput;
};


export type MutationUpdateOneOrderArgs = {
  data: OrderUpdateInput;
  where: OrderWhereUniqueInput;
};


export type MutationUpdateOneOrderedAudioArgs = {
  data: OrderedAudioUpdateInput;
  where: OrderedAudioWhereUniqueInput;
};


export type MutationUpdateOneOrderedDocumentArgs = {
  data: OrderedDocumentUpdateInput;
  where: OrderedDocumentWhereUniqueInput;
};


export type MutationUpdateOneOrderedLinkArgs = {
  data: OrderedLinkUpdateInput;
  where: OrderedLinkWhereUniqueInput;
};


export type MutationUpdateOneOrderedPictureArgs = {
  data: OrderedPictureUpdateInput;
  where: OrderedPictureWhereUniqueInput;
};


export type MutationUpdateOneOrderedProductArgs = {
  data: OrderedProductUpdateInput;
  where: OrderedProductWhereUniqueInput;
};


export type MutationUpdateOneOrderedRedeemableArgs = {
  data: OrderedRedeemableUpdateInput;
  where: OrderedRedeemableWhereUniqueInput;
};


export type MutationUpdateOneOrderedVideoArgs = {
  data: OrderedVideoUpdateInput;
  where: OrderedVideoWhereUniqueInput;
};


export type MutationUpdateOnePageArgs = {
  data: PageUpdateInput;
  where: PageWhereUniqueInput;
};


export type MutationUpdateOnePageCollectionArgs = {
  data: PageCollectionUpdateInput;
  where: PageCollectionWhereUniqueInput;
};


export type MutationUpdateOnePageViewArgs = {
  data: PageViewUpdateInput;
  where: PageViewWhereUniqueInput;
};


export type MutationUpdateOnePictureArgs = {
  data: PictureUpdateInput;
  where: PictureWhereUniqueInput;
};


export type MutationUpdateOneProductArgs = {
  data: ProductUpdateInput;
  where: ProductWhereUniqueInput;
};


export type MutationUpdateOneProductCollectionArgs = {
  data: ProductCollectionUpdateInput;
  where: ProductCollectionWhereUniqueInput;
};


export type MutationUpdateOneRedeemableArgs = {
  data: RedeemableUpdateInput;
  where: RedeemableWhereUniqueInput;
};


export type MutationUpdateOneRefreshTokenArgs = {
  data: RefreshTokenUpdateInput;
  where: RefreshTokenWhereUniqueInput;
};


export type MutationUpdateOneRefundArgs = {
  data: RefundUpdateInput;
  where: RefundWhereUniqueInput;
};


export type MutationUpdateOneRequestArgs = {
  data: RequestUpdateInput;
  where: RequestWhereUniqueInput;
};


export type MutationUpdateOneRequestClickArgs = {
  data: RequestClickUpdateInput;
  where: RequestClickWhereUniqueInput;
};


export type MutationUpdateOneShippingArgs = {
  data: ShippingUpdateInput;
  where: ShippingWhereUniqueInput;
};


export type MutationUpdateOneSlugCounterArgs = {
  data: SlugCounterUpdateInput;
  where: SlugCounterWhereUniqueInput;
};


export type MutationUpdateOneSocialArgs = {
  data: SocialUpdateInput;
  where: SocialWhereUniqueInput;
};


export type MutationUpdateOneTagArgs = {
  data: TagUpdateInput;
  where: TagWhereUniqueInput;
};


export type MutationUpdateOneTaxArgs = {
  data: TaxUpdateInput;
  where: TaxWhereUniqueInput;
};


export type MutationUpdateOneTraitArgs = {
  data: TraitUpdateInput;
  where: TraitWhereUniqueInput;
};


export type MutationUpdateOneTypeArgs = {
  data: TypeUpdateInput;
  where: TypeWhereUniqueInput;
};


export type MutationUpdateOneUserArgs = {
  data: UserUpdateInput;
  where: UserWhereUniqueInput;
};


export type MutationUpdateOneValueArgs = {
  data: ValueUpdateInput;
  where: ValueWhereUniqueInput;
};


export type MutationUpdateOneVideoArgs = {
  data: VideoUpdateInput;
  where: VideoWhereUniqueInput;
};


export type MutationUpdateOneWebsiteArgs = {
  data: WebsiteUpdateInput;
  where: WebsiteWhereUniqueInput;
};


export type MutationUpdateOneWithdrawArgs = {
  data: WithdrawUpdateInput;
  where: WithdrawWhereUniqueInput;
};


export type MutationUpdateOrderArgs = {
  orderId: Scalars['String'];
  transactionHash?: InputMaybe<Scalars['String']>;
};


export type MutationUpdatePasswordArgs = {
  currentPassword: Scalars['String'];
  password: Scalars['String'];
};


export type MutationUpsertOneAttachmentArgs = {
  create: AttachmentCreateInput;
  update: AttachmentUpdateInput;
  where: AttachmentWhereUniqueInput;
};


export type MutationUpsertOneAttributeArgs = {
  create: AttributeCreateInput;
  update: AttributeUpdateInput;
  where: AttributeWhereUniqueInput;
};


export type MutationUpsertOneAudioArgs = {
  create: AudioCreateInput;
  update: AudioUpdateInput;
  where: AudioWhereUniqueInput;
};


export type MutationUpsertOneBlockArgs = {
  create: BlockCreateInput;
  update: BlockUpdateInput;
  where: BlockWhereUniqueInput;
};


export type MutationUpsertOneCategoryArgs = {
  create: CategoryCreateInput;
  update: CategoryUpdateInput;
  where: CategoryWhereUniqueInput;
};


export type MutationUpsertOneCollectionArgs = {
  create: CollectionCreateInput;
  update: CollectionUpdateInput;
  where: CollectionWhereUniqueInput;
};


export type MutationUpsertOneCouponArgs = {
  create: CouponCreateInput;
  update: CouponUpdateInput;
  where: CouponWhereUniqueInput;
};


export type MutationUpsertOneCustomerArgs = {
  create: CustomerCreateInput;
  update: CustomerUpdateInput;
  where: CustomerWhereUniqueInput;
};


export type MutationUpsertOneDocumentArgs = {
  create: DocumentCreateInput;
  update: DocumentUpdateInput;
  where: DocumentWhereUniqueInput;
};


export type MutationUpsertOneEmbedArgs = {
  create: EmbedCreateInput;
  update: EmbedUpdateInput;
  where: EmbedWhereUniqueInput;
};


export type MutationUpsertOneGroupArgs = {
  create: GroupCreateInput;
  update: GroupUpdateInput;
  where: GroupWhereUniqueInput;
};


export type MutationUpsertOneItemArgs = {
  create: ItemCreateInput;
  update: ItemUpdateInput;
  where: ItemWhereUniqueInput;
};


export type MutationUpsertOneLinkArgs = {
  create: LinkCreateInput;
  update: LinkUpdateInput;
  where: LinkWhereUniqueInput;
};


export type MutationUpsertOneLoginTokenArgs = {
  create: LoginTokenCreateInput;
  update: LoginTokenUpdateInput;
  where: LoginTokenWhereUniqueInput;
};


export type MutationUpsertOneNotificationArgs = {
  create: NotificationCreateInput;
  update: NotificationUpdateInput;
  where: NotificationWhereUniqueInput;
};


export type MutationUpsertOneOrderArgs = {
  create: OrderCreateInput;
  update: OrderUpdateInput;
  where: OrderWhereUniqueInput;
};


export type MutationUpsertOneOrderedAudioArgs = {
  create: OrderedAudioCreateInput;
  update: OrderedAudioUpdateInput;
  where: OrderedAudioWhereUniqueInput;
};


export type MutationUpsertOneOrderedDocumentArgs = {
  create: OrderedDocumentCreateInput;
  update: OrderedDocumentUpdateInput;
  where: OrderedDocumentWhereUniqueInput;
};


export type MutationUpsertOneOrderedLinkArgs = {
  create: OrderedLinkCreateInput;
  update: OrderedLinkUpdateInput;
  where: OrderedLinkWhereUniqueInput;
};


export type MutationUpsertOneOrderedPictureArgs = {
  create: OrderedPictureCreateInput;
  update: OrderedPictureUpdateInput;
  where: OrderedPictureWhereUniqueInput;
};


export type MutationUpsertOneOrderedProductArgs = {
  create: OrderedProductCreateInput;
  update: OrderedProductUpdateInput;
  where: OrderedProductWhereUniqueInput;
};


export type MutationUpsertOneOrderedRedeemableArgs = {
  create: OrderedRedeemableCreateInput;
  update: OrderedRedeemableUpdateInput;
  where: OrderedRedeemableWhereUniqueInput;
};


export type MutationUpsertOneOrderedVideoArgs = {
  create: OrderedVideoCreateInput;
  update: OrderedVideoUpdateInput;
  where: OrderedVideoWhereUniqueInput;
};


export type MutationUpsertOnePageArgs = {
  create: PageCreateInput;
  update: PageUpdateInput;
  where: PageWhereUniqueInput;
};


export type MutationUpsertOnePageCollectionArgs = {
  create: PageCollectionCreateInput;
  update: PageCollectionUpdateInput;
  where: PageCollectionWhereUniqueInput;
};


export type MutationUpsertOnePageViewArgs = {
  create: PageViewCreateInput;
  update: PageViewUpdateInput;
  where: PageViewWhereUniqueInput;
};


export type MutationUpsertOnePictureArgs = {
  create: PictureCreateInput;
  update: PictureUpdateInput;
  where: PictureWhereUniqueInput;
};


export type MutationUpsertOneProductArgs = {
  create: ProductCreateInput;
  update: ProductUpdateInput;
  where: ProductWhereUniqueInput;
};


export type MutationUpsertOneProductCollectionArgs = {
  create: ProductCollectionCreateInput;
  update: ProductCollectionUpdateInput;
  where: ProductCollectionWhereUniqueInput;
};


export type MutationUpsertOneRedeemableArgs = {
  create: RedeemableCreateInput;
  update: RedeemableUpdateInput;
  where: RedeemableWhereUniqueInput;
};


export type MutationUpsertOneRefreshTokenArgs = {
  create: RefreshTokenCreateInput;
  update: RefreshTokenUpdateInput;
  where: RefreshTokenWhereUniqueInput;
};


export type MutationUpsertOneRefundArgs = {
  create: RefundCreateInput;
  update: RefundUpdateInput;
  where: RefundWhereUniqueInput;
};


export type MutationUpsertOneRequestArgs = {
  create: RequestCreateInput;
  update: RequestUpdateInput;
  where: RequestWhereUniqueInput;
};


export type MutationUpsertOneRequestClickArgs = {
  create: RequestClickCreateInput;
  update: RequestClickUpdateInput;
  where: RequestClickWhereUniqueInput;
};


export type MutationUpsertOneShippingArgs = {
  create: ShippingCreateInput;
  update: ShippingUpdateInput;
  where: ShippingWhereUniqueInput;
};


export type MutationUpsertOneSlugCounterArgs = {
  create: SlugCounterCreateInput;
  update: SlugCounterUpdateInput;
  where: SlugCounterWhereUniqueInput;
};


export type MutationUpsertOneSocialArgs = {
  create: SocialCreateInput;
  update: SocialUpdateInput;
  where: SocialWhereUniqueInput;
};


export type MutationUpsertOneTagArgs = {
  create: TagCreateInput;
  update: TagUpdateInput;
  where: TagWhereUniqueInput;
};


export type MutationUpsertOneTaxArgs = {
  create: TaxCreateInput;
  update: TaxUpdateInput;
  where: TaxWhereUniqueInput;
};


export type MutationUpsertOneTraitArgs = {
  create: TraitCreateInput;
  update: TraitUpdateInput;
  where: TraitWhereUniqueInput;
};


export type MutationUpsertOneTypeArgs = {
  create: TypeCreateInput;
  update: TypeUpdateInput;
  where: TypeWhereUniqueInput;
};


export type MutationUpsertOneUserArgs = {
  create: UserCreateInput;
  update: UserUpdateInput;
  where: UserWhereUniqueInput;
};


export type MutationUpsertOneValueArgs = {
  create: ValueCreateInput;
  update: ValueUpdateInput;
  where: ValueWhereUniqueInput;
};


export type MutationUpsertOneVideoArgs = {
  create: VideoCreateInput;
  update: VideoUpdateInput;
  where: VideoWhereUniqueInput;
};


export type MutationUpsertOneWebsiteArgs = {
  create: WebsiteCreateInput;
  update: WebsiteUpdateInput;
  where: WebsiteWhereUniqueInput;
};


export type MutationUpsertOneWithdrawArgs = {
  create: WithdrawCreateInput;
  update: WithdrawUpdateInput;
  where: WithdrawWhereUniqueInput;
};

export type AttachmentCreateInput = {
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  staked?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<AttachmentType>;
  upload: Scalars['Json'];
  url: Scalars['String'];
  user?: InputMaybe<UserCreateNestedOneWithoutAttachmentsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAttachmentsInput>;
};

export type UserCreateNestedOneWithoutAttachmentsInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutAttachmentsInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutAttachmentsInput>;
};

export type UserCreateOrConnectWithoutAttachmentsInput = {
  create: UserUncheckedCreateWithoutAttachmentsInput;
  where: UserWhereUniqueInput;
};

export type UserUncheckedCreateWithoutAttachmentsInput = {
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedUncheckedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type AudioUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCreateWithoutUserInput>>>;
  createMany?: InputMaybe<AudioCreateManyUserInputEnvelope>;
};

export type AudioCreateOrConnectWithoutUserInput = {
  create: AudioUncheckedCreateWithoutUserInput;
  where: AudioWhereUniqueInput;
};

export type AudioUncheckedCreateWithoutUserInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioUncheckedCreateNestedManyWithoutAudioInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutAudiosInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedAudioUncheckedCreateNestedManyWithoutAudioInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedAudioCreateOrConnectWithoutAudioInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedAudioCreateWithoutAudioInput>>>;
  createMany?: InputMaybe<OrderedAudioCreateManyAudioInputEnvelope>;
};

export type OrderedAudioCreateOrConnectWithoutAudioInput = {
  create: OrderedAudioUncheckedCreateWithoutAudioInput;
  where: OrderedAudioWhereUniqueInput;
};

export type OrderedAudioUncheckedCreateWithoutAudioInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedAudioCreateWithoutAudioInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProduct?: InputMaybe<OrderedProductCreateNestedOneWithoutOrderedAudiosInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateNestedOneWithoutOrderedAudiosInput = {
  connect?: InputMaybe<OrderedProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderedProductCreateOrConnectWithoutOrderedAudiosInput>;
  create?: InputMaybe<OrderedProductUncheckedCreateWithoutOrderedAudiosInput>;
};

export type OrderedProductCreateOrConnectWithoutOrderedAudiosInput = {
  create: OrderedProductUncheckedCreateWithoutOrderedAudiosInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUncheckedCreateWithoutOrderedAudiosInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refundId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderedDocumentUncheckedCreateNestedManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedDocumentCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedDocumentCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedDocumentCreateManyOrderedProductInputEnvelope>;
};

export type OrderedDocumentCreateOrConnectWithoutOrderedProductInput = {
  create: OrderedDocumentUncheckedCreateWithoutOrderedProductInput;
  where: OrderedDocumentWhereUniqueInput;
};

export type OrderedDocumentUncheckedCreateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentId?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedDocumentCreateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  document?: InputMaybe<DocumentCreateNestedOneWithoutOrderedDocumentsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type DocumentCreateNestedOneWithoutOrderedDocumentsInput = {
  connect?: InputMaybe<DocumentWhereUniqueInput>;
  connectOrCreate?: InputMaybe<DocumentCreateOrConnectWithoutOrderedDocumentsInput>;
  create?: InputMaybe<DocumentUncheckedCreateWithoutOrderedDocumentsInput>;
};

export type DocumentCreateOrConnectWithoutOrderedDocumentsInput = {
  create: DocumentUncheckedCreateWithoutOrderedDocumentsInput;
  where: DocumentWhereUniqueInput;
};

export type DocumentUncheckedCreateWithoutOrderedDocumentsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutDocumentsInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type ProductUncheckedCreateNestedManyWithoutDocumentsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutDocumentsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutDocumentsInput>>>;
};

export type ProductCreateOrConnectWithoutDocumentsInput = {
  create: ProductUncheckedCreateWithoutDocumentsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedCreateWithoutDocumentsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitUncheckedCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutProductsInput>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type AudioUncheckedCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCreateWithoutProductsInput>>>;
};

export type AudioCreateOrConnectWithoutProductsInput = {
  create: AudioUncheckedCreateWithoutProductsInput;
  where: AudioWhereUniqueInput;
};

export type AudioUncheckedCreateWithoutProductsInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioUncheckedCreateNestedManyWithoutAudioInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type AudioCreateWithoutProductsInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioCreateNestedManyWithoutAudioInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutAudiosInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedAudioCreateNestedManyWithoutAudioInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedAudioCreateOrConnectWithoutAudioInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedAudioCreateWithoutAudioInput>>>;
  createMany?: InputMaybe<OrderedAudioCreateManyAudioInputEnvelope>;
};

export type OrderedAudioCreateManyAudioInputEnvelope = {
  data: OrderedAudioCreateManyAudioInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedAudioCreateManyAudioInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type UserCreateNestedOneWithoutAudiosInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutAudiosInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutAudiosInput>;
};

export type UserCreateOrConnectWithoutAudiosInput = {
  create: UserUncheckedCreateWithoutAudiosInput;
  where: UserWhereUniqueInput;
};

export type UserUncheckedCreateWithoutAudiosInput = {
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedUncheckedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type AttachmentUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutUserInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyUserInputEnvelope>;
};

export type AttachmentCreateOrConnectWithoutUserInput = {
  create: AttachmentUncheckedCreateWithoutUserInput;
  where: AttachmentWhereUniqueInput;
};

export type AttachmentUncheckedCreateWithoutUserInput = {
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  staked?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<AttachmentType>;
  upload: Scalars['Json'];
  url: Scalars['String'];
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AttachmentCreateWithoutUserInput = {
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  staked?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<AttachmentType>;
  upload: Scalars['Json'];
  url: Scalars['String'];
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAttachmentsInput>;
};

export type WebsiteCreateNestedOneWithoutAttachmentsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutAttachmentsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutAttachmentsInput>;
};

export type WebsiteCreateOrConnectWithoutAttachmentsInput = {
  create: WebsiteUncheckedCreateWithoutAttachmentsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutAttachmentsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type AttributeUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttributeCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttributeCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AttributeCreateManyWebsiteInputEnvelope>;
};

export type AttributeCreateOrConnectWithoutWebsiteInput = {
  create: AttributeUncheckedCreateWithoutWebsiteInput;
  where: AttributeWhereUniqueInput;
};

export type AttributeUncheckedCreateWithoutWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  values?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
};

export type AttributeCreateWithoutWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  values?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
};

export type AttributeCreateManyWebsiteInputEnvelope = {
  data: AttributeCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AttributeCreateManyWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  values?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
};

export type CategoryUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CategoryCreateManyWebsiteInputEnvelope>;
};

export type CategoryCreateOrConnectWithoutWebsiteInput = {
  create: CategoryUncheckedCreateWithoutWebsiteInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryUncheckedCreateWithoutWebsiteInput = {
  children?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutParentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutCategoriesInput>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutCategoriesInput>;
  parentId?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutCategoriesInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CategoryUncheckedCreateNestedManyWithoutParentInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutParentInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutParentInput>>>;
  createMany?: InputMaybe<CategoryCreateManyParentInputEnvelope>;
};

export type CategoryCreateOrConnectWithoutParentInput = {
  create: CategoryUncheckedCreateWithoutParentInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryUncheckedCreateWithoutParentInput = {
  children?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutParentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutCategoriesInput>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutCategoriesInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutCategoriesInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type LinkUncheckedCreateNestedManyWithoutCategoriesInput = {
  connect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LinkCreateOrConnectWithoutCategoriesInput>>>;
  create?: InputMaybe<Array<InputMaybe<LinkCreateWithoutCategoriesInput>>>;
};

export type LinkCreateOrConnectWithoutCategoriesInput = {
  create: LinkUncheckedCreateWithoutCategoriesInput;
  where: LinkWhereUniqueInput;
};

export type LinkUncheckedCreateWithoutCategoriesInput = {
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutLinksInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedLinks?: InputMaybe<OrderedLinkUncheckedCreateNestedManyWithoutLinkInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutLinksInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  userId?: InputMaybe<Scalars['String']>;
};

export type CollectionUncheckedCreateNestedManyWithoutLinksInput = {
  connect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CollectionCreateOrConnectWithoutLinksInput>>>;
  create?: InputMaybe<Array<InputMaybe<CollectionCreateWithoutLinksInput>>>;
};

export type CollectionCreateOrConnectWithoutLinksInput = {
  create: CollectionUncheckedCreateWithoutLinksInput;
  where: CollectionWhereUniqueInput;
};

export type CollectionUncheckedCreateWithoutLinksInput = {
  collectionStyle?: InputMaybe<CollectionStyle>;
  collectionType?: InputMaybe<CollectionType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutCollectionInput>;
  name: Scalars['String'];
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ItemUncheckedCreateNestedManyWithoutCollectionInput = {
  connect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ItemCreateOrConnectWithoutCollectionInput>>>;
  create?: InputMaybe<Array<InputMaybe<ItemCreateWithoutCollectionInput>>>;
  createMany?: InputMaybe<ItemCreateManyCollectionInputEnvelope>;
};

export type ItemCreateOrConnectWithoutCollectionInput = {
  create: ItemUncheckedCreateWithoutCollectionInput;
  where: ItemWhereUniqueInput;
};

export type ItemUncheckedCreateWithoutCollectionInput = {
  blockId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  embedId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  itemType: ItemType;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ItemCreateWithoutCollectionInput = {
  block?: InputMaybe<BlockCreateNestedOneWithoutItemsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  embed?: InputMaybe<EmbedCreateNestedOneWithoutItemsInput>;
  id?: InputMaybe<Scalars['String']>;
  itemType: ItemType;
  name?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<PageCreateNestedOneWithoutItemsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type BlockCreateNestedOneWithoutItemsInput = {
  connect?: InputMaybe<BlockWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BlockCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<BlockUncheckedCreateWithoutItemsInput>;
};

export type BlockCreateOrConnectWithoutItemsInput = {
  create: BlockUncheckedCreateWithoutItemsInput;
  where: BlockWhereUniqueInput;
};

export type BlockUncheckedCreateWithoutItemsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  favourite?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutBlocksInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type ProductUncheckedCreateNestedManyWithoutBlocksInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutBlocksInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutBlocksInput>>>;
};

export type ProductCreateOrConnectWithoutBlocksInput = {
  create: ProductUncheckedCreateWithoutBlocksInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedCreateWithoutBlocksInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitUncheckedCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutProductsInput>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type CategoryUncheckedCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutProductsInput>>>;
};

export type CategoryCreateOrConnectWithoutProductsInput = {
  create: CategoryUncheckedCreateWithoutProductsInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryUncheckedCreateWithoutProductsInput = {
  children?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutParentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutCategoriesInput>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutCategoriesInput>;
  parentId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageUncheckedCreateNestedManyWithoutCategoriesInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutCategoriesInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutCategoriesInput>>>;
};

export type PageCreateOrConnectWithoutCategoriesInput = {
  create: PageUncheckedCreateWithoutCategoriesInput;
  where: PageWhereUniqueInput;
};

export type PageUncheckedCreateWithoutCategoriesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutPageInput>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedCreateNestedManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CollectionUncheckedCreateNestedManyWithoutPagesInput = {
  connect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CollectionCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<CollectionCreateWithoutPagesInput>>>;
};

export type CollectionCreateOrConnectWithoutPagesInput = {
  create: CollectionUncheckedCreateWithoutPagesInput;
  where: CollectionWhereUniqueInput;
};

export type CollectionUncheckedCreateWithoutPagesInput = {
  collectionStyle?: InputMaybe<CollectionStyle>;
  collectionType?: InputMaybe<CollectionType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutCollectionInput>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutCollectionsInput>;
  name: Scalars['String'];
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type LinkUncheckedCreateNestedManyWithoutCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LinkCreateOrConnectWithoutCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<LinkCreateWithoutCollectionsInput>>>;
};

export type LinkCreateOrConnectWithoutCollectionsInput = {
  create: LinkUncheckedCreateWithoutCollectionsInput;
  where: LinkWhereUniqueInput;
};

export type LinkUncheckedCreateWithoutCollectionsInput = {
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutLinksInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedLinks?: InputMaybe<OrderedLinkUncheckedCreateNestedManyWithoutLinkInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutLinksInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  userId?: InputMaybe<Scalars['String']>;
};

export type CategoryUncheckedCreateNestedManyWithoutLinksInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutLinksInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutLinksInput>>>;
};

export type CategoryCreateOrConnectWithoutLinksInput = {
  create: CategoryUncheckedCreateWithoutLinksInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryUncheckedCreateWithoutLinksInput = {
  children?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutParentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutCategoriesInput>;
  parentId?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutCategoriesInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductUncheckedCreateNestedManyWithoutCategoriesInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutCategoriesInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutCategoriesInput>>>;
};

export type ProductCreateOrConnectWithoutCategoriesInput = {
  create: ProductUncheckedCreateWithoutCategoriesInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedCreateWithoutCategoriesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitUncheckedCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutProductsInput>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type BlockUncheckedCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<BlockCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<BlockCreateWithoutProductsInput>>>;
};

export type BlockCreateOrConnectWithoutProductsInput = {
  create: BlockUncheckedCreateWithoutProductsInput;
  where: BlockWhereUniqueInput;
};

export type BlockUncheckedCreateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  favourite?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutBlockInput>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type ItemUncheckedCreateNestedManyWithoutBlockInput = {
  connect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ItemCreateOrConnectWithoutBlockInput>>>;
  create?: InputMaybe<Array<InputMaybe<ItemCreateWithoutBlockInput>>>;
  createMany?: InputMaybe<ItemCreateManyBlockInputEnvelope>;
};

export type ItemCreateOrConnectWithoutBlockInput = {
  create: ItemUncheckedCreateWithoutBlockInput;
  where: ItemWhereUniqueInput;
};

export type ItemUncheckedCreateWithoutBlockInput = {
  collectionId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  embedId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  itemType: ItemType;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ItemCreateWithoutBlockInput = {
  collection?: InputMaybe<CollectionCreateNestedOneWithoutItemsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  embed?: InputMaybe<EmbedCreateNestedOneWithoutItemsInput>;
  id?: InputMaybe<Scalars['String']>;
  itemType: ItemType;
  name?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<PageCreateNestedOneWithoutItemsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CollectionCreateNestedOneWithoutItemsInput = {
  connect?: InputMaybe<CollectionWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CollectionCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<CollectionUncheckedCreateWithoutItemsInput>;
};

export type CollectionCreateOrConnectWithoutItemsInput = {
  create: CollectionUncheckedCreateWithoutItemsInput;
  where: CollectionWhereUniqueInput;
};

export type CollectionUncheckedCreateWithoutItemsInput = {
  collectionStyle?: InputMaybe<CollectionStyle>;
  collectionType?: InputMaybe<CollectionType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutCollectionsInput>;
  name: Scalars['String'];
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageUncheckedCreateNestedManyWithoutCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutCollectionsInput>>>;
};

export type PageCreateOrConnectWithoutCollectionsInput = {
  create: PageUncheckedCreateWithoutCollectionsInput;
  where: PageWhereUniqueInput;
};

export type PageUncheckedCreateWithoutCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutPageInput>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedCreateNestedManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CategoryUncheckedCreateNestedManyWithoutPagesInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutPagesInput>>>;
};

export type CategoryCreateOrConnectWithoutPagesInput = {
  create: CategoryUncheckedCreateWithoutPagesInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryUncheckedCreateWithoutPagesInput = {
  children?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutParentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutCategoriesInput>;
  name?: InputMaybe<Scalars['String']>;
  parentId?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutCategoriesInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CategoryCreateWithoutPagesInput = {
  children?: InputMaybe<CategoryCreateNestedManyWithoutParentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutCategoriesInput>;
  name?: InputMaybe<Scalars['String']>;
  parent?: InputMaybe<CategoryCreateNestedOneWithoutChildrenInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCategoriesInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCategoriesInput>;
};

export type CategoryCreateNestedManyWithoutParentInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutParentInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutParentInput>>>;
  createMany?: InputMaybe<CategoryCreateManyParentInputEnvelope>;
};

export type CategoryCreateWithoutParentInput = {
  children?: InputMaybe<CategoryCreateNestedManyWithoutParentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutCategoriesInput>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageCreateNestedManyWithoutCategoriesInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCategoriesInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCategoriesInput>;
};

export type LinkCreateNestedManyWithoutCategoriesInput = {
  connect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LinkCreateOrConnectWithoutCategoriesInput>>>;
  create?: InputMaybe<Array<InputMaybe<LinkCreateWithoutCategoriesInput>>>;
};

export type LinkCreateWithoutCategoriesInput = {
  collections?: InputMaybe<CollectionCreateNestedManyWithoutLinksInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedLinks?: InputMaybe<OrderedLinkCreateNestedManyWithoutLinkInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutLinksInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  user?: InputMaybe<UserCreateNestedOneWithoutLinksInput>;
};

export type CollectionCreateNestedManyWithoutLinksInput = {
  connect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CollectionCreateOrConnectWithoutLinksInput>>>;
  create?: InputMaybe<Array<InputMaybe<CollectionCreateWithoutLinksInput>>>;
};

export type CollectionCreateWithoutLinksInput = {
  collectionStyle?: InputMaybe<CollectionStyle>;
  collectionType?: InputMaybe<CollectionType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<ItemCreateNestedManyWithoutCollectionInput>;
  name: Scalars['String'];
  pages?: InputMaybe<PageCreateNestedManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCollectionsInput>;
};

export type ItemCreateNestedManyWithoutCollectionInput = {
  connect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ItemCreateOrConnectWithoutCollectionInput>>>;
  create?: InputMaybe<Array<InputMaybe<ItemCreateWithoutCollectionInput>>>;
  createMany?: InputMaybe<ItemCreateManyCollectionInputEnvelope>;
};

export type ItemCreateManyCollectionInputEnvelope = {
  data: ItemCreateManyCollectionInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ItemCreateManyCollectionInput = {
  blockId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  embedId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  itemType: ItemType;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageCreateNestedManyWithoutCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutCollectionsInput>>>;
};

export type PageCreateWithoutCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemCreateNestedManyWithoutPageInput>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewCreateNestedManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPagesInput>;
};

export type CategoryCreateNestedManyWithoutPagesInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutPagesInput>>>;
};

export type ItemCreateNestedManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ItemCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<ItemCreateWithoutPageInput>>>;
  createMany?: InputMaybe<ItemCreateManyPageInputEnvelope>;
};

export type ItemCreateOrConnectWithoutPageInput = {
  create: ItemUncheckedCreateWithoutPageInput;
  where: ItemWhereUniqueInput;
};

export type ItemUncheckedCreateWithoutPageInput = {
  blockId?: InputMaybe<Scalars['String']>;
  collectionId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  embedId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  itemType: ItemType;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ItemCreateWithoutPageInput = {
  block?: InputMaybe<BlockCreateNestedOneWithoutItemsInput>;
  collection?: InputMaybe<CollectionCreateNestedOneWithoutItemsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  embed?: InputMaybe<EmbedCreateNestedOneWithoutItemsInput>;
  id?: InputMaybe<Scalars['String']>;
  itemType: ItemType;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type EmbedCreateNestedOneWithoutItemsInput = {
  connect?: InputMaybe<EmbedWhereUniqueInput>;
  connectOrCreate?: InputMaybe<EmbedCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<EmbedUncheckedCreateWithoutItemsInput>;
};

export type EmbedCreateOrConnectWithoutItemsInput = {
  create: EmbedUncheckedCreateWithoutItemsInput;
  where: EmbedWhereUniqueInput;
};

export type EmbedUncheckedCreateWithoutItemsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  embedCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type ItemCreateManyPageInputEnvelope = {
  data: ItemCreateManyPageInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ItemCreateManyPageInput = {
  blockId?: InputMaybe<Scalars['String']>;
  collectionId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  embedId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  itemType: ItemType;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageCollectionCreateNestedManyWithoutPagesInput = {
  connect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCollectionCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCollectionCreateWithoutPagesInput>>>;
};

export type PageCollectionCreateOrConnectWithoutPagesInput = {
  create: PageCollectionUncheckedCreateWithoutPagesInput;
  where: PageCollectionWhereUniqueInput;
};

export type PageCollectionUncheckedCreateWithoutPagesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageCollectionCreateWithoutPagesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPageCollectionsInput>;
};

export type WebsiteCreateNestedOneWithoutPageCollectionsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutPageCollectionsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutPageCollectionsInput>;
};

export type WebsiteCreateOrConnectWithoutPageCollectionsInput = {
  create: WebsiteUncheckedCreateWithoutPageCollectionsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutPageCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type AttachmentUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyWebsiteInputEnvelope>;
};

export type AttachmentCreateOrConnectWithoutWebsiteInput = {
  create: AttachmentUncheckedCreateWithoutWebsiteInput;
  where: AttachmentWhereUniqueInput;
};

export type AttachmentUncheckedCreateWithoutWebsiteInput = {
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  staked?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<AttachmentType>;
  upload: Scalars['Json'];
  url: Scalars['String'];
  userId?: InputMaybe<Scalars['String']>;
};

export type AttachmentCreateWithoutWebsiteInput = {
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  staked?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<AttachmentType>;
  upload: Scalars['Json'];
  url: Scalars['String'];
  user?: InputMaybe<UserCreateNestedOneWithoutAttachmentsInput>;
};

export type AttachmentCreateManyWebsiteInputEnvelope = {
  data: AttachmentCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AttachmentCreateManyWebsiteInput = {
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  staked?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<AttachmentType>;
  upload: Scalars['Json'];
  url: Scalars['String'];
  userId?: InputMaybe<Scalars['String']>;
};

export type CollectionUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CollectionCreateManyWebsiteInputEnvelope>;
};

export type CollectionCreateOrConnectWithoutWebsiteInput = {
  create: CollectionUncheckedCreateWithoutWebsiteInput;
  where: CollectionWhereUniqueInput;
};

export type CollectionUncheckedCreateWithoutWebsiteInput = {
  collectionStyle?: InputMaybe<CollectionStyle>;
  collectionType?: InputMaybe<CollectionType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutCollectionInput>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutCollectionsInput>;
  name: Scalars['String'];
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductUncheckedCreateNestedManyWithoutCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutCollectionsInput>>>;
};

export type ProductCreateOrConnectWithoutCollectionsInput = {
  create: ProductUncheckedCreateWithoutCollectionsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedCreateWithoutCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitUncheckedCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutProductsInput>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type DocumentUncheckedCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<DocumentCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<DocumentCreateWithoutProductsInput>>>;
};

export type DocumentCreateOrConnectWithoutProductsInput = {
  create: DocumentUncheckedCreateWithoutProductsInput;
  where: DocumentWhereUniqueInput;
};

export type DocumentUncheckedCreateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedCreateNestedManyWithoutDocumentInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedDocumentUncheckedCreateNestedManyWithoutDocumentInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedDocumentCreateOrConnectWithoutDocumentInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedDocumentCreateWithoutDocumentInput>>>;
  createMany?: InputMaybe<OrderedDocumentCreateManyDocumentInputEnvelope>;
};

export type OrderedDocumentCreateOrConnectWithoutDocumentInput = {
  create: OrderedDocumentUncheckedCreateWithoutDocumentInput;
  where: OrderedDocumentWhereUniqueInput;
};

export type OrderedDocumentUncheckedCreateWithoutDocumentInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedDocumentCreateWithoutDocumentInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProduct?: InputMaybe<OrderedProductCreateNestedOneWithoutOrderedDocumentsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateNestedOneWithoutOrderedDocumentsInput = {
  connect?: InputMaybe<OrderedProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderedProductCreateOrConnectWithoutOrderedDocumentsInput>;
  create?: InputMaybe<OrderedProductUncheckedCreateWithoutOrderedDocumentsInput>;
};

export type OrderedProductCreateOrConnectWithoutOrderedDocumentsInput = {
  create: OrderedProductUncheckedCreateWithoutOrderedDocumentsInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUncheckedCreateWithoutOrderedDocumentsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refundId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderedAudioUncheckedCreateNestedManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedAudioCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedAudioCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedAudioCreateManyOrderedProductInputEnvelope>;
};

export type OrderedAudioCreateOrConnectWithoutOrderedProductInput = {
  create: OrderedAudioUncheckedCreateWithoutOrderedProductInput;
  where: OrderedAudioWhereUniqueInput;
};

export type OrderedAudioUncheckedCreateWithoutOrderedProductInput = {
  audioId?: InputMaybe<Scalars['String']>;
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedAudioCreateWithoutOrderedProductInput = {
  audio?: InputMaybe<AudioCreateNestedOneWithoutOrderedAudiosInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type AudioCreateNestedOneWithoutOrderedAudiosInput = {
  connect?: InputMaybe<AudioWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AudioCreateOrConnectWithoutOrderedAudiosInput>;
  create?: InputMaybe<AudioUncheckedCreateWithoutOrderedAudiosInput>;
};

export type AudioCreateOrConnectWithoutOrderedAudiosInput = {
  create: AudioUncheckedCreateWithoutOrderedAudiosInput;
  where: AudioWhereUniqueInput;
};

export type AudioUncheckedCreateWithoutOrderedAudiosInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutAudiosInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type ProductUncheckedCreateNestedManyWithoutAudiosInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutAudiosInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutAudiosInput>>>;
};

export type ProductCreateOrConnectWithoutAudiosInput = {
  create: ProductUncheckedCreateWithoutAudiosInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedCreateWithoutAudiosInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitUncheckedCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutProductsInput>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type CollectionUncheckedCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CollectionCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<CollectionCreateWithoutProductsInput>>>;
};

export type CollectionCreateOrConnectWithoutProductsInput = {
  create: CollectionUncheckedCreateWithoutProductsInput;
  where: CollectionWhereUniqueInput;
};

export type CollectionUncheckedCreateWithoutProductsInput = {
  collectionStyle?: InputMaybe<CollectionStyle>;
  collectionType?: InputMaybe<CollectionType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutCollectionInput>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutCollectionsInput>;
  name: Scalars['String'];
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type RequestUncheckedCreateNestedManyWithoutCollectionInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutCollectionInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutCollectionInput>>>;
  createMany?: InputMaybe<RequestCreateManyCollectionInputEnvelope>;
};

export type RequestCreateOrConnectWithoutCollectionInput = {
  create: RequestUncheckedCreateWithoutCollectionInput;
  where: RequestWhereUniqueInput;
};

export type RequestUncheckedCreateWithoutCollectionInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  days: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description: Scalars['String'];
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message: Scalars['String'];
  name: Scalars['String'];
  pageId?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  requestAccept?: InputMaybe<RequestAccept>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeSessionId?: InputMaybe<Scalars['String']>;
  subject: Scalars['String'];
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestCreateWithoutCollectionInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutRequestsInput>;
  days: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description: Scalars['String'];
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message: Scalars['String'];
  name: Scalars['String'];
  page?: InputMaybe<PageCreateNestedOneWithoutRequestsInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  requestAccept?: InputMaybe<RequestAccept>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeSessionId?: InputMaybe<Scalars['String']>;
  subject: Scalars['String'];
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateNestedOneWithoutRequestsInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutRequestsInput>;
  create?: InputMaybe<CustomerUncheckedCreateWithoutRequestsInput>;
};

export type CustomerCreateOrConnectWithoutRequestsInput = {
  create: CustomerUncheckedCreateWithoutRequestsInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUncheckedCreateWithoutRequestsInput = {
  age?: InputMaybe<Scalars['Int']>;
  city?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderUncheckedCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutCustomerInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutCustomerInput>>>;
  createMany?: InputMaybe<OrderCreateManyCustomerInputEnvelope>;
};

export type OrderCreateOrConnectWithoutCustomerInput = {
  create: OrderUncheckedCreateWithoutCustomerInput;
  where: OrderWhereUniqueInput;
};

export type OrderUncheckedCreateWithoutCustomerInput = {
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<Scalars['DateTime']>;
  couponId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerContact?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  delivery_fee?: InputMaybe<Scalars['Float']>;
  delivery_name?: InputMaybe<Scalars['String']>;
  delivery_time?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutOrderInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: InputMaybe<Scalars['Float']>;
  paymentGateway?: InputMaybe<Scalars['String']>;
  paymentId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundUncheckedCreateNestedManyWithoutOrderInput>;
  requireShipping?: InputMaybe<Scalars['Boolean']>;
  sales_tax?: InputMaybe<Scalars['Float']>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<Scalars['Float']>;
  stripePrivateSessionId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  tracking_number?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderedProductUncheckedCreateNestedManyWithoutOrderInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutOrderInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutOrderInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyOrderInputEnvelope>;
};

export type OrderedProductCreateOrConnectWithoutOrderInput = {
  create: OrderedProductUncheckedCreateWithoutOrderInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUncheckedCreateWithoutOrderInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refundId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderedLinkUncheckedCreateNestedManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedLinkCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedLinkCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedLinkCreateManyOrderedProductInputEnvelope>;
};

export type OrderedLinkCreateOrConnectWithoutOrderedProductInput = {
  create: OrderedLinkUncheckedCreateWithoutOrderedProductInput;
  where: OrderedLinkWhereUniqueInput;
};

export type OrderedLinkUncheckedCreateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  linkId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
};

export type OrderedLinkCreateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  link?: InputMaybe<LinkCreateNestedOneWithoutOrderedLinksInput>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
};

export type LinkCreateNestedOneWithoutOrderedLinksInput = {
  connect?: InputMaybe<LinkWhereUniqueInput>;
  connectOrCreate?: InputMaybe<LinkCreateOrConnectWithoutOrderedLinksInput>;
  create?: InputMaybe<LinkUncheckedCreateWithoutOrderedLinksInput>;
};

export type LinkCreateOrConnectWithoutOrderedLinksInput = {
  create: LinkUncheckedCreateWithoutOrderedLinksInput;
  where: LinkWhereUniqueInput;
};

export type LinkUncheckedCreateWithoutOrderedLinksInput = {
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutLinksInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutLinksInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutLinksInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  userId?: InputMaybe<Scalars['String']>;
};

export type ProductUncheckedCreateNestedManyWithoutLinksInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutLinksInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutLinksInput>>>;
};

export type ProductCreateOrConnectWithoutLinksInput = {
  create: ProductUncheckedCreateWithoutLinksInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedCreateWithoutLinksInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitUncheckedCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutProductsInput>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type OrderedProductUncheckedCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutProductInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyProductInputEnvelope>;
};

export type OrderedProductCreateOrConnectWithoutProductInput = {
  create: OrderedProductUncheckedCreateWithoutProductInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUncheckedCreateWithoutProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refundId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderedPictureUncheckedCreateNestedManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedPictureCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedPictureCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedPictureCreateManyOrderedProductInputEnvelope>;
};

export type OrderedPictureCreateOrConnectWithoutOrderedProductInput = {
  create: OrderedPictureUncheckedCreateWithoutOrderedProductInput;
  where: OrderedPictureWhereUniqueInput;
};

export type OrderedPictureUncheckedCreateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  pictureId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedPictureCreateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  picture?: InputMaybe<PictureCreateNestedOneWithoutOrderedPicturesInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type PictureCreateNestedOneWithoutOrderedPicturesInput = {
  connect?: InputMaybe<PictureWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PictureCreateOrConnectWithoutOrderedPicturesInput>;
  create?: InputMaybe<PictureUncheckedCreateWithoutOrderedPicturesInput>;
};

export type PictureCreateOrConnectWithoutOrderedPicturesInput = {
  create: PictureUncheckedCreateWithoutOrderedPicturesInput;
  where: PictureWhereUniqueInput;
};

export type PictureUncheckedCreateWithoutOrderedPicturesInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutPicturesInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type ProductUncheckedCreateNestedManyWithoutPicturesInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutPicturesInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutPicturesInput>>>;
};

export type ProductCreateOrConnectWithoutPicturesInput = {
  create: ProductUncheckedCreateWithoutPicturesInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedCreateWithoutPicturesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitUncheckedCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutProductsInput>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type LinkUncheckedCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LinkCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<LinkCreateWithoutProductsInput>>>;
};

export type LinkCreateOrConnectWithoutProductsInput = {
  create: LinkUncheckedCreateWithoutProductsInput;
  where: LinkWhereUniqueInput;
};

export type LinkUncheckedCreateWithoutProductsInput = {
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutLinksInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutLinksInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedLinks?: InputMaybe<OrderedLinkUncheckedCreateNestedManyWithoutLinkInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  userId?: InputMaybe<Scalars['String']>;
};

export type OrderedLinkUncheckedCreateNestedManyWithoutLinkInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedLinkCreateOrConnectWithoutLinkInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedLinkCreateWithoutLinkInput>>>;
  createMany?: InputMaybe<OrderedLinkCreateManyLinkInputEnvelope>;
};

export type OrderedLinkCreateOrConnectWithoutLinkInput = {
  create: OrderedLinkUncheckedCreateWithoutLinkInput;
  where: OrderedLinkWhereUniqueInput;
};

export type OrderedLinkUncheckedCreateWithoutLinkInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
};

export type OrderedLinkCreateWithoutLinkInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProduct?: InputMaybe<OrderedProductCreateNestedOneWithoutOrderedLinksInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
};

export type OrderedProductCreateNestedOneWithoutOrderedLinksInput = {
  connect?: InputMaybe<OrderedProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderedProductCreateOrConnectWithoutOrderedLinksInput>;
  create?: InputMaybe<OrderedProductUncheckedCreateWithoutOrderedLinksInput>;
};

export type OrderedProductCreateOrConnectWithoutOrderedLinksInput = {
  create: OrderedProductUncheckedCreateWithoutOrderedLinksInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUncheckedCreateWithoutOrderedLinksInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refundId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderedRedeemableUncheckedCreateNestedManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedRedeemableCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedRedeemableCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedRedeemableCreateManyOrderedProductInputEnvelope>;
};

export type OrderedRedeemableCreateOrConnectWithoutOrderedProductInput = {
  create: OrderedRedeemableUncheckedCreateWithoutOrderedProductInput;
  where: OrderedRedeemableWhereUniqueInput;
};

export type OrderedRedeemableUncheckedCreateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  perLimit?: InputMaybe<Scalars['Int']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemableId?: InputMaybe<Scalars['String']>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedRedeemableCreateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  perLimit?: InputMaybe<Scalars['Int']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemable?: InputMaybe<RedeemableCreateNestedOneWithoutOrderedRedeemablesInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type RedeemableCreateNestedOneWithoutOrderedRedeemablesInput = {
  connect?: InputMaybe<RedeemableWhereUniqueInput>;
  connectOrCreate?: InputMaybe<RedeemableCreateOrConnectWithoutOrderedRedeemablesInput>;
  create?: InputMaybe<RedeemableUncheckedCreateWithoutOrderedRedeemablesInput>;
};

export type RedeemableCreateOrConnectWithoutOrderedRedeemablesInput = {
  create: RedeemableUncheckedCreateWithoutOrderedRedeemablesInput;
  where: RedeemableWhereUniqueInput;
};

export type RedeemableUncheckedCreateWithoutOrderedRedeemablesInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  perLimit: Scalars['Int'];
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutRedeemablesInput>;
  quantity: Scalars['Int'];
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type ProductUncheckedCreateNestedManyWithoutRedeemablesInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutRedeemablesInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutRedeemablesInput>>>;
};

export type ProductCreateOrConnectWithoutRedeemablesInput = {
  create: ProductUncheckedCreateWithoutRedeemablesInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedCreateWithoutRedeemablesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitUncheckedCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutProductsInput>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type PictureUncheckedCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PictureCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PictureCreateWithoutProductsInput>>>;
};

export type PictureCreateOrConnectWithoutProductsInput = {
  create: PictureUncheckedCreateWithoutProductsInput;
  where: PictureWhereUniqueInput;
};

export type PictureUncheckedCreateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedPictures?: InputMaybe<OrderedPictureUncheckedCreateNestedManyWithoutPictureInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedPictureUncheckedCreateNestedManyWithoutPictureInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedPictureCreateOrConnectWithoutPictureInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedPictureCreateWithoutPictureInput>>>;
  createMany?: InputMaybe<OrderedPictureCreateManyPictureInputEnvelope>;
};

export type OrderedPictureCreateOrConnectWithoutPictureInput = {
  create: OrderedPictureUncheckedCreateWithoutPictureInput;
  where: OrderedPictureWhereUniqueInput;
};

export type OrderedPictureUncheckedCreateWithoutPictureInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedPictureCreateWithoutPictureInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProduct?: InputMaybe<OrderedProductCreateNestedOneWithoutOrderedPicturesInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateNestedOneWithoutOrderedPicturesInput = {
  connect?: InputMaybe<OrderedProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderedProductCreateOrConnectWithoutOrderedPicturesInput>;
  create?: InputMaybe<OrderedProductUncheckedCreateWithoutOrderedPicturesInput>;
};

export type OrderedProductCreateOrConnectWithoutOrderedPicturesInput = {
  create: OrderedProductUncheckedCreateWithoutOrderedPicturesInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUncheckedCreateWithoutOrderedPicturesInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refundId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderedVideoUncheckedCreateNestedManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedVideoCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedVideoCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedVideoCreateManyOrderedProductInputEnvelope>;
};

export type OrderedVideoCreateOrConnectWithoutOrderedProductInput = {
  create: OrderedVideoUncheckedCreateWithoutOrderedProductInput;
  where: OrderedVideoWhereUniqueInput;
};

export type OrderedVideoUncheckedCreateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  videoId?: InputMaybe<Scalars['String']>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type OrderedVideoCreateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  video?: InputMaybe<VideoCreateNestedOneWithoutOrderedVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type VideoCreateNestedOneWithoutOrderedVideosInput = {
  connect?: InputMaybe<VideoWhereUniqueInput>;
  connectOrCreate?: InputMaybe<VideoCreateOrConnectWithoutOrderedVideosInput>;
  create?: InputMaybe<VideoUncheckedCreateWithoutOrderedVideosInput>;
};

export type VideoCreateOrConnectWithoutOrderedVideosInput = {
  create: VideoUncheckedCreateWithoutOrderedVideosInput;
  where: VideoWhereUniqueInput;
};

export type VideoUncheckedCreateWithoutOrderedVideosInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutVideosInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type ProductUncheckedCreateNestedManyWithoutVideosInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutVideosInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutVideosInput>>>;
};

export type ProductCreateOrConnectWithoutVideosInput = {
  create: ProductUncheckedCreateWithoutVideosInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedCreateWithoutVideosInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitUncheckedCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type ProductCollectionUncheckedCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCollectionCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCollectionCreateWithoutProductsInput>>>;
};

export type ProductCollectionCreateOrConnectWithoutProductsInput = {
  create: ProductCollectionUncheckedCreateWithoutProductsInput;
  where: ProductCollectionWhereUniqueInput;
};

export type ProductCollectionUncheckedCreateWithoutProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductCollectionCreateWithoutProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductCollectionsInput>;
};

export type WebsiteCreateNestedOneWithoutProductCollectionsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutProductCollectionsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutProductCollectionsInput>;
};

export type WebsiteCreateOrConnectWithoutProductCollectionsInput = {
  create: WebsiteUncheckedCreateWithoutProductCollectionsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutProductCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type CouponUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CouponCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CouponCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CouponCreateManyWebsiteInputEnvelope>;
};

export type CouponCreateOrConnectWithoutWebsiteInput = {
  create: CouponUncheckedCreateWithoutWebsiteInput;
  where: CouponWhereUniqueInput;
};

export type CouponUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  active_from?: InputMaybe<Scalars['DateTime']>;
  amount_off?: InputMaybe<Scalars['Float']>;
  code?: InputMaybe<Scalars['String']>;
  couponType: CouponType;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expire_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutCouponInput>;
  percent_off?: InputMaybe<Scalars['Float']>;
  type?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type OrderUncheckedCreateNestedManyWithoutCouponInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutCouponInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutCouponInput>>>;
  createMany?: InputMaybe<OrderCreateManyCouponInputEnvelope>;
};

export type OrderCreateOrConnectWithoutCouponInput = {
  create: OrderUncheckedCreateWithoutCouponInput;
  where: OrderWhereUniqueInput;
};

export type OrderUncheckedCreateWithoutCouponInput = {
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<Scalars['DateTime']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerContact?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  delivery_fee?: InputMaybe<Scalars['Float']>;
  delivery_name?: InputMaybe<Scalars['String']>;
  delivery_time?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutOrderInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: InputMaybe<Scalars['Float']>;
  paymentGateway?: InputMaybe<Scalars['String']>;
  paymentId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundUncheckedCreateNestedManyWithoutOrderInput>;
  requireShipping?: InputMaybe<Scalars['Boolean']>;
  sales_tax?: InputMaybe<Scalars['Float']>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<Scalars['Float']>;
  stripePrivateSessionId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  tracking_number?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type RefundUncheckedCreateNestedManyWithoutOrderInput = {
  connect?: InputMaybe<Array<InputMaybe<RefundWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RefundCreateOrConnectWithoutOrderInput>>>;
  create?: InputMaybe<Array<InputMaybe<RefundCreateWithoutOrderInput>>>;
  createMany?: InputMaybe<RefundCreateManyOrderInputEnvelope>;
};

export type RefundCreateOrConnectWithoutOrderInput = {
  create: RefundUncheckedCreateWithoutOrderInput;
  where: RefundWhereUniqueInput;
};

export type RefundUncheckedCreateWithoutOrderInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  amount?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutRefundInput>;
  received?: InputMaybe<Scalars['Boolean']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type OrderedProductUncheckedCreateNestedManyWithoutRefundInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutRefundInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutRefundInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyRefundInputEnvelope>;
};

export type OrderedProductCreateOrConnectWithoutRefundInput = {
  create: OrderedProductUncheckedCreateWithoutRefundInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUncheckedCreateWithoutRefundInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateWithoutRefundInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  order?: InputMaybe<OrderCreateNestedOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoCreateNestedManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutOrderedProductsInput>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrderedProductsInput>;
};

export type OrderCreateNestedOneWithoutOrderedProductsInput = {
  connect?: InputMaybe<OrderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderCreateOrConnectWithoutOrderedProductsInput>;
  create?: InputMaybe<OrderUncheckedCreateWithoutOrderedProductsInput>;
};

export type OrderCreateOrConnectWithoutOrderedProductsInput = {
  create: OrderUncheckedCreateWithoutOrderedProductsInput;
  where: OrderWhereUniqueInput;
};

export type OrderUncheckedCreateWithoutOrderedProductsInput = {
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<Scalars['DateTime']>;
  couponId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerContact?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  delivery_fee?: InputMaybe<Scalars['Float']>;
  delivery_name?: InputMaybe<Scalars['String']>;
  delivery_time?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: InputMaybe<Scalars['Float']>;
  paymentGateway?: InputMaybe<Scalars['String']>;
  paymentId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundUncheckedCreateNestedManyWithoutOrderInput>;
  requireShipping?: InputMaybe<Scalars['Boolean']>;
  sales_tax?: InputMaybe<Scalars['Float']>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<Scalars['Float']>;
  stripePrivateSessionId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  tracking_number?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderedAudioCreateNestedManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedAudioCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedAudioCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedAudioCreateManyOrderedProductInputEnvelope>;
};

export type OrderedAudioCreateManyOrderedProductInputEnvelope = {
  data: OrderedAudioCreateManyOrderedProductInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedAudioCreateManyOrderedProductInput = {
  audioId?: InputMaybe<Scalars['String']>;
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedDocumentCreateNestedManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedDocumentCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedDocumentCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedDocumentCreateManyOrderedProductInputEnvelope>;
};

export type OrderedDocumentCreateManyOrderedProductInputEnvelope = {
  data: OrderedDocumentCreateManyOrderedProductInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedDocumentCreateManyOrderedProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentId?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedLinkCreateNestedManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedLinkCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedLinkCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedLinkCreateManyOrderedProductInputEnvelope>;
};

export type OrderedLinkCreateManyOrderedProductInputEnvelope = {
  data: OrderedLinkCreateManyOrderedProductInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedLinkCreateManyOrderedProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  linkId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
};

export type OrderedPictureCreateNestedManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedPictureCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedPictureCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedPictureCreateManyOrderedProductInputEnvelope>;
};

export type OrderedPictureCreateManyOrderedProductInputEnvelope = {
  data: OrderedPictureCreateManyOrderedProductInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedPictureCreateManyOrderedProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  pictureId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedRedeemableCreateNestedManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedRedeemableCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedRedeemableCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedRedeemableCreateManyOrderedProductInputEnvelope>;
};

export type OrderedRedeemableCreateManyOrderedProductInputEnvelope = {
  data: OrderedRedeemableCreateManyOrderedProductInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedRedeemableCreateManyOrderedProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  perLimit?: InputMaybe<Scalars['Int']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemableId?: InputMaybe<Scalars['String']>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedVideoCreateNestedManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedVideoCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedVideoCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedVideoCreateManyOrderedProductInputEnvelope>;
};

export type OrderedVideoCreateManyOrderedProductInputEnvelope = {
  data: OrderedVideoCreateManyOrderedProductInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedVideoCreateManyOrderedProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  videoId?: InputMaybe<Scalars['String']>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type ProductCreateNestedOneWithoutOrderedProductsInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutOrderedProductsInput>;
  create?: InputMaybe<ProductUncheckedCreateWithoutOrderedProductsInput>;
};

export type ProductCreateOrConnectWithoutOrderedProductsInput = {
  create: ProductUncheckedCreateWithoutOrderedProductsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedCreateWithoutOrderedProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitUncheckedCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutProductsInput>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type RedeemableUncheckedCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RedeemableCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<RedeemableCreateWithoutProductsInput>>>;
};

export type RedeemableCreateOrConnectWithoutProductsInput = {
  create: RedeemableUncheckedCreateWithoutProductsInput;
  where: RedeemableWhereUniqueInput;
};

export type RedeemableUncheckedCreateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedCreateNestedManyWithoutRedeemableInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  perLimit: Scalars['Int'];
  quantity: Scalars['Int'];
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedRedeemableUncheckedCreateNestedManyWithoutRedeemableInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedRedeemableCreateOrConnectWithoutRedeemableInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedRedeemableCreateWithoutRedeemableInput>>>;
  createMany?: InputMaybe<OrderedRedeemableCreateManyRedeemableInputEnvelope>;
};

export type OrderedRedeemableCreateOrConnectWithoutRedeemableInput = {
  create: OrderedRedeemableUncheckedCreateWithoutRedeemableInput;
  where: OrderedRedeemableWhereUniqueInput;
};

export type OrderedRedeemableUncheckedCreateWithoutRedeemableInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  perLimit?: InputMaybe<Scalars['Int']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedRedeemableCreateWithoutRedeemableInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProduct?: InputMaybe<OrderedProductCreateNestedOneWithoutOrderedRedeemablesInput>;
  perLimit?: InputMaybe<Scalars['Int']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateNestedOneWithoutOrderedRedeemablesInput = {
  connect?: InputMaybe<OrderedProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderedProductCreateOrConnectWithoutOrderedRedeemablesInput>;
  create?: InputMaybe<OrderedProductUncheckedCreateWithoutOrderedRedeemablesInput>;
};

export type OrderedProductCreateOrConnectWithoutOrderedRedeemablesInput = {
  create: OrderedProductUncheckedCreateWithoutOrderedRedeemablesInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUncheckedCreateWithoutOrderedRedeemablesInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refundId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderedRedeemableCreateManyRedeemableInputEnvelope = {
  data: OrderedRedeemableCreateManyRedeemableInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedRedeemableCreateManyRedeemableInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  perLimit?: InputMaybe<Scalars['Int']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type RedeemableCreateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedRedeemables?: InputMaybe<OrderedRedeemableCreateNestedManyWithoutRedeemableInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  perLimit: Scalars['Int'];
  quantity: Scalars['Int'];
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutRedeemablesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedRedeemableCreateNestedManyWithoutRedeemableInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedRedeemableCreateOrConnectWithoutRedeemableInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedRedeemableCreateWithoutRedeemableInput>>>;
  createMany?: InputMaybe<OrderedRedeemableCreateManyRedeemableInputEnvelope>;
};

export type UserCreateNestedOneWithoutRedeemablesInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutRedeemablesInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutRedeemablesInput>;
};

export type UserCreateOrConnectWithoutRedeemablesInput = {
  create: UserUncheckedCreateWithoutRedeemablesInput;
  where: UserWhereUniqueInput;
};

export type UserUncheckedCreateWithoutRedeemablesInput = {
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedUncheckedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type BlockUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<BlockCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<BlockCreateWithoutUserInput>>>;
  createMany?: InputMaybe<BlockCreateManyUserInputEnvelope>;
};

export type BlockCreateOrConnectWithoutUserInput = {
  create: BlockUncheckedCreateWithoutUserInput;
  where: BlockWhereUniqueInput;
};

export type BlockUncheckedCreateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  favourite?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutBlockInput>;
  name: Scalars['String'];
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutBlocksInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type BlockCreateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  favourite?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  items?: InputMaybe<ItemCreateNestedManyWithoutBlockInput>;
  name: Scalars['String'];
  products?: InputMaybe<ProductCreateNestedManyWithoutBlocksInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ItemCreateNestedManyWithoutBlockInput = {
  connect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ItemCreateOrConnectWithoutBlockInput>>>;
  create?: InputMaybe<Array<InputMaybe<ItemCreateWithoutBlockInput>>>;
  createMany?: InputMaybe<ItemCreateManyBlockInputEnvelope>;
};

export type ItemCreateManyBlockInputEnvelope = {
  data: ItemCreateManyBlockInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ItemCreateManyBlockInput = {
  collectionId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  embedId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  itemType: ItemType;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductCreateNestedManyWithoutBlocksInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutBlocksInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutBlocksInput>>>;
};

export type ProductCreateWithoutBlocksInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutProductsInput>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type AudioCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCreateWithoutProductsInput>>>;
};

export type CategoryCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutProductsInput>>>;
};

export type CategoryCreateWithoutProductsInput = {
  children?: InputMaybe<CategoryCreateNestedManyWithoutParentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutCategoriesInput>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageCreateNestedManyWithoutCategoriesInput>;
  parent?: InputMaybe<CategoryCreateNestedOneWithoutChildrenInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCategoriesInput>;
};

export type PageCreateNestedManyWithoutCategoriesInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutCategoriesInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutCategoriesInput>>>;
};

export type PageCreateWithoutCategoriesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemCreateNestedManyWithoutPageInput>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewCreateNestedManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPagesInput>;
};

export type CollectionCreateNestedManyWithoutPagesInput = {
  connect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CollectionCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<CollectionCreateWithoutPagesInput>>>;
};

export type CollectionCreateWithoutPagesInput = {
  collectionStyle?: InputMaybe<CollectionStyle>;
  collectionType?: InputMaybe<CollectionType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<ItemCreateNestedManyWithoutCollectionInput>;
  links?: InputMaybe<LinkCreateNestedManyWithoutCollectionsInput>;
  name: Scalars['String'];
  products?: InputMaybe<ProductCreateNestedManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCollectionsInput>;
};

export type LinkCreateNestedManyWithoutCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LinkCreateOrConnectWithoutCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<LinkCreateWithoutCollectionsInput>>>;
};

export type LinkCreateWithoutCollectionsInput = {
  categories?: InputMaybe<CategoryCreateNestedManyWithoutLinksInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedLinks?: InputMaybe<OrderedLinkCreateNestedManyWithoutLinkInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutLinksInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  user?: InputMaybe<UserCreateNestedOneWithoutLinksInput>;
};

export type CategoryCreateNestedManyWithoutLinksInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutLinksInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutLinksInput>>>;
};

export type CategoryCreateWithoutLinksInput = {
  children?: InputMaybe<CategoryCreateNestedManyWithoutParentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageCreateNestedManyWithoutCategoriesInput>;
  parent?: InputMaybe<CategoryCreateNestedOneWithoutChildrenInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCategoriesInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCategoriesInput>;
};

export type CategoryCreateNestedOneWithoutChildrenInput = {
  connect?: InputMaybe<CategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryCreateOrConnectWithoutChildrenInput>;
  create?: InputMaybe<CategoryUncheckedCreateWithoutChildrenInput>;
};

export type CategoryCreateOrConnectWithoutChildrenInput = {
  create: CategoryUncheckedCreateWithoutChildrenInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryUncheckedCreateWithoutChildrenInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutCategoriesInput>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutCategoriesInput>;
  parentId?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutCategoriesInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductCreateNestedManyWithoutCategoriesInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutCategoriesInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutCategoriesInput>>>;
};

export type ProductCreateWithoutCategoriesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutProductsInput>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type BlockCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<BlockCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<BlockCreateWithoutProductsInput>>>;
};

export type BlockCreateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  favourite?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  items?: InputMaybe<ItemCreateNestedManyWithoutBlockInput>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutBlocksInput>;
};

export type UserCreateNestedOneWithoutBlocksInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutBlocksInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutBlocksInput>;
};

export type UserCreateOrConnectWithoutBlocksInput = {
  create: UserUncheckedCreateWithoutBlocksInput;
  where: UserWhereUniqueInput;
};

export type UserUncheckedCreateWithoutBlocksInput = {
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedUncheckedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type CustomerUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CustomerCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<CustomerCreateWithoutUserInput>>>;
  createMany?: InputMaybe<CustomerCreateManyUserInputEnvelope>;
};

export type CustomerCreateOrConnectWithoutUserInput = {
  create: CustomerUncheckedCreateWithoutUserInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUncheckedCreateWithoutUserInput = {
  age?: InputMaybe<Scalars['Int']>;
  city?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type RequestUncheckedCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutCustomerInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutCustomerInput>>>;
  createMany?: InputMaybe<RequestCreateManyCustomerInputEnvelope>;
};

export type RequestCreateOrConnectWithoutCustomerInput = {
  create: RequestUncheckedCreateWithoutCustomerInput;
  where: RequestWhereUniqueInput;
};

export type RequestUncheckedCreateWithoutCustomerInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  collectionId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  days: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description: Scalars['String'];
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message: Scalars['String'];
  name: Scalars['String'];
  pageId?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  requestAccept?: InputMaybe<RequestAccept>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeSessionId?: InputMaybe<Scalars['String']>;
  subject: Scalars['String'];
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestCreateWithoutCustomerInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  collection?: InputMaybe<CollectionCreateNestedOneWithoutRequestsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  days: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description: Scalars['String'];
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message: Scalars['String'];
  name: Scalars['String'];
  page?: InputMaybe<PageCreateNestedOneWithoutRequestsInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  requestAccept?: InputMaybe<RequestAccept>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeSessionId?: InputMaybe<Scalars['String']>;
  subject: Scalars['String'];
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type CollectionCreateNestedOneWithoutRequestsInput = {
  connect?: InputMaybe<CollectionWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CollectionCreateOrConnectWithoutRequestsInput>;
  create?: InputMaybe<CollectionUncheckedCreateWithoutRequestsInput>;
};

export type CollectionCreateOrConnectWithoutRequestsInput = {
  create: CollectionUncheckedCreateWithoutRequestsInput;
  where: CollectionWhereUniqueInput;
};

export type CollectionUncheckedCreateWithoutRequestsInput = {
  collectionStyle?: InputMaybe<CollectionStyle>;
  collectionType?: InputMaybe<CollectionType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutCollectionInput>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutCollectionsInput>;
  name: Scalars['String'];
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageCreateNestedOneWithoutRequestsInput = {
  connect?: InputMaybe<PageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PageCreateOrConnectWithoutRequestsInput>;
  create?: InputMaybe<PageUncheckedCreateWithoutRequestsInput>;
};

export type PageCreateOrConnectWithoutRequestsInput = {
  create: PageUncheckedCreateWithoutRequestsInput;
  where: PageWhereUniqueInput;
};

export type PageUncheckedCreateWithoutRequestsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutPageInput>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedCreateNestedManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ItemUncheckedCreateNestedManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ItemCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<ItemCreateWithoutPageInput>>>;
  createMany?: InputMaybe<ItemCreateManyPageInputEnvelope>;
};

export type PageCollectionUncheckedCreateNestedManyWithoutPagesInput = {
  connect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCollectionCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCollectionCreateWithoutPagesInput>>>;
};

export type PageViewUncheckedCreateNestedManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageViewCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageViewCreateWithoutPageInput>>>;
  createMany?: InputMaybe<PageViewCreateManyPageInputEnvelope>;
};

export type PageViewCreateOrConnectWithoutPageInput = {
  create: PageViewUncheckedCreateWithoutPageInput;
  where: PageViewWhereUniqueInput;
};

export type PageViewUncheckedCreateWithoutPageInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageViewCreateWithoutPageInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageViewCreateManyPageInputEnvelope = {
  data: PageViewCreateManyPageInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type PageViewCreateManyPageInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type RequestClickUncheckedCreateNestedManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutPageInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyPageInputEnvelope>;
};

export type RequestClickCreateOrConnectWithoutPageInput = {
  create: RequestClickUncheckedCreateWithoutPageInput;
  where: RequestClickWhereUniqueInput;
};

export type RequestClickUncheckedCreateWithoutPageInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type RequestClickCreateWithoutPageInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type RequestClickCreateManyPageInputEnvelope = {
  data: RequestClickCreateManyPageInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RequestClickCreateManyPageInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type RequestCreateManyCustomerInputEnvelope = {
  data: RequestCreateManyCustomerInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RequestCreateManyCustomerInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  collectionId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  days: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description: Scalars['String'];
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message: Scalars['String'];
  name: Scalars['String'];
  pageId?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  requestAccept?: InputMaybe<RequestAccept>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeSessionId?: InputMaybe<Scalars['String']>;
  subject: Scalars['String'];
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateWithoutUserInput = {
  age?: InputMaybe<Scalars['Int']>;
  city?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCustomersInput>;
};

export type OrderCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutCustomerInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutCustomerInput>>>;
  createMany?: InputMaybe<OrderCreateManyCustomerInputEnvelope>;
};

export type OrderCreateWithoutCustomerInput = {
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<Scalars['DateTime']>;
  coupon?: InputMaybe<CouponCreateNestedOneWithoutOrdersInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerContact?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  delivery_fee?: InputMaybe<Scalars['Float']>;
  delivery_name?: InputMaybe<Scalars['String']>;
  delivery_time?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutOrderInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: InputMaybe<Scalars['Float']>;
  paymentGateway?: InputMaybe<Scalars['String']>;
  paymentId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundCreateNestedManyWithoutOrderInput>;
  requireShipping?: InputMaybe<Scalars['Boolean']>;
  sales_tax?: InputMaybe<Scalars['Float']>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<Scalars['Float']>;
  stripePrivateSessionId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  tracking_number?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrdersInput>;
};

export type CouponCreateNestedOneWithoutOrdersInput = {
  connect?: InputMaybe<CouponWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CouponCreateOrConnectWithoutOrdersInput>;
  create?: InputMaybe<CouponUncheckedCreateWithoutOrdersInput>;
};

export type CouponCreateOrConnectWithoutOrdersInput = {
  create: CouponUncheckedCreateWithoutOrdersInput;
  where: CouponWhereUniqueInput;
};

export type CouponUncheckedCreateWithoutOrdersInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  active_from?: InputMaybe<Scalars['DateTime']>;
  amount_off?: InputMaybe<Scalars['Float']>;
  code?: InputMaybe<Scalars['String']>;
  couponType: CouponType;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expire_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  percent_off?: InputMaybe<Scalars['Float']>;
  type?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateNestedManyWithoutOrderInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutOrderInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutOrderInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyOrderInputEnvelope>;
};

export type OrderedProductCreateWithoutOrderInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoCreateNestedManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutOrderedProductsInput>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refund?: InputMaybe<RefundCreateNestedOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrderedProductsInput>;
};

export type RefundCreateNestedOneWithoutOrderedProductsInput = {
  connect?: InputMaybe<RefundWhereUniqueInput>;
  connectOrCreate?: InputMaybe<RefundCreateOrConnectWithoutOrderedProductsInput>;
  create?: InputMaybe<RefundUncheckedCreateWithoutOrderedProductsInput>;
};

export type RefundCreateOrConnectWithoutOrderedProductsInput = {
  create: RefundUncheckedCreateWithoutOrderedProductsInput;
  where: RefundWhereUniqueInput;
};

export type RefundUncheckedCreateWithoutOrderedProductsInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  amount?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  orderId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type WebsiteCreateNestedOneWithoutOrderedProductsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutOrderedProductsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutOrderedProductsInput>;
};

export type WebsiteCreateOrConnectWithoutOrderedProductsInput = {
  create: WebsiteUncheckedCreateWithoutOrderedProductsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutOrderedProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type CustomerUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CustomerCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CustomerCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CustomerCreateManyWebsiteInputEnvelope>;
};

export type CustomerCreateOrConnectWithoutWebsiteInput = {
  create: CustomerUncheckedCreateWithoutWebsiteInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUncheckedCreateWithoutWebsiteInput = {
  age?: InputMaybe<Scalars['Int']>;
  city?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateWithoutWebsiteInput = {
  age?: InputMaybe<Scalars['Int']>;
  city?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutCustomersInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestCreateNestedManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutCustomerInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutCustomerInput>>>;
  createMany?: InputMaybe<RequestCreateManyCustomerInputEnvelope>;
};

export type UserCreateNestedOneWithoutCustomersInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutCustomersInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutCustomersInput>;
};

export type UserCreateOrConnectWithoutCustomersInput = {
  create: UserUncheckedCreateWithoutCustomersInput;
  where: UserWhereUniqueInput;
};

export type UserUncheckedCreateWithoutCustomersInput = {
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedUncheckedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type DocumentUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<DocumentCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<DocumentCreateWithoutUserInput>>>;
  createMany?: InputMaybe<DocumentCreateManyUserInputEnvelope>;
};

export type DocumentCreateOrConnectWithoutUserInput = {
  create: DocumentUncheckedCreateWithoutUserInput;
  where: DocumentWhereUniqueInput;
};

export type DocumentUncheckedCreateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedCreateNestedManyWithoutDocumentInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutDocumentsInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type DocumentCreateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedDocuments?: InputMaybe<OrderedDocumentCreateNestedManyWithoutDocumentInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutDocumentsInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedDocumentCreateNestedManyWithoutDocumentInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedDocumentCreateOrConnectWithoutDocumentInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedDocumentCreateWithoutDocumentInput>>>;
  createMany?: InputMaybe<OrderedDocumentCreateManyDocumentInputEnvelope>;
};

export type OrderedDocumentCreateManyDocumentInputEnvelope = {
  data: OrderedDocumentCreateManyDocumentInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedDocumentCreateManyDocumentInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type ProductCreateNestedManyWithoutDocumentsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutDocumentsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutDocumentsInput>>>;
};

export type ProductCreateWithoutDocumentsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutProductsInput>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type CollectionCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CollectionCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<CollectionCreateWithoutProductsInput>>>;
};

export type CollectionCreateWithoutProductsInput = {
  collectionStyle?: InputMaybe<CollectionStyle>;
  collectionType?: InputMaybe<CollectionType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<ItemCreateNestedManyWithoutCollectionInput>;
  links?: InputMaybe<LinkCreateNestedManyWithoutCollectionsInput>;
  name: Scalars['String'];
  pages?: InputMaybe<PageCreateNestedManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCollectionsInput>;
};

export type RequestCreateNestedManyWithoutCollectionInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutCollectionInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutCollectionInput>>>;
  createMany?: InputMaybe<RequestCreateManyCollectionInputEnvelope>;
};

export type RequestCreateManyCollectionInputEnvelope = {
  data: RequestCreateManyCollectionInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RequestCreateManyCollectionInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  days: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description: Scalars['String'];
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message: Scalars['String'];
  name: Scalars['String'];
  pageId?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  requestAccept?: InputMaybe<RequestAccept>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeSessionId?: InputMaybe<Scalars['String']>;
  subject: Scalars['String'];
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type WebsiteCreateNestedOneWithoutCollectionsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutCollectionsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutCollectionsInput>;
};

export type WebsiteCreateOrConnectWithoutCollectionsInput = {
  create: WebsiteUncheckedCreateWithoutCollectionsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type GroupUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<GroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<GroupCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<GroupCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<GroupCreateManyWebsiteInputEnvelope>;
};

export type GroupCreateOrConnectWithoutWebsiteInput = {
  create: GroupUncheckedCreateWithoutWebsiteInput;
  where: GroupWhereUniqueInput;
};

export type GroupUncheckedCreateWithoutWebsiteInput = {
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
};

export type GroupCreateWithoutWebsiteInput = {
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
};

export type GroupCreateManyWebsiteInputEnvelope = {
  data: GroupCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type GroupCreateManyWebsiteInput = {
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
};

export type NotificationUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<NotificationCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<NotificationCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<NotificationCreateManyWebsiteInputEnvelope>;
};

export type NotificationCreateOrConnectWithoutWebsiteInput = {
  create: NotificationUncheckedCreateWithoutWebsiteInput;
  where: NotificationWhereUniqueInput;
};

export type NotificationUncheckedCreateWithoutWebsiteInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type NotificationCreateWithoutWebsiteInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<UserCreateNestedOneWithoutNotificationsInput>;
};

export type UserCreateNestedOneWithoutNotificationsInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutNotificationsInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutNotificationsInput>;
};

export type UserCreateOrConnectWithoutNotificationsInput = {
  create: UserUncheckedCreateWithoutNotificationsInput;
  where: UserWhereUniqueInput;
};

export type UserUncheckedCreateWithoutNotificationsInput = {
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedUncheckedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type EmbedUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<EmbedWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EmbedCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<EmbedCreateWithoutUserInput>>>;
  createMany?: InputMaybe<EmbedCreateManyUserInputEnvelope>;
};

export type EmbedCreateOrConnectWithoutUserInput = {
  create: EmbedUncheckedCreateWithoutUserInput;
  where: EmbedWhereUniqueInput;
};

export type EmbedUncheckedCreateWithoutUserInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  embedCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutEmbedInput>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ItemUncheckedCreateNestedManyWithoutEmbedInput = {
  connect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ItemCreateOrConnectWithoutEmbedInput>>>;
  create?: InputMaybe<Array<InputMaybe<ItemCreateWithoutEmbedInput>>>;
  createMany?: InputMaybe<ItemCreateManyEmbedInputEnvelope>;
};

export type ItemCreateOrConnectWithoutEmbedInput = {
  create: ItemUncheckedCreateWithoutEmbedInput;
  where: ItemWhereUniqueInput;
};

export type ItemUncheckedCreateWithoutEmbedInput = {
  blockId?: InputMaybe<Scalars['String']>;
  collectionId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  itemType: ItemType;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ItemCreateWithoutEmbedInput = {
  block?: InputMaybe<BlockCreateNestedOneWithoutItemsInput>;
  collection?: InputMaybe<CollectionCreateNestedOneWithoutItemsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  itemType: ItemType;
  name?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<PageCreateNestedOneWithoutItemsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageCreateNestedOneWithoutItemsInput = {
  connect?: InputMaybe<PageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PageCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<PageUncheckedCreateWithoutItemsInput>;
};

export type PageCreateOrConnectWithoutItemsInput = {
  create: PageUncheckedCreateWithoutItemsInput;
  where: PageWhereUniqueInput;
};

export type PageUncheckedCreateWithoutItemsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedCreateNestedManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type RequestUncheckedCreateNestedManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutPageInput>>>;
  createMany?: InputMaybe<RequestCreateManyPageInputEnvelope>;
};

export type RequestCreateOrConnectWithoutPageInput = {
  create: RequestUncheckedCreateWithoutPageInput;
  where: RequestWhereUniqueInput;
};

export type RequestUncheckedCreateWithoutPageInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  collectionId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  days: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description: Scalars['String'];
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message: Scalars['String'];
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  requestAccept?: InputMaybe<RequestAccept>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeSessionId?: InputMaybe<Scalars['String']>;
  subject: Scalars['String'];
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestCreateWithoutPageInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  collection?: InputMaybe<CollectionCreateNestedOneWithoutRequestsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutRequestsInput>;
  days: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description: Scalars['String'];
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message: Scalars['String'];
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  requestAccept?: InputMaybe<RequestAccept>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeSessionId?: InputMaybe<Scalars['String']>;
  subject: Scalars['String'];
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestCreateManyPageInputEnvelope = {
  data: RequestCreateManyPageInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RequestCreateManyPageInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  collectionId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  days: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description: Scalars['String'];
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message: Scalars['String'];
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  requestAccept?: InputMaybe<RequestAccept>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeSessionId?: InputMaybe<Scalars['String']>;
  subject: Scalars['String'];
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type ItemCreateManyEmbedInputEnvelope = {
  data: ItemCreateManyEmbedInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ItemCreateManyEmbedInput = {
  blockId?: InputMaybe<Scalars['String']>;
  collectionId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  itemType: ItemType;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type EmbedCreateWithoutUserInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  embedCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<ItemCreateNestedManyWithoutEmbedInput>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ItemCreateNestedManyWithoutEmbedInput = {
  connect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ItemCreateOrConnectWithoutEmbedInput>>>;
  create?: InputMaybe<Array<InputMaybe<ItemCreateWithoutEmbedInput>>>;
  createMany?: InputMaybe<ItemCreateManyEmbedInputEnvelope>;
};

export type EmbedCreateManyUserInputEnvelope = {
  data: EmbedCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type EmbedCreateManyUserInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  embedCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type LinkUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LinkCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<LinkCreateWithoutUserInput>>>;
  createMany?: InputMaybe<LinkCreateManyUserInputEnvelope>;
};

export type LinkCreateOrConnectWithoutUserInput = {
  create: LinkUncheckedCreateWithoutUserInput;
  where: LinkWhereUniqueInput;
};

export type LinkUncheckedCreateWithoutUserInput = {
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutLinksInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutLinksInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedLinks?: InputMaybe<OrderedLinkUncheckedCreateNestedManyWithoutLinkInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutLinksInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
};

export type LinkCreateWithoutUserInput = {
  categories?: InputMaybe<CategoryCreateNestedManyWithoutLinksInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutLinksInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedLinks?: InputMaybe<OrderedLinkCreateNestedManyWithoutLinkInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutLinksInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
};

export type OrderedLinkCreateNestedManyWithoutLinkInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedLinkCreateOrConnectWithoutLinkInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedLinkCreateWithoutLinkInput>>>;
  createMany?: InputMaybe<OrderedLinkCreateManyLinkInputEnvelope>;
};

export type OrderedLinkCreateManyLinkInputEnvelope = {
  data: OrderedLinkCreateManyLinkInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedLinkCreateManyLinkInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
};

export type ProductCreateNestedManyWithoutLinksInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutLinksInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutLinksInput>>>;
};

export type ProductCreateWithoutLinksInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutProductsInput>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type DocumentCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<DocumentCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<DocumentCreateWithoutProductsInput>>>;
};

export type DocumentCreateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedDocuments?: InputMaybe<OrderedDocumentCreateNestedManyWithoutDocumentInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutDocumentsInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type UserCreateNestedOneWithoutDocumentsInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutDocumentsInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutDocumentsInput>;
};

export type UserCreateOrConnectWithoutDocumentsInput = {
  create: UserUncheckedCreateWithoutDocumentsInput;
  where: UserWhereUniqueInput;
};

export type UserUncheckedCreateWithoutDocumentsInput = {
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedUncheckedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type LoginTokenUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LoginTokenCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<LoginTokenCreateWithoutUserInput>>>;
  createMany?: InputMaybe<LoginTokenCreateManyUserInputEnvelope>;
};

export type LoginTokenCreateOrConnectWithoutUserInput = {
  create: LoginTokenUncheckedCreateWithoutUserInput;
  where: LoginTokenWhereUniqueInput;
};

export type LoginTokenUncheckedCreateWithoutUserInput = {
  approved?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  domain: Scalars['String'];
  email: Scalars['String'];
  expires: Scalars['DateTime'];
  geo: Scalars['String'];
  id?: InputMaybe<Scalars['String']>;
  ip: Scalars['String'];
  secret: Scalars['String'];
  userAgent: Scalars['String'];
  userAgentRaw: Scalars['String'];
};

export type LoginTokenCreateWithoutUserInput = {
  approved?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  domain: Scalars['String'];
  email: Scalars['String'];
  expires: Scalars['DateTime'];
  geo: Scalars['String'];
  id?: InputMaybe<Scalars['String']>;
  ip: Scalars['String'];
  secret: Scalars['String'];
  userAgent: Scalars['String'];
  userAgentRaw: Scalars['String'];
};

export type LoginTokenCreateManyUserInputEnvelope = {
  data: LoginTokenCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type LoginTokenCreateManyUserInput = {
  approved?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  domain: Scalars['String'];
  email: Scalars['String'];
  expires: Scalars['DateTime'];
  geo: Scalars['String'];
  id?: InputMaybe<Scalars['String']>;
  ip: Scalars['String'];
  secret: Scalars['String'];
  userAgent: Scalars['String'];
  userAgentRaw: Scalars['String'];
};

export type NotificationUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<NotificationCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<NotificationCreateWithoutUserInput>>>;
  createMany?: InputMaybe<NotificationCreateManyUserInputEnvelope>;
};

export type NotificationCreateOrConnectWithoutUserInput = {
  create: NotificationUncheckedCreateWithoutUserInput;
  where: NotificationWhereUniqueInput;
};

export type NotificationUncheckedCreateWithoutUserInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type NotificationCreateWithoutUserInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutNotificationsInput>;
};

export type WebsiteCreateNestedOneWithoutNotificationsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutNotificationsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutNotificationsInput>;
};

export type WebsiteCreateOrConnectWithoutNotificationsInput = {
  create: WebsiteUncheckedCreateWithoutNotificationsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutNotificationsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyWebsiteInputEnvelope>;
};

export type OrderedProductCreateOrConnectWithoutWebsiteInput = {
  create: OrderedProductUncheckedCreateWithoutWebsiteInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUncheckedCreateWithoutWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refundId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateWithoutWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  order?: InputMaybe<OrderCreateNestedOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoCreateNestedManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutOrderedProductsInput>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refund?: InputMaybe<RefundCreateNestedOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateManyWebsiteInputEnvelope = {
  data: OrderedProductCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedProductCreateManyWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderId?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refundId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<OrderCreateManyWebsiteInputEnvelope>;
};

export type OrderCreateOrConnectWithoutWebsiteInput = {
  create: OrderUncheckedCreateWithoutWebsiteInput;
  where: OrderWhereUniqueInput;
};

export type OrderUncheckedCreateWithoutWebsiteInput = {
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<Scalars['DateTime']>;
  couponId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerContact?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  delivery_fee?: InputMaybe<Scalars['Float']>;
  delivery_name?: InputMaybe<Scalars['String']>;
  delivery_time?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutOrderInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: InputMaybe<Scalars['Float']>;
  paymentGateway?: InputMaybe<Scalars['String']>;
  paymentId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundUncheckedCreateNestedManyWithoutOrderInput>;
  requireShipping?: InputMaybe<Scalars['Boolean']>;
  sales_tax?: InputMaybe<Scalars['Float']>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<Scalars['Float']>;
  stripePrivateSessionId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  tracking_number?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderCreateWithoutWebsiteInput = {
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<Scalars['DateTime']>;
  coupon?: InputMaybe<CouponCreateNestedOneWithoutOrdersInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutOrdersInput>;
  customerContact?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  delivery_fee?: InputMaybe<Scalars['Float']>;
  delivery_name?: InputMaybe<Scalars['String']>;
  delivery_time?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutOrderInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: InputMaybe<Scalars['Float']>;
  paymentGateway?: InputMaybe<Scalars['String']>;
  paymentId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundCreateNestedManyWithoutOrderInput>;
  requireShipping?: InputMaybe<Scalars['Boolean']>;
  sales_tax?: InputMaybe<Scalars['Float']>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<Scalars['Float']>;
  stripePrivateSessionId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  tracking_number?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateNestedOneWithoutOrdersInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutOrdersInput>;
  create?: InputMaybe<CustomerUncheckedCreateWithoutOrdersInput>;
};

export type CustomerCreateOrConnectWithoutOrdersInput = {
  create: CustomerUncheckedCreateWithoutOrdersInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUncheckedCreateWithoutOrdersInput = {
  age?: InputMaybe<Scalars['Int']>;
  city?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type RefundCreateNestedManyWithoutOrderInput = {
  connect?: InputMaybe<Array<InputMaybe<RefundWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RefundCreateOrConnectWithoutOrderInput>>>;
  create?: InputMaybe<Array<InputMaybe<RefundCreateWithoutOrderInput>>>;
  createMany?: InputMaybe<RefundCreateManyOrderInputEnvelope>;
};

export type RefundCreateWithoutOrderInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  amount?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutRefundInput>;
  received?: InputMaybe<Scalars['Boolean']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type OrderedProductCreateNestedManyWithoutRefundInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutRefundInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutRefundInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyRefundInputEnvelope>;
};

export type OrderedProductCreateManyRefundInputEnvelope = {
  data: OrderedProductCreateManyRefundInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedProductCreateManyRefundInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderId?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type RefundCreateManyOrderInputEnvelope = {
  data: RefundCreateManyOrderInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RefundCreateManyOrderInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  amount?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type OrderCreateManyWebsiteInputEnvelope = {
  data: OrderCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderCreateManyWebsiteInput = {
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<Scalars['DateTime']>;
  couponId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerContact?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  delivery_fee?: InputMaybe<Scalars['Float']>;
  delivery_name?: InputMaybe<Scalars['String']>;
  delivery_time?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: InputMaybe<Scalars['Float']>;
  paymentGateway?: InputMaybe<Scalars['String']>;
  paymentId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  requireShipping?: InputMaybe<Scalars['Boolean']>;
  sales_tax?: InputMaybe<Scalars['Float']>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<Scalars['Float']>;
  stripePrivateSessionId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  tracking_number?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<PageCollectionCreateManyWebsiteInputEnvelope>;
};

export type PageCollectionCreateOrConnectWithoutWebsiteInput = {
  create: PageCollectionUncheckedCreateWithoutWebsiteInput;
  where: PageCollectionWhereUniqueInput;
};

export type PageCollectionUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutPageCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageUncheckedCreateNestedManyWithoutPageCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutPageCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutPageCollectionsInput>>>;
};

export type PageCreateOrConnectWithoutPageCollectionsInput = {
  create: PageUncheckedCreateWithoutPageCollectionsInput;
  where: PageWhereUniqueInput;
};

export type PageUncheckedCreateWithoutPageCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutPageInput>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageViews?: InputMaybe<PageViewUncheckedCreateNestedManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageCreateWithoutPageCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemCreateNestedManyWithoutPageInput>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageViews?: InputMaybe<PageViewCreateNestedManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPagesInput>;
};

export type PageViewCreateNestedManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageViewCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageViewCreateWithoutPageInput>>>;
  createMany?: InputMaybe<PageViewCreateManyPageInputEnvelope>;
};

export type RequestClickCreateNestedManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutPageInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyPageInputEnvelope>;
};

export type RequestCreateNestedManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutPageInput>>>;
  createMany?: InputMaybe<RequestCreateManyPageInputEnvelope>;
};

export type WebsiteCreateNestedOneWithoutPagesInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutPagesInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutPagesInput>;
};

export type WebsiteCreateOrConnectWithoutPagesInput = {
  create: WebsiteUncheckedCreateWithoutPagesInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutPagesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductCollectionCreateManyWebsiteInputEnvelope>;
};

export type ProductCollectionCreateOrConnectWithoutWebsiteInput = {
  create: ProductCollectionUncheckedCreateWithoutWebsiteInput;
  where: ProductCollectionWhereUniqueInput;
};

export type ProductCollectionUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutProductCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductUncheckedCreateNestedManyWithoutProductCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutProductCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutProductCollectionsInput>>>;
};

export type ProductCreateOrConnectWithoutProductCollectionsInput = {
  create: ProductUncheckedCreateWithoutProductCollectionsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedCreateWithoutProductCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitUncheckedCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutProductsInput>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type TagUncheckedCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<TagCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<TagCreateWithoutProductsInput>>>;
};

export type TagCreateOrConnectWithoutProductsInput = {
  create: TagUncheckedCreateWithoutProductsInput;
  where: TagWhereUniqueInput;
};

export type TagUncheckedCreateWithoutProductsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type TagCreateWithoutProductsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutTagsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type TypeCreateNestedOneWithoutTagsInput = {
  connect?: InputMaybe<TypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<TypeCreateOrConnectWithoutTagsInput>;
  create?: InputMaybe<TypeUncheckedCreateWithoutTagsInput>;
};

export type TypeCreateOrConnectWithoutTagsInput = {
  create: TypeUncheckedCreateWithoutTagsInput;
  where: TypeWhereUniqueInput;
};

export type TypeUncheckedCreateWithoutTagsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutTypeInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductUncheckedCreateNestedManyWithoutTypeInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutTypeInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutTypeInput>>>;
  createMany?: InputMaybe<ProductCreateManyTypeInputEnvelope>;
};

export type ProductCreateOrConnectWithoutTypeInput = {
  create: ProductUncheckedCreateWithoutTypeInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedCreateWithoutTypeInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitUncheckedCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutProductsInput>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type TraitUncheckedCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<InputMaybe<TraitWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<TraitCreateOrConnectWithoutProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<TraitCreateWithoutProductInput>>>;
  createMany?: InputMaybe<TraitCreateManyProductInputEnvelope>;
};

export type TraitCreateOrConnectWithoutProductInput = {
  create: TraitUncheckedCreateWithoutProductInput;
  where: TraitWhereUniqueInput;
};

export type TraitUncheckedCreateWithoutProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  values?: InputMaybe<ValueUncheckedCreateNestedManyWithoutTraitInput>;
};

export type ValueUncheckedCreateNestedManyWithoutTraitInput = {
  connect?: InputMaybe<Array<InputMaybe<ValueWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ValueCreateOrConnectWithoutTraitInput>>>;
  create?: InputMaybe<Array<InputMaybe<ValueCreateWithoutTraitInput>>>;
  createMany?: InputMaybe<ValueCreateManyTraitInputEnvelope>;
};

export type ValueCreateOrConnectWithoutTraitInput = {
  create: ValueUncheckedCreateWithoutTraitInput;
  where: ValueWhereUniqueInput;
};

export type ValueUncheckedCreateWithoutTraitInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  percentage?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ValueCreateWithoutTraitInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  percentage?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ValueCreateManyTraitInputEnvelope = {
  data: ValueCreateManyTraitInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ValueCreateManyTraitInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  percentage?: InputMaybe<Scalars['Float']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type TraitCreateWithoutProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  values?: InputMaybe<ValueCreateNestedManyWithoutTraitInput>;
};

export type ValueCreateNestedManyWithoutTraitInput = {
  connect?: InputMaybe<Array<InputMaybe<ValueWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ValueCreateOrConnectWithoutTraitInput>>>;
  create?: InputMaybe<Array<InputMaybe<ValueCreateWithoutTraitInput>>>;
  createMany?: InputMaybe<ValueCreateManyTraitInputEnvelope>;
};

export type TraitCreateManyProductInputEnvelope = {
  data: TraitCreateManyProductInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type TraitCreateManyProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type VideoUncheckedCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCreateWithoutProductsInput>>>;
};

export type VideoCreateOrConnectWithoutProductsInput = {
  create: VideoUncheckedCreateWithoutProductsInput;
  where: VideoWhereUniqueInput;
};

export type VideoUncheckedCreateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedVideos?: InputMaybe<OrderedVideoUncheckedCreateNestedManyWithoutVideoInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedVideoUncheckedCreateNestedManyWithoutVideoInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedVideoCreateOrConnectWithoutVideoInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedVideoCreateWithoutVideoInput>>>;
  createMany?: InputMaybe<OrderedVideoCreateManyVideoInputEnvelope>;
};

export type OrderedVideoCreateOrConnectWithoutVideoInput = {
  create: OrderedVideoUncheckedCreateWithoutVideoInput;
  where: OrderedVideoWhereUniqueInput;
};

export type OrderedVideoUncheckedCreateWithoutVideoInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type OrderedVideoCreateWithoutVideoInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProduct?: InputMaybe<OrderedProductCreateNestedOneWithoutOrderedVideosInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type OrderedProductCreateNestedOneWithoutOrderedVideosInput = {
  connect?: InputMaybe<OrderedProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderedProductCreateOrConnectWithoutOrderedVideosInput>;
  create?: InputMaybe<OrderedProductUncheckedCreateWithoutOrderedVideosInput>;
};

export type OrderedProductCreateOrConnectWithoutOrderedVideosInput = {
  create: OrderedProductUncheckedCreateWithoutOrderedVideosInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUncheckedCreateWithoutOrderedVideosInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refundId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderedVideoCreateManyVideoInputEnvelope = {
  data: OrderedVideoCreateManyVideoInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedVideoCreateManyVideoInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type VideoCreateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedVideos?: InputMaybe<OrderedVideoCreateNestedManyWithoutVideoInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedVideoCreateNestedManyWithoutVideoInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedVideoCreateOrConnectWithoutVideoInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedVideoCreateWithoutVideoInput>>>;
  createMany?: InputMaybe<OrderedVideoCreateManyVideoInputEnvelope>;
};

export type UserCreateNestedOneWithoutVideosInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutVideosInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutVideosInput>;
};

export type UserCreateOrConnectWithoutVideosInput = {
  create: UserUncheckedCreateWithoutVideosInput;
  where: UserWhereUniqueInput;
};

export type UserUncheckedCreateWithoutVideosInput = {
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedUncheckedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type PictureUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PictureCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<PictureCreateWithoutUserInput>>>;
  createMany?: InputMaybe<PictureCreateManyUserInputEnvelope>;
};

export type PictureCreateOrConnectWithoutUserInput = {
  create: PictureUncheckedCreateWithoutUserInput;
  where: PictureWhereUniqueInput;
};

export type PictureUncheckedCreateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedPictures?: InputMaybe<OrderedPictureUncheckedCreateNestedManyWithoutPictureInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutPicturesInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type PictureCreateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedPictures?: InputMaybe<OrderedPictureCreateNestedManyWithoutPictureInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutPicturesInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedPictureCreateNestedManyWithoutPictureInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedPictureCreateOrConnectWithoutPictureInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedPictureCreateWithoutPictureInput>>>;
  createMany?: InputMaybe<OrderedPictureCreateManyPictureInputEnvelope>;
};

export type OrderedPictureCreateManyPictureInputEnvelope = {
  data: OrderedPictureCreateManyPictureInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedPictureCreateManyPictureInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type ProductCreateNestedManyWithoutPicturesInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutPicturesInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutPicturesInput>>>;
};

export type ProductCreateWithoutPicturesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutProductsInput>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type LinkCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LinkCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<LinkCreateWithoutProductsInput>>>;
};

export type LinkCreateWithoutProductsInput = {
  categories?: InputMaybe<CategoryCreateNestedManyWithoutLinksInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutLinksInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedLinks?: InputMaybe<OrderedLinkCreateNestedManyWithoutLinkInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  user?: InputMaybe<UserCreateNestedOneWithoutLinksInput>;
};

export type UserCreateNestedOneWithoutLinksInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutLinksInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutLinksInput>;
};

export type UserCreateOrConnectWithoutLinksInput = {
  create: UserUncheckedCreateWithoutLinksInput;
  where: UserWhereUniqueInput;
};

export type UserUncheckedCreateWithoutLinksInput = {
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedUncheckedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type RedeemableUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RedeemableCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<RedeemableCreateWithoutUserInput>>>;
  createMany?: InputMaybe<RedeemableCreateManyUserInputEnvelope>;
};

export type RedeemableCreateOrConnectWithoutUserInput = {
  create: RedeemableUncheckedCreateWithoutUserInput;
  where: RedeemableWhereUniqueInput;
};

export type RedeemableUncheckedCreateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedCreateNestedManyWithoutRedeemableInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  perLimit: Scalars['Int'];
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutRedeemablesInput>;
  quantity: Scalars['Int'];
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RedeemableCreateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedRedeemables?: InputMaybe<OrderedRedeemableCreateNestedManyWithoutRedeemableInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  perLimit: Scalars['Int'];
  products?: InputMaybe<ProductCreateNestedManyWithoutRedeemablesInput>;
  quantity: Scalars['Int'];
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type ProductCreateNestedManyWithoutRedeemablesInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutRedeemablesInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutRedeemablesInput>>>;
};

export type ProductCreateWithoutRedeemablesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutProductsInput>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type OrderedProductCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutProductInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyProductInputEnvelope>;
};

export type OrderedProductCreateWithoutProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  order?: InputMaybe<OrderCreateNestedOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoCreateNestedManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refund?: InputMaybe<RefundCreateNestedOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrderedProductsInput>;
};

export type OrderedProductCreateManyProductInputEnvelope = {
  data: OrderedProductCreateManyProductInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedProductCreateManyProductInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderId?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refundId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PictureCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PictureCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PictureCreateWithoutProductsInput>>>;
};

export type PictureCreateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedPictures?: InputMaybe<OrderedPictureCreateNestedManyWithoutPictureInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutPicturesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type UserCreateNestedOneWithoutPicturesInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutPicturesInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutPicturesInput>;
};

export type UserCreateOrConnectWithoutPicturesInput = {
  create: UserUncheckedCreateWithoutPicturesInput;
  where: UserWhereUniqueInput;
};

export type UserUncheckedCreateWithoutPicturesInput = {
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedUncheckedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type RefreshTokenUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RefreshTokenCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<RefreshTokenCreateWithoutUserInput>>>;
  createMany?: InputMaybe<RefreshTokenCreateManyUserInputEnvelope>;
};

export type RefreshTokenCreateOrConnectWithoutUserInput = {
  create: RefreshTokenUncheckedCreateWithoutUserInput;
  where: RefreshTokenWhereUniqueInput;
};

export type RefreshTokenUncheckedCreateWithoutUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  expires: Scalars['DateTime'];
  geo: Scalars['String'];
  ip: Scalars['String'];
  lastActive?: InputMaybe<Scalars['DateTime']>;
  loginTokenId: Scalars['String'];
  userAgent: Scalars['String'];
  userAgentRaw: Scalars['String'];
  value: Scalars['String'];
};

export type RefreshTokenCreateWithoutUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  expires: Scalars['DateTime'];
  geo: Scalars['String'];
  ip: Scalars['String'];
  lastActive?: InputMaybe<Scalars['DateTime']>;
  loginTokenId: Scalars['String'];
  userAgent: Scalars['String'];
  userAgentRaw: Scalars['String'];
  value: Scalars['String'];
};

export type RefreshTokenCreateManyUserInputEnvelope = {
  data: RefreshTokenCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RefreshTokenCreateManyUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  expires: Scalars['DateTime'];
  geo: Scalars['String'];
  ip: Scalars['String'];
  lastActive?: InputMaybe<Scalars['DateTime']>;
  loginTokenId: Scalars['String'];
  userAgent: Scalars['String'];
  userAgentRaw: Scalars['String'];
  value: Scalars['String'];
};

export type VideoUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCreateWithoutUserInput>>>;
  createMany?: InputMaybe<VideoCreateManyUserInputEnvelope>;
};

export type VideoCreateOrConnectWithoutUserInput = {
  create: VideoUncheckedCreateWithoutUserInput;
  where: VideoWhereUniqueInput;
};

export type VideoUncheckedCreateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedVideos?: InputMaybe<OrderedVideoUncheckedCreateNestedManyWithoutVideoInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutVideosInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type VideoCreateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedVideos?: InputMaybe<OrderedVideoCreateNestedManyWithoutVideoInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutVideosInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type ProductCreateNestedManyWithoutVideosInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutVideosInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutVideosInput>>>;
};

export type ProductCreateWithoutVideosInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutProductsInput>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type ProductCollectionCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCollectionCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCollectionCreateWithoutProductsInput>>>;
};

export type RedeemableCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RedeemableCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<RedeemableCreateWithoutProductsInput>>>;
};

export type TagCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<TagCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<TagCreateWithoutProductsInput>>>;
};

export type TraitCreateNestedManyWithoutProductInput = {
  connect?: InputMaybe<Array<InputMaybe<TraitWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<TraitCreateOrConnectWithoutProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<TraitCreateWithoutProductInput>>>;
  createMany?: InputMaybe<TraitCreateManyProductInputEnvelope>;
};

export type TypeCreateNestedOneWithoutProductsInput = {
  connect?: InputMaybe<TypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<TypeCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<TypeUncheckedCreateWithoutProductsInput>;
};

export type TypeCreateOrConnectWithoutProductsInput = {
  create: TypeUncheckedCreateWithoutProductsInput;
  where: TypeWhereUniqueInput;
};

export type TypeUncheckedCreateWithoutProductsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutTypeInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type TagUncheckedCreateNestedManyWithoutTypeInput = {
  connect?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<TagCreateOrConnectWithoutTypeInput>>>;
  create?: InputMaybe<Array<InputMaybe<TagCreateWithoutTypeInput>>>;
  createMany?: InputMaybe<TagCreateManyTypeInputEnvelope>;
};

export type TagCreateOrConnectWithoutTypeInput = {
  create: TagUncheckedCreateWithoutTypeInput;
  where: TagWhereUniqueInput;
};

export type TagUncheckedCreateWithoutTypeInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutTagsInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductUncheckedCreateNestedManyWithoutTagsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutTagsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutTagsInput>>>;
};

export type ProductCreateOrConnectWithoutTagsInput = {
  create: ProductUncheckedCreateWithoutTagsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedCreateWithoutTagsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitUncheckedCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutProductsInput>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type ProductCreateWithoutTagsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutProductsInput>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type VideoCreateNestedManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCreateWithoutProductsInput>>>;
};

export type WebsiteCreateNestedOneWithoutProductsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutProductsInput>;
};

export type WebsiteCreateOrConnectWithoutProductsInput = {
  create: WebsiteUncheckedCreateWithoutProductsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type PageUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<PageCreateManyWebsiteInputEnvelope>;
};

export type PageCreateOrConnectWithoutWebsiteInput = {
  create: PageUncheckedCreateWithoutWebsiteInput;
  where: PageWhereUniqueInput;
};

export type PageUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutPageInput>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedCreateNestedManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemCreateNestedManyWithoutPageInput>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewCreateNestedManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageCreateManyWebsiteInputEnvelope = {
  data: PageCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type PageCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ShippingUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ShippingWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ShippingCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ShippingCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ShippingCreateManyWebsiteInputEnvelope>;
};

export type ShippingCreateOrConnectWithoutWebsiteInput = {
  create: ShippingUncheckedCreateWithoutWebsiteInput;
  where: ShippingWhereUniqueInput;
};

export type ShippingUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amount: Scalars['Float'];
  countryCode?: InputMaybe<CountryCode>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  isGlobal?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  state?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ShippingCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amount: Scalars['Float'];
  countryCode?: InputMaybe<CountryCode>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  isGlobal?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  state?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ShippingCreateManyWebsiteInputEnvelope = {
  data: ShippingCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ShippingCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amount: Scalars['Float'];
  countryCode?: InputMaybe<CountryCode>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  isGlobal?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  state?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SocialUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<SocialWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<SocialCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<SocialCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<SocialCreateManyWebsiteInputEnvelope>;
};

export type SocialCreateOrConnectWithoutWebsiteInput = {
  create: SocialUncheckedCreateWithoutWebsiteInput;
  where: SocialWhereUniqueInput;
};

export type SocialUncheckedCreateWithoutWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  socialType: SocialType;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
};

export type SocialCreateWithoutWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  socialType: SocialType;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
};

export type SocialCreateManyWebsiteInputEnvelope = {
  data: SocialCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type SocialCreateManyWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  socialType: SocialType;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
};

export type TaxUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<TaxWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<TaxCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<TaxCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<TaxCreateManyWebsiteInputEnvelope>;
};

export type TaxCreateOrConnectWithoutWebsiteInput = {
  create: TaxUncheckedCreateWithoutWebsiteInput;
  where: TaxWhereUniqueInput;
};

export type TaxUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  inclusive: Scalars['Boolean'];
  isGlobal?: InputMaybe<Scalars['Boolean']>;
  jurisdiction?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  onShipping?: InputMaybe<Scalars['Boolean']>;
  percentage: Scalars['Float'];
  priority?: InputMaybe<Scalars['Int']>;
  state?: InputMaybe<Scalars['String']>;
  stripePrivateTaxId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  zip?: InputMaybe<Scalars['String']>;
};

export type TaxCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  inclusive: Scalars['Boolean'];
  isGlobal?: InputMaybe<Scalars['Boolean']>;
  jurisdiction?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  onShipping?: InputMaybe<Scalars['Boolean']>;
  percentage: Scalars['Float'];
  priority?: InputMaybe<Scalars['Int']>;
  state?: InputMaybe<Scalars['String']>;
  stripePrivateTaxId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  zip?: InputMaybe<Scalars['String']>;
};

export type TaxCreateManyWebsiteInputEnvelope = {
  data: TaxCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type TaxCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  inclusive: Scalars['Boolean'];
  isGlobal?: InputMaybe<Scalars['Boolean']>;
  jurisdiction?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  onShipping?: InputMaybe<Scalars['Boolean']>;
  percentage: Scalars['Float'];
  priority?: InputMaybe<Scalars['Int']>;
  state?: InputMaybe<Scalars['String']>;
  stripePrivateTaxId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  zip?: InputMaybe<Scalars['String']>;
};

export type WithdrawUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<WithdrawWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WithdrawCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<WithdrawCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<WithdrawCreateManyWebsiteInputEnvelope>;
};

export type WithdrawCreateOrConnectWithoutWebsiteInput = {
  create: WithdrawUncheckedCreateWithoutWebsiteInput;
  where: WithdrawWhereUniqueInput;
};

export type WithdrawUncheckedCreateWithoutWebsiteInput = {
  amount: Scalars['Float'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  processed: Scalars['Boolean'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type WithdrawCreateWithoutWebsiteInput = {
  amount: Scalars['Float'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  processed: Scalars['Boolean'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type WithdrawCreateManyWebsiteInputEnvelope = {
  data: WithdrawCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type WithdrawCreateManyWebsiteInput = {
  amount: Scalars['Float'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  processed: Scalars['Boolean'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type TagCreateWithoutTypeInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  products?: InputMaybe<ProductCreateNestedManyWithoutTagsInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductCreateNestedManyWithoutTagsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutTagsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutTagsInput>>>;
};

export type TagCreateManyTypeInputEnvelope = {
  data: TagCreateManyTypeInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type TagCreateManyTypeInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type VideoCreateManyUserInputEnvelope = {
  data: VideoCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type VideoCreateManyUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type WebsiteUncheckedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteCreateWithoutUserInput>>>;
  createMany?: InputMaybe<WebsiteCreateManyUserInputEnvelope>;
};

export type WebsiteCreateOrConnectWithoutUserInput = {
  create: WebsiteUncheckedCreateWithoutUserInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutUserInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type ProductUncheckedCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductCreateManyWebsiteInputEnvelope>;
};

export type ProductCreateOrConnectWithoutWebsiteInput = {
  create: ProductUncheckedCreateWithoutWebsiteInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitUncheckedCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type ProductCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutProductsInput>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type ProductCreateManyWebsiteInputEnvelope = {
  data: ProductCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  name: Scalars['String'];
  price: Scalars['Float'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tax_code?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  width?: InputMaybe<Scalars['Float']>;
};

export type WebsiteCreateWithoutUserInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type AttachmentCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyWebsiteInputEnvelope>;
};

export type AttributeCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttributeCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttributeCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AttributeCreateManyWebsiteInputEnvelope>;
};

export type CategoryCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CategoryCreateManyWebsiteInputEnvelope>;
};

export type CategoryCreateWithoutWebsiteInput = {
  children?: InputMaybe<CategoryCreateNestedManyWithoutParentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutCategoriesInput>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageCreateNestedManyWithoutCategoriesInput>;
  parent?: InputMaybe<CategoryCreateNestedOneWithoutChildrenInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCategoriesInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CategoryCreateManyWebsiteInputEnvelope = {
  data: CategoryCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CategoryCreateManyWebsiteInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  parentId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CollectionCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CollectionCreateManyWebsiteInputEnvelope>;
};

export type CollectionCreateWithoutWebsiteInput = {
  collectionStyle?: InputMaybe<CollectionStyle>;
  collectionType?: InputMaybe<CollectionType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<ItemCreateNestedManyWithoutCollectionInput>;
  links?: InputMaybe<LinkCreateNestedManyWithoutCollectionsInput>;
  name: Scalars['String'];
  pages?: InputMaybe<PageCreateNestedManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductCreateNestedManyWithoutCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutCollectionsInput>>>;
};

export type ProductCreateWithoutCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutProductsInput>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type CollectionCreateManyWebsiteInputEnvelope = {
  data: CollectionCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CollectionCreateManyWebsiteInput = {
  collectionStyle?: InputMaybe<CollectionStyle>;
  collectionType?: InputMaybe<CollectionType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CouponCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CouponCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CouponCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CouponCreateManyWebsiteInputEnvelope>;
};

export type CouponCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  active_from?: InputMaybe<Scalars['DateTime']>;
  amount_off?: InputMaybe<Scalars['Float']>;
  code?: InputMaybe<Scalars['String']>;
  couponType: CouponType;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expire_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orders?: InputMaybe<OrderCreateNestedManyWithoutCouponInput>;
  percent_off?: InputMaybe<Scalars['Float']>;
  type?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type OrderCreateNestedManyWithoutCouponInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutCouponInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutCouponInput>>>;
  createMany?: InputMaybe<OrderCreateManyCouponInputEnvelope>;
};

export type OrderCreateWithoutCouponInput = {
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<Scalars['DateTime']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutOrdersInput>;
  customerContact?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  delivery_fee?: InputMaybe<Scalars['Float']>;
  delivery_name?: InputMaybe<Scalars['String']>;
  delivery_time?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutOrderInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: InputMaybe<Scalars['Float']>;
  paymentGateway?: InputMaybe<Scalars['String']>;
  paymentId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundCreateNestedManyWithoutOrderInput>;
  requireShipping?: InputMaybe<Scalars['Boolean']>;
  sales_tax?: InputMaybe<Scalars['Float']>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<Scalars['Float']>;
  stripePrivateSessionId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  tracking_number?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrdersInput>;
};

export type WebsiteCreateNestedOneWithoutOrdersInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutOrdersInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutOrdersInput>;
};

export type WebsiteCreateOrConnectWithoutOrdersInput = {
  create: WebsiteUncheckedCreateWithoutOrdersInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutOrdersInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type OrderCreateManyCouponInputEnvelope = {
  data: OrderCreateManyCouponInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderCreateManyCouponInput = {
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<Scalars['DateTime']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerContact?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  delivery_fee?: InputMaybe<Scalars['Float']>;
  delivery_name?: InputMaybe<Scalars['String']>;
  delivery_time?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: InputMaybe<Scalars['Float']>;
  paymentGateway?: InputMaybe<Scalars['String']>;
  paymentId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  requireShipping?: InputMaybe<Scalars['Boolean']>;
  sales_tax?: InputMaybe<Scalars['Float']>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<Scalars['Float']>;
  stripePrivateSessionId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  tracking_number?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CouponCreateManyWebsiteInputEnvelope = {
  data: CouponCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CouponCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  active_from?: InputMaybe<Scalars['DateTime']>;
  amount_off?: InputMaybe<Scalars['Float']>;
  code?: InputMaybe<Scalars['String']>;
  couponType: CouponType;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expire_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  percent_off?: InputMaybe<Scalars['Float']>;
  type?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type CustomerCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CustomerCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CustomerCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CustomerCreateManyWebsiteInputEnvelope>;
};

export type CustomerCreateManyWebsiteInputEnvelope = {
  data: CustomerCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerCreateManyWebsiteInput = {
  age?: InputMaybe<Scalars['Int']>;
  city?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type GroupCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<GroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<GroupCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<GroupCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<GroupCreateManyWebsiteInputEnvelope>;
};

export type NotificationCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<NotificationCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<NotificationCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<NotificationCreateManyWebsiteInputEnvelope>;
};

export type NotificationCreateManyWebsiteInputEnvelope = {
  data: NotificationCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type NotificationCreateManyWebsiteInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyWebsiteInputEnvelope>;
};

export type OrderCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<OrderCreateManyWebsiteInputEnvelope>;
};

export type PageCollectionCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<PageCollectionCreateManyWebsiteInputEnvelope>;
};

export type PageCollectionCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  pages?: InputMaybe<PageCreateNestedManyWithoutPageCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageCreateNestedManyWithoutPageCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutPageCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutPageCollectionsInput>>>;
};

export type PageCollectionCreateManyWebsiteInputEnvelope = {
  data: PageCollectionCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type PageCollectionCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<PageCreateManyWebsiteInputEnvelope>;
};

export type ProductCollectionCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductCollectionCreateManyWebsiteInputEnvelope>;
};

export type ProductCollectionCreateWithoutWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<ProductCreateNestedManyWithoutProductCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductCreateNestedManyWithoutProductCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutProductCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutProductCollectionsInput>>>;
};

export type ProductCreateWithoutProductCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutProductsInput>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type ProductCollectionCreateManyWebsiteInputEnvelope = {
  data: ProductCollectionCreateManyWebsiteInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductCollectionCreateManyWebsiteInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductCreateManyWebsiteInputEnvelope>;
};

export type ShippingCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ShippingWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ShippingCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ShippingCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ShippingCreateManyWebsiteInputEnvelope>;
};

export type SocialCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<SocialWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<SocialCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<SocialCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<SocialCreateManyWebsiteInputEnvelope>;
};

export type TaxCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<TaxWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<TaxCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<TaxCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<TaxCreateManyWebsiteInputEnvelope>;
};

export type WithdrawCreateNestedManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<WithdrawWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WithdrawCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<WithdrawCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<WithdrawCreateManyWebsiteInputEnvelope>;
};

export type WebsiteCreateManyUserInputEnvelope = {
  data: WebsiteCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type WebsiteCreateManyUserInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  chain?: InputMaybe<Scalars['Json']>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  paymentMethod: PaymentMethod;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type RedeemableCreateManyUserInputEnvelope = {
  data: RedeemableCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type RedeemableCreateManyUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  perLimit: Scalars['Int'];
  quantity: Scalars['Int'];
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type PictureCreateManyUserInputEnvelope = {
  data: PictureCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type PictureCreateManyUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type ProductCreateWithoutTypeInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type ProductCreateManyTypeInputEnvelope = {
  data: ProductCreateManyTypeInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type ProductCreateManyTypeInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  name: Scalars['String'];
  price: Scalars['Float'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tax_code?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type NotificationCreateManyUserInputEnvelope = {
  data: NotificationCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type NotificationCreateManyUserInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type LinkCreateManyUserInputEnvelope = {
  data: LinkCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type LinkCreateManyUserInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
};

export type DocumentCreateManyUserInputEnvelope = {
  data: DocumentCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type DocumentCreateManyUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateManyOrderInputEnvelope = {
  data: OrderedProductCreateManyOrderInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderedProductCreateManyOrderInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refundId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderCreateManyCustomerInputEnvelope = {
  data: OrderCreateManyCustomerInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type OrderCreateManyCustomerInput = {
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<Scalars['DateTime']>;
  couponId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerContact?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  delivery_fee?: InputMaybe<Scalars['Float']>;
  delivery_name?: InputMaybe<Scalars['String']>;
  delivery_time?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: InputMaybe<Scalars['Float']>;
  paymentGateway?: InputMaybe<Scalars['String']>;
  paymentId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  requireShipping?: InputMaybe<Scalars['Boolean']>;
  sales_tax?: InputMaybe<Scalars['Float']>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<Scalars['Float']>;
  stripePrivateSessionId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  tracking_number?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type WebsiteCreateNestedOneWithoutCustomersInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutCustomersInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutCustomersInput>;
};

export type WebsiteCreateOrConnectWithoutCustomersInput = {
  create: WebsiteUncheckedCreateWithoutCustomersInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutCustomersInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type CustomerCreateManyUserInputEnvelope = {
  data: CustomerCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CustomerCreateManyUserInput = {
  age?: InputMaybe<Scalars['Int']>;
  city?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type WebsiteCreateNestedOneWithoutCategoriesInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutCategoriesInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutCategoriesInput>;
};

export type WebsiteCreateOrConnectWithoutCategoriesInput = {
  create: WebsiteUncheckedCreateWithoutCategoriesInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutCategoriesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type BlockCreateManyUserInputEnvelope = {
  data: BlockCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type BlockCreateManyUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  favourite?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductCreateWithoutAudiosInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutProductsInput>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type CategoryCreateManyParentInputEnvelope = {
  data: CategoryCreateManyParentInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type CategoryCreateManyParentInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AttachmentCreateManyUserInputEnvelope = {
  data: AttachmentCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AttachmentCreateManyUserInput = {
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  staked?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<AttachmentType>;
  upload: Scalars['Json'];
  url: Scalars['String'];
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AudioCreateWithoutUserInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioCreateNestedManyWithoutAudioInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutAudiosInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type ProductCreateNestedManyWithoutAudiosInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutAudiosInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutAudiosInput>>>;
};

export type AudioCreateManyUserInputEnvelope = {
  data: AudioCreateManyUserInput;
  skipDuplicates?: InputMaybe<Scalars['Boolean']>;
};

export type AudioCreateManyUserInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type AttributeCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  values?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutAttributesInput>;
};

export type WebsiteCreateNestedOneWithoutAttributesInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutAttributesInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutAttributesInput>;
};

export type WebsiteCreateOrConnectWithoutAttributesInput = {
  create: WebsiteUncheckedCreateWithoutAttributesInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutAttributesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type AudioCreateInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioCreateNestedManyWithoutAudioInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutAudiosInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutAudiosInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type BlockCreateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  favourite?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  items?: InputMaybe<ItemCreateNestedManyWithoutBlockInput>;
  name: Scalars['String'];
  products?: InputMaybe<ProductCreateNestedManyWithoutBlocksInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutBlocksInput>;
};

export type CategoryCreateInput = {
  children?: InputMaybe<CategoryCreateNestedManyWithoutParentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutCategoriesInput>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageCreateNestedManyWithoutCategoriesInput>;
  parent?: InputMaybe<CategoryCreateNestedOneWithoutChildrenInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCategoriesInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCategoriesInput>;
};

export type CollectionCreateInput = {
  collectionStyle?: InputMaybe<CollectionStyle>;
  collectionType?: InputMaybe<CollectionType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<ItemCreateNestedManyWithoutCollectionInput>;
  links?: InputMaybe<LinkCreateNestedManyWithoutCollectionsInput>;
  name: Scalars['String'];
  pages?: InputMaybe<PageCreateNestedManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCollectionsInput>;
};

export type CouponCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  active_from?: InputMaybe<Scalars['DateTime']>;
  amount_off?: InputMaybe<Scalars['Float']>;
  code?: InputMaybe<Scalars['String']>;
  couponType: CouponType;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expire_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orders?: InputMaybe<OrderCreateNestedManyWithoutCouponInput>;
  percent_off?: InputMaybe<Scalars['Float']>;
  type?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCouponsInput>;
};

export type WebsiteCreateNestedOneWithoutCouponsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutCouponsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutCouponsInput>;
};

export type WebsiteCreateOrConnectWithoutCouponsInput = {
  create: WebsiteUncheckedCreateWithoutCouponsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutCouponsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type CustomerCreateInput = {
  age?: InputMaybe<Scalars['Int']>;
  city?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutCustomersInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCustomersInput>;
};

export type DocumentCreateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedDocuments?: InputMaybe<OrderedDocumentCreateNestedManyWithoutDocumentInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutDocumentsInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutDocumentsInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type EmbedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  embedCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<ItemCreateNestedManyWithoutEmbedInput>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutEmbedsInput>;
};

export type UserCreateNestedOneWithoutEmbedsInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutEmbedsInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutEmbedsInput>;
};

export type UserCreateOrConnectWithoutEmbedsInput = {
  create: UserUncheckedCreateWithoutEmbedsInput;
  where: UserWhereUniqueInput;
};

export type UserUncheckedCreateWithoutEmbedsInput = {
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type GroupCreateInput = {
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutGroupInput>;
};

export type WebsiteCreateNestedOneWithoutGroupInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutGroupInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutGroupInput>;
};

export type WebsiteCreateOrConnectWithoutGroupInput = {
  create: WebsiteUncheckedCreateWithoutGroupInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutGroupInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type ItemCreateInput = {
  block?: InputMaybe<BlockCreateNestedOneWithoutItemsInput>;
  collection?: InputMaybe<CollectionCreateNestedOneWithoutItemsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  embed?: InputMaybe<EmbedCreateNestedOneWithoutItemsInput>;
  id?: InputMaybe<Scalars['String']>;
  itemType: ItemType;
  name?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<PageCreateNestedOneWithoutItemsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type LinkCreateInput = {
  categories?: InputMaybe<CategoryCreateNestedManyWithoutLinksInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutLinksInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedLinks?: InputMaybe<OrderedLinkCreateNestedManyWithoutLinkInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutLinksInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  user?: InputMaybe<UserCreateNestedOneWithoutLinksInput>;
};

export type LoginTokenCreateInput = {
  approved?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  domain: Scalars['String'];
  email: Scalars['String'];
  expires: Scalars['DateTime'];
  geo: Scalars['String'];
  id?: InputMaybe<Scalars['String']>;
  ip: Scalars['String'];
  secret: Scalars['String'];
  user: UserCreateNestedOneWithoutLoginTokensInput;
  userAgent: Scalars['String'];
  userAgentRaw: Scalars['String'];
};

export type UserCreateNestedOneWithoutLoginTokensInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutLoginTokensInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutLoginTokensInput>;
};

export type UserCreateOrConnectWithoutLoginTokensInput = {
  create: UserUncheckedCreateWithoutLoginTokensInput;
  where: UserWhereUniqueInput;
};

export type UserUncheckedCreateWithoutLoginTokensInput = {
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedUncheckedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type NotificationCreateInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  user?: InputMaybe<UserCreateNestedOneWithoutNotificationsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutNotificationsInput>;
};

export type OrderCreateInput = {
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<Scalars['DateTime']>;
  coupon?: InputMaybe<CouponCreateNestedOneWithoutOrdersInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutOrdersInput>;
  customerContact?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  delivery_fee?: InputMaybe<Scalars['Float']>;
  delivery_name?: InputMaybe<Scalars['String']>;
  delivery_time?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutOrderInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: InputMaybe<Scalars['Float']>;
  paymentGateway?: InputMaybe<Scalars['String']>;
  paymentId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundCreateNestedManyWithoutOrderInput>;
  requireShipping?: InputMaybe<Scalars['Boolean']>;
  sales_tax?: InputMaybe<Scalars['Float']>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<Scalars['Float']>;
  stripePrivateSessionId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  tracking_number?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrdersInput>;
};

export type OrderedAudioCreateInput = {
  audio?: InputMaybe<AudioCreateNestedOneWithoutOrderedAudiosInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProduct?: InputMaybe<OrderedProductCreateNestedOneWithoutOrderedAudiosInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedDocumentCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  document?: InputMaybe<DocumentCreateNestedOneWithoutOrderedDocumentsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProduct?: InputMaybe<OrderedProductCreateNestedOneWithoutOrderedDocumentsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedLinkCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  link?: InputMaybe<LinkCreateNestedOneWithoutOrderedLinksInput>;
  name?: InputMaybe<Scalars['String']>;
  orderedProduct?: InputMaybe<OrderedProductCreateNestedOneWithoutOrderedLinksInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
};

export type OrderedPictureCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProduct?: InputMaybe<OrderedProductCreateNestedOneWithoutOrderedPicturesInput>;
  picture?: InputMaybe<PictureCreateNestedOneWithoutOrderedPicturesInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  order?: InputMaybe<OrderCreateNestedOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoCreateNestedManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutOrderedProductsInput>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refund?: InputMaybe<RefundCreateNestedOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrderedProductsInput>;
};

export type OrderedRedeemableCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProduct?: InputMaybe<OrderedProductCreateNestedOneWithoutOrderedRedeemablesInput>;
  perLimit?: InputMaybe<Scalars['Int']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemable?: InputMaybe<RedeemableCreateNestedOneWithoutOrderedRedeemablesInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedVideoCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProduct?: InputMaybe<OrderedProductCreateNestedOneWithoutOrderedVideosInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  video?: InputMaybe<VideoCreateNestedOneWithoutOrderedVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type PageCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemCreateNestedManyWithoutPageInput>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewCreateNestedManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPagesInput>;
};

export type PageCollectionCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  pages?: InputMaybe<PageCreateNestedManyWithoutPageCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPageCollectionsInput>;
};

export type PageViewCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<PageCreateNestedOneWithoutPageViewsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageCreateNestedOneWithoutPageViewsInput = {
  connect?: InputMaybe<PageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PageCreateOrConnectWithoutPageViewsInput>;
  create?: InputMaybe<PageUncheckedCreateWithoutPageViewsInput>;
};

export type PageCreateOrConnectWithoutPageViewsInput = {
  create: PageUncheckedCreateWithoutPageViewsInput;
  where: PageWhereUniqueInput;
};

export type PageUncheckedCreateWithoutPageViewsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutPageInput>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutPagesInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PictureCreateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedPictures?: InputMaybe<OrderedPictureCreateNestedManyWithoutPictureInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutPicturesInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutPicturesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type ProductCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutProductsInput>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type ProductCollectionCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<ProductCreateNestedManyWithoutProductCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductCollectionsInput>;
};

export type RedeemableCreateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedRedeemables?: InputMaybe<OrderedRedeemableCreateNestedManyWithoutRedeemableInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  perLimit: Scalars['Int'];
  products?: InputMaybe<ProductCreateNestedManyWithoutRedeemablesInput>;
  quantity: Scalars['Int'];
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutRedeemablesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RefreshTokenCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  expires: Scalars['DateTime'];
  geo: Scalars['String'];
  ip: Scalars['String'];
  lastActive?: InputMaybe<Scalars['DateTime']>;
  loginTokenId: Scalars['String'];
  user: UserCreateNestedOneWithoutRefreshTokensInput;
  userAgent: Scalars['String'];
  userAgentRaw: Scalars['String'];
  value: Scalars['String'];
};

export type UserCreateNestedOneWithoutRefreshTokensInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutRefreshTokensInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutRefreshTokensInput>;
};

export type UserCreateOrConnectWithoutRefreshTokensInput = {
  create: UserUncheckedCreateWithoutRefreshTokensInput;
  where: UserWhereUniqueInput;
};

export type UserUncheckedCreateWithoutRefreshTokensInput = {
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedUncheckedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type RefundCreateInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  amount?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  order?: InputMaybe<OrderCreateNestedOneWithoutRefundsInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutRefundInput>;
  received?: InputMaybe<Scalars['Boolean']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type OrderCreateNestedOneWithoutRefundsInput = {
  connect?: InputMaybe<OrderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderCreateOrConnectWithoutRefundsInput>;
  create?: InputMaybe<OrderUncheckedCreateWithoutRefundsInput>;
};

export type OrderCreateOrConnectWithoutRefundsInput = {
  create: OrderUncheckedCreateWithoutRefundsInput;
  where: OrderWhereUniqueInput;
};

export type OrderUncheckedCreateWithoutRefundsInput = {
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<Scalars['DateTime']>;
  couponId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerContact?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  delivery_fee?: InputMaybe<Scalars['Float']>;
  delivery_name?: InputMaybe<Scalars['String']>;
  delivery_time?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutOrderInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: InputMaybe<Scalars['Float']>;
  paymentGateway?: InputMaybe<Scalars['String']>;
  paymentId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  requireShipping?: InputMaybe<Scalars['Boolean']>;
  sales_tax?: InputMaybe<Scalars['Float']>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<Scalars['Float']>;
  stripePrivateSessionId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  tracking_number?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type RequestCreateInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  collection?: InputMaybe<CollectionCreateNestedOneWithoutRequestsInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutRequestsInput>;
  days: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description: Scalars['String'];
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message: Scalars['String'];
  name: Scalars['String'];
  page?: InputMaybe<PageCreateNestedOneWithoutRequestsInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  requestAccept?: InputMaybe<RequestAccept>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeSessionId?: InputMaybe<Scalars['String']>;
  subject: Scalars['String'];
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestClickCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  page?: InputMaybe<PageCreateNestedOneWithoutRequestClicksInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageCreateNestedOneWithoutRequestClicksInput = {
  connect?: InputMaybe<PageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PageCreateOrConnectWithoutRequestClicksInput>;
  create?: InputMaybe<PageUncheckedCreateWithoutRequestClicksInput>;
};

export type PageCreateOrConnectWithoutRequestClicksInput = {
  create: PageUncheckedCreateWithoutRequestClicksInput;
  where: PageWhereUniqueInput;
};

export type PageUncheckedCreateWithoutRequestClicksInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutPageInput>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ShippingCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amount: Scalars['Float'];
  countryCode?: InputMaybe<CountryCode>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  isGlobal?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  state?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutShippingsInput>;
};

export type WebsiteCreateNestedOneWithoutShippingsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutShippingsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutShippingsInput>;
};

export type WebsiteCreateOrConnectWithoutShippingsInput = {
  create: WebsiteUncheckedCreateWithoutShippingsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutShippingsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type SlugCounterCreateInput = {
  counter?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SocialCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  socialType: SocialType;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  website?: InputMaybe<WebsiteCreateNestedOneWithoutSocialsInput>;
};

export type WebsiteCreateNestedOneWithoutSocialsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutSocialsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutSocialsInput>;
};

export type WebsiteCreateOrConnectWithoutSocialsInput = {
  create: WebsiteUncheckedCreateWithoutSocialsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutSocialsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type TagCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  products?: InputMaybe<ProductCreateNestedManyWithoutTagsInput>;
  slug?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutTagsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type TaxCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  inclusive: Scalars['Boolean'];
  isGlobal?: InputMaybe<Scalars['Boolean']>;
  jurisdiction?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  onShipping?: InputMaybe<Scalars['Boolean']>;
  percentage: Scalars['Float'];
  priority?: InputMaybe<Scalars['Int']>;
  state?: InputMaybe<Scalars['String']>;
  stripePrivateTaxId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutTaxesInput>;
  zip?: InputMaybe<Scalars['String']>;
};

export type WebsiteCreateNestedOneWithoutTaxesInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutTaxesInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutTaxesInput>;
};

export type WebsiteCreateOrConnectWithoutTaxesInput = {
  create: WebsiteUncheckedCreateWithoutTaxesInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutTaxesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type TraitCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutTraitsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  values?: InputMaybe<ValueCreateNestedManyWithoutTraitInput>;
};

export type ProductCreateNestedOneWithoutTraitsInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutTraitsInput>;
  create?: InputMaybe<ProductUncheckedCreateWithoutTraitsInput>;
};

export type ProductCreateOrConnectWithoutTraitsInput = {
  create: ProductUncheckedCreateWithoutTraitsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedCreateWithoutTraitsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutProductsInput>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type TypeCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<ProductCreateNestedManyWithoutTypeInput>;
  slug?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutTypeInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ProductCreateNestedManyWithoutTypeInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutTypeInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutTypeInput>>>;
  createMany?: InputMaybe<ProductCreateManyTypeInputEnvelope>;
};

export type TagCreateNestedManyWithoutTypeInput = {
  connect?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<TagCreateOrConnectWithoutTypeInput>>>;
  create?: InputMaybe<Array<InputMaybe<TagCreateWithoutTypeInput>>>;
  createMany?: InputMaybe<TagCreateManyTypeInputEnvelope>;
};

export type UserCreateInput = {
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type AttachmentCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutUserInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyUserInputEnvelope>;
};

export type AudioCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCreateWithoutUserInput>>>;
  createMany?: InputMaybe<AudioCreateManyUserInputEnvelope>;
};

export type BlockCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<BlockCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<BlockCreateWithoutUserInput>>>;
  createMany?: InputMaybe<BlockCreateManyUserInputEnvelope>;
};

export type CustomerCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CustomerCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<CustomerCreateWithoutUserInput>>>;
  createMany?: InputMaybe<CustomerCreateManyUserInputEnvelope>;
};

export type DocumentCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<DocumentCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<DocumentCreateWithoutUserInput>>>;
  createMany?: InputMaybe<DocumentCreateManyUserInputEnvelope>;
};

export type EmbedCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<EmbedWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EmbedCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<EmbedCreateWithoutUserInput>>>;
  createMany?: InputMaybe<EmbedCreateManyUserInputEnvelope>;
};

export type LinkCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LinkCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<LinkCreateWithoutUserInput>>>;
  createMany?: InputMaybe<LinkCreateManyUserInputEnvelope>;
};

export type LoginTokenCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LoginTokenCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<LoginTokenCreateWithoutUserInput>>>;
  createMany?: InputMaybe<LoginTokenCreateManyUserInputEnvelope>;
};

export type NotificationCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<NotificationCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<NotificationCreateWithoutUserInput>>>;
  createMany?: InputMaybe<NotificationCreateManyUserInputEnvelope>;
};

export type PictureCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PictureCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<PictureCreateWithoutUserInput>>>;
  createMany?: InputMaybe<PictureCreateManyUserInputEnvelope>;
};

export type RedeemableCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RedeemableCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<RedeemableCreateWithoutUserInput>>>;
  createMany?: InputMaybe<RedeemableCreateManyUserInputEnvelope>;
};

export type RefreshTokenCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RefreshTokenCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<RefreshTokenCreateWithoutUserInput>>>;
  createMany?: InputMaybe<RefreshTokenCreateManyUserInputEnvelope>;
};

export type VideoCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCreateWithoutUserInput>>>;
  createMany?: InputMaybe<VideoCreateManyUserInputEnvelope>;
};

export type WebsiteCreateNestedManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteCreateWithoutUserInput>>>;
  createMany?: InputMaybe<WebsiteCreateManyUserInputEnvelope>;
};

export type ValueCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  percentage?: InputMaybe<Scalars['Float']>;
  trait?: InputMaybe<TraitCreateNestedOneWithoutValuesInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type TraitCreateNestedOneWithoutValuesInput = {
  connect?: InputMaybe<TraitWhereUniqueInput>;
  connectOrCreate?: InputMaybe<TraitCreateOrConnectWithoutValuesInput>;
  create?: InputMaybe<TraitUncheckedCreateWithoutValuesInput>;
};

export type TraitCreateOrConnectWithoutValuesInput = {
  create: TraitUncheckedCreateWithoutValuesInput;
  where: TraitWhereUniqueInput;
};

export type TraitUncheckedCreateWithoutValuesInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  productId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type VideoCreateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedVideos?: InputMaybe<OrderedVideoCreateNestedManyWithoutVideoInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutVideosInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type WebsiteCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type UserCreateNestedOneWithoutWebsitesInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutWebsitesInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutWebsitesInput>;
};

export type UserCreateOrConnectWithoutWebsitesInput = {
  create: UserUncheckedCreateWithoutWebsitesInput;
  where: UserWhereUniqueInput;
};

export type UserUncheckedCreateWithoutWebsitesInput = {
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedUncheckedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type WithdrawCreateInput = {
  amount: Scalars['Float'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  processed: Scalars['Boolean'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutWithdrawsInput>;
};

export type WebsiteCreateNestedOneWithoutWithdrawsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutWithdrawsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutWithdrawsInput>;
};

export type WebsiteCreateOrConnectWithoutWithdrawsInput = {
  create: WebsiteUncheckedCreateWithoutWithdrawsInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedCreateWithoutWithdrawsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type BatchPayload = {
  __typename?: 'BatchPayload';
  count: Scalars['Int'];
};

export type UpdateFieldInput = {
  create?: InputMaybe<Scalars['Boolean']>;
  editor?: InputMaybe<Scalars['Boolean']>;
  filter?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  isId?: InputMaybe<Scalars['Boolean']>;
  kind?: InputMaybe<KindEnum>;
  list?: InputMaybe<Scalars['Boolean']>;
  name?: InputMaybe<Scalars['String']>;
  order?: InputMaybe<Scalars['Int']>;
  read?: InputMaybe<Scalars['Boolean']>;
  relationField?: InputMaybe<Scalars['Boolean']>;
  required?: InputMaybe<Scalars['Boolean']>;
  sort?: InputMaybe<Scalars['Boolean']>;
  title?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  unique?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<Scalars['Boolean']>;
  upload?: InputMaybe<Scalars['Boolean']>;
};

export type AttachmentUpdateManyMutationInput = {
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  staked?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type NullableBoolFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['Boolean']>;
};

export type NullableDateTimeFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['DateTime']>;
};

export type StringFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['String']>;
};

export type NullableEnumAttachmentTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<AttachmentType>;
};

export type AttributeUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
};

export type DateTimeFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['DateTime']>;
};

export type BoolFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['Boolean']>;
};

export type NullableStringFieldUpdateOperationsInput = {
  set?: InputMaybe<Scalars['String']>;
};

export type AudioUpdateManyMutationInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BlockUpdateManyMutationInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  favourite?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type CategoryUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type CollectionUpdateManyMutationInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type NullableEnumCollectionStyleFieldUpdateOperationsInput = {
  set?: InputMaybe<CollectionStyle>;
};

export type NullableEnumCollectionTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<CollectionType>;
};

export type CouponUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  active_from?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  amount_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  couponType?: InputMaybe<EnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expire_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  percent_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type NullableFloatFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Float']>;
  divide?: InputMaybe<Scalars['Float']>;
  increment?: InputMaybe<Scalars['Float']>;
  multiply?: InputMaybe<Scalars['Float']>;
  set?: InputMaybe<Scalars['Float']>;
};

export type EnumCouponTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<CouponType>;
};

export type CustomerUpdateManyMutationInput = {
  age?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NullableIntFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Int']>;
  divide?: InputMaybe<Scalars['Int']>;
  increment?: InputMaybe<Scalars['Int']>;
  multiply?: InputMaybe<Scalars['Int']>;
  set?: InputMaybe<Scalars['Int']>;
};

export type DocumentUpdateManyMutationInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EmbedUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  embedCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type GroupUpdateManyMutationInput = {
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type ItemUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  itemType?: InputMaybe<EnumItemTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type EnumItemTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<ItemType>;
};

export type LinkUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type LoginTokenUpdateManyMutationInput = {
  approved?: InputMaybe<BoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  domain?: InputMaybe<StringFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  expires?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<StringFieldUpdateOperationsInput>;
  secret?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type NotificationUpdateManyMutationInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUpdateManyMutationInput = {
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerContact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delivery_fee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  delivery_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  delivery_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderStatus?: InputMaybe<EnumOrderStatusFieldUpdateOperationsInput>;
  paid_total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  paymentGateway?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  requireShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  sales_tax?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  stripePrivateSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  tracking_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NullableEnumCryptoCurrencyFieldUpdateOperationsInput = {
  set?: InputMaybe<CryptoCurrency>;
};

export type NullableEnumCurrencyCodeFieldUpdateOperationsInput = {
  set?: InputMaybe<CurrencyCode>;
};

export type EnumOrderStatusFieldUpdateOperationsInput = {
  set?: InputMaybe<OrderStatus>;
};

export type OrderedAudioUpdateManyMutationInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedDocumentUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedLinkUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type OrderedPictureUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NullableEnumProductTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<ProductType>;
};

export type OrderedRedeemableUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedVideoUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type PageUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type NullableEnumNavColorFieldUpdateOperationsInput = {
  set?: InputMaybe<NavColor>;
};

export type PageCollectionUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PageViewUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PictureUpdateManyMutationInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type IntFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Int']>;
  divide?: InputMaybe<Scalars['Int']>;
  increment?: InputMaybe<Scalars['Int']>;
  multiply?: InputMaybe<Scalars['Int']>;
  set?: InputMaybe<Scalars['Int']>;
};

export type NullableEnumEditionTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<EditionType>;
};

export type NullableEnumChainFieldUpdateOperationsInput = {
  set?: InputMaybe<Chain>;
};

export type FloatFieldUpdateOperationsInput = {
  decrement?: InputMaybe<Scalars['Float']>;
  divide?: InputMaybe<Scalars['Float']>;
  increment?: InputMaybe<Scalars['Float']>;
  multiply?: InputMaybe<Scalars['Float']>;
  set?: InputMaybe<Scalars['Float']>;
};

export type ProductCollectionUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type RedeemableUpdateManyMutationInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<IntFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RefreshTokenUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  expires?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<StringFieldUpdateOperationsInput>;
  lastActive?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  loginTokenId?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<StringFieldUpdateOperationsInput>;
  value?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type RefundUpdateManyMutationInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type RequestUpdateManyMutationInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  days?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<StringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestAccept?: InputMaybe<NullableEnumRequestAcceptFieldUpdateOperationsInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subject?: InputMaybe<StringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NullableEnumRequestAcceptFieldUpdateOperationsInput = {
  set?: InputMaybe<RequestAccept>;
};

export type NullableEnumRequestStatusFieldUpdateOperationsInput = {
  set?: InputMaybe<RequestStatus>;
};

export type RequestClickUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ShippingUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amount?: InputMaybe<FloatFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isGlobal?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type NullableEnumCountryCodeFieldUpdateOperationsInput = {
  set?: InputMaybe<CountryCode>;
};

export type SlugCounterUpdateManyMutationInput = {
  counter?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SocialUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  socialType?: InputMaybe<EnumSocialTypeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type EnumSocialTypeFieldUpdateOperationsInput = {
  set?: InputMaybe<SocialType>;
};

export type TagUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TaxUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  inclusive?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isGlobal?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  jurisdiction?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  onShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  percentage?: InputMaybe<FloatFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripePrivateTaxId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  zip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type TraitUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TypeUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type UserUpdateManyMutationInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ValueUpdateManyMutationInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  percentage?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type VideoUpdateManyMutationInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WebsiteUpdateManyMutationInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chain?: InputMaybe<Scalars['Json']>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type EnumLanguageCodeFieldUpdateOperationsInput = {
  set?: InputMaybe<LanguageCode>;
};

export type EnumPaymentMethodFieldUpdateOperationsInput = {
  set?: InputMaybe<PaymentMethod>;
};

export type EnumColorFieldUpdateOperationsInput = {
  set?: InputMaybe<Color>;
};

export type WithdrawUpdateManyMutationInput = {
  amount?: InputMaybe<FloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  processed?: InputMaybe<BoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type UpdateModelInput = {
  create?: InputMaybe<Scalars['Boolean']>;
  delete?: InputMaybe<Scalars['Boolean']>;
  displayFields?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  fields?: InputMaybe<Array<InputMaybe<UpdateFieldInput>>>;
  idField?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  update?: InputMaybe<Scalars['Boolean']>;
};

export type AttachmentUpdateInput = {
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  staked?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutAttachmentsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAttachmentsInput>;
};

export type UserUpdateOneWithoutAttachmentsInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutAttachmentsInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutAttachmentsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutAttachmentsInput>;
  upsert?: InputMaybe<UserUpsertWithoutAttachmentsInput>;
};

export type UserUncheckedUpdateWithoutAttachmentsInput = {
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUncheckedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type AudioUncheckedUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCreateWithoutUserInput>>>;
  createMany?: InputMaybe<AudioCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AudioScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AudioUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AudioUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AudioUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type AudioScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AudioScalarWhereInput>>>;
  audioObj?: InputMaybe<JsonNullableFilter>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<AudioScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AudioScalarWhereInput>>>;
  paid?: InputMaybe<BoolNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type AudioUpdateWithWhereUniqueWithoutUserInput = {
  data: AudioUncheckedUpdateWithoutUserInput;
  where: AudioWhereUniqueInput;
};

export type AudioUncheckedUpdateWithoutUserInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUncheckedUpdateManyWithoutAudioInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutAudiosInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedAudioUncheckedUpdateManyWithoutAudioInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedAudioCreateOrConnectWithoutAudioInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedAudioCreateWithoutAudioInput>>>;
  createMany?: InputMaybe<OrderedAudioCreateManyAudioInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedAudioScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedAudioUpdateWithWhereUniqueWithoutAudioInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedAudioUpdateManyWithWhereWithoutAudioInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedAudioUpsertWithWhereUniqueWithoutAudioInput>>>;
};

export type OrderedAudioScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedAudioScalarWhereInput>>>;
  audioId?: InputMaybe<StringNullableFilter>;
  audioObj?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedAudioScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedAudioScalarWhereInput>>>;
  orderedProductId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringNullableFilter>;
};

export type OrderedAudioUpdateWithWhereUniqueWithoutAudioInput = {
  data: OrderedAudioUncheckedUpdateWithoutAudioInput;
  where: OrderedAudioWhereUniqueInput;
};

export type OrderedAudioUncheckedUpdateWithoutAudioInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedAudioUpdateManyWithWhereWithoutAudioInput = {
  data: OrderedAudioUncheckedUpdateManyWithoutOrderedAudiosInput;
  where: OrderedAudioScalarWhereInput;
};

export type OrderedAudioUncheckedUpdateManyWithoutOrderedAudiosInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedAudioUpsertWithWhereUniqueWithoutAudioInput = {
  create: OrderedAudioUncheckedCreateWithoutAudioInput;
  update: OrderedAudioUncheckedUpdateWithoutAudioInput;
  where: OrderedAudioWhereUniqueInput;
};

export type ProductUncheckedUpdateManyWithoutAudiosInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutAudiosInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutAudiosInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutAudiosInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutAudiosInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutAudiosInput>>>;
};

export type ProductScalarWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  creatorEarnings?: InputMaybe<IntFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  editionAddress?: InputMaybe<StringNullableFilter>;
  editionMinted?: InputMaybe<IntNullableFilter>;
  editionSize?: InputMaybe<IntFilter>;
  editionType?: InputMaybe<EnumEditionTypeNullableFilter>;
  externalNftChain?: InputMaybe<EnumChainNullableFilter>;
  externalNftContractAddress?: InputMaybe<StringNullableFilter>;
  externalUrl?: InputMaybe<StringNullableFilter>;
  gallery?: InputMaybe<JsonNullableListFilter>;
  height?: InputMaybe<FloatNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  inStock?: InputMaybe<BoolNullableFilter>;
  isExternalNft?: InputMaybe<BoolNullableFilter>;
  length?: InputMaybe<FloatNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  price?: InputMaybe<FloatFilter>;
  productType?: InputMaybe<EnumProductTypeNullableFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  sale_price?: InputMaybe<FloatNullableFilter>;
  sku?: InputMaybe<StringNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  storageSize?: InputMaybe<IntNullableFilter>;
  tax_code?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  typeId?: InputMaybe<StringNullableFilter>;
  unit?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  variation_options?: InputMaybe<JsonNullableListFilter>;
  variations?: InputMaybe<JsonNullableListFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
  width?: InputMaybe<FloatNullableFilter>;
};

export type ProductUpdateWithWhereUniqueWithoutAudiosInput = {
  data: ProductUncheckedUpdateWithoutAudiosInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedUpdateWithoutAudiosInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUncheckedUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutProductsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type BlockUncheckedUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<BlockCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<BlockCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<BlockScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<BlockUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<BlockUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<BlockUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type BlockScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<BlockScalarWhereInput>>>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  favourite?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<BlockScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<BlockScalarWhereInput>>>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type BlockUpdateWithWhereUniqueWithoutProductsInput = {
  data: BlockUncheckedUpdateWithoutProductsInput;
  where: BlockWhereUniqueInput;
};

export type BlockUncheckedUpdateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  favourite?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutBlockInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ItemUncheckedUpdateManyWithoutBlockInput = {
  connect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ItemCreateOrConnectWithoutBlockInput>>>;
  create?: InputMaybe<Array<InputMaybe<ItemCreateWithoutBlockInput>>>;
  createMany?: InputMaybe<ItemCreateManyBlockInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ItemScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ItemUpdateWithWhereUniqueWithoutBlockInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ItemUpdateManyWithWhereWithoutBlockInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ItemUpsertWithWhereUniqueWithoutBlockInput>>>;
};

export type ItemScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<ItemScalarWhereInput>>>;
  blockId?: InputMaybe<StringNullableFilter>;
  collectionId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  embedId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  itemType?: InputMaybe<EnumItemTypeFilter>;
  name?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<ItemScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ItemScalarWhereInput>>>;
  pageId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
};

export type ItemUpdateWithWhereUniqueWithoutBlockInput = {
  data: ItemUncheckedUpdateWithoutBlockInput;
  where: ItemWhereUniqueInput;
};

export type ItemUncheckedUpdateWithoutBlockInput = {
  collectionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  embedId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  itemType?: InputMaybe<EnumItemTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ItemUpdateManyWithWhereWithoutBlockInput = {
  data: ItemUncheckedUpdateManyWithoutItemsInput;
  where: ItemScalarWhereInput;
};

export type ItemUncheckedUpdateManyWithoutItemsInput = {
  collectionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  embedId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  itemType?: InputMaybe<EnumItemTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ItemUpsertWithWhereUniqueWithoutBlockInput = {
  create: ItemUncheckedCreateWithoutBlockInput;
  update: ItemUncheckedUpdateWithoutBlockInput;
  where: ItemWhereUniqueInput;
};

export type BlockUpdateManyWithWhereWithoutProductsInput = {
  data: BlockUncheckedUpdateManyWithoutBlocksInput;
  where: BlockScalarWhereInput;
};

export type BlockUncheckedUpdateManyWithoutBlocksInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  favourite?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type BlockUpsertWithWhereUniqueWithoutProductsInput = {
  create: BlockUncheckedCreateWithoutProductsInput;
  update: BlockUncheckedUpdateWithoutProductsInput;
  where: BlockWhereUniqueInput;
};

export type CategoryUncheckedUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CategoryScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CategoryUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CategoryUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CategoryUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type CategoryScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<CategoryScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  details?: InputMaybe<StringNullableFilter>;
  icon?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<CategoryScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<CategoryScalarWhereInput>>>;
  parentId?: InputMaybe<StringNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type CategoryUpdateWithWhereUniqueWithoutProductsInput = {
  data: CategoryUncheckedUpdateWithoutProductsInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryUncheckedUpdateWithoutProductsInput = {
  children?: InputMaybe<CategoryUncheckedUpdateManyWithoutParentInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutCategoriesInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutCategoriesInput>;
  parentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryUncheckedUpdateManyWithoutParentInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutParentInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutParentInput>>>;
  createMany?: InputMaybe<CategoryCreateManyParentInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CategoryScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CategoryUpdateWithWhereUniqueWithoutParentInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CategoryUpdateManyWithWhereWithoutParentInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CategoryUpsertWithWhereUniqueWithoutParentInput>>>;
};

export type CategoryUpdateWithWhereUniqueWithoutParentInput = {
  data: CategoryUncheckedUpdateWithoutParentInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryUncheckedUpdateWithoutParentInput = {
  children?: InputMaybe<CategoryUncheckedUpdateManyWithoutParentInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutCategoriesInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutCategoriesInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutCategoriesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LinkUncheckedUpdateManyWithoutCategoriesInput = {
  connect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LinkCreateOrConnectWithoutCategoriesInput>>>;
  create?: InputMaybe<Array<InputMaybe<LinkCreateWithoutCategoriesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<LinkScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<LinkUpdateWithWhereUniqueWithoutCategoriesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<LinkUpdateManyWithWhereWithoutCategoriesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<LinkUpsertWithWhereUniqueWithoutCategoriesInput>>>;
};

export type LinkScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<LinkScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  hiddenMessage?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<LinkScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<LinkScalarWhereInput>>>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type LinkUpdateWithWhereUniqueWithoutCategoriesInput = {
  data: LinkUncheckedUpdateWithoutCategoriesInput;
  where: LinkWhereUniqueInput;
};

export type LinkUncheckedUpdateWithoutCategoriesInput = {
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutLinksInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedUpdateManyWithoutLinkInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutLinksInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CollectionUncheckedUpdateManyWithoutLinksInput = {
  connect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CollectionCreateOrConnectWithoutLinksInput>>>;
  create?: InputMaybe<Array<InputMaybe<CollectionCreateWithoutLinksInput>>>;
  delete?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CollectionUpdateWithWhereUniqueWithoutLinksInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CollectionUpdateManyWithWhereWithoutLinksInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CollectionUpsertWithWhereUniqueWithoutLinksInput>>>;
};

export type CollectionScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<CollectionScalarWhereInput>>>;
  collectionStyle?: InputMaybe<EnumCollectionStyleNullableFilter>;
  collectionType?: InputMaybe<EnumCollectionTypeNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayTitle?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<CollectionScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<CollectionScalarWhereInput>>>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type CollectionUpdateWithWhereUniqueWithoutLinksInput = {
  data: CollectionUncheckedUpdateWithoutLinksInput;
  where: CollectionWhereUniqueInput;
};

export type CollectionUncheckedUpdateWithoutLinksInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutCollectionInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ItemUncheckedUpdateManyWithoutCollectionInput = {
  connect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ItemCreateOrConnectWithoutCollectionInput>>>;
  create?: InputMaybe<Array<InputMaybe<ItemCreateWithoutCollectionInput>>>;
  createMany?: InputMaybe<ItemCreateManyCollectionInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ItemScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ItemUpdateWithWhereUniqueWithoutCollectionInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ItemUpdateManyWithWhereWithoutCollectionInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ItemUpsertWithWhereUniqueWithoutCollectionInput>>>;
};

export type ItemUpdateWithWhereUniqueWithoutCollectionInput = {
  data: ItemUncheckedUpdateWithoutCollectionInput;
  where: ItemWhereUniqueInput;
};

export type ItemUncheckedUpdateWithoutCollectionInput = {
  blockId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  embedId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  itemType?: InputMaybe<EnumItemTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ItemUpdateManyWithWhereWithoutCollectionInput = {
  data: ItemUncheckedUpdateManyWithoutItemsInput;
  where: ItemScalarWhereInput;
};

export type ItemUpsertWithWhereUniqueWithoutCollectionInput = {
  create: ItemUncheckedCreateWithoutCollectionInput;
  update: ItemUncheckedUpdateWithoutCollectionInput;
  where: ItemWhereUniqueInput;
};

export type PageUncheckedUpdateManyWithoutCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageUpdateWithWhereUniqueWithoutCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageUpdateManyWithWhereWithoutCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageUpsertWithWhereUniqueWithoutCollectionsInput>>>;
};

export type PageScalarWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  isIndex?: InputMaybe<BoolNullableFilter>;
  itemIds?: InputMaybe<StringNullableListFilter>;
  menu?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringFilter>;
  navColor?: InputMaybe<EnumNavColorNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type PageUpdateWithWhereUniqueWithoutCollectionsInput = {
  data: PageUncheckedUpdateWithoutCollectionsInput;
  where: PageWhereUniqueInput;
};

export type PageUncheckedUpdateWithoutCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutPageInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedUpdateManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryUncheckedUpdateManyWithoutPagesInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutPagesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CategoryScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CategoryUpdateWithWhereUniqueWithoutPagesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CategoryUpdateManyWithWhereWithoutPagesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CategoryUpsertWithWhereUniqueWithoutPagesInput>>>;
};

export type CategoryUpdateWithWhereUniqueWithoutPagesInput = {
  data: CategoryUncheckedUpdateWithoutPagesInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryUncheckedUpdateWithoutPagesInput = {
  children?: InputMaybe<CategoryUncheckedUpdateManyWithoutParentInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutCategoriesInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  parentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutCategoriesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateManyWithoutCategoriesInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutCategoriesInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutCategoriesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutCategoriesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutCategoriesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutCategoriesInput>>>;
};

export type ProductUpdateWithWhereUniqueWithoutCategoriesInput = {
  data: ProductUncheckedUpdateWithoutCategoriesInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedUpdateWithoutCategoriesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUncheckedUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutProductsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type AudioUncheckedUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AudioScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AudioUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AudioUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AudioUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type AudioUpdateWithWhereUniqueWithoutProductsInput = {
  data: AudioUncheckedUpdateWithoutProductsInput;
  where: AudioWhereUniqueInput;
};

export type AudioUncheckedUpdateWithoutProductsInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUncheckedUpdateManyWithoutAudioInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioUpdateManyWithWhereWithoutProductsInput = {
  data: AudioUncheckedUpdateManyWithoutAudiosInput;
  where: AudioScalarWhereInput;
};

export type AudioUncheckedUpdateManyWithoutAudiosInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioUpsertWithWhereUniqueWithoutProductsInput = {
  create: AudioUncheckedCreateWithoutProductsInput;
  update: AudioUncheckedUpdateWithoutProductsInput;
  where: AudioWhereUniqueInput;
};

export type CollectionUncheckedUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CollectionCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<CollectionCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CollectionUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CollectionUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CollectionUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type CollectionUpdateWithWhereUniqueWithoutProductsInput = {
  data: CollectionUncheckedUpdateWithoutProductsInput;
  where: CollectionWhereUniqueInput;
};

export type CollectionUncheckedUpdateWithoutProductsInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutCollectionInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutCollectionsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LinkUncheckedUpdateManyWithoutCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LinkCreateOrConnectWithoutCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<LinkCreateWithoutCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<LinkScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<LinkUpdateWithWhereUniqueWithoutCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<LinkUpdateManyWithWhereWithoutCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<LinkUpsertWithWhereUniqueWithoutCollectionsInput>>>;
};

export type LinkUpdateWithWhereUniqueWithoutCollectionsInput = {
  data: LinkUncheckedUpdateWithoutCollectionsInput;
  where: LinkWhereUniqueInput;
};

export type LinkUncheckedUpdateWithoutCollectionsInput = {
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutLinksInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedUpdateManyWithoutLinkInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutLinksInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryUncheckedUpdateManyWithoutLinksInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutLinksInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutLinksInput>>>;
  delete?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CategoryScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CategoryUpdateWithWhereUniqueWithoutLinksInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CategoryUpdateManyWithWhereWithoutLinksInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CategoryUpsertWithWhereUniqueWithoutLinksInput>>>;
};

export type CategoryUpdateWithWhereUniqueWithoutLinksInput = {
  data: CategoryUncheckedUpdateWithoutLinksInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryUncheckedUpdateWithoutLinksInput = {
  children?: InputMaybe<CategoryUncheckedUpdateManyWithoutParentInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutCategoriesInput>;
  parentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutCategoriesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUncheckedUpdateManyWithoutCategoriesInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutCategoriesInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutCategoriesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageUpdateWithWhereUniqueWithoutCategoriesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageUpdateManyWithWhereWithoutCategoriesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageUpsertWithWhereUniqueWithoutCategoriesInput>>>;
};

export type PageUpdateWithWhereUniqueWithoutCategoriesInput = {
  data: PageUncheckedUpdateWithoutCategoriesInput;
  where: PageWhereUniqueInput;
};

export type PageUncheckedUpdateWithoutCategoriesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutPageInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedUpdateManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CollectionUncheckedUpdateManyWithoutPagesInput = {
  connect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CollectionCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<CollectionCreateWithoutPagesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CollectionUpdateWithWhereUniqueWithoutPagesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CollectionUpdateManyWithWhereWithoutPagesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CollectionUpsertWithWhereUniqueWithoutPagesInput>>>;
};

export type CollectionUpdateWithWhereUniqueWithoutPagesInput = {
  data: CollectionUncheckedUpdateWithoutPagesInput;
  where: CollectionWhereUniqueInput;
};

export type CollectionUncheckedUpdateWithoutPagesInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutCollectionInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutCollectionsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateManyWithoutCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutCollectionsInput>>>;
};

export type ProductUpdateWithWhereUniqueWithoutCollectionsInput = {
  data: ProductUncheckedUpdateWithoutCollectionsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedUpdateWithoutCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUncheckedUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutProductsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type DocumentUncheckedUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<DocumentCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<DocumentCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<DocumentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<DocumentUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<DocumentUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<DocumentUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type DocumentScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<DocumentScalarWhereInput>>>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  documentObj?: InputMaybe<JsonNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<DocumentScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<DocumentScalarWhereInput>>>;
  paid?: InputMaybe<BoolNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type DocumentUpdateWithWhereUniqueWithoutProductsInput = {
  data: DocumentUncheckedUpdateWithoutProductsInput;
  where: DocumentWhereUniqueInput;
};

export type DocumentUncheckedUpdateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedUpdateManyWithoutDocumentInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedDocumentUncheckedUpdateManyWithoutDocumentInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedDocumentCreateOrConnectWithoutDocumentInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedDocumentCreateWithoutDocumentInput>>>;
  createMany?: InputMaybe<OrderedDocumentCreateManyDocumentInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedDocumentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedDocumentUpdateWithWhereUniqueWithoutDocumentInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedDocumentUpdateManyWithWhereWithoutDocumentInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedDocumentUpsertWithWhereUniqueWithoutDocumentInput>>>;
};

export type OrderedDocumentScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedDocumentScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  documentId?: InputMaybe<StringNullableFilter>;
  documentObj?: InputMaybe<JsonNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedDocumentScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedDocumentScalarWhereInput>>>;
  orderedProductId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringNullableFilter>;
};

export type OrderedDocumentUpdateWithWhereUniqueWithoutDocumentInput = {
  data: OrderedDocumentUncheckedUpdateWithoutDocumentInput;
  where: OrderedDocumentWhereUniqueInput;
};

export type OrderedDocumentUncheckedUpdateWithoutDocumentInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedDocumentUpdateManyWithWhereWithoutDocumentInput = {
  data: OrderedDocumentUncheckedUpdateManyWithoutOrderedDocumentsInput;
  where: OrderedDocumentScalarWhereInput;
};

export type OrderedDocumentUncheckedUpdateManyWithoutOrderedDocumentsInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedDocumentUpsertWithWhereUniqueWithoutDocumentInput = {
  create: OrderedDocumentUncheckedCreateWithoutDocumentInput;
  update: OrderedDocumentUncheckedUpdateWithoutDocumentInput;
  where: OrderedDocumentWhereUniqueInput;
};

export type DocumentUpdateManyWithWhereWithoutProductsInput = {
  data: DocumentUncheckedUpdateManyWithoutDocumentsInput;
  where: DocumentScalarWhereInput;
};

export type DocumentUncheckedUpdateManyWithoutDocumentsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DocumentUpsertWithWhereUniqueWithoutProductsInput = {
  create: DocumentUncheckedCreateWithoutProductsInput;
  update: DocumentUncheckedUpdateWithoutProductsInput;
  where: DocumentWhereUniqueInput;
};

export type LinkUncheckedUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LinkCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<LinkCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<LinkScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<LinkUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<LinkUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<LinkUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type LinkUpdateWithWhereUniqueWithoutProductsInput = {
  data: LinkUncheckedUpdateWithoutProductsInput;
  where: LinkWhereUniqueInput;
};

export type LinkUncheckedUpdateWithoutProductsInput = {
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutLinksInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutLinksInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedUpdateManyWithoutLinkInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedLinkUncheckedUpdateManyWithoutLinkInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedLinkCreateOrConnectWithoutLinkInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedLinkCreateWithoutLinkInput>>>;
  createMany?: InputMaybe<OrderedLinkCreateManyLinkInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedLinkScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedLinkUpdateWithWhereUniqueWithoutLinkInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedLinkUpdateManyWithWhereWithoutLinkInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedLinkUpsertWithWhereUniqueWithoutLinkInput>>>;
};

export type OrderedLinkScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedLinkScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  hiddenMessage?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  linkId?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedLinkScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedLinkScalarWhereInput>>>;
  orderedProductId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringFilter>;
};

export type OrderedLinkUpdateWithWhereUniqueWithoutLinkInput = {
  data: OrderedLinkUncheckedUpdateWithoutLinkInput;
  where: OrderedLinkWhereUniqueInput;
};

export type OrderedLinkUncheckedUpdateWithoutLinkInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type OrderedLinkUpdateManyWithWhereWithoutLinkInput = {
  data: OrderedLinkUncheckedUpdateManyWithoutOrderedLinksInput;
  where: OrderedLinkScalarWhereInput;
};

export type OrderedLinkUncheckedUpdateManyWithoutOrderedLinksInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type OrderedLinkUpsertWithWhereUniqueWithoutLinkInput = {
  create: OrderedLinkUncheckedCreateWithoutLinkInput;
  update: OrderedLinkUncheckedUpdateWithoutLinkInput;
  where: OrderedLinkWhereUniqueInput;
};

export type LinkUpdateManyWithWhereWithoutProductsInput = {
  data: LinkUncheckedUpdateManyWithoutLinksInput;
  where: LinkScalarWhereInput;
};

export type LinkUncheckedUpdateManyWithoutLinksInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type LinkUpsertWithWhereUniqueWithoutProductsInput = {
  create: LinkUncheckedCreateWithoutProductsInput;
  update: LinkUncheckedUpdateWithoutProductsInput;
  where: LinkWhereUniqueInput;
};

export type OrderedProductUncheckedUpdateManyWithoutProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutProductInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedProductUpdateWithWhereUniqueWithoutProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedProductUpdateManyWithWhereWithoutProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedProductUpsertWithWhereUniqueWithoutProductInput>>>;
};

export type OrderedProductScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  itemTotal?: InputMaybe<FloatNullableFilter>;
  minted?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  orderId?: InputMaybe<StringNullableFilter>;
  orderNumber?: InputMaybe<StringNullableFilter>;
  price?: InputMaybe<FloatNullableFilter>;
  productId?: InputMaybe<StringNullableFilter>;
  productSlug?: InputMaybe<StringFilter>;
  productType?: InputMaybe<EnumProductTypeNullableFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  refundId?: InputMaybe<StringNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringNullableFilter>;
  variationId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type OrderedProductUpdateWithWhereUniqueWithoutProductInput = {
  data: OrderedProductUncheckedUpdateWithoutProductInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUncheckedUpdateWithoutProductInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedUpdateManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refundId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedAudioUncheckedUpdateManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedAudioCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedAudioCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedAudioCreateManyOrderedProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedAudioScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedAudioUpdateWithWhereUniqueWithoutOrderedProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedAudioUpdateManyWithWhereWithoutOrderedProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedAudioUpsertWithWhereUniqueWithoutOrderedProductInput>>>;
};

export type OrderedAudioUpdateWithWhereUniqueWithoutOrderedProductInput = {
  data: OrderedAudioUncheckedUpdateWithoutOrderedProductInput;
  where: OrderedAudioWhereUniqueInput;
};

export type OrderedAudioUncheckedUpdateWithoutOrderedProductInput = {
  audioId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedAudioUpdateManyWithWhereWithoutOrderedProductInput = {
  data: OrderedAudioUncheckedUpdateManyWithoutOrderedAudiosInput;
  where: OrderedAudioScalarWhereInput;
};

export type OrderedAudioUpsertWithWhereUniqueWithoutOrderedProductInput = {
  create: OrderedAudioUncheckedCreateWithoutOrderedProductInput;
  update: OrderedAudioUncheckedUpdateWithoutOrderedProductInput;
  where: OrderedAudioWhereUniqueInput;
};

export type OrderedDocumentUncheckedUpdateManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedDocumentCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedDocumentCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedDocumentCreateManyOrderedProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedDocumentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedDocumentUpdateWithWhereUniqueWithoutOrderedProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedDocumentUpdateManyWithWhereWithoutOrderedProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedDocumentUpsertWithWhereUniqueWithoutOrderedProductInput>>>;
};

export type OrderedDocumentUpdateWithWhereUniqueWithoutOrderedProductInput = {
  data: OrderedDocumentUncheckedUpdateWithoutOrderedProductInput;
  where: OrderedDocumentWhereUniqueInput;
};

export type OrderedDocumentUncheckedUpdateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedDocumentUpdateManyWithWhereWithoutOrderedProductInput = {
  data: OrderedDocumentUncheckedUpdateManyWithoutOrderedDocumentsInput;
  where: OrderedDocumentScalarWhereInput;
};

export type OrderedDocumentUpsertWithWhereUniqueWithoutOrderedProductInput = {
  create: OrderedDocumentUncheckedCreateWithoutOrderedProductInput;
  update: OrderedDocumentUncheckedUpdateWithoutOrderedProductInput;
  where: OrderedDocumentWhereUniqueInput;
};

export type OrderedLinkUncheckedUpdateManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedLinkCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedLinkCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedLinkCreateManyOrderedProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedLinkScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedLinkUpdateWithWhereUniqueWithoutOrderedProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedLinkUpdateManyWithWhereWithoutOrderedProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedLinkUpsertWithWhereUniqueWithoutOrderedProductInput>>>;
};

export type OrderedLinkUpdateWithWhereUniqueWithoutOrderedProductInput = {
  data: OrderedLinkUncheckedUpdateWithoutOrderedProductInput;
  where: OrderedLinkWhereUniqueInput;
};

export type OrderedLinkUncheckedUpdateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  linkId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type OrderedLinkUpdateManyWithWhereWithoutOrderedProductInput = {
  data: OrderedLinkUncheckedUpdateManyWithoutOrderedLinksInput;
  where: OrderedLinkScalarWhereInput;
};

export type OrderedLinkUpsertWithWhereUniqueWithoutOrderedProductInput = {
  create: OrderedLinkUncheckedCreateWithoutOrderedProductInput;
  update: OrderedLinkUncheckedUpdateWithoutOrderedProductInput;
  where: OrderedLinkWhereUniqueInput;
};

export type OrderedPictureUncheckedUpdateManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedPictureCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedPictureCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedPictureCreateManyOrderedProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedPictureScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedPictureUpdateWithWhereUniqueWithoutOrderedProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedPictureUpdateManyWithWhereWithoutOrderedProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedPictureUpsertWithWhereUniqueWithoutOrderedProductInput>>>;
};

export type OrderedPictureScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedPictureScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedPictureScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedPictureScalarWhereInput>>>;
  orderedProductId?: InputMaybe<StringNullableFilter>;
  pictureId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringNullableFilter>;
};

export type OrderedPictureUpdateWithWhereUniqueWithoutOrderedProductInput = {
  data: OrderedPictureUncheckedUpdateWithoutOrderedProductInput;
  where: OrderedPictureWhereUniqueInput;
};

export type OrderedPictureUncheckedUpdateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pictureId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedPictureUpdateManyWithWhereWithoutOrderedProductInput = {
  data: OrderedPictureUncheckedUpdateManyWithoutOrderedPicturesInput;
  where: OrderedPictureScalarWhereInput;
};

export type OrderedPictureUncheckedUpdateManyWithoutOrderedPicturesInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pictureId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedPictureUpsertWithWhereUniqueWithoutOrderedProductInput = {
  create: OrderedPictureUncheckedCreateWithoutOrderedProductInput;
  update: OrderedPictureUncheckedUpdateWithoutOrderedProductInput;
  where: OrderedPictureWhereUniqueInput;
};

export type OrderedRedeemableUncheckedUpdateManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedRedeemableCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedRedeemableCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedRedeemableCreateManyOrderedProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedRedeemableScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedRedeemableUpdateWithWhereUniqueWithoutOrderedProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedRedeemableUpdateManyWithWhereWithoutOrderedProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedRedeemableUpsertWithWhereUniqueWithoutOrderedProductInput>>>;
};

export type OrderedRedeemableScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedRedeemableScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedRedeemableScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedRedeemableScalarWhereInput>>>;
  orderedProductId?: InputMaybe<StringNullableFilter>;
  perLimit?: InputMaybe<IntNullableFilter>;
  quantity?: InputMaybe<IntNullableFilter>;
  redeemableId?: InputMaybe<StringNullableFilter>;
  redeemInfo?: InputMaybe<JsonNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringNullableFilter>;
};

export type OrderedRedeemableUpdateWithWhereUniqueWithoutOrderedProductInput = {
  data: OrderedRedeemableUncheckedUpdateWithoutOrderedProductInput;
  where: OrderedRedeemableWhereUniqueInput;
};

export type OrderedRedeemableUncheckedUpdateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemableId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedRedeemableUpdateManyWithWhereWithoutOrderedProductInput = {
  data: OrderedRedeemableUncheckedUpdateManyWithoutOrderedRedeemablesInput;
  where: OrderedRedeemableScalarWhereInput;
};

export type OrderedRedeemableUncheckedUpdateManyWithoutOrderedRedeemablesInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemableId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedRedeemableUpsertWithWhereUniqueWithoutOrderedProductInput = {
  create: OrderedRedeemableUncheckedCreateWithoutOrderedProductInput;
  update: OrderedRedeemableUncheckedUpdateWithoutOrderedProductInput;
  where: OrderedRedeemableWhereUniqueInput;
};

export type OrderedVideoUncheckedUpdateManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedVideoCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedVideoCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedVideoCreateManyOrderedProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedVideoScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedVideoUpdateWithWhereUniqueWithoutOrderedProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedVideoUpdateManyWithWhereWithoutOrderedProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedVideoUpsertWithWhereUniqueWithoutOrderedProductInput>>>;
};

export type OrderedVideoScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedVideoScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedVideoScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedVideoScalarWhereInput>>>;
  orderedProductId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringNullableFilter>;
  videoId?: InputMaybe<StringNullableFilter>;
  videoObj?: InputMaybe<JsonNullableFilter>;
};

export type OrderedVideoUpdateWithWhereUniqueWithoutOrderedProductInput = {
  data: OrderedVideoUncheckedUpdateWithoutOrderedProductInput;
  where: OrderedVideoWhereUniqueInput;
};

export type OrderedVideoUncheckedUpdateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type OrderedVideoUpdateManyWithWhereWithoutOrderedProductInput = {
  data: OrderedVideoUncheckedUpdateManyWithoutOrderedVideosInput;
  where: OrderedVideoScalarWhereInput;
};

export type OrderedVideoUncheckedUpdateManyWithoutOrderedVideosInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type OrderedVideoUpsertWithWhereUniqueWithoutOrderedProductInput = {
  create: OrderedVideoUncheckedCreateWithoutOrderedProductInput;
  update: OrderedVideoUncheckedUpdateWithoutOrderedProductInput;
  where: OrderedVideoWhereUniqueInput;
};

export type OrderedProductUpdateManyWithWhereWithoutProductInput = {
  data: OrderedProductUncheckedUpdateManyWithoutOrderedProductsInput;
  where: OrderedProductScalarWhereInput;
};

export type OrderedProductUncheckedUpdateManyWithoutOrderedProductsInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refundId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpsertWithWhereUniqueWithoutProductInput = {
  create: OrderedProductUncheckedCreateWithoutProductInput;
  update: OrderedProductUncheckedUpdateWithoutProductInput;
  where: OrderedProductWhereUniqueInput;
};

export type PictureUncheckedUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PictureCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PictureCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PictureScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PictureUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PictureUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PictureUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type PictureScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<PictureScalarWhereInput>>>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<PictureScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PictureScalarWhereInput>>>;
  paid?: InputMaybe<BoolNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type PictureUpdateWithWhereUniqueWithoutProductsInput = {
  data: PictureUncheckedUpdateWithoutProductsInput;
  where: PictureWhereUniqueInput;
};

export type PictureUncheckedUpdateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedUpdateManyWithoutPictureInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedPictureUncheckedUpdateManyWithoutPictureInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedPictureCreateOrConnectWithoutPictureInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedPictureCreateWithoutPictureInput>>>;
  createMany?: InputMaybe<OrderedPictureCreateManyPictureInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedPictureScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedPictureUpdateWithWhereUniqueWithoutPictureInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedPictureUpdateManyWithWhereWithoutPictureInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedPictureUpsertWithWhereUniqueWithoutPictureInput>>>;
};

export type OrderedPictureUpdateWithWhereUniqueWithoutPictureInput = {
  data: OrderedPictureUncheckedUpdateWithoutPictureInput;
  where: OrderedPictureWhereUniqueInput;
};

export type OrderedPictureUncheckedUpdateWithoutPictureInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedPictureUpdateManyWithWhereWithoutPictureInput = {
  data: OrderedPictureUncheckedUpdateManyWithoutOrderedPicturesInput;
  where: OrderedPictureScalarWhereInput;
};

export type OrderedPictureUpsertWithWhereUniqueWithoutPictureInput = {
  create: OrderedPictureUncheckedCreateWithoutPictureInput;
  update: OrderedPictureUncheckedUpdateWithoutPictureInput;
  where: OrderedPictureWhereUniqueInput;
};

export type PictureUpdateManyWithWhereWithoutProductsInput = {
  data: PictureUncheckedUpdateManyWithoutPicturesInput;
  where: PictureScalarWhereInput;
};

export type PictureUncheckedUpdateManyWithoutPicturesInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PictureUpsertWithWhereUniqueWithoutProductsInput = {
  create: PictureUncheckedCreateWithoutProductsInput;
  update: PictureUncheckedUpdateWithoutProductsInput;
  where: PictureWhereUniqueInput;
};

export type ProductCollectionUncheckedUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCollectionCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCollectionCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductCollectionUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductCollectionUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductCollectionUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type ProductCollectionScalarWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayTitle?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereInput>>>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type ProductCollectionUpdateWithWhereUniqueWithoutProductsInput = {
  data: ProductCollectionUncheckedUpdateWithoutProductsInput;
  where: ProductCollectionWhereUniqueInput;
};

export type ProductCollectionUncheckedUpdateWithoutProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductCollectionUpdateManyWithWhereWithoutProductsInput = {
  data: ProductCollectionUncheckedUpdateManyWithoutProductCollectionsInput;
  where: ProductCollectionScalarWhereInput;
};

export type ProductCollectionUncheckedUpdateManyWithoutProductCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductCollectionUpsertWithWhereUniqueWithoutProductsInput = {
  create: ProductCollectionUncheckedCreateWithoutProductsInput;
  update: ProductCollectionUncheckedUpdateWithoutProductsInput;
  where: ProductCollectionWhereUniqueInput;
};

export type RedeemableUncheckedUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RedeemableCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<RedeemableCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RedeemableScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RedeemableUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RedeemableUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RedeemableUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type RedeemableScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<RedeemableScalarWhereInput>>>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<RedeemableScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RedeemableScalarWhereInput>>>;
  paid?: InputMaybe<BoolNullableFilter>;
  perLimit?: InputMaybe<IntFilter>;
  quantity?: InputMaybe<IntFilter>;
  redeemInfo?: InputMaybe<JsonNullableFilter>;
  redeemPassword?: InputMaybe<StringNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type RedeemableUpdateWithWhereUniqueWithoutProductsInput = {
  data: RedeemableUncheckedUpdateWithoutProductsInput;
  where: RedeemableWhereUniqueInput;
};

export type RedeemableUncheckedUpdateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedUpdateManyWithoutRedeemableInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<IntFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedRedeemableUncheckedUpdateManyWithoutRedeemableInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedRedeemableCreateOrConnectWithoutRedeemableInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedRedeemableCreateWithoutRedeemableInput>>>;
  createMany?: InputMaybe<OrderedRedeemableCreateManyRedeemableInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedRedeemableScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedRedeemableUpdateWithWhereUniqueWithoutRedeemableInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedRedeemableUpdateManyWithWhereWithoutRedeemableInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedRedeemableUpsertWithWhereUniqueWithoutRedeemableInput>>>;
};

export type OrderedRedeemableUpdateWithWhereUniqueWithoutRedeemableInput = {
  data: OrderedRedeemableUncheckedUpdateWithoutRedeemableInput;
  where: OrderedRedeemableWhereUniqueInput;
};

export type OrderedRedeemableUncheckedUpdateWithoutRedeemableInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedRedeemableUpdateManyWithWhereWithoutRedeemableInput = {
  data: OrderedRedeemableUncheckedUpdateManyWithoutOrderedRedeemablesInput;
  where: OrderedRedeemableScalarWhereInput;
};

export type OrderedRedeemableUpsertWithWhereUniqueWithoutRedeemableInput = {
  create: OrderedRedeemableUncheckedCreateWithoutRedeemableInput;
  update: OrderedRedeemableUncheckedUpdateWithoutRedeemableInput;
  where: OrderedRedeemableWhereUniqueInput;
};

export type RedeemableUpdateManyWithWhereWithoutProductsInput = {
  data: RedeemableUncheckedUpdateManyWithoutRedeemablesInput;
  where: RedeemableScalarWhereInput;
};

export type RedeemableUncheckedUpdateManyWithoutRedeemablesInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<IntFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RedeemableUpsertWithWhereUniqueWithoutProductsInput = {
  create: RedeemableUncheckedCreateWithoutProductsInput;
  update: RedeemableUncheckedUpdateWithoutProductsInput;
  where: RedeemableWhereUniqueInput;
};

export type TagUncheckedUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<TagCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<TagCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<TagScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<TagUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<TagUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<TagUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type TagScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<TagScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  icon?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<TagScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<TagScalarWhereInput>>>;
  slug?: InputMaybe<StringNullableFilter>;
  typeId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
};

export type TagUpdateWithWhereUniqueWithoutProductsInput = {
  data: TagUncheckedUpdateWithoutProductsInput;
  where: TagWhereUniqueInput;
};

export type TagUncheckedUpdateWithoutProductsInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TagUpdateManyWithWhereWithoutProductsInput = {
  data: TagUncheckedUpdateManyWithoutTagsInput;
  where: TagScalarWhereInput;
};

export type TagUncheckedUpdateManyWithoutTagsInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TagUpsertWithWhereUniqueWithoutProductsInput = {
  create: TagUncheckedCreateWithoutProductsInput;
  update: TagUncheckedUpdateWithoutProductsInput;
  where: TagWhereUniqueInput;
};

export type TraitUncheckedUpdateManyWithoutProductInput = {
  connect?: InputMaybe<Array<InputMaybe<TraitWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<TraitCreateOrConnectWithoutProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<TraitCreateWithoutProductInput>>>;
  createMany?: InputMaybe<TraitCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<TraitWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<TraitScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<TraitWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<TraitWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<TraitUpdateWithWhereUniqueWithoutProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<TraitUpdateManyWithWhereWithoutProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<TraitUpsertWithWhereUniqueWithoutProductInput>>>;
};

export type TraitScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<TraitScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<TraitScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<TraitScalarWhereInput>>>;
  productId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
};

export type TraitUpdateWithWhereUniqueWithoutProductInput = {
  data: TraitUncheckedUpdateWithoutProductInput;
  where: TraitWhereUniqueInput;
};

export type TraitUncheckedUpdateWithoutProductInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<ValueUncheckedUpdateManyWithoutTraitInput>;
};

export type ValueUncheckedUpdateManyWithoutTraitInput = {
  connect?: InputMaybe<Array<InputMaybe<ValueWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ValueCreateOrConnectWithoutTraitInput>>>;
  create?: InputMaybe<Array<InputMaybe<ValueCreateWithoutTraitInput>>>;
  createMany?: InputMaybe<ValueCreateManyTraitInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ValueWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ValueScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ValueWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ValueWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ValueUpdateWithWhereUniqueWithoutTraitInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ValueUpdateManyWithWhereWithoutTraitInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ValueUpsertWithWhereUniqueWithoutTraitInput>>>;
};

export type ValueScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<ValueScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<ValueScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ValueScalarWhereInput>>>;
  percentage?: InputMaybe<FloatNullableFilter>;
  traitId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
};

export type ValueUpdateWithWhereUniqueWithoutTraitInput = {
  data: ValueUncheckedUpdateWithoutTraitInput;
  where: ValueWhereUniqueInput;
};

export type ValueUncheckedUpdateWithoutTraitInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  percentage?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ValueUpdateManyWithWhereWithoutTraitInput = {
  data: ValueUncheckedUpdateManyWithoutValuesInput;
  where: ValueScalarWhereInput;
};

export type ValueUncheckedUpdateManyWithoutValuesInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  percentage?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ValueUpsertWithWhereUniqueWithoutTraitInput = {
  create: ValueUncheckedCreateWithoutTraitInput;
  update: ValueUncheckedUpdateWithoutTraitInput;
  where: ValueWhereUniqueInput;
};

export type TraitUpdateManyWithWhereWithoutProductInput = {
  data: TraitUncheckedUpdateManyWithoutTraitsInput;
  where: TraitScalarWhereInput;
};

export type TraitUncheckedUpdateManyWithoutTraitsInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TraitUpsertWithWhereUniqueWithoutProductInput = {
  create: TraitUncheckedCreateWithoutProductInput;
  update: TraitUncheckedUpdateWithoutProductInput;
  where: TraitWhereUniqueInput;
};

export type VideoUncheckedUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<VideoScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<VideoUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<VideoUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<VideoUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type VideoScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<VideoScalarWhereInput>>>;
  content?: InputMaybe<JsonNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<VideoScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<VideoScalarWhereInput>>>;
  paid?: InputMaybe<BoolNullableFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  userId?: InputMaybe<StringNullableFilter>;
  videoObj?: InputMaybe<JsonNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type VideoUpdateWithWhereUniqueWithoutProductsInput = {
  data: VideoUncheckedUpdateWithoutProductsInput;
  where: VideoWhereUniqueInput;
};

export type VideoUncheckedUpdateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedUpdateManyWithoutVideoInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedVideoUncheckedUpdateManyWithoutVideoInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedVideoCreateOrConnectWithoutVideoInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedVideoCreateWithoutVideoInput>>>;
  createMany?: InputMaybe<OrderedVideoCreateManyVideoInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedVideoScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedVideoUpdateWithWhereUniqueWithoutVideoInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedVideoUpdateManyWithWhereWithoutVideoInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedVideoUpsertWithWhereUniqueWithoutVideoInput>>>;
};

export type OrderedVideoUpdateWithWhereUniqueWithoutVideoInput = {
  data: OrderedVideoUncheckedUpdateWithoutVideoInput;
  where: OrderedVideoWhereUniqueInput;
};

export type OrderedVideoUncheckedUpdateWithoutVideoInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type OrderedVideoUpdateManyWithWhereWithoutVideoInput = {
  data: OrderedVideoUncheckedUpdateManyWithoutOrderedVideosInput;
  where: OrderedVideoScalarWhereInput;
};

export type OrderedVideoUpsertWithWhereUniqueWithoutVideoInput = {
  create: OrderedVideoUncheckedCreateWithoutVideoInput;
  update: OrderedVideoUncheckedUpdateWithoutVideoInput;
  where: OrderedVideoWhereUniqueInput;
};

export type VideoUpdateManyWithWhereWithoutProductsInput = {
  data: VideoUncheckedUpdateManyWithoutVideosInput;
  where: VideoScalarWhereInput;
};

export type VideoUncheckedUpdateManyWithoutVideosInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoUpsertWithWhereUniqueWithoutProductsInput = {
  create: VideoUncheckedCreateWithoutProductsInput;
  update: VideoUncheckedUpdateWithoutProductsInput;
  where: VideoWhereUniqueInput;
};

export type ProductUpdateManyWithWhereWithoutCollectionsInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUncheckedUpdateManyWithoutProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpsertWithWhereUniqueWithoutCollectionsInput = {
  create: ProductUncheckedCreateWithoutCollectionsInput;
  update: ProductUncheckedUpdateWithoutCollectionsInput;
  where: ProductWhereUniqueInput;
};

export type RequestUncheckedUpdateManyWithoutCollectionInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutCollectionInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutCollectionInput>>>;
  createMany?: InputMaybe<RequestCreateManyCollectionInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestUpdateWithWhereUniqueWithoutCollectionInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestUpdateManyWithWhereWithoutCollectionInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestUpsertWithWhereUniqueWithoutCollectionInput>>>;
};

export type RequestScalarWhereInput = {
  accept?: InputMaybe<BoolNullableFilter>;
  acceptBefore?: InputMaybe<DateTimeNullableFilter>;
  active?: InputMaybe<BoolNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  applicationFee?: InputMaybe<FloatNullableFilter>;
  collectionId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  cryptoCurrencyCode?: InputMaybe<EnumCryptoCurrencyNullableFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  days?: InputMaybe<IntFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringFilter>;
  expiredAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  message?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  pageId?: InputMaybe<StringNullableFilter>;
  paid?: InputMaybe<BoolNullableFilter>;
  paidAt?: InputMaybe<DateTimeNullableFilter>;
  paymentId?: InputMaybe<StringNullableFilter>;
  price?: InputMaybe<FloatNullableFilter>;
  requestAccept?: InputMaybe<EnumRequestAcceptNullableFilter>;
  requestStatus?: InputMaybe<EnumRequestStatusNullableFilter>;
  stripeSessionId?: InputMaybe<StringNullableFilter>;
  subject?: InputMaybe<StringFilter>;
  total?: InputMaybe<FloatNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
};

export type RequestUpdateWithWhereUniqueWithoutCollectionInput = {
  data: RequestUncheckedUpdateWithoutCollectionInput;
  where: RequestWhereUniqueInput;
};

export type RequestUncheckedUpdateWithoutCollectionInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  days?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<StringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestAccept?: InputMaybe<NullableEnumRequestAcceptFieldUpdateOperationsInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subject?: InputMaybe<StringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUpdateManyWithWhereWithoutCollectionInput = {
  data: RequestUncheckedUpdateManyWithoutRequestsInput;
  where: RequestScalarWhereInput;
};

export type RequestUncheckedUpdateManyWithoutRequestsInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  days?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<StringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestAccept?: InputMaybe<NullableEnumRequestAcceptFieldUpdateOperationsInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subject?: InputMaybe<StringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUpsertWithWhereUniqueWithoutCollectionInput = {
  create: RequestUncheckedCreateWithoutCollectionInput;
  update: RequestUncheckedUpdateWithoutCollectionInput;
  where: RequestWhereUniqueInput;
};

export type CollectionUpdateManyWithWhereWithoutPagesInput = {
  data: CollectionUncheckedUpdateManyWithoutCollectionsInput;
  where: CollectionScalarWhereInput;
};

export type CollectionUncheckedUpdateManyWithoutCollectionsInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CollectionUpsertWithWhereUniqueWithoutPagesInput = {
  create: CollectionUncheckedCreateWithoutPagesInput;
  update: CollectionUncheckedUpdateWithoutPagesInput;
  where: CollectionWhereUniqueInput;
};

export type ItemUncheckedUpdateManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ItemCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<ItemCreateWithoutPageInput>>>;
  createMany?: InputMaybe<ItemCreateManyPageInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ItemScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ItemUpdateWithWhereUniqueWithoutPageInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ItemUpdateManyWithWhereWithoutPageInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ItemUpsertWithWhereUniqueWithoutPageInput>>>;
};

export type ItemUpdateWithWhereUniqueWithoutPageInput = {
  data: ItemUncheckedUpdateWithoutPageInput;
  where: ItemWhereUniqueInput;
};

export type ItemUncheckedUpdateWithoutPageInput = {
  blockId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  collectionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  embedId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  itemType?: InputMaybe<EnumItemTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ItemUpdateManyWithWhereWithoutPageInput = {
  data: ItemUncheckedUpdateManyWithoutItemsInput;
  where: ItemScalarWhereInput;
};

export type ItemUpsertWithWhereUniqueWithoutPageInput = {
  create: ItemUncheckedCreateWithoutPageInput;
  update: ItemUncheckedUpdateWithoutPageInput;
  where: ItemWhereUniqueInput;
};

export type PageCollectionUncheckedUpdateManyWithoutPagesInput = {
  connect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCollectionCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCollectionCreateWithoutPagesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageCollectionUpdateWithWhereUniqueWithoutPagesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageCollectionUpdateManyWithWhereWithoutPagesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageCollectionUpsertWithWhereUniqueWithoutPagesInput>>>;
};

export type PageCollectionScalarWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  displayTitle?: InputMaybe<BoolNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereInput>>>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type PageCollectionUpdateWithWhereUniqueWithoutPagesInput = {
  data: PageCollectionUncheckedUpdateWithoutPagesInput;
  where: PageCollectionWhereUniqueInput;
};

export type PageCollectionUncheckedUpdateWithoutPagesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageCollectionUpdateManyWithWhereWithoutPagesInput = {
  data: PageCollectionUncheckedUpdateManyWithoutPageCollectionsInput;
  where: PageCollectionScalarWhereInput;
};

export type PageCollectionUncheckedUpdateManyWithoutPageCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageCollectionUpsertWithWhereUniqueWithoutPagesInput = {
  create: PageCollectionUncheckedCreateWithoutPagesInput;
  update: PageCollectionUncheckedUpdateWithoutPagesInput;
  where: PageCollectionWhereUniqueInput;
};

export type PageViewUncheckedUpdateManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageViewCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageViewCreateWithoutPageInput>>>;
  createMany?: InputMaybe<PageViewCreateManyPageInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageViewScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageViewUpdateWithWhereUniqueWithoutPageInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageViewUpdateManyWithWhereWithoutPageInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageViewUpsertWithWhereUniqueWithoutPageInput>>>;
};

export type PageViewScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<PageViewScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<PageViewScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageViewScalarWhereInput>>>;
  pageId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
};

export type PageViewUpdateWithWhereUniqueWithoutPageInput = {
  data: PageViewUncheckedUpdateWithoutPageInput;
  where: PageViewWhereUniqueInput;
};

export type PageViewUncheckedUpdateWithoutPageInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PageViewUpdateManyWithWhereWithoutPageInput = {
  data: PageViewUncheckedUpdateManyWithoutPageViewsInput;
  where: PageViewScalarWhereInput;
};

export type PageViewUncheckedUpdateManyWithoutPageViewsInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PageViewUpsertWithWhereUniqueWithoutPageInput = {
  create: PageViewUncheckedCreateWithoutPageInput;
  update: PageViewUncheckedUpdateWithoutPageInput;
  where: PageViewWhereUniqueInput;
};

export type RequestClickUncheckedUpdateManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutPageInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyPageInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestClickUpdateWithWhereUniqueWithoutPageInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestClickUpdateManyWithWhereWithoutPageInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestClickUpsertWithWhereUniqueWithoutPageInput>>>;
};

export type RequestClickScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereInput>>>;
  pageId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
};

export type RequestClickUpdateWithWhereUniqueWithoutPageInput = {
  data: RequestClickUncheckedUpdateWithoutPageInput;
  where: RequestClickWhereUniqueInput;
};

export type RequestClickUncheckedUpdateWithoutPageInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type RequestClickUpdateManyWithWhereWithoutPageInput = {
  data: RequestClickUncheckedUpdateManyWithoutRequestClicksInput;
  where: RequestClickScalarWhereInput;
};

export type RequestClickUncheckedUpdateManyWithoutRequestClicksInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type RequestClickUpsertWithWhereUniqueWithoutPageInput = {
  create: RequestClickUncheckedCreateWithoutPageInput;
  update: RequestClickUncheckedUpdateWithoutPageInput;
  where: RequestClickWhereUniqueInput;
};

export type RequestUncheckedUpdateManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutPageInput>>>;
  createMany?: InputMaybe<RequestCreateManyPageInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestUpdateWithWhereUniqueWithoutPageInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestUpdateManyWithWhereWithoutPageInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestUpsertWithWhereUniqueWithoutPageInput>>>;
};

export type RequestUpdateWithWhereUniqueWithoutPageInput = {
  data: RequestUncheckedUpdateWithoutPageInput;
  where: RequestWhereUniqueInput;
};

export type RequestUncheckedUpdateWithoutPageInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  collectionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  days?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<StringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestAccept?: InputMaybe<NullableEnumRequestAcceptFieldUpdateOperationsInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subject?: InputMaybe<StringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUpdateManyWithWhereWithoutPageInput = {
  data: RequestUncheckedUpdateManyWithoutRequestsInput;
  where: RequestScalarWhereInput;
};

export type RequestUpsertWithWhereUniqueWithoutPageInput = {
  create: RequestUncheckedCreateWithoutPageInput;
  update: RequestUncheckedUpdateWithoutPageInput;
  where: RequestWhereUniqueInput;
};

export type PageUpdateManyWithWhereWithoutCategoriesInput = {
  data: PageUncheckedUpdateManyWithoutPagesInput;
  where: PageScalarWhereInput;
};

export type PageUncheckedUpdateManyWithoutPagesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUpsertWithWhereUniqueWithoutCategoriesInput = {
  create: PageUncheckedCreateWithoutCategoriesInput;
  update: PageUncheckedUpdateWithoutCategoriesInput;
  where: PageWhereUniqueInput;
};

export type CategoryUpdateManyWithWhereWithoutLinksInput = {
  data: CategoryUncheckedUpdateManyWithoutCategoriesInput;
  where: CategoryScalarWhereInput;
};

export type CategoryUncheckedUpdateManyWithoutCategoriesInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  parentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryUpsertWithWhereUniqueWithoutLinksInput = {
  create: CategoryUncheckedCreateWithoutLinksInput;
  update: CategoryUncheckedUpdateWithoutLinksInput;
  where: CategoryWhereUniqueInput;
};

export type ProductUncheckedUpdateManyWithoutLinksInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutLinksInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutLinksInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutLinksInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutLinksInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutLinksInput>>>;
};

export type ProductUpdateWithWhereUniqueWithoutLinksInput = {
  data: ProductUncheckedUpdateWithoutLinksInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedUpdateWithoutLinksInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUncheckedUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutProductsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateManyWithWhereWithoutLinksInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpsertWithWhereUniqueWithoutLinksInput = {
  create: ProductUncheckedCreateWithoutLinksInput;
  update: ProductUncheckedUpdateWithoutLinksInput;
  where: ProductWhereUniqueInput;
};

export type LinkUpdateManyWithWhereWithoutCollectionsInput = {
  data: LinkUncheckedUpdateManyWithoutLinksInput;
  where: LinkScalarWhereInput;
};

export type LinkUpsertWithWhereUniqueWithoutCollectionsInput = {
  create: LinkUncheckedCreateWithoutCollectionsInput;
  update: LinkUncheckedUpdateWithoutCollectionsInput;
  where: LinkWhereUniqueInput;
};

export type CollectionUpdateManyWithWhereWithoutProductsInput = {
  data: CollectionUncheckedUpdateManyWithoutCollectionsInput;
  where: CollectionScalarWhereInput;
};

export type CollectionUpsertWithWhereUniqueWithoutProductsInput = {
  create: CollectionUncheckedCreateWithoutProductsInput;
  update: CollectionUncheckedUpdateWithoutProductsInput;
  where: CollectionWhereUniqueInput;
};

export type ProductUpdateManyWithWhereWithoutCategoriesInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpsertWithWhereUniqueWithoutCategoriesInput = {
  create: ProductUncheckedCreateWithoutCategoriesInput;
  update: ProductUncheckedUpdateWithoutCategoriesInput;
  where: ProductWhereUniqueInput;
};

export type CategoryUpdateManyWithWhereWithoutPagesInput = {
  data: CategoryUncheckedUpdateManyWithoutCategoriesInput;
  where: CategoryScalarWhereInput;
};

export type CategoryUpsertWithWhereUniqueWithoutPagesInput = {
  create: CategoryUncheckedCreateWithoutPagesInput;
  update: CategoryUncheckedUpdateWithoutPagesInput;
  where: CategoryWhereUniqueInput;
};

export type PageUpdateManyWithWhereWithoutCollectionsInput = {
  data: PageUncheckedUpdateManyWithoutPagesInput;
  where: PageScalarWhereInput;
};

export type PageUpsertWithWhereUniqueWithoutCollectionsInput = {
  create: PageUncheckedCreateWithoutCollectionsInput;
  update: PageUncheckedUpdateWithoutCollectionsInput;
  where: PageWhereUniqueInput;
};

export type CollectionUpdateManyWithWhereWithoutLinksInput = {
  data: CollectionUncheckedUpdateManyWithoutCollectionsInput;
  where: CollectionScalarWhereInput;
};

export type CollectionUpsertWithWhereUniqueWithoutLinksInput = {
  create: CollectionUncheckedCreateWithoutLinksInput;
  update: CollectionUncheckedUpdateWithoutLinksInput;
  where: CollectionWhereUniqueInput;
};

export type LinkUpdateManyWithWhereWithoutCategoriesInput = {
  data: LinkUncheckedUpdateManyWithoutLinksInput;
  where: LinkScalarWhereInput;
};

export type LinkUpsertWithWhereUniqueWithoutCategoriesInput = {
  create: LinkUncheckedCreateWithoutCategoriesInput;
  update: LinkUncheckedUpdateWithoutCategoriesInput;
  where: LinkWhereUniqueInput;
};

export type CategoryUpdateManyWithWhereWithoutParentInput = {
  data: CategoryUncheckedUpdateManyWithoutChildrenInput;
  where: CategoryScalarWhereInput;
};

export type CategoryUncheckedUpdateManyWithoutChildrenInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryUpsertWithWhereUniqueWithoutParentInput = {
  create: CategoryUncheckedCreateWithoutParentInput;
  update: CategoryUncheckedUpdateWithoutParentInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryUpdateManyWithWhereWithoutProductsInput = {
  data: CategoryUncheckedUpdateManyWithoutCategoriesInput;
  where: CategoryScalarWhereInput;
};

export type CategoryUpsertWithWhereUniqueWithoutProductsInput = {
  create: CategoryUncheckedCreateWithoutProductsInput;
  update: CategoryUncheckedUpdateWithoutProductsInput;
  where: CategoryWhereUniqueInput;
};

export type ProductUpdateManyWithWhereWithoutAudiosInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpsertWithWhereUniqueWithoutAudiosInput = {
  create: ProductUncheckedCreateWithoutAudiosInput;
  update: ProductUncheckedUpdateWithoutAudiosInput;
  where: ProductWhereUniqueInput;
};

export type AudioUpdateManyWithWhereWithoutUserInput = {
  data: AudioUncheckedUpdateManyWithoutAudiosInput;
  where: AudioScalarWhereInput;
};

export type AudioUpsertWithWhereUniqueWithoutUserInput = {
  create: AudioUncheckedCreateWithoutUserInput;
  update: AudioUncheckedUpdateWithoutUserInput;
  where: AudioWhereUniqueInput;
};

export type BlockUncheckedUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<BlockCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<BlockCreateWithoutUserInput>>>;
  createMany?: InputMaybe<BlockCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<BlockScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<BlockUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<BlockUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<BlockUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type BlockUpdateWithWhereUniqueWithoutUserInput = {
  data: BlockUncheckedUpdateWithoutUserInput;
  where: BlockWhereUniqueInput;
};

export type BlockUncheckedUpdateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  favourite?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutBlockInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutBlocksInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateManyWithoutBlocksInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutBlocksInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutBlocksInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutBlocksInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutBlocksInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutBlocksInput>>>;
};

export type ProductUpdateWithWhereUniqueWithoutBlocksInput = {
  data: ProductUncheckedUpdateWithoutBlocksInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedUpdateWithoutBlocksInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUncheckedUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutProductsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateManyWithWhereWithoutBlocksInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpsertWithWhereUniqueWithoutBlocksInput = {
  create: ProductUncheckedCreateWithoutBlocksInput;
  update: ProductUncheckedUpdateWithoutBlocksInput;
  where: ProductWhereUniqueInput;
};

export type BlockUpdateManyWithWhereWithoutUserInput = {
  data: BlockUncheckedUpdateManyWithoutBlocksInput;
  where: BlockScalarWhereInput;
};

export type BlockUpsertWithWhereUniqueWithoutUserInput = {
  create: BlockUncheckedCreateWithoutUserInput;
  update: BlockUncheckedUpdateWithoutUserInput;
  where: BlockWhereUniqueInput;
};

export type CustomerUncheckedUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CustomerCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<CustomerCreateWithoutUserInput>>>;
  createMany?: InputMaybe<CustomerCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CustomerScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CustomerUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CustomerUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CustomerUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type CustomerScalarWhereInput = {
  age?: InputMaybe<IntNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<CustomerScalarWhereInput>>>;
  city?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  email?: InputMaybe<StringNullableFilter>;
  gender?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  isActive?: InputMaybe<BoolNullableFilter>;
  latestSales?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<CustomerScalarWhereInput>>>;
  note?: InputMaybe<StringNullableFilter>;
  OR?: InputMaybe<Array<InputMaybe<CustomerScalarWhereInput>>>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type CustomerUpdateWithWhereUniqueWithoutUserInput = {
  data: CustomerUncheckedUpdateWithoutUserInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUncheckedUpdateWithoutUserInput = {
  age?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUncheckedUpdateManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutCustomerInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutCustomerInput>>>;
  createMany?: InputMaybe<OrderCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderUpdateWithWhereUniqueWithoutCustomerInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderUpdateManyWithWhereWithoutCustomerInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderUpsertWithWhereUniqueWithoutCustomerInput>>>;
};

export type OrderScalarWhereInput = {
  amount?: InputMaybe<FloatNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  applicationFee?: InputMaybe<FloatNullableFilter>;
  billing_address?: InputMaybe<JsonNullableFilter>;
  completedAt?: InputMaybe<DateTimeNullableFilter>;
  couponId?: InputMaybe<StringNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  cryptoCurrencyCode?: InputMaybe<EnumCryptoCurrencyNullableFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableFilter>;
  customerContact?: InputMaybe<StringNullableFilter>;
  customerId?: InputMaybe<StringNullableFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  delivery_fee?: InputMaybe<FloatNullableFilter>;
  delivery_name?: InputMaybe<StringNullableFilter>;
  delivery_time?: InputMaybe<StringNullableFilter>;
  discount?: InputMaybe<FloatNullableFilter>;
  id?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  orderNumber?: InputMaybe<StringNullableFilter>;
  orderStatus?: InputMaybe<EnumOrderStatusFilter>;
  paid_total?: InputMaybe<FloatNullableFilter>;
  paymentGateway?: InputMaybe<StringNullableFilter>;
  paymentId?: InputMaybe<StringNullableFilter>;
  received?: InputMaybe<BoolNullableFilter>;
  refundObj?: InputMaybe<JsonNullableListFilter>;
  requireShipping?: InputMaybe<BoolNullableFilter>;
  sales_tax?: InputMaybe<FloatNullableFilter>;
  shipping_address?: InputMaybe<JsonNullableFilter>;
  shippingImages?: InputMaybe<JsonNullableListFilter>;
  storageFee?: InputMaybe<FloatNullableFilter>;
  stripePrivateSessionId?: InputMaybe<StringNullableFilter>;
  total?: InputMaybe<FloatNullableFilter>;
  tracking_number?: InputMaybe<StringNullableFilter>;
  transactionHash?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type OrderUpdateWithWhereUniqueWithoutCustomerInput = {
  data: OrderUncheckedUpdateWithoutCustomerInput;
  where: OrderWhereUniqueInput;
};

export type OrderUncheckedUpdateWithoutCustomerInput = {
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  couponId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerContact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delivery_fee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  delivery_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  delivery_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutOrderInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderStatus?: InputMaybe<EnumOrderStatusFieldUpdateOperationsInput>;
  paid_total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  paymentGateway?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundUncheckedUpdateManyWithoutOrderInput>;
  requireShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  sales_tax?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  stripePrivateSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  tracking_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUncheckedUpdateManyWithoutOrderInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutOrderInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutOrderInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyOrderInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedProductUpdateWithWhereUniqueWithoutOrderInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedProductUpdateManyWithWhereWithoutOrderInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedProductUpsertWithWhereUniqueWithoutOrderInput>>>;
};

export type OrderedProductUpdateWithWhereUniqueWithoutOrderInput = {
  data: OrderedProductUncheckedUpdateWithoutOrderInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUncheckedUpdateWithoutOrderInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedUpdateManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refundId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpdateManyWithWhereWithoutOrderInput = {
  data: OrderedProductUncheckedUpdateManyWithoutOrderedProductsInput;
  where: OrderedProductScalarWhereInput;
};

export type OrderedProductUpsertWithWhereUniqueWithoutOrderInput = {
  create: OrderedProductUncheckedCreateWithoutOrderInput;
  update: OrderedProductUncheckedUpdateWithoutOrderInput;
  where: OrderedProductWhereUniqueInput;
};

export type RefundUncheckedUpdateManyWithoutOrderInput = {
  connect?: InputMaybe<Array<InputMaybe<RefundWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RefundCreateOrConnectWithoutOrderInput>>>;
  create?: InputMaybe<Array<InputMaybe<RefundCreateWithoutOrderInput>>>;
  createMany?: InputMaybe<RefundCreateManyOrderInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RefundWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RefundScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RefundWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RefundWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RefundUpdateWithWhereUniqueWithoutOrderInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RefundUpdateManyWithWhereWithoutOrderInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RefundUpsertWithWhereUniqueWithoutOrderInput>>>;
};

export type RefundScalarWhereInput = {
  accept?: InputMaybe<BoolNullableFilter>;
  amount?: InputMaybe<FloatNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<RefundScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<RefundScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RefundScalarWhereInput>>>;
  orderId?: InputMaybe<StringNullableFilter>;
  received?: InputMaybe<BoolNullableFilter>;
  shippingImages?: InputMaybe<JsonNullableListFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
};

export type RefundUpdateWithWhereUniqueWithoutOrderInput = {
  data: RefundUncheckedUpdateWithoutOrderInput;
  where: RefundWhereUniqueInput;
};

export type RefundUncheckedUpdateWithoutOrderInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutRefundInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type OrderedProductUncheckedUpdateManyWithoutRefundInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutRefundInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutRefundInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyRefundInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedProductUpdateWithWhereUniqueWithoutRefundInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedProductUpdateManyWithWhereWithoutRefundInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedProductUpsertWithWhereUniqueWithoutRefundInput>>>;
};

export type OrderedProductUpdateWithWhereUniqueWithoutRefundInput = {
  data: OrderedProductUncheckedUpdateWithoutRefundInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUncheckedUpdateWithoutRefundInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedUpdateManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpdateManyWithWhereWithoutRefundInput = {
  data: OrderedProductUncheckedUpdateManyWithoutOrderedProductsInput;
  where: OrderedProductScalarWhereInput;
};

export type OrderedProductUpsertWithWhereUniqueWithoutRefundInput = {
  create: OrderedProductUncheckedCreateWithoutRefundInput;
  update: OrderedProductUncheckedUpdateWithoutRefundInput;
  where: OrderedProductWhereUniqueInput;
};

export type RefundUpdateManyWithWhereWithoutOrderInput = {
  data: RefundUncheckedUpdateManyWithoutRefundsInput;
  where: RefundScalarWhereInput;
};

export type RefundUncheckedUpdateManyWithoutRefundsInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type RefundUpsertWithWhereUniqueWithoutOrderInput = {
  create: RefundUncheckedCreateWithoutOrderInput;
  update: RefundUncheckedUpdateWithoutOrderInput;
  where: RefundWhereUniqueInput;
};

export type OrderUpdateManyWithWhereWithoutCustomerInput = {
  data: OrderUncheckedUpdateManyWithoutOrdersInput;
  where: OrderScalarWhereInput;
};

export type OrderUncheckedUpdateManyWithoutOrdersInput = {
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerContact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delivery_fee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  delivery_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  delivery_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderStatus?: InputMaybe<EnumOrderStatusFieldUpdateOperationsInput>;
  paid_total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  paymentGateway?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  requireShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  sales_tax?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  stripePrivateSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  tracking_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUpsertWithWhereUniqueWithoutCustomerInput = {
  create: OrderUncheckedCreateWithoutCustomerInput;
  update: OrderUncheckedUpdateWithoutCustomerInput;
  where: OrderWhereUniqueInput;
};

export type RequestUncheckedUpdateManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutCustomerInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutCustomerInput>>>;
  createMany?: InputMaybe<RequestCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestUpdateWithWhereUniqueWithoutCustomerInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestUpdateManyWithWhereWithoutCustomerInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestUpsertWithWhereUniqueWithoutCustomerInput>>>;
};

export type RequestUpdateWithWhereUniqueWithoutCustomerInput = {
  data: RequestUncheckedUpdateWithoutCustomerInput;
  where: RequestWhereUniqueInput;
};

export type RequestUncheckedUpdateWithoutCustomerInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  collectionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  days?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<StringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestAccept?: InputMaybe<NullableEnumRequestAcceptFieldUpdateOperationsInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subject?: InputMaybe<StringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUpdateManyWithWhereWithoutCustomerInput = {
  data: RequestUncheckedUpdateManyWithoutRequestsInput;
  where: RequestScalarWhereInput;
};

export type RequestUpsertWithWhereUniqueWithoutCustomerInput = {
  create: RequestUncheckedCreateWithoutCustomerInput;
  update: RequestUncheckedUpdateWithoutCustomerInput;
  where: RequestWhereUniqueInput;
};

export type CustomerUpdateManyWithWhereWithoutUserInput = {
  data: CustomerUncheckedUpdateManyWithoutCustomersInput;
  where: CustomerScalarWhereInput;
};

export type CustomerUncheckedUpdateManyWithoutCustomersInput = {
  age?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpsertWithWhereUniqueWithoutUserInput = {
  create: CustomerUncheckedCreateWithoutUserInput;
  update: CustomerUncheckedUpdateWithoutUserInput;
  where: CustomerWhereUniqueInput;
};

export type DocumentUncheckedUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<DocumentCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<DocumentCreateWithoutUserInput>>>;
  createMany?: InputMaybe<DocumentCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<DocumentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<DocumentUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<DocumentUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<DocumentUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type DocumentUpdateWithWhereUniqueWithoutUserInput = {
  data: DocumentUncheckedUpdateWithoutUserInput;
  where: DocumentWhereUniqueInput;
};

export type DocumentUncheckedUpdateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedUpdateManyWithoutDocumentInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutDocumentsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateManyWithoutDocumentsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutDocumentsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutDocumentsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutDocumentsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutDocumentsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutDocumentsInput>>>;
};

export type ProductUpdateWithWhereUniqueWithoutDocumentsInput = {
  data: ProductUncheckedUpdateWithoutDocumentsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedUpdateWithoutDocumentsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUncheckedUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutProductsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateManyWithWhereWithoutDocumentsInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpsertWithWhereUniqueWithoutDocumentsInput = {
  create: ProductUncheckedCreateWithoutDocumentsInput;
  update: ProductUncheckedUpdateWithoutDocumentsInput;
  where: ProductWhereUniqueInput;
};

export type DocumentUpdateManyWithWhereWithoutUserInput = {
  data: DocumentUncheckedUpdateManyWithoutDocumentsInput;
  where: DocumentScalarWhereInput;
};

export type DocumentUpsertWithWhereUniqueWithoutUserInput = {
  create: DocumentUncheckedCreateWithoutUserInput;
  update: DocumentUncheckedUpdateWithoutUserInput;
  where: DocumentWhereUniqueInput;
};

export type EmbedUncheckedUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<EmbedWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EmbedCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<EmbedCreateWithoutUserInput>>>;
  createMany?: InputMaybe<EmbedCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<EmbedWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EmbedScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EmbedWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EmbedWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EmbedUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EmbedUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EmbedUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type EmbedScalarWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<EmbedScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  embedCode?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<EmbedScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<EmbedScalarWhereInput>>>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  userId?: InputMaybe<StringNullableFilter>;
};

export type EmbedUpdateWithWhereUniqueWithoutUserInput = {
  data: EmbedUncheckedUpdateWithoutUserInput;
  where: EmbedWhereUniqueInput;
};

export type EmbedUncheckedUpdateWithoutUserInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  embedCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutEmbedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ItemUncheckedUpdateManyWithoutEmbedInput = {
  connect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ItemCreateOrConnectWithoutEmbedInput>>>;
  create?: InputMaybe<Array<InputMaybe<ItemCreateWithoutEmbedInput>>>;
  createMany?: InputMaybe<ItemCreateManyEmbedInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ItemScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ItemUpdateWithWhereUniqueWithoutEmbedInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ItemUpdateManyWithWhereWithoutEmbedInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ItemUpsertWithWhereUniqueWithoutEmbedInput>>>;
};

export type ItemUpdateWithWhereUniqueWithoutEmbedInput = {
  data: ItemUncheckedUpdateWithoutEmbedInput;
  where: ItemWhereUniqueInput;
};

export type ItemUncheckedUpdateWithoutEmbedInput = {
  blockId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  collectionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  itemType?: InputMaybe<EnumItemTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ItemUpdateManyWithWhereWithoutEmbedInput = {
  data: ItemUncheckedUpdateManyWithoutItemsInput;
  where: ItemScalarWhereInput;
};

export type ItemUpsertWithWhereUniqueWithoutEmbedInput = {
  create: ItemUncheckedCreateWithoutEmbedInput;
  update: ItemUncheckedUpdateWithoutEmbedInput;
  where: ItemWhereUniqueInput;
};

export type EmbedUpdateManyWithWhereWithoutUserInput = {
  data: EmbedUncheckedUpdateManyWithoutEmbedsInput;
  where: EmbedScalarWhereInput;
};

export type EmbedUncheckedUpdateManyWithoutEmbedsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  embedCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type EmbedUpsertWithWhereUniqueWithoutUserInput = {
  create: EmbedUncheckedCreateWithoutUserInput;
  update: EmbedUncheckedUpdateWithoutUserInput;
  where: EmbedWhereUniqueInput;
};

export type LinkUncheckedUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LinkCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<LinkCreateWithoutUserInput>>>;
  createMany?: InputMaybe<LinkCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<LinkScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<LinkUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<LinkUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<LinkUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type LinkUpdateWithWhereUniqueWithoutUserInput = {
  data: LinkUncheckedUpdateWithoutUserInput;
  where: LinkWhereUniqueInput;
};

export type LinkUncheckedUpdateWithoutUserInput = {
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutLinksInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutLinksInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedUpdateManyWithoutLinkInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutLinksInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type LinkUpdateManyWithWhereWithoutUserInput = {
  data: LinkUncheckedUpdateManyWithoutLinksInput;
  where: LinkScalarWhereInput;
};

export type LinkUpsertWithWhereUniqueWithoutUserInput = {
  create: LinkUncheckedCreateWithoutUserInput;
  update: LinkUncheckedUpdateWithoutUserInput;
  where: LinkWhereUniqueInput;
};

export type LoginTokenUncheckedUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LoginTokenCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<LoginTokenCreateWithoutUserInput>>>;
  createMany?: InputMaybe<LoginTokenCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<LoginTokenScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<LoginTokenUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<LoginTokenUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<LoginTokenUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type LoginTokenScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<LoginTokenScalarWhereInput>>>;
  approved?: InputMaybe<BoolFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  domain?: InputMaybe<StringFilter>;
  email?: InputMaybe<StringFilter>;
  expires?: InputMaybe<DateTimeFilter>;
  geo?: InputMaybe<StringFilter>;
  id?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<LoginTokenScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<LoginTokenScalarWhereInput>>>;
  secret?: InputMaybe<StringFilter>;
  userAgent?: InputMaybe<StringFilter>;
  userAgentRaw?: InputMaybe<StringFilter>;
  userId?: InputMaybe<StringFilter>;
};

export type LoginTokenUpdateWithWhereUniqueWithoutUserInput = {
  data: LoginTokenUncheckedUpdateWithoutUserInput;
  where: LoginTokenWhereUniqueInput;
};

export type LoginTokenUncheckedUpdateWithoutUserInput = {
  approved?: InputMaybe<BoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  domain?: InputMaybe<StringFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  expires?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<StringFieldUpdateOperationsInput>;
  secret?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type LoginTokenUpdateManyWithWhereWithoutUserInput = {
  data: LoginTokenUncheckedUpdateManyWithoutLoginTokensInput;
  where: LoginTokenScalarWhereInput;
};

export type LoginTokenUncheckedUpdateManyWithoutLoginTokensInput = {
  approved?: InputMaybe<BoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  domain?: InputMaybe<StringFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  expires?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<StringFieldUpdateOperationsInput>;
  secret?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type LoginTokenUpsertWithWhereUniqueWithoutUserInput = {
  create: LoginTokenUncheckedCreateWithoutUserInput;
  update: LoginTokenUncheckedUpdateWithoutUserInput;
  where: LoginTokenWhereUniqueInput;
};

export type NotificationUncheckedUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<NotificationCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<NotificationCreateWithoutUserInput>>>;
  createMany?: InputMaybe<NotificationCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<NotificationScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<NotificationUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<NotificationUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<NotificationUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type NotificationScalarWhereInput = {
  action?: InputMaybe<StringNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<NotificationScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeNullableFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isUnRead?: InputMaybe<BoolNullableFilter>;
  message?: InputMaybe<StringNullableFilter>;
  model?: InputMaybe<StringNullableFilter>;
  modelId?: InputMaybe<StringNullableFilter>;
  NOT?: InputMaybe<Array<InputMaybe<NotificationScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<NotificationScalarWhereInput>>>;
  title?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeNullableFilter>;
  url?: InputMaybe<StringNullableFilter>;
  userId?: InputMaybe<StringNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type NotificationUpdateWithWhereUniqueWithoutUserInput = {
  data: NotificationUncheckedUpdateWithoutUserInput;
  where: NotificationWhereUniqueInput;
};

export type NotificationUncheckedUpdateWithoutUserInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationUpdateManyWithWhereWithoutUserInput = {
  data: NotificationUncheckedUpdateManyWithoutNotificationsInput;
  where: NotificationScalarWhereInput;
};

export type NotificationUncheckedUpdateManyWithoutNotificationsInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationUpsertWithWhereUniqueWithoutUserInput = {
  create: NotificationUncheckedCreateWithoutUserInput;
  update: NotificationUncheckedUpdateWithoutUserInput;
  where: NotificationWhereUniqueInput;
};

export type PictureUncheckedUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PictureCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<PictureCreateWithoutUserInput>>>;
  createMany?: InputMaybe<PictureCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PictureScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PictureUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PictureUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PictureUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type PictureUpdateWithWhereUniqueWithoutUserInput = {
  data: PictureUncheckedUpdateWithoutUserInput;
  where: PictureWhereUniqueInput;
};

export type PictureUncheckedUpdateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedUpdateManyWithoutPictureInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutPicturesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateManyWithoutPicturesInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutPicturesInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutPicturesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutPicturesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutPicturesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutPicturesInput>>>;
};

export type ProductUpdateWithWhereUniqueWithoutPicturesInput = {
  data: ProductUncheckedUpdateWithoutPicturesInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedUpdateWithoutPicturesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUncheckedUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutProductsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateManyWithWhereWithoutPicturesInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpsertWithWhereUniqueWithoutPicturesInput = {
  create: ProductUncheckedCreateWithoutPicturesInput;
  update: ProductUncheckedUpdateWithoutPicturesInput;
  where: ProductWhereUniqueInput;
};

export type PictureUpdateManyWithWhereWithoutUserInput = {
  data: PictureUncheckedUpdateManyWithoutPicturesInput;
  where: PictureScalarWhereInput;
};

export type PictureUpsertWithWhereUniqueWithoutUserInput = {
  create: PictureUncheckedCreateWithoutUserInput;
  update: PictureUncheckedUpdateWithoutUserInput;
  where: PictureWhereUniqueInput;
};

export type RedeemableUncheckedUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RedeemableCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<RedeemableCreateWithoutUserInput>>>;
  createMany?: InputMaybe<RedeemableCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RedeemableScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RedeemableUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RedeemableUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RedeemableUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type RedeemableUpdateWithWhereUniqueWithoutUserInput = {
  data: RedeemableUncheckedUpdateWithoutUserInput;
  where: RedeemableWhereUniqueInput;
};

export type RedeemableUncheckedUpdateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedUpdateManyWithoutRedeemableInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<IntFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutRedeemablesInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateManyWithoutRedeemablesInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutRedeemablesInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutRedeemablesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutRedeemablesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutRedeemablesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutRedeemablesInput>>>;
};

export type ProductUpdateWithWhereUniqueWithoutRedeemablesInput = {
  data: ProductUncheckedUpdateWithoutRedeemablesInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedUpdateWithoutRedeemablesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUncheckedUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutProductsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateManyWithWhereWithoutRedeemablesInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpsertWithWhereUniqueWithoutRedeemablesInput = {
  create: ProductUncheckedCreateWithoutRedeemablesInput;
  update: ProductUncheckedUpdateWithoutRedeemablesInput;
  where: ProductWhereUniqueInput;
};

export type RedeemableUpdateManyWithWhereWithoutUserInput = {
  data: RedeemableUncheckedUpdateManyWithoutRedeemablesInput;
  where: RedeemableScalarWhereInput;
};

export type RedeemableUpsertWithWhereUniqueWithoutUserInput = {
  create: RedeemableUncheckedCreateWithoutUserInput;
  update: RedeemableUncheckedUpdateWithoutUserInput;
  where: RedeemableWhereUniqueInput;
};

export type RefreshTokenUncheckedUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RefreshTokenCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<RefreshTokenCreateWithoutUserInput>>>;
  createMany?: InputMaybe<RefreshTokenCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RefreshTokenScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RefreshTokenUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RefreshTokenUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RefreshTokenUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type RefreshTokenScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<RefreshTokenScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  expires?: InputMaybe<DateTimeFilter>;
  geo?: InputMaybe<StringFilter>;
  ip?: InputMaybe<StringFilter>;
  lastActive?: InputMaybe<DateTimeFilter>;
  loginTokenId?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<RefreshTokenScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RefreshTokenScalarWhereInput>>>;
  userAgent?: InputMaybe<StringFilter>;
  userAgentRaw?: InputMaybe<StringFilter>;
  userId?: InputMaybe<StringFilter>;
  value?: InputMaybe<StringFilter>;
};

export type RefreshTokenUpdateWithWhereUniqueWithoutUserInput = {
  data: RefreshTokenUncheckedUpdateWithoutUserInput;
  where: RefreshTokenWhereUniqueInput;
};

export type RefreshTokenUncheckedUpdateWithoutUserInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  expires?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<StringFieldUpdateOperationsInput>;
  lastActive?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  loginTokenId?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<StringFieldUpdateOperationsInput>;
  value?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type RefreshTokenUpdateManyWithWhereWithoutUserInput = {
  data: RefreshTokenUncheckedUpdateManyWithoutRefreshTokensInput;
  where: RefreshTokenScalarWhereInput;
};

export type RefreshTokenUncheckedUpdateManyWithoutRefreshTokensInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  expires?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<StringFieldUpdateOperationsInput>;
  lastActive?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  loginTokenId?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<StringFieldUpdateOperationsInput>;
  value?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type RefreshTokenUpsertWithWhereUniqueWithoutUserInput = {
  create: RefreshTokenUncheckedCreateWithoutUserInput;
  update: RefreshTokenUncheckedUpdateWithoutUserInput;
  where: RefreshTokenWhereUniqueInput;
};

export type VideoUncheckedUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCreateWithoutUserInput>>>;
  createMany?: InputMaybe<VideoCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<VideoScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<VideoUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<VideoUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<VideoUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type VideoUpdateWithWhereUniqueWithoutUserInput = {
  data: VideoUncheckedUpdateWithoutUserInput;
  where: VideoWhereUniqueInput;
};

export type VideoUncheckedUpdateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedUpdateManyWithoutVideoInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutVideosInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateManyWithoutVideosInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutVideosInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutVideosInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutVideosInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutVideosInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutVideosInput>>>;
};

export type ProductUpdateWithWhereUniqueWithoutVideosInput = {
  data: ProductUncheckedUpdateWithoutVideosInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedUpdateWithoutVideosInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUncheckedUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateManyWithWhereWithoutVideosInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpsertWithWhereUniqueWithoutVideosInput = {
  create: ProductUncheckedCreateWithoutVideosInput;
  update: ProductUncheckedUpdateWithoutVideosInput;
  where: ProductWhereUniqueInput;
};

export type VideoUpdateManyWithWhereWithoutUserInput = {
  data: VideoUncheckedUpdateManyWithoutVideosInput;
  where: VideoScalarWhereInput;
};

export type VideoUpsertWithWhereUniqueWithoutUserInput = {
  create: VideoUncheckedCreateWithoutUserInput;
  update: VideoUncheckedUpdateWithoutUserInput;
  where: VideoWhereUniqueInput;
};

export type WebsiteUncheckedUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteCreateWithoutUserInput>>>;
  createMany?: InputMaybe<WebsiteCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<WebsiteUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<WebsiteUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<WebsiteUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type WebsiteScalarWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  address?: InputMaybe<JsonNullableFilter>;
  adminFilters?: InputMaybe<JsonNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereInput>>>;
  canonicalUrl?: InputMaybe<StringNullableFilter>;
  chain?: InputMaybe<JsonNullableFilter>;
  contact?: InputMaybe<StringNullableFilter>;
  countryCode?: InputMaybe<EnumCountryCodeNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  cryptoCurrencyCode?: InputMaybe<EnumCryptoCurrencyNullableFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableFilter>;
  currentBalance?: InputMaybe<FloatNullableFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  discordLink?: InputMaybe<StringNullableFilter>;
  externalName?: InputMaybe<StringNullableFilter>;
  externalUrl?: InputMaybe<StringNullableFilter>;
  facebookAppId?: InputMaybe<StringNullableFilter>;
  facebookIsEnable?: InputMaybe<BoolNullableFilter>;
  facebookLink?: InputMaybe<StringNullableFilter>;
  facebookPageId?: InputMaybe<StringNullableFilter>;
  googleIsEnable?: InputMaybe<BoolNullableFilter>;
  googleTagManagerId?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  instagramLink?: InputMaybe<StringNullableFilter>;
  languageCode?: InputMaybe<EnumLanguageCodeFilter>;
  location?: InputMaybe<JsonNullableFilter>;
  logoObj?: InputMaybe<JsonNullableFilter>;
  menu?: InputMaybe<JsonNullableFilter>;
  metaTags?: InputMaybe<StringNullableListFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereInput>>>;
  pageOrder?: InputMaybe<StringNullableListFilter>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFilter>;
  slug?: InputMaybe<StringNullableFilter>;
  stripeAccountId?: InputMaybe<StringNullableFilter>;
  themeColor?: InputMaybe<EnumColorFilter>;
  tikTokLink?: InputMaybe<StringNullableFilter>;
  totalEarnings?: InputMaybe<FloatNullableFilter>;
  twitterCardType?: InputMaybe<StringNullableFilter>;
  twitterHandle?: InputMaybe<StringNullableFilter>;
  twitterLink?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  userId?: InputMaybe<StringNullableFilter>;
  walletAddress?: InputMaybe<StringNullableFilter>;
  websiteUrl?: InputMaybe<StringNullableFilter>;
  withdrawnAmount?: InputMaybe<FloatNullableFilter>;
};

export type WebsiteUpdateWithWhereUniqueWithoutUserInput = {
  data: WebsiteUncheckedUpdateWithoutUserInput;
  where: WebsiteWhereUniqueInput;
};

export type WebsiteUncheckedUpdateWithoutUserInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type AttachmentUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AttachmentUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AttachmentUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AttachmentUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type AttachmentScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  staked?: InputMaybe<BoolNullableFilter>;
  type?: InputMaybe<EnumAttachmentTypeNullableFilter>;
  upload?: InputMaybe<JsonFilter>;
  url?: InputMaybe<StringFilter>;
  userId?: InputMaybe<StringNullableFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type AttachmentUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: AttachmentUncheckedUpdateWithoutWebsiteInput;
  where: AttachmentWhereUniqueInput;
};

export type AttachmentUncheckedUpdateWithoutWebsiteInput = {
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  staked?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttachmentUpdateManyWithWhereWithoutWebsiteInput = {
  data: AttachmentUncheckedUpdateManyWithoutAttachmentsInput;
  where: AttachmentScalarWhereInput;
};

export type AttachmentUncheckedUpdateManyWithoutAttachmentsInput = {
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  staked?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttachmentUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: AttachmentUncheckedCreateWithoutWebsiteInput;
  update: AttachmentUncheckedUpdateWithoutWebsiteInput;
  where: AttachmentWhereUniqueInput;
};

export type AttributeUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttributeCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttributeCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AttributeCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AttributeScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AttributeUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AttributeUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AttributeUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type AttributeScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<AttributeScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<AttributeScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AttributeScalarWhereInput>>>;
  slug?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  values?: InputMaybe<JsonNullableListFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type AttributeUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: AttributeUncheckedUpdateWithoutWebsiteInput;
  where: AttributeWhereUniqueInput;
};

export type AttributeUncheckedUpdateWithoutWebsiteInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
};

export type AttributeUpdateManyWithWhereWithoutWebsiteInput = {
  data: AttributeUncheckedUpdateManyWithoutAttributesInput;
  where: AttributeScalarWhereInput;
};

export type AttributeUncheckedUpdateManyWithoutAttributesInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
};

export type AttributeUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: AttributeUncheckedCreateWithoutWebsiteInput;
  update: AttributeUncheckedUpdateWithoutWebsiteInput;
  where: AttributeWhereUniqueInput;
};

export type CategoryUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CategoryCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CategoryScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CategoryUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CategoryUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CategoryUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type CategoryUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: CategoryUncheckedUpdateWithoutWebsiteInput;
  where: CategoryWhereUniqueInput;
};

export type CategoryUncheckedUpdateWithoutWebsiteInput = {
  children?: InputMaybe<CategoryUncheckedUpdateManyWithoutParentInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutCategoriesInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutCategoriesInput>;
  parentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutCategoriesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type CategoryUpdateManyWithWhereWithoutWebsiteInput = {
  data: CategoryUncheckedUpdateManyWithoutCategoriesInput;
  where: CategoryScalarWhereInput;
};

export type CategoryUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: CategoryUncheckedCreateWithoutWebsiteInput;
  update: CategoryUncheckedUpdateWithoutWebsiteInput;
  where: CategoryWhereUniqueInput;
};

export type CollectionUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CollectionCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CollectionUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CollectionUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CollectionUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type CollectionUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: CollectionUncheckedUpdateWithoutWebsiteInput;
  where: CollectionWhereUniqueInput;
};

export type CollectionUncheckedUpdateWithoutWebsiteInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutCollectionInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutCollectionsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type CollectionUpdateManyWithWhereWithoutWebsiteInput = {
  data: CollectionUncheckedUpdateManyWithoutCollectionsInput;
  where: CollectionScalarWhereInput;
};

export type CollectionUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: CollectionUncheckedCreateWithoutWebsiteInput;
  update: CollectionUncheckedUpdateWithoutWebsiteInput;
  where: CollectionWhereUniqueInput;
};

export type CouponUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CouponCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CouponCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CouponCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CouponScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CouponUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CouponUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CouponUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type CouponScalarWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  active_from?: InputMaybe<DateTimeNullableFilter>;
  amount_off?: InputMaybe<FloatNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<CouponScalarWhereInput>>>;
  code?: InputMaybe<StringNullableFilter>;
  couponType?: InputMaybe<EnumCouponTypeFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  expire_at?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  imageObj?: InputMaybe<JsonNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<CouponScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<CouponScalarWhereInput>>>;
  percent_off?: InputMaybe<FloatNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type CouponUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: CouponUncheckedUpdateWithoutWebsiteInput;
  where: CouponWhereUniqueInput;
};

export type CouponUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  active_from?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  amount_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  couponType?: InputMaybe<EnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expire_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutCouponInput>;
  percent_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type OrderUncheckedUpdateManyWithoutCouponInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutCouponInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutCouponInput>>>;
  createMany?: InputMaybe<OrderCreateManyCouponInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderUpdateWithWhereUniqueWithoutCouponInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderUpdateManyWithWhereWithoutCouponInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderUpsertWithWhereUniqueWithoutCouponInput>>>;
};

export type OrderUpdateWithWhereUniqueWithoutCouponInput = {
  data: OrderUncheckedUpdateWithoutCouponInput;
  where: OrderWhereUniqueInput;
};

export type OrderUncheckedUpdateWithoutCouponInput = {
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerContact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delivery_fee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  delivery_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  delivery_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutOrderInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderStatus?: InputMaybe<EnumOrderStatusFieldUpdateOperationsInput>;
  paid_total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  paymentGateway?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundUncheckedUpdateManyWithoutOrderInput>;
  requireShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  sales_tax?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  stripePrivateSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  tracking_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUpdateManyWithWhereWithoutCouponInput = {
  data: OrderUncheckedUpdateManyWithoutOrdersInput;
  where: OrderScalarWhereInput;
};

export type OrderUpsertWithWhereUniqueWithoutCouponInput = {
  create: OrderUncheckedCreateWithoutCouponInput;
  update: OrderUncheckedUpdateWithoutCouponInput;
  where: OrderWhereUniqueInput;
};

export type CouponUpdateManyWithWhereWithoutWebsiteInput = {
  data: CouponUncheckedUpdateManyWithoutCouponsInput;
  where: CouponScalarWhereInput;
};

export type CouponUncheckedUpdateManyWithoutCouponsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  active_from?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  amount_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  couponType?: InputMaybe<EnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expire_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  percent_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type CouponUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: CouponUncheckedCreateWithoutWebsiteInput;
  update: CouponUncheckedUpdateWithoutWebsiteInput;
  where: CouponWhereUniqueInput;
};

export type CustomerUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CustomerCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CustomerCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CustomerCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CustomerScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CustomerUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CustomerUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CustomerUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type CustomerUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: CustomerUncheckedUpdateWithoutWebsiteInput;
  where: CustomerWhereUniqueInput;
};

export type CustomerUncheckedUpdateWithoutWebsiteInput = {
  age?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateManyWithWhereWithoutWebsiteInput = {
  data: CustomerUncheckedUpdateManyWithoutCustomersInput;
  where: CustomerScalarWhereInput;
};

export type CustomerUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: CustomerUncheckedCreateWithoutWebsiteInput;
  update: CustomerUncheckedUpdateWithoutWebsiteInput;
  where: CustomerWhereUniqueInput;
};

export type GroupUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<GroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<GroupCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<GroupCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<GroupCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<GroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<GroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<GroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<GroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<GroupUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<GroupUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<GroupUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type GroupScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<GroupScalarWhereInput>>>;
  deleted?: InputMaybe<BoolNullableFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<GroupScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<GroupScalarWhereInput>>>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type GroupUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: GroupUncheckedUpdateWithoutWebsiteInput;
  where: GroupWhereUniqueInput;
};

export type GroupUncheckedUpdateWithoutWebsiteInput = {
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type GroupUpdateManyWithWhereWithoutWebsiteInput = {
  data: GroupUncheckedUpdateManyWithoutGroupInput;
  where: GroupScalarWhereInput;
};

export type GroupUncheckedUpdateManyWithoutGroupInput = {
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type GroupUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: GroupUncheckedCreateWithoutWebsiteInput;
  update: GroupUncheckedUpdateWithoutWebsiteInput;
  where: GroupWhereUniqueInput;
};

export type NotificationUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<NotificationCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<NotificationCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<NotificationCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<NotificationScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<NotificationUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<NotificationUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<NotificationUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type NotificationUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: NotificationUncheckedUpdateWithoutWebsiteInput;
  where: NotificationWhereUniqueInput;
};

export type NotificationUncheckedUpdateWithoutWebsiteInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationUpdateManyWithWhereWithoutWebsiteInput = {
  data: NotificationUncheckedUpdateManyWithoutNotificationsInput;
  where: NotificationScalarWhereInput;
};

export type NotificationUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: NotificationUncheckedCreateWithoutWebsiteInput;
  update: NotificationUncheckedUpdateWithoutWebsiteInput;
  where: NotificationWhereUniqueInput;
};

export type OrderedProductUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedProductUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedProductUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedProductUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type OrderedProductUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: OrderedProductUncheckedUpdateWithoutWebsiteInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderedProductUncheckedUpdateWithoutWebsiteInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedUpdateManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refundId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpdateManyWithWhereWithoutWebsiteInput = {
  data: OrderedProductUncheckedUpdateManyWithoutOrderedProductsInput;
  where: OrderedProductScalarWhereInput;
};

export type OrderedProductUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: OrderedProductUncheckedCreateWithoutWebsiteInput;
  update: OrderedProductUncheckedUpdateWithoutWebsiteInput;
  where: OrderedProductWhereUniqueInput;
};

export type OrderUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<OrderCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type OrderUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: OrderUncheckedUpdateWithoutWebsiteInput;
  where: OrderWhereUniqueInput;
};

export type OrderUncheckedUpdateWithoutWebsiteInput = {
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  couponId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerContact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delivery_fee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  delivery_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  delivery_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutOrderInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderStatus?: InputMaybe<EnumOrderStatusFieldUpdateOperationsInput>;
  paid_total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  paymentGateway?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundUncheckedUpdateManyWithoutOrderInput>;
  requireShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  sales_tax?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  stripePrivateSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  tracking_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUpdateManyWithWhereWithoutWebsiteInput = {
  data: OrderUncheckedUpdateManyWithoutOrdersInput;
  where: OrderScalarWhereInput;
};

export type OrderUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: OrderUncheckedCreateWithoutWebsiteInput;
  update: OrderUncheckedUpdateWithoutWebsiteInput;
  where: OrderWhereUniqueInput;
};

export type PageCollectionUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<PageCollectionCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageCollectionUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageCollectionUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageCollectionUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type PageCollectionUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: PageCollectionUncheckedUpdateWithoutWebsiteInput;
  where: PageCollectionWhereUniqueInput;
};

export type PageCollectionUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutPageCollectionsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PageUncheckedUpdateManyWithoutPageCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutPageCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutPageCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageUpdateWithWhereUniqueWithoutPageCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageUpdateManyWithWhereWithoutPageCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageUpsertWithWhereUniqueWithoutPageCollectionsInput>>>;
};

export type PageUpdateWithWhereUniqueWithoutPageCollectionsInput = {
  data: PageUncheckedUpdateWithoutPageCollectionsInput;
  where: PageWhereUniqueInput;
};

export type PageUncheckedUpdateWithoutPageCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutPageInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageViews?: InputMaybe<PageViewUncheckedUpdateManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUpdateManyWithWhereWithoutPageCollectionsInput = {
  data: PageUncheckedUpdateManyWithoutPagesInput;
  where: PageScalarWhereInput;
};

export type PageUpsertWithWhereUniqueWithoutPageCollectionsInput = {
  create: PageUncheckedCreateWithoutPageCollectionsInput;
  update: PageUncheckedUpdateWithoutPageCollectionsInput;
  where: PageWhereUniqueInput;
};

export type PageCollectionUpdateManyWithWhereWithoutWebsiteInput = {
  data: PageCollectionUncheckedUpdateManyWithoutPageCollectionsInput;
  where: PageCollectionScalarWhereInput;
};

export type PageCollectionUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: PageCollectionUncheckedCreateWithoutWebsiteInput;
  update: PageCollectionUncheckedUpdateWithoutWebsiteInput;
  where: PageCollectionWhereUniqueInput;
};

export type PageUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<PageCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type PageUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: PageUncheckedUpdateWithoutWebsiteInput;
  where: PageWhereUniqueInput;
};

export type PageUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutPageInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedUpdateManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PageUpdateManyWithWhereWithoutWebsiteInput = {
  data: PageUncheckedUpdateManyWithoutPagesInput;
  where: PageScalarWhereInput;
};

export type PageUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: PageUncheckedCreateWithoutWebsiteInput;
  update: PageUncheckedUpdateWithoutWebsiteInput;
  where: PageWhereUniqueInput;
};

export type ProductCollectionUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductCollectionCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductCollectionUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductCollectionUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductCollectionUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type ProductCollectionUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: ProductCollectionUncheckedUpdateWithoutWebsiteInput;
  where: ProductCollectionWhereUniqueInput;
};

export type ProductCollectionUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutProductCollectionsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateManyWithoutProductCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutProductCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutProductCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutProductCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutProductCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutProductCollectionsInput>>>;
};

export type ProductUpdateWithWhereUniqueWithoutProductCollectionsInput = {
  data: ProductUncheckedUpdateWithoutProductCollectionsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedUpdateWithoutProductCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUncheckedUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutProductsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateManyWithWhereWithoutProductCollectionsInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpsertWithWhereUniqueWithoutProductCollectionsInput = {
  create: ProductUncheckedCreateWithoutProductCollectionsInput;
  update: ProductUncheckedUpdateWithoutProductCollectionsInput;
  where: ProductWhereUniqueInput;
};

export type ProductCollectionUpdateManyWithWhereWithoutWebsiteInput = {
  data: ProductCollectionUncheckedUpdateManyWithoutProductCollectionsInput;
  where: ProductCollectionScalarWhereInput;
};

export type ProductCollectionUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: ProductCollectionUncheckedCreateWithoutWebsiteInput;
  update: ProductCollectionUncheckedUpdateWithoutWebsiteInput;
  where: ProductCollectionWhereUniqueInput;
};

export type ProductUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type ProductUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: ProductUncheckedUpdateWithoutWebsiteInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUncheckedUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateManyWithWhereWithoutWebsiteInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: ProductUncheckedCreateWithoutWebsiteInput;
  update: ProductUncheckedUpdateWithoutWebsiteInput;
  where: ProductWhereUniqueInput;
};

export type ShippingUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ShippingWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ShippingCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ShippingCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ShippingCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ShippingWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ShippingScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ShippingWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ShippingWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ShippingUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ShippingUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ShippingUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type ShippingScalarWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  amount?: InputMaybe<FloatFilter>;
  AND?: InputMaybe<Array<InputMaybe<ShippingScalarWhereInput>>>;
  countryCode?: InputMaybe<EnumCountryCodeNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  isGlobal?: InputMaybe<BoolNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<ShippingScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ShippingScalarWhereInput>>>;
  state?: InputMaybe<StringNullableFilter>;
  type?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type ShippingUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: ShippingUncheckedUpdateWithoutWebsiteInput;
  where: ShippingWhereUniqueInput;
};

export type ShippingUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amount?: InputMaybe<FloatFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isGlobal?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ShippingUpdateManyWithWhereWithoutWebsiteInput = {
  data: ShippingUncheckedUpdateManyWithoutShippingsInput;
  where: ShippingScalarWhereInput;
};

export type ShippingUncheckedUpdateManyWithoutShippingsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amount?: InputMaybe<FloatFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isGlobal?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ShippingUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: ShippingUncheckedCreateWithoutWebsiteInput;
  update: ShippingUncheckedUpdateWithoutWebsiteInput;
  where: ShippingWhereUniqueInput;
};

export type SocialUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<SocialWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<SocialCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<SocialCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<SocialCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<SocialWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<SocialScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<SocialWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<SocialWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<SocialUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<SocialUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<SocialUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type SocialScalarWhereInput = {
  AND?: InputMaybe<Array<InputMaybe<SocialScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<SocialScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<SocialScalarWhereInput>>>;
  socialType?: InputMaybe<EnumSocialTypeFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  url?: InputMaybe<StringFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type SocialUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: SocialUncheckedUpdateWithoutWebsiteInput;
  where: SocialWhereUniqueInput;
};

export type SocialUncheckedUpdateWithoutWebsiteInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  socialType?: InputMaybe<EnumSocialTypeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type SocialUpdateManyWithWhereWithoutWebsiteInput = {
  data: SocialUncheckedUpdateManyWithoutSocialsInput;
  where: SocialScalarWhereInput;
};

export type SocialUncheckedUpdateManyWithoutSocialsInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  socialType?: InputMaybe<EnumSocialTypeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type SocialUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: SocialUncheckedCreateWithoutWebsiteInput;
  update: SocialUncheckedUpdateWithoutWebsiteInput;
  where: SocialWhereUniqueInput;
};

export type TaxUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<TaxWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<TaxCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<TaxCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<TaxCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<TaxWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<TaxScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<TaxWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<TaxWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<TaxUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<TaxUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<TaxUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type TaxScalarWhereInput = {
  active?: InputMaybe<BoolNullableFilter>;
  AND?: InputMaybe<Array<InputMaybe<TaxScalarWhereInput>>>;
  city?: InputMaybe<StringNullableFilter>;
  country?: InputMaybe<StringNullableFilter>;
  countryCode?: InputMaybe<EnumCountryCodeNullableFilter>;
  createdAt?: InputMaybe<DateTimeFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  description?: InputMaybe<StringNullableFilter>;
  id?: InputMaybe<StringFilter>;
  inclusive?: InputMaybe<BoolFilter>;
  isGlobal?: InputMaybe<BoolNullableFilter>;
  jurisdiction?: InputMaybe<StringNullableFilter>;
  name?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<TaxScalarWhereInput>>>;
  onShipping?: InputMaybe<BoolNullableFilter>;
  OR?: InputMaybe<Array<InputMaybe<TaxScalarWhereInput>>>;
  percentage?: InputMaybe<FloatFilter>;
  priority?: InputMaybe<IntNullableFilter>;
  state?: InputMaybe<StringNullableFilter>;
  stripePrivateTaxId?: InputMaybe<StringNullableFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
  zip?: InputMaybe<StringNullableFilter>;
};

export type TaxUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: TaxUncheckedUpdateWithoutWebsiteInput;
  where: TaxWhereUniqueInput;
};

export type TaxUncheckedUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  inclusive?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isGlobal?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  jurisdiction?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  onShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  percentage?: InputMaybe<FloatFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripePrivateTaxId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  zip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type TaxUpdateManyWithWhereWithoutWebsiteInput = {
  data: TaxUncheckedUpdateManyWithoutTaxesInput;
  where: TaxScalarWhereInput;
};

export type TaxUncheckedUpdateManyWithoutTaxesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  inclusive?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isGlobal?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  jurisdiction?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  onShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  percentage?: InputMaybe<FloatFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripePrivateTaxId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  zip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type TaxUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: TaxUncheckedCreateWithoutWebsiteInput;
  update: TaxUncheckedUpdateWithoutWebsiteInput;
  where: TaxWhereUniqueInput;
};

export type WithdrawUncheckedUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<WithdrawWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WithdrawCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<WithdrawCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<WithdrawCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<WithdrawWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<WithdrawScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<WithdrawWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<WithdrawWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<WithdrawUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<WithdrawUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<WithdrawUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type WithdrawScalarWhereInput = {
  amount?: InputMaybe<FloatFilter>;
  AND?: InputMaybe<Array<InputMaybe<WithdrawScalarWhereInput>>>;
  createdAt?: InputMaybe<DateTimeFilter>;
  deleted?: InputMaybe<BoolFilter>;
  deletedAt?: InputMaybe<DateTimeNullableFilter>;
  id?: InputMaybe<StringFilter>;
  NOT?: InputMaybe<Array<InputMaybe<WithdrawScalarWhereInput>>>;
  OR?: InputMaybe<Array<InputMaybe<WithdrawScalarWhereInput>>>;
  processed?: InputMaybe<BoolFilter>;
  updatedAt?: InputMaybe<DateTimeFilter>;
  websiteId?: InputMaybe<StringNullableFilter>;
};

export type WithdrawUpdateWithWhereUniqueWithoutWebsiteInput = {
  data: WithdrawUncheckedUpdateWithoutWebsiteInput;
  where: WithdrawWhereUniqueInput;
};

export type WithdrawUncheckedUpdateWithoutWebsiteInput = {
  amount?: InputMaybe<FloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  processed?: InputMaybe<BoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type WithdrawUpdateManyWithWhereWithoutWebsiteInput = {
  data: WithdrawUncheckedUpdateManyWithoutWithdrawsInput;
  where: WithdrawScalarWhereInput;
};

export type WithdrawUncheckedUpdateManyWithoutWithdrawsInput = {
  amount?: InputMaybe<FloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  processed?: InputMaybe<BoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type WithdrawUpsertWithWhereUniqueWithoutWebsiteInput = {
  create: WithdrawUncheckedCreateWithoutWebsiteInput;
  update: WithdrawUncheckedUpdateWithoutWebsiteInput;
  where: WithdrawWhereUniqueInput;
};

export type WebsiteUpdateManyWithWhereWithoutUserInput = {
  data: WebsiteUncheckedUpdateManyWithoutWebsitesInput;
  where: WebsiteScalarWhereInput;
};

export type WebsiteUncheckedUpdateManyWithoutWebsitesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chain?: InputMaybe<Scalars['Json']>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type WebsiteUpsertWithWhereUniqueWithoutUserInput = {
  create: WebsiteUncheckedCreateWithoutUserInput;
  update: WebsiteUncheckedUpdateWithoutUserInput;
  where: WebsiteWhereUniqueInput;
};

export type UserUpsertWithoutAttachmentsInput = {
  create: UserUncheckedCreateWithoutAttachmentsInput;
  update: UserUncheckedUpdateWithoutAttachmentsInput;
};

export type WebsiteUpdateOneWithoutAttachmentsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutAttachmentsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutAttachmentsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutAttachmentsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutAttachmentsInput>;
};

export type WebsiteUncheckedUpdateWithoutAttachmentsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutAttachmentsInput = {
  create: WebsiteUncheckedCreateWithoutAttachmentsInput;
  update: WebsiteUncheckedUpdateWithoutAttachmentsInput;
};

export type AttributeUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAttributesInput>;
};

export type WebsiteUpdateOneWithoutAttributesInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutAttributesInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutAttributesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutAttributesInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutAttributesInput>;
};

export type WebsiteUncheckedUpdateWithoutAttributesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutAttributesInput = {
  create: WebsiteUncheckedCreateWithoutAttributesInput;
  update: WebsiteUncheckedUpdateWithoutAttributesInput;
};

export type AudioUpdateInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUpdateManyWithoutAudioInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutAudiosInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutAudiosInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedAudioUpdateManyWithoutAudioInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedAudioCreateOrConnectWithoutAudioInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedAudioCreateWithoutAudioInput>>>;
  createMany?: InputMaybe<OrderedAudioCreateManyAudioInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedAudioScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedAudioUpdateWithWhereUniqueWithoutAudioInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedAudioUpdateManyWithWhereWithoutAudioInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedAudioUpsertWithWhereUniqueWithoutAudioInput>>>;
};

export type ProductUpdateManyWithoutAudiosInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutAudiosInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutAudiosInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutAudiosInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutAudiosInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutAudiosInput>>>;
};

export type UserUpdateOneWithoutAudiosInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutAudiosInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutAudiosInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutAudiosInput>;
  upsert?: InputMaybe<UserUpsertWithoutAudiosInput>;
};

export type UserUncheckedUpdateWithoutAudiosInput = {
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUncheckedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type AttachmentUncheckedUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutUserInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AttachmentUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AttachmentUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AttachmentUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type AttachmentUpdateWithWhereUniqueWithoutUserInput = {
  data: AttachmentUncheckedUpdateWithoutUserInput;
  where: AttachmentWhereUniqueInput;
};

export type AttachmentUncheckedUpdateWithoutUserInput = {
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  staked?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttachmentUpdateManyWithWhereWithoutUserInput = {
  data: AttachmentUncheckedUpdateManyWithoutAttachmentsInput;
  where: AttachmentScalarWhereInput;
};

export type AttachmentUpsertWithWhereUniqueWithoutUserInput = {
  create: AttachmentUncheckedCreateWithoutUserInput;
  update: AttachmentUncheckedUpdateWithoutUserInput;
  where: AttachmentWhereUniqueInput;
};

export type UserUpsertWithoutAudiosInput = {
  create: UserUncheckedCreateWithoutAudiosInput;
  update: UserUncheckedUpdateWithoutAudiosInput;
};

export type BlockUpdateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  favourite?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  items?: InputMaybe<ItemUpdateManyWithoutBlockInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBlocksInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutBlocksInput>;
};

export type ItemUpdateManyWithoutBlockInput = {
  connect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ItemCreateOrConnectWithoutBlockInput>>>;
  create?: InputMaybe<Array<InputMaybe<ItemCreateWithoutBlockInput>>>;
  createMany?: InputMaybe<ItemCreateManyBlockInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ItemScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ItemUpdateWithWhereUniqueWithoutBlockInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ItemUpdateManyWithWhereWithoutBlockInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ItemUpsertWithWhereUniqueWithoutBlockInput>>>;
};

export type ProductUpdateManyWithoutBlocksInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutBlocksInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutBlocksInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutBlocksInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutBlocksInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutBlocksInput>>>;
};

export type UserUpdateOneWithoutBlocksInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutBlocksInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutBlocksInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutBlocksInput>;
  upsert?: InputMaybe<UserUpsertWithoutBlocksInput>;
};

export type UserUncheckedUpdateWithoutBlocksInput = {
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUncheckedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpsertWithoutBlocksInput = {
  create: UserUncheckedCreateWithoutBlocksInput;
  update: UserUncheckedUpdateWithoutBlocksInput;
};

export type CategoryUpdateInput = {
  children?: InputMaybe<CategoryUpdateManyWithoutParentInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutCategoriesInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutCategoriesInput>;
  parent?: InputMaybe<CategoryUpdateOneWithoutChildrenInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCategoriesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCategoriesInput>;
};

export type CategoryUpdateManyWithoutParentInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutParentInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutParentInput>>>;
  createMany?: InputMaybe<CategoryCreateManyParentInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CategoryScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CategoryUpdateWithWhereUniqueWithoutParentInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CategoryUpdateManyWithWhereWithoutParentInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CategoryUpsertWithWhereUniqueWithoutParentInput>>>;
};

export type LinkUpdateManyWithoutCategoriesInput = {
  connect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LinkCreateOrConnectWithoutCategoriesInput>>>;
  create?: InputMaybe<Array<InputMaybe<LinkCreateWithoutCategoriesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<LinkScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<LinkUpdateWithWhereUniqueWithoutCategoriesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<LinkUpdateManyWithWhereWithoutCategoriesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<LinkUpsertWithWhereUniqueWithoutCategoriesInput>>>;
};

export type PageUpdateManyWithoutCategoriesInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutCategoriesInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutCategoriesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageUpdateWithWhereUniqueWithoutCategoriesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageUpdateManyWithWhereWithoutCategoriesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageUpsertWithWhereUniqueWithoutCategoriesInput>>>;
};

export type CategoryUpdateOneWithoutChildrenInput = {
  connect?: InputMaybe<CategoryWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CategoryCreateOrConnectWithoutChildrenInput>;
  create?: InputMaybe<CategoryUncheckedCreateWithoutChildrenInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CategoryUncheckedUpdateWithoutChildrenInput>;
  upsert?: InputMaybe<CategoryUpsertWithoutChildrenInput>;
};

export type CategoryUncheckedUpdateWithoutChildrenInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutCategoriesInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutCategoriesInput>;
  parentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutCategoriesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryUpsertWithoutChildrenInput = {
  create: CategoryUncheckedCreateWithoutChildrenInput;
  update: CategoryUncheckedUpdateWithoutChildrenInput;
};

export type ProductUpdateManyWithoutCategoriesInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutCategoriesInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutCategoriesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutCategoriesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutCategoriesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutCategoriesInput>>>;
};

export type WebsiteUpdateOneWithoutCategoriesInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutCategoriesInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutCategoriesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutCategoriesInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutCategoriesInput>;
};

export type WebsiteUncheckedUpdateWithoutCategoriesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutCategoriesInput = {
  create: WebsiteUncheckedCreateWithoutCategoriesInput;
  update: WebsiteUncheckedUpdateWithoutCategoriesInput;
};

export type CollectionUpdateInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<ItemUpdateManyWithoutCollectionInput>;
  links?: InputMaybe<LinkUpdateManyWithoutCollectionsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCollectionsInput>;
};

export type ItemUpdateManyWithoutCollectionInput = {
  connect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ItemCreateOrConnectWithoutCollectionInput>>>;
  create?: InputMaybe<Array<InputMaybe<ItemCreateWithoutCollectionInput>>>;
  createMany?: InputMaybe<ItemCreateManyCollectionInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ItemScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ItemUpdateWithWhereUniqueWithoutCollectionInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ItemUpdateManyWithWhereWithoutCollectionInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ItemUpsertWithWhereUniqueWithoutCollectionInput>>>;
};

export type LinkUpdateManyWithoutCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LinkCreateOrConnectWithoutCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<LinkCreateWithoutCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<LinkScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<LinkUpdateWithWhereUniqueWithoutCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<LinkUpdateManyWithWhereWithoutCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<LinkUpsertWithWhereUniqueWithoutCollectionsInput>>>;
};

export type PageUpdateManyWithoutCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageUpdateWithWhereUniqueWithoutCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageUpdateManyWithWhereWithoutCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageUpsertWithWhereUniqueWithoutCollectionsInput>>>;
};

export type ProductUpdateManyWithoutCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutCollectionsInput>>>;
};

export type RequestUpdateManyWithoutCollectionInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutCollectionInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutCollectionInput>>>;
  createMany?: InputMaybe<RequestCreateManyCollectionInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestUpdateWithWhereUniqueWithoutCollectionInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestUpdateManyWithWhereWithoutCollectionInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestUpsertWithWhereUniqueWithoutCollectionInput>>>;
};

export type WebsiteUpdateOneWithoutCollectionsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutCollectionsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutCollectionsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutCollectionsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutCollectionsInput>;
};

export type WebsiteUncheckedUpdateWithoutCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutCollectionsInput = {
  create: WebsiteUncheckedCreateWithoutCollectionsInput;
  update: WebsiteUncheckedUpdateWithoutCollectionsInput;
};

export type CouponUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  active_from?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  amount_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  couponType?: InputMaybe<EnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expire_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutCouponInput>;
  percent_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCouponsInput>;
};

export type OrderUpdateManyWithoutCouponInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutCouponInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutCouponInput>>>;
  createMany?: InputMaybe<OrderCreateManyCouponInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderUpdateWithWhereUniqueWithoutCouponInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderUpdateManyWithWhereWithoutCouponInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderUpsertWithWhereUniqueWithoutCouponInput>>>;
};

export type WebsiteUpdateOneWithoutCouponsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutCouponsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutCouponsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutCouponsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutCouponsInput>;
};

export type WebsiteUncheckedUpdateWithoutCouponsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutCouponsInput = {
  create: WebsiteUncheckedCreateWithoutCouponsInput;
  update: WebsiteUncheckedUpdateWithoutCouponsInput;
};

export type CustomerUpdateInput = {
  age?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutCustomersInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCustomersInput>;
};

export type OrderUpdateManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutCustomerInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutCustomerInput>>>;
  createMany?: InputMaybe<OrderCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderUpdateWithWhereUniqueWithoutCustomerInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderUpdateManyWithWhereWithoutCustomerInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderUpsertWithWhereUniqueWithoutCustomerInput>>>;
};

export type RequestUpdateManyWithoutCustomerInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutCustomerInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutCustomerInput>>>;
  createMany?: InputMaybe<RequestCreateManyCustomerInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestUpdateWithWhereUniqueWithoutCustomerInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestUpdateManyWithWhereWithoutCustomerInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestUpsertWithWhereUniqueWithoutCustomerInput>>>;
};

export type UserUpdateOneWithoutCustomersInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutCustomersInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutCustomersInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutCustomersInput>;
  upsert?: InputMaybe<UserUpsertWithoutCustomersInput>;
};

export type UserUncheckedUpdateWithoutCustomersInput = {
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUncheckedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpsertWithoutCustomersInput = {
  create: UserUncheckedCreateWithoutCustomersInput;
  update: UserUncheckedUpdateWithoutCustomersInput;
};

export type WebsiteUpdateOneWithoutCustomersInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutCustomersInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutCustomersInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutCustomersInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutCustomersInput>;
};

export type WebsiteUncheckedUpdateWithoutCustomersInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutCustomersInput = {
  create: WebsiteUncheckedCreateWithoutCustomersInput;
  update: WebsiteUncheckedUpdateWithoutCustomersInput;
};

export type DocumentUpdateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUpdateManyWithoutDocumentInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutDocumentsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutDocumentsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedDocumentUpdateManyWithoutDocumentInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedDocumentCreateOrConnectWithoutDocumentInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedDocumentCreateWithoutDocumentInput>>>;
  createMany?: InputMaybe<OrderedDocumentCreateManyDocumentInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedDocumentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedDocumentUpdateWithWhereUniqueWithoutDocumentInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedDocumentUpdateManyWithWhereWithoutDocumentInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedDocumentUpsertWithWhereUniqueWithoutDocumentInput>>>;
};

export type ProductUpdateManyWithoutDocumentsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutDocumentsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutDocumentsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutDocumentsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutDocumentsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutDocumentsInput>>>;
};

export type UserUpdateOneWithoutDocumentsInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutDocumentsInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutDocumentsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutDocumentsInput>;
  upsert?: InputMaybe<UserUpsertWithoutDocumentsInput>;
};

export type UserUncheckedUpdateWithoutDocumentsInput = {
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUncheckedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpsertWithoutDocumentsInput = {
  create: UserUncheckedCreateWithoutDocumentsInput;
  update: UserUncheckedUpdateWithoutDocumentsInput;
};

export type EmbedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  embedCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<ItemUpdateManyWithoutEmbedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutEmbedsInput>;
};

export type ItemUpdateManyWithoutEmbedInput = {
  connect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ItemCreateOrConnectWithoutEmbedInput>>>;
  create?: InputMaybe<Array<InputMaybe<ItemCreateWithoutEmbedInput>>>;
  createMany?: InputMaybe<ItemCreateManyEmbedInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ItemScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ItemUpdateWithWhereUniqueWithoutEmbedInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ItemUpdateManyWithWhereWithoutEmbedInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ItemUpsertWithWhereUniqueWithoutEmbedInput>>>;
};

export type UserUpdateOneWithoutEmbedsInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutEmbedsInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutEmbedsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutEmbedsInput>;
  upsert?: InputMaybe<UserUpsertWithoutEmbedsInput>;
};

export type UserUncheckedUpdateWithoutEmbedsInput = {
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpsertWithoutEmbedsInput = {
  create: UserUncheckedCreateWithoutEmbedsInput;
  update: UserUncheckedUpdateWithoutEmbedsInput;
};

export type GroupUpdateInput = {
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutGroupInput>;
};

export type WebsiteUpdateOneWithoutGroupInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutGroupInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutGroupInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutGroupInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutGroupInput>;
};

export type WebsiteUncheckedUpdateWithoutGroupInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutGroupInput = {
  create: WebsiteUncheckedCreateWithoutGroupInput;
  update: WebsiteUncheckedUpdateWithoutGroupInput;
};

export type ItemUpdateInput = {
  block?: InputMaybe<BlockUpdateOneWithoutItemsInput>;
  collection?: InputMaybe<CollectionUpdateOneWithoutItemsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  embed?: InputMaybe<EmbedUpdateOneWithoutItemsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  itemType?: InputMaybe<EnumItemTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutItemsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type BlockUpdateOneWithoutItemsInput = {
  connect?: InputMaybe<BlockWhereUniqueInput>;
  connectOrCreate?: InputMaybe<BlockCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<BlockUncheckedCreateWithoutItemsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<BlockUncheckedUpdateWithoutItemsInput>;
  upsert?: InputMaybe<BlockUpsertWithoutItemsInput>;
};

export type BlockUncheckedUpdateWithoutItemsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  favourite?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutBlocksInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BlockUpsertWithoutItemsInput = {
  create: BlockUncheckedCreateWithoutItemsInput;
  update: BlockUncheckedUpdateWithoutItemsInput;
};

export type CollectionUpdateOneWithoutItemsInput = {
  connect?: InputMaybe<CollectionWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CollectionCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<CollectionUncheckedCreateWithoutItemsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CollectionUncheckedUpdateWithoutItemsInput>;
  upsert?: InputMaybe<CollectionUpsertWithoutItemsInput>;
};

export type CollectionUncheckedUpdateWithoutItemsInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutCollectionsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CollectionUpsertWithoutItemsInput = {
  create: CollectionUncheckedCreateWithoutItemsInput;
  update: CollectionUncheckedUpdateWithoutItemsInput;
};

export type EmbedUpdateOneWithoutItemsInput = {
  connect?: InputMaybe<EmbedWhereUniqueInput>;
  connectOrCreate?: InputMaybe<EmbedCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<EmbedUncheckedCreateWithoutItemsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<EmbedUncheckedUpdateWithoutItemsInput>;
  upsert?: InputMaybe<EmbedUpsertWithoutItemsInput>;
};

export type EmbedUncheckedUpdateWithoutItemsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  embedCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EmbedUpsertWithoutItemsInput = {
  create: EmbedUncheckedCreateWithoutItemsInput;
  update: EmbedUncheckedUpdateWithoutItemsInput;
};

export type PageUpdateOneWithoutItemsInput = {
  connect?: InputMaybe<PageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PageCreateOrConnectWithoutItemsInput>;
  create?: InputMaybe<PageUncheckedCreateWithoutItemsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<PageUncheckedUpdateWithoutItemsInput>;
  upsert?: InputMaybe<PageUpsertWithoutItemsInput>;
};

export type PageUncheckedUpdateWithoutItemsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedUpdateManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUpsertWithoutItemsInput = {
  create: PageUncheckedCreateWithoutItemsInput;
  update: PageUncheckedUpdateWithoutItemsInput;
};

export type LinkUpdateInput = {
  categories?: InputMaybe<CategoryUpdateManyWithoutLinksInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutLinksInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedLinks?: InputMaybe<OrderedLinkUpdateManyWithoutLinkInput>;
  products?: InputMaybe<ProductUpdateManyWithoutLinksInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutLinksInput>;
};

export type CategoryUpdateManyWithoutLinksInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutLinksInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutLinksInput>>>;
  delete?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CategoryScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CategoryUpdateWithWhereUniqueWithoutLinksInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CategoryUpdateManyWithWhereWithoutLinksInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CategoryUpsertWithWhereUniqueWithoutLinksInput>>>;
};

export type CollectionUpdateManyWithoutLinksInput = {
  connect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CollectionCreateOrConnectWithoutLinksInput>>>;
  create?: InputMaybe<Array<InputMaybe<CollectionCreateWithoutLinksInput>>>;
  delete?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CollectionUpdateWithWhereUniqueWithoutLinksInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CollectionUpdateManyWithWhereWithoutLinksInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CollectionUpsertWithWhereUniqueWithoutLinksInput>>>;
};

export type OrderedLinkUpdateManyWithoutLinkInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedLinkCreateOrConnectWithoutLinkInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedLinkCreateWithoutLinkInput>>>;
  createMany?: InputMaybe<OrderedLinkCreateManyLinkInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedLinkScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedLinkUpdateWithWhereUniqueWithoutLinkInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedLinkUpdateManyWithWhereWithoutLinkInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedLinkUpsertWithWhereUniqueWithoutLinkInput>>>;
};

export type ProductUpdateManyWithoutLinksInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutLinksInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutLinksInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutLinksInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutLinksInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutLinksInput>>>;
};

export type UserUpdateOneWithoutLinksInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutLinksInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutLinksInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutLinksInput>;
  upsert?: InputMaybe<UserUpsertWithoutLinksInput>;
};

export type UserUncheckedUpdateWithoutLinksInput = {
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUncheckedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpsertWithoutLinksInput = {
  create: UserUncheckedCreateWithoutLinksInput;
  update: UserUncheckedUpdateWithoutLinksInput;
};

export type LoginTokenUpdateInput = {
  approved?: InputMaybe<BoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  domain?: InputMaybe<StringFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  expires?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<StringFieldUpdateOperationsInput>;
  secret?: InputMaybe<StringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneRequiredWithoutLoginTokensInput>;
  userAgent?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type UserUpdateOneRequiredWithoutLoginTokensInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutLoginTokensInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutLoginTokensInput>;
  update?: InputMaybe<UserUncheckedUpdateWithoutLoginTokensInput>;
  upsert?: InputMaybe<UserUpsertWithoutLoginTokensInput>;
};

export type UserUncheckedUpdateWithoutLoginTokensInput = {
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUncheckedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpsertWithoutLoginTokensInput = {
  create: UserUncheckedCreateWithoutLoginTokensInput;
  update: UserUncheckedUpdateWithoutLoginTokensInput;
};

export type NotificationUpdateInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutNotificationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutNotificationsInput>;
};

export type UserUpdateOneWithoutNotificationsInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutNotificationsInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutNotificationsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutNotificationsInput>;
  upsert?: InputMaybe<UserUpsertWithoutNotificationsInput>;
};

export type UserUncheckedUpdateWithoutNotificationsInput = {
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUncheckedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpsertWithoutNotificationsInput = {
  create: UserUncheckedCreateWithoutNotificationsInput;
  update: UserUncheckedUpdateWithoutNotificationsInput;
};

export type WebsiteUpdateOneWithoutNotificationsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutNotificationsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutNotificationsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutNotificationsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutNotificationsInput>;
};

export type WebsiteUncheckedUpdateWithoutNotificationsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutNotificationsInput = {
  create: WebsiteUncheckedCreateWithoutNotificationsInput;
  update: WebsiteUncheckedUpdateWithoutNotificationsInput;
};

export type OrderUpdateInput = {
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  coupon?: InputMaybe<CouponUpdateOneWithoutOrdersInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutOrdersInput>;
  customerContact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delivery_fee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  delivery_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  delivery_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutOrderInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderStatus?: InputMaybe<EnumOrderStatusFieldUpdateOperationsInput>;
  paid_total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  paymentGateway?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundUpdateManyWithoutOrderInput>;
  requireShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  sales_tax?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  stripePrivateSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  tracking_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrdersInput>;
};

export type CouponUpdateOneWithoutOrdersInput = {
  connect?: InputMaybe<CouponWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CouponCreateOrConnectWithoutOrdersInput>;
  create?: InputMaybe<CouponUncheckedCreateWithoutOrdersInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CouponUncheckedUpdateWithoutOrdersInput>;
  upsert?: InputMaybe<CouponUpsertWithoutOrdersInput>;
};

export type CouponUncheckedUpdateWithoutOrdersInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  active_from?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  amount_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  couponType?: InputMaybe<EnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expire_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  percent_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CouponUpsertWithoutOrdersInput = {
  create: CouponUncheckedCreateWithoutOrdersInput;
  update: CouponUncheckedUpdateWithoutOrdersInput;
};

export type CustomerUpdateOneWithoutOrdersInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutOrdersInput>;
  create?: InputMaybe<CustomerUncheckedCreateWithoutOrdersInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CustomerUncheckedUpdateWithoutOrdersInput>;
  upsert?: InputMaybe<CustomerUpsertWithoutOrdersInput>;
};

export type CustomerUncheckedUpdateWithoutOrdersInput = {
  age?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpsertWithoutOrdersInput = {
  create: CustomerUncheckedCreateWithoutOrdersInput;
  update: CustomerUncheckedUpdateWithoutOrdersInput;
};

export type OrderedProductUpdateManyWithoutOrderInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutOrderInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutOrderInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyOrderInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedProductUpdateWithWhereUniqueWithoutOrderInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedProductUpdateManyWithWhereWithoutOrderInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedProductUpsertWithWhereUniqueWithoutOrderInput>>>;
};

export type RefundUpdateManyWithoutOrderInput = {
  connect?: InputMaybe<Array<InputMaybe<RefundWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RefundCreateOrConnectWithoutOrderInput>>>;
  create?: InputMaybe<Array<InputMaybe<RefundCreateWithoutOrderInput>>>;
  createMany?: InputMaybe<RefundCreateManyOrderInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RefundWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RefundScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RefundWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RefundWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RefundUpdateWithWhereUniqueWithoutOrderInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RefundUpdateManyWithWhereWithoutOrderInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RefundUpsertWithWhereUniqueWithoutOrderInput>>>;
};

export type WebsiteUpdateOneWithoutOrdersInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutOrdersInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutOrdersInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutOrdersInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutOrdersInput>;
};

export type WebsiteUncheckedUpdateWithoutOrdersInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutOrdersInput = {
  create: WebsiteUncheckedCreateWithoutOrdersInput;
  update: WebsiteUncheckedUpdateWithoutOrdersInput;
};

export type OrderedAudioUpdateInput = {
  audio?: InputMaybe<AudioUpdateOneWithoutOrderedAudiosInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProduct?: InputMaybe<OrderedProductUpdateOneWithoutOrderedAudiosInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioUpdateOneWithoutOrderedAudiosInput = {
  connect?: InputMaybe<AudioWhereUniqueInput>;
  connectOrCreate?: InputMaybe<AudioCreateOrConnectWithoutOrderedAudiosInput>;
  create?: InputMaybe<AudioUncheckedCreateWithoutOrderedAudiosInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<AudioUncheckedUpdateWithoutOrderedAudiosInput>;
  upsert?: InputMaybe<AudioUpsertWithoutOrderedAudiosInput>;
};

export type AudioUncheckedUpdateWithoutOrderedAudiosInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutAudiosInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioUpsertWithoutOrderedAudiosInput = {
  create: AudioUncheckedCreateWithoutOrderedAudiosInput;
  update: AudioUncheckedUpdateWithoutOrderedAudiosInput;
};

export type OrderedProductUpdateOneWithoutOrderedAudiosInput = {
  connect?: InputMaybe<OrderedProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderedProductCreateOrConnectWithoutOrderedAudiosInput>;
  create?: InputMaybe<OrderedProductUncheckedCreateWithoutOrderedAudiosInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<OrderedProductUncheckedUpdateWithoutOrderedAudiosInput>;
  upsert?: InputMaybe<OrderedProductUpsertWithoutOrderedAudiosInput>;
};

export type OrderedProductUncheckedUpdateWithoutOrderedAudiosInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedUpdateManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refundId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpsertWithoutOrderedAudiosInput = {
  create: OrderedProductUncheckedCreateWithoutOrderedAudiosInput;
  update: OrderedProductUncheckedUpdateWithoutOrderedAudiosInput;
};

export type OrderedDocumentUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  document?: InputMaybe<DocumentUpdateOneWithoutOrderedDocumentsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProduct?: InputMaybe<OrderedProductUpdateOneWithoutOrderedDocumentsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DocumentUpdateOneWithoutOrderedDocumentsInput = {
  connect?: InputMaybe<DocumentWhereUniqueInput>;
  connectOrCreate?: InputMaybe<DocumentCreateOrConnectWithoutOrderedDocumentsInput>;
  create?: InputMaybe<DocumentUncheckedCreateWithoutOrderedDocumentsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<DocumentUncheckedUpdateWithoutOrderedDocumentsInput>;
  upsert?: InputMaybe<DocumentUpsertWithoutOrderedDocumentsInput>;
};

export type DocumentUncheckedUpdateWithoutOrderedDocumentsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutDocumentsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DocumentUpsertWithoutOrderedDocumentsInput = {
  create: DocumentUncheckedCreateWithoutOrderedDocumentsInput;
  update: DocumentUncheckedUpdateWithoutOrderedDocumentsInput;
};

export type OrderedProductUpdateOneWithoutOrderedDocumentsInput = {
  connect?: InputMaybe<OrderedProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderedProductCreateOrConnectWithoutOrderedDocumentsInput>;
  create?: InputMaybe<OrderedProductUncheckedCreateWithoutOrderedDocumentsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<OrderedProductUncheckedUpdateWithoutOrderedDocumentsInput>;
  upsert?: InputMaybe<OrderedProductUpsertWithoutOrderedDocumentsInput>;
};

export type OrderedProductUncheckedUpdateWithoutOrderedDocumentsInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedUpdateManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refundId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpsertWithoutOrderedDocumentsInput = {
  create: OrderedProductUncheckedCreateWithoutOrderedDocumentsInput;
  update: OrderedProductUncheckedUpdateWithoutOrderedDocumentsInput;
};

export type OrderedLinkUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  link?: InputMaybe<LinkUpdateOneWithoutOrderedLinksInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProduct?: InputMaybe<OrderedProductUpdateOneWithoutOrderedLinksInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type LinkUpdateOneWithoutOrderedLinksInput = {
  connect?: InputMaybe<LinkWhereUniqueInput>;
  connectOrCreate?: InputMaybe<LinkCreateOrConnectWithoutOrderedLinksInput>;
  create?: InputMaybe<LinkUncheckedCreateWithoutOrderedLinksInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<LinkUncheckedUpdateWithoutOrderedLinksInput>;
  upsert?: InputMaybe<LinkUpsertWithoutOrderedLinksInput>;
};

export type LinkUncheckedUpdateWithoutOrderedLinksInput = {
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutLinksInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutLinksInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutLinksInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LinkUpsertWithoutOrderedLinksInput = {
  create: LinkUncheckedCreateWithoutOrderedLinksInput;
  update: LinkUncheckedUpdateWithoutOrderedLinksInput;
};

export type OrderedProductUpdateOneWithoutOrderedLinksInput = {
  connect?: InputMaybe<OrderedProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderedProductCreateOrConnectWithoutOrderedLinksInput>;
  create?: InputMaybe<OrderedProductUncheckedCreateWithoutOrderedLinksInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<OrderedProductUncheckedUpdateWithoutOrderedLinksInput>;
  upsert?: InputMaybe<OrderedProductUpsertWithoutOrderedLinksInput>;
};

export type OrderedProductUncheckedUpdateWithoutOrderedLinksInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedUpdateManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refundId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpsertWithoutOrderedLinksInput = {
  create: OrderedProductUncheckedCreateWithoutOrderedLinksInput;
  update: OrderedProductUncheckedUpdateWithoutOrderedLinksInput;
};

export type OrderedPictureUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProduct?: InputMaybe<OrderedProductUpdateOneWithoutOrderedPicturesInput>;
  picture?: InputMaybe<PictureUpdateOneWithoutOrderedPicturesInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpdateOneWithoutOrderedPicturesInput = {
  connect?: InputMaybe<OrderedProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderedProductCreateOrConnectWithoutOrderedPicturesInput>;
  create?: InputMaybe<OrderedProductUncheckedCreateWithoutOrderedPicturesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<OrderedProductUncheckedUpdateWithoutOrderedPicturesInput>;
  upsert?: InputMaybe<OrderedProductUpsertWithoutOrderedPicturesInput>;
};

export type OrderedProductUncheckedUpdateWithoutOrderedPicturesInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedUpdateManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refundId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpsertWithoutOrderedPicturesInput = {
  create: OrderedProductUncheckedCreateWithoutOrderedPicturesInput;
  update: OrderedProductUncheckedUpdateWithoutOrderedPicturesInput;
};

export type PictureUpdateOneWithoutOrderedPicturesInput = {
  connect?: InputMaybe<PictureWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PictureCreateOrConnectWithoutOrderedPicturesInput>;
  create?: InputMaybe<PictureUncheckedCreateWithoutOrderedPicturesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<PictureUncheckedUpdateWithoutOrderedPicturesInput>;
  upsert?: InputMaybe<PictureUpsertWithoutOrderedPicturesInput>;
};

export type PictureUncheckedUpdateWithoutOrderedPicturesInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutPicturesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PictureUpsertWithoutOrderedPicturesInput = {
  create: PictureUncheckedCreateWithoutOrderedPicturesInput;
  update: PictureUncheckedUpdateWithoutOrderedPicturesInput;
};

export type OrderedProductUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<OrderUpdateOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUpdateManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutOrderedProductsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refund?: InputMaybe<RefundUpdateOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrderedProductsInput>;
};

export type OrderUpdateOneWithoutOrderedProductsInput = {
  connect?: InputMaybe<OrderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderCreateOrConnectWithoutOrderedProductsInput>;
  create?: InputMaybe<OrderUncheckedCreateWithoutOrderedProductsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<OrderUncheckedUpdateWithoutOrderedProductsInput>;
  upsert?: InputMaybe<OrderUpsertWithoutOrderedProductsInput>;
};

export type OrderUncheckedUpdateWithoutOrderedProductsInput = {
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  couponId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerContact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delivery_fee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  delivery_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  delivery_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderStatus?: InputMaybe<EnumOrderStatusFieldUpdateOperationsInput>;
  paid_total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  paymentGateway?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundUncheckedUpdateManyWithoutOrderInput>;
  requireShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  sales_tax?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  stripePrivateSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  tracking_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUpsertWithoutOrderedProductsInput = {
  create: OrderUncheckedCreateWithoutOrderedProductsInput;
  update: OrderUncheckedUpdateWithoutOrderedProductsInput;
};

export type OrderedAudioUpdateManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedAudioCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedAudioCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedAudioCreateManyOrderedProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedAudioScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedAudioWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedAudioUpdateWithWhereUniqueWithoutOrderedProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedAudioUpdateManyWithWhereWithoutOrderedProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedAudioUpsertWithWhereUniqueWithoutOrderedProductInput>>>;
};

export type OrderedDocumentUpdateManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedDocumentCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedDocumentCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedDocumentCreateManyOrderedProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedDocumentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedDocumentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedDocumentUpdateWithWhereUniqueWithoutOrderedProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedDocumentUpdateManyWithWhereWithoutOrderedProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedDocumentUpsertWithWhereUniqueWithoutOrderedProductInput>>>;
};

export type OrderedLinkUpdateManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedLinkCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedLinkCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedLinkCreateManyOrderedProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedLinkScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedLinkWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedLinkUpdateWithWhereUniqueWithoutOrderedProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedLinkUpdateManyWithWhereWithoutOrderedProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedLinkUpsertWithWhereUniqueWithoutOrderedProductInput>>>;
};

export type OrderedPictureUpdateManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedPictureCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedPictureCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedPictureCreateManyOrderedProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedPictureScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedPictureUpdateWithWhereUniqueWithoutOrderedProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedPictureUpdateManyWithWhereWithoutOrderedProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedPictureUpsertWithWhereUniqueWithoutOrderedProductInput>>>;
};

export type OrderedRedeemableUpdateManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedRedeemableCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedRedeemableCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedRedeemableCreateManyOrderedProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedRedeemableScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedRedeemableUpdateWithWhereUniqueWithoutOrderedProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedRedeemableUpdateManyWithWhereWithoutOrderedProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedRedeemableUpsertWithWhereUniqueWithoutOrderedProductInput>>>;
};

export type OrderedVideoUpdateManyWithoutOrderedProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedVideoCreateOrConnectWithoutOrderedProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedVideoCreateWithoutOrderedProductInput>>>;
  createMany?: InputMaybe<OrderedVideoCreateManyOrderedProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedVideoScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedVideoUpdateWithWhereUniqueWithoutOrderedProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedVideoUpdateManyWithWhereWithoutOrderedProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedVideoUpsertWithWhereUniqueWithoutOrderedProductInput>>>;
};

export type ProductUpdateOneWithoutOrderedProductsInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutOrderedProductsInput>;
  create?: InputMaybe<ProductUncheckedCreateWithoutOrderedProductsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ProductUncheckedUpdateWithoutOrderedProductsInput>;
  upsert?: InputMaybe<ProductUpsertWithoutOrderedProductsInput>;
};

export type ProductUncheckedUpdateWithoutOrderedProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUncheckedUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutProductsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpsertWithoutOrderedProductsInput = {
  create: ProductUncheckedCreateWithoutOrderedProductsInput;
  update: ProductUncheckedUpdateWithoutOrderedProductsInput;
};

export type RefundUpdateOneWithoutOrderedProductsInput = {
  connect?: InputMaybe<RefundWhereUniqueInput>;
  connectOrCreate?: InputMaybe<RefundCreateOrConnectWithoutOrderedProductsInput>;
  create?: InputMaybe<RefundUncheckedCreateWithoutOrderedProductsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<RefundUncheckedUpdateWithoutOrderedProductsInput>;
  upsert?: InputMaybe<RefundUpsertWithoutOrderedProductsInput>;
};

export type RefundUncheckedUpdateWithoutOrderedProductsInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type RefundUpsertWithoutOrderedProductsInput = {
  create: RefundUncheckedCreateWithoutOrderedProductsInput;
  update: RefundUncheckedUpdateWithoutOrderedProductsInput;
};

export type WebsiteUpdateOneWithoutOrderedProductsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutOrderedProductsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutOrderedProductsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutOrderedProductsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutOrderedProductsInput>;
};

export type WebsiteUncheckedUpdateWithoutOrderedProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutOrderedProductsInput = {
  create: WebsiteUncheckedCreateWithoutOrderedProductsInput;
  update: WebsiteUncheckedUpdateWithoutOrderedProductsInput;
};

export type OrderedRedeemableUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProduct?: InputMaybe<OrderedProductUpdateOneWithoutOrderedRedeemablesInput>;
  perLimit?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemable?: InputMaybe<RedeemableUpdateOneWithoutOrderedRedeemablesInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpdateOneWithoutOrderedRedeemablesInput = {
  connect?: InputMaybe<OrderedProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderedProductCreateOrConnectWithoutOrderedRedeemablesInput>;
  create?: InputMaybe<OrderedProductUncheckedCreateWithoutOrderedRedeemablesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<OrderedProductUncheckedUpdateWithoutOrderedRedeemablesInput>;
  upsert?: InputMaybe<OrderedProductUpsertWithoutOrderedRedeemablesInput>;
};

export type OrderedProductUncheckedUpdateWithoutOrderedRedeemablesInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedUpdateManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refundId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpsertWithoutOrderedRedeemablesInput = {
  create: OrderedProductUncheckedCreateWithoutOrderedRedeemablesInput;
  update: OrderedProductUncheckedUpdateWithoutOrderedRedeemablesInput;
};

export type RedeemableUpdateOneWithoutOrderedRedeemablesInput = {
  connect?: InputMaybe<RedeemableWhereUniqueInput>;
  connectOrCreate?: InputMaybe<RedeemableCreateOrConnectWithoutOrderedRedeemablesInput>;
  create?: InputMaybe<RedeemableUncheckedCreateWithoutOrderedRedeemablesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<RedeemableUncheckedUpdateWithoutOrderedRedeemablesInput>;
  upsert?: InputMaybe<RedeemableUpsertWithoutOrderedRedeemablesInput>;
};

export type RedeemableUncheckedUpdateWithoutOrderedRedeemablesInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<IntFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutRedeemablesInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RedeemableUpsertWithoutOrderedRedeemablesInput = {
  create: RedeemableUncheckedCreateWithoutOrderedRedeemablesInput;
  update: RedeemableUncheckedUpdateWithoutOrderedRedeemablesInput;
};

export type OrderedVideoUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProduct?: InputMaybe<OrderedProductUpdateOneWithoutOrderedVideosInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  video?: InputMaybe<VideoUpdateOneWithoutOrderedVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type OrderedProductUpdateOneWithoutOrderedVideosInput = {
  connect?: InputMaybe<OrderedProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderedProductCreateOrConnectWithoutOrderedVideosInput>;
  create?: InputMaybe<OrderedProductUncheckedCreateWithoutOrderedVideosInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<OrderedProductUncheckedUpdateWithoutOrderedVideosInput>;
  upsert?: InputMaybe<OrderedProductUpsertWithoutOrderedVideosInput>;
};

export type OrderedProductUncheckedUpdateWithoutOrderedVideosInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedUpdateManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refundId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpsertWithoutOrderedVideosInput = {
  create: OrderedProductUncheckedCreateWithoutOrderedVideosInput;
  update: OrderedProductUncheckedUpdateWithoutOrderedVideosInput;
};

export type VideoUpdateOneWithoutOrderedVideosInput = {
  connect?: InputMaybe<VideoWhereUniqueInput>;
  connectOrCreate?: InputMaybe<VideoCreateOrConnectWithoutOrderedVideosInput>;
  create?: InputMaybe<VideoUncheckedCreateWithoutOrderedVideosInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<VideoUncheckedUpdateWithoutOrderedVideosInput>;
  upsert?: InputMaybe<VideoUpsertWithoutOrderedVideosInput>;
};

export type VideoUncheckedUpdateWithoutOrderedVideosInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutVideosInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoUpsertWithoutOrderedVideosInput = {
  create: VideoUncheckedCreateWithoutOrderedVideosInput;
  update: VideoUncheckedUpdateWithoutOrderedVideosInput;
};

export type PageUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUpdateManyWithoutPageInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUpdateManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutPageInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPagesInput>;
};

export type CategoryUpdateManyWithoutPagesInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutPagesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CategoryScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CategoryUpdateWithWhereUniqueWithoutPagesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CategoryUpdateManyWithWhereWithoutPagesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CategoryUpsertWithWhereUniqueWithoutPagesInput>>>;
};

export type CollectionUpdateManyWithoutPagesInput = {
  connect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CollectionCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<CollectionCreateWithoutPagesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CollectionUpdateWithWhereUniqueWithoutPagesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CollectionUpdateManyWithWhereWithoutPagesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CollectionUpsertWithWhereUniqueWithoutPagesInput>>>;
};

export type ItemUpdateManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ItemCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<ItemCreateWithoutPageInput>>>;
  createMany?: InputMaybe<ItemCreateManyPageInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ItemScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ItemWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ItemUpdateWithWhereUniqueWithoutPageInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ItemUpdateManyWithWhereWithoutPageInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ItemUpsertWithWhereUniqueWithoutPageInput>>>;
};

export type PageCollectionUpdateManyWithoutPagesInput = {
  connect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCollectionCreateOrConnectWithoutPagesInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCollectionCreateWithoutPagesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageCollectionUpdateWithWhereUniqueWithoutPagesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageCollectionUpdateManyWithWhereWithoutPagesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageCollectionUpsertWithWhereUniqueWithoutPagesInput>>>;
};

export type PageViewUpdateManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageViewCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageViewCreateWithoutPageInput>>>;
  createMany?: InputMaybe<PageViewCreateManyPageInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageViewScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageViewWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageViewUpdateWithWhereUniqueWithoutPageInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageViewUpdateManyWithWhereWithoutPageInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageViewUpsertWithWhereUniqueWithoutPageInput>>>;
};

export type RequestClickUpdateManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestClickCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestClickCreateWithoutPageInput>>>;
  createMany?: InputMaybe<RequestClickCreateManyPageInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestClickWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestClickUpdateWithWhereUniqueWithoutPageInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestClickUpdateManyWithWhereWithoutPageInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestClickUpsertWithWhereUniqueWithoutPageInput>>>;
};

export type RequestUpdateManyWithoutPageInput = {
  connect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RequestCreateOrConnectWithoutPageInput>>>;
  create?: InputMaybe<Array<InputMaybe<RequestCreateWithoutPageInput>>>;
  createMany?: InputMaybe<RequestCreateManyPageInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RequestScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RequestWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RequestUpdateWithWhereUniqueWithoutPageInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RequestUpdateManyWithWhereWithoutPageInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RequestUpsertWithWhereUniqueWithoutPageInput>>>;
};

export type WebsiteUpdateOneWithoutPagesInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutPagesInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutPagesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutPagesInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutPagesInput>;
};

export type WebsiteUncheckedUpdateWithoutPagesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutPagesInput = {
  create: WebsiteUncheckedCreateWithoutPagesInput;
  update: WebsiteUncheckedUpdateWithoutPagesInput;
};

export type PageCollectionUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutPageCollectionsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPageCollectionsInput>;
};

export type PageUpdateManyWithoutPageCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutPageCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutPageCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageUpdateWithWhereUniqueWithoutPageCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageUpdateManyWithWhereWithoutPageCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageUpsertWithWhereUniqueWithoutPageCollectionsInput>>>;
};

export type WebsiteUpdateOneWithoutPageCollectionsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutPageCollectionsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutPageCollectionsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutPageCollectionsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutPageCollectionsInput>;
};

export type WebsiteUncheckedUpdateWithoutPageCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutPageCollectionsInput = {
  create: WebsiteUncheckedCreateWithoutPageCollectionsInput;
  update: WebsiteUncheckedUpdateWithoutPageCollectionsInput;
};

export type PageViewUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutPageViewsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PageUpdateOneWithoutPageViewsInput = {
  connect?: InputMaybe<PageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PageCreateOrConnectWithoutPageViewsInput>;
  create?: InputMaybe<PageUncheckedCreateWithoutPageViewsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<PageUncheckedUpdateWithoutPageViewsInput>;
  upsert?: InputMaybe<PageUpsertWithoutPageViewsInput>;
};

export type PageUncheckedUpdateWithoutPageViewsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutPageInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutPagesInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUpsertWithoutPageViewsInput = {
  create: PageUncheckedCreateWithoutPageViewsInput;
  update: PageUncheckedUpdateWithoutPageViewsInput;
};

export type PictureUpdateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedPictures?: InputMaybe<OrderedPictureUpdateManyWithoutPictureInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutPicturesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutPicturesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedPictureUpdateManyWithoutPictureInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedPictureCreateOrConnectWithoutPictureInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedPictureCreateWithoutPictureInput>>>;
  createMany?: InputMaybe<OrderedPictureCreateManyPictureInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedPictureScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedPictureWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedPictureUpdateWithWhereUniqueWithoutPictureInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedPictureUpdateManyWithWhereWithoutPictureInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedPictureUpsertWithWhereUniqueWithoutPictureInput>>>;
};

export type ProductUpdateManyWithoutPicturesInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutPicturesInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutPicturesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutPicturesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutPicturesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutPicturesInput>>>;
};

export type UserUpdateOneWithoutPicturesInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutPicturesInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutPicturesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutPicturesInput>;
  upsert?: InputMaybe<UserUpsertWithoutPicturesInput>;
};

export type UserUncheckedUpdateWithoutPicturesInput = {
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUncheckedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpsertWithoutPicturesInput = {
  create: UserUncheckedCreateWithoutPicturesInput;
  update: UserUncheckedUpdateWithoutPicturesInput;
};

export type ProductUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutProductsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUpdateManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type AudioUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AudioScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AudioUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AudioUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AudioUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type BlockUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<BlockCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<BlockCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<BlockScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<BlockUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<BlockUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<BlockUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type CategoryUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CategoryScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CategoryUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CategoryUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CategoryUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type CollectionUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CollectionCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<CollectionCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CollectionUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CollectionUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CollectionUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type DocumentUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<DocumentCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<DocumentCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<DocumentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<DocumentUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<DocumentUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<DocumentUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type LinkUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LinkCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<LinkCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<LinkScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<LinkUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<LinkUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<LinkUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type OrderedProductUpdateManyWithoutProductInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutProductInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedProductUpdateWithWhereUniqueWithoutProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedProductUpdateManyWithWhereWithoutProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedProductUpsertWithWhereUniqueWithoutProductInput>>>;
};

export type PictureUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PictureCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<PictureCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PictureScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PictureUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PictureUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PictureUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type ProductCollectionUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCollectionCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCollectionCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductCollectionUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductCollectionUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductCollectionUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type RedeemableUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RedeemableCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<RedeemableCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RedeemableScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RedeemableUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RedeemableUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RedeemableUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type TagUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<TagCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<TagCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<TagScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<TagUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<TagUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<TagUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type TraitUpdateManyWithoutProductInput = {
  connect?: InputMaybe<Array<InputMaybe<TraitWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<TraitCreateOrConnectWithoutProductInput>>>;
  create?: InputMaybe<Array<InputMaybe<TraitCreateWithoutProductInput>>>;
  createMany?: InputMaybe<TraitCreateManyProductInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<TraitWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<TraitScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<TraitWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<TraitWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<TraitUpdateWithWhereUniqueWithoutProductInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<TraitUpdateManyWithWhereWithoutProductInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<TraitUpsertWithWhereUniqueWithoutProductInput>>>;
};

export type TypeUpdateOneWithoutProductsInput = {
  connect?: InputMaybe<TypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<TypeCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<TypeUncheckedCreateWithoutProductsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<TypeUncheckedUpdateWithoutProductsInput>;
  upsert?: InputMaybe<TypeUpsertWithoutProductsInput>;
};

export type TypeUncheckedUpdateWithoutProductsInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutTypeInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TagUncheckedUpdateManyWithoutTypeInput = {
  connect?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<TagCreateOrConnectWithoutTypeInput>>>;
  create?: InputMaybe<Array<InputMaybe<TagCreateWithoutTypeInput>>>;
  createMany?: InputMaybe<TagCreateManyTypeInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<TagScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<TagUpdateWithWhereUniqueWithoutTypeInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<TagUpdateManyWithWhereWithoutTypeInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<TagUpsertWithWhereUniqueWithoutTypeInput>>>;
};

export type TagUpdateWithWhereUniqueWithoutTypeInput = {
  data: TagUncheckedUpdateWithoutTypeInput;
  where: TagWhereUniqueInput;
};

export type TagUncheckedUpdateWithoutTypeInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutTagsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateManyWithoutTagsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutTagsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutTagsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutTagsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutTagsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutTagsInput>>>;
};

export type ProductUpdateWithWhereUniqueWithoutTagsInput = {
  data: ProductUncheckedUpdateWithoutTagsInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedUpdateWithoutTagsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUncheckedUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutProductsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateManyWithWhereWithoutTagsInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpsertWithWhereUniqueWithoutTagsInput = {
  create: ProductUncheckedCreateWithoutTagsInput;
  update: ProductUncheckedUpdateWithoutTagsInput;
  where: ProductWhereUniqueInput;
};

export type TagUpdateManyWithWhereWithoutTypeInput = {
  data: TagUncheckedUpdateManyWithoutTagsInput;
  where: TagScalarWhereInput;
};

export type TagUpsertWithWhereUniqueWithoutTypeInput = {
  create: TagUncheckedCreateWithoutTypeInput;
  update: TagUncheckedUpdateWithoutTypeInput;
  where: TagWhereUniqueInput;
};

export type TypeUpsertWithoutProductsInput = {
  create: TypeUncheckedCreateWithoutProductsInput;
  update: TypeUncheckedUpdateWithoutProductsInput;
};

export type VideoUpdateManyWithoutProductsInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCreateOrConnectWithoutProductsInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCreateWithoutProductsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<VideoScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<VideoUpdateWithWhereUniqueWithoutProductsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<VideoUpdateManyWithWhereWithoutProductsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<VideoUpsertWithWhereUniqueWithoutProductsInput>>>;
};

export type WebsiteUpdateOneWithoutProductsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutProductsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutProductsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutProductsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutProductsInput>;
};

export type WebsiteUncheckedUpdateWithoutProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutProductsInput = {
  create: WebsiteUncheckedCreateWithoutProductsInput;
  update: WebsiteUncheckedUpdateWithoutProductsInput;
};

export type ProductCollectionUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutProductCollectionsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductCollectionsInput>;
};

export type ProductUpdateManyWithoutProductCollectionsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutProductCollectionsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutProductCollectionsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutProductCollectionsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutProductCollectionsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutProductCollectionsInput>>>;
};

export type WebsiteUpdateOneWithoutProductCollectionsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutProductCollectionsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutProductCollectionsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutProductCollectionsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutProductCollectionsInput>;
};

export type WebsiteUncheckedUpdateWithoutProductCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutProductCollectionsInput = {
  create: WebsiteUncheckedCreateWithoutProductCollectionsInput;
  update: WebsiteUncheckedUpdateWithoutProductCollectionsInput;
};

export type RedeemableUpdateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUpdateManyWithoutRedeemableInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<IntFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutRedeemablesInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutRedeemablesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedRedeemableUpdateManyWithoutRedeemableInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedRedeemableCreateOrConnectWithoutRedeemableInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedRedeemableCreateWithoutRedeemableInput>>>;
  createMany?: InputMaybe<OrderedRedeemableCreateManyRedeemableInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedRedeemableScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedRedeemableWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedRedeemableUpdateWithWhereUniqueWithoutRedeemableInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedRedeemableUpdateManyWithWhereWithoutRedeemableInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedRedeemableUpsertWithWhereUniqueWithoutRedeemableInput>>>;
};

export type ProductUpdateManyWithoutRedeemablesInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutRedeemablesInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutRedeemablesInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutRedeemablesInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutRedeemablesInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutRedeemablesInput>>>;
};

export type UserUpdateOneWithoutRedeemablesInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutRedeemablesInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutRedeemablesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutRedeemablesInput>;
  upsert?: InputMaybe<UserUpsertWithoutRedeemablesInput>;
};

export type UserUncheckedUpdateWithoutRedeemablesInput = {
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUncheckedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpsertWithoutRedeemablesInput = {
  create: UserUncheckedCreateWithoutRedeemablesInput;
  update: UserUncheckedUpdateWithoutRedeemablesInput;
};

export type RefreshTokenUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  expires?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<StringFieldUpdateOperationsInput>;
  lastActive?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  loginTokenId?: InputMaybe<StringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneRequiredWithoutRefreshTokensInput>;
  userAgent?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<StringFieldUpdateOperationsInput>;
  value?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type UserUpdateOneRequiredWithoutRefreshTokensInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutRefreshTokensInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutRefreshTokensInput>;
  update?: InputMaybe<UserUncheckedUpdateWithoutRefreshTokensInput>;
  upsert?: InputMaybe<UserUpsertWithoutRefreshTokensInput>;
};

export type UserUncheckedUpdateWithoutRefreshTokensInput = {
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUncheckedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpsertWithoutRefreshTokensInput = {
  create: UserUncheckedCreateWithoutRefreshTokensInput;
  update: UserUncheckedUpdateWithoutRefreshTokensInput;
};

export type RefundUpdateInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<OrderUpdateOneWithoutRefundsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutRefundInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type OrderUpdateOneWithoutRefundsInput = {
  connect?: InputMaybe<OrderWhereUniqueInput>;
  connectOrCreate?: InputMaybe<OrderCreateOrConnectWithoutRefundsInput>;
  create?: InputMaybe<OrderUncheckedCreateWithoutRefundsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<OrderUncheckedUpdateWithoutRefundsInput>;
  upsert?: InputMaybe<OrderUpsertWithoutRefundsInput>;
};

export type OrderUncheckedUpdateWithoutRefundsInput = {
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  couponId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerContact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delivery_fee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  delivery_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  delivery_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutOrderInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderStatus?: InputMaybe<EnumOrderStatusFieldUpdateOperationsInput>;
  paid_total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  paymentGateway?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  requireShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  sales_tax?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  stripePrivateSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  tracking_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUpsertWithoutRefundsInput = {
  create: OrderUncheckedCreateWithoutRefundsInput;
  update: OrderUncheckedUpdateWithoutRefundsInput;
};

export type OrderedProductUpdateManyWithoutRefundInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutRefundInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutRefundInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyRefundInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedProductUpdateWithWhereUniqueWithoutRefundInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedProductUpdateManyWithWhereWithoutRefundInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedProductUpsertWithWhereUniqueWithoutRefundInput>>>;
};

export type RequestUpdateInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  collection?: InputMaybe<CollectionUpdateOneWithoutRequestsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutRequestsInput>;
  days?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<StringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutRequestsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestAccept?: InputMaybe<NullableEnumRequestAcceptFieldUpdateOperationsInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subject?: InputMaybe<StringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CollectionUpdateOneWithoutRequestsInput = {
  connect?: InputMaybe<CollectionWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CollectionCreateOrConnectWithoutRequestsInput>;
  create?: InputMaybe<CollectionUncheckedCreateWithoutRequestsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CollectionUncheckedUpdateWithoutRequestsInput>;
  upsert?: InputMaybe<CollectionUpsertWithoutRequestsInput>;
};

export type CollectionUncheckedUpdateWithoutRequestsInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutCollectionInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutCollectionsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutCollectionsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CollectionUpsertWithoutRequestsInput = {
  create: CollectionUncheckedCreateWithoutRequestsInput;
  update: CollectionUncheckedUpdateWithoutRequestsInput;
};

export type CustomerUpdateOneWithoutRequestsInput = {
  connect?: InputMaybe<CustomerWhereUniqueInput>;
  connectOrCreate?: InputMaybe<CustomerCreateOrConnectWithoutRequestsInput>;
  create?: InputMaybe<CustomerUncheckedCreateWithoutRequestsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<CustomerUncheckedUpdateWithoutRequestsInput>;
  upsert?: InputMaybe<CustomerUpsertWithoutRequestsInput>;
};

export type CustomerUncheckedUpdateWithoutRequestsInput = {
  age?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpsertWithoutRequestsInput = {
  create: CustomerUncheckedCreateWithoutRequestsInput;
  update: CustomerUncheckedUpdateWithoutRequestsInput;
};

export type PageUpdateOneWithoutRequestsInput = {
  connect?: InputMaybe<PageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PageCreateOrConnectWithoutRequestsInput>;
  create?: InputMaybe<PageUncheckedCreateWithoutRequestsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<PageUncheckedUpdateWithoutRequestsInput>;
  upsert?: InputMaybe<PageUpsertWithoutRequestsInput>;
};

export type PageUncheckedUpdateWithoutRequestsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutPageInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedUpdateManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUpsertWithoutRequestsInput = {
  create: PageUncheckedCreateWithoutRequestsInput;
  update: PageUncheckedUpdateWithoutRequestsInput;
};

export type RequestClickUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutRequestClicksInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PageUpdateOneWithoutRequestClicksInput = {
  connect?: InputMaybe<PageWhereUniqueInput>;
  connectOrCreate?: InputMaybe<PageCreateOrConnectWithoutRequestClicksInput>;
  create?: InputMaybe<PageUncheckedCreateWithoutRequestClicksInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<PageUncheckedUpdateWithoutRequestClicksInput>;
  upsert?: InputMaybe<PageUpsertWithoutRequestClicksInput>;
};

export type PageUncheckedUpdateWithoutRequestClicksInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutPageInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedUpdateManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUpsertWithoutRequestClicksInput = {
  create: PageUncheckedCreateWithoutRequestClicksInput;
  update: PageUncheckedUpdateWithoutRequestClicksInput;
};

export type ShippingUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amount?: InputMaybe<FloatFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isGlobal?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutShippingsInput>;
};

export type WebsiteUpdateOneWithoutShippingsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutShippingsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutShippingsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutShippingsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutShippingsInput>;
};

export type WebsiteUncheckedUpdateWithoutShippingsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutShippingsInput = {
  create: WebsiteUncheckedCreateWithoutShippingsInput;
  update: WebsiteUncheckedUpdateWithoutShippingsInput;
};

export type SlugCounterUpdateInput = {
  counter?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SocialUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  socialType?: InputMaybe<EnumSocialTypeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutSocialsInput>;
};

export type WebsiteUpdateOneWithoutSocialsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutSocialsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutSocialsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutSocialsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutSocialsInput>;
};

export type WebsiteUncheckedUpdateWithoutSocialsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutSocialsInput = {
  create: WebsiteUncheckedCreateWithoutSocialsInput;
  update: WebsiteUncheckedUpdateWithoutSocialsInput;
};

export type TagUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutTagsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutTagsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ProductUpdateManyWithoutTagsInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutTagsInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutTagsInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutTagsInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutTagsInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutTagsInput>>>;
};

export type TypeUpdateOneWithoutTagsInput = {
  connect?: InputMaybe<TypeWhereUniqueInput>;
  connectOrCreate?: InputMaybe<TypeCreateOrConnectWithoutTagsInput>;
  create?: InputMaybe<TypeUncheckedCreateWithoutTagsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<TypeUncheckedUpdateWithoutTagsInput>;
  upsert?: InputMaybe<TypeUpsertWithoutTagsInput>;
};

export type TypeUncheckedUpdateWithoutTagsInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutTypeInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateManyWithoutTypeInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutTypeInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutTypeInput>>>;
  createMany?: InputMaybe<ProductCreateManyTypeInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutTypeInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutTypeInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutTypeInput>>>;
};

export type ProductUpdateWithWhereUniqueWithoutTypeInput = {
  data: ProductUncheckedUpdateWithoutTypeInput;
  where: ProductWhereUniqueInput;
};

export type ProductUncheckedUpdateWithoutTypeInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUncheckedUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutProductsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateManyWithWhereWithoutTypeInput = {
  data: ProductUncheckedUpdateManyWithoutProductsInput;
  where: ProductScalarWhereInput;
};

export type ProductUpsertWithWhereUniqueWithoutTypeInput = {
  create: ProductUncheckedCreateWithoutTypeInput;
  update: ProductUncheckedUpdateWithoutTypeInput;
  where: ProductWhereUniqueInput;
};

export type TypeUpsertWithoutTagsInput = {
  create: TypeUncheckedCreateWithoutTagsInput;
  update: TypeUncheckedUpdateWithoutTagsInput;
};

export type TaxUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  inclusive?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isGlobal?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  jurisdiction?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  onShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  percentage?: InputMaybe<FloatFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripePrivateTaxId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutTaxesInput>;
  zip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WebsiteUpdateOneWithoutTaxesInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutTaxesInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutTaxesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutTaxesInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutTaxesInput>;
};

export type WebsiteUncheckedUpdateWithoutTaxesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpsertWithoutTaxesInput = {
  create: WebsiteUncheckedCreateWithoutTaxesInput;
  update: WebsiteUncheckedUpdateWithoutTaxesInput;
};

export type TraitUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutTraitsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<ValueUpdateManyWithoutTraitInput>;
};

export type ProductUpdateOneWithoutTraitsInput = {
  connect?: InputMaybe<ProductWhereUniqueInput>;
  connectOrCreate?: InputMaybe<ProductCreateOrConnectWithoutTraitsInput>;
  create?: InputMaybe<ProductUncheckedCreateWithoutTraitsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<ProductUncheckedUpdateWithoutTraitsInput>;
  upsert?: InputMaybe<ProductUpsertWithoutTraitsInput>;
};

export type ProductUncheckedUpdateWithoutTraitsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutProductsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpsertWithoutTraitsInput = {
  create: ProductUncheckedCreateWithoutTraitsInput;
  update: ProductUncheckedUpdateWithoutTraitsInput;
};

export type ValueUpdateManyWithoutTraitInput = {
  connect?: InputMaybe<Array<InputMaybe<ValueWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ValueCreateOrConnectWithoutTraitInput>>>;
  create?: InputMaybe<Array<InputMaybe<ValueCreateWithoutTraitInput>>>;
  createMany?: InputMaybe<ValueCreateManyTraitInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ValueWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ValueScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ValueWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ValueWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ValueUpdateWithWhereUniqueWithoutTraitInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ValueUpdateManyWithWhereWithoutTraitInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ValueUpsertWithWhereUniqueWithoutTraitInput>>>;
};

export type TypeUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutTypeInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutTypeInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ProductUpdateManyWithoutTypeInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutTypeInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutTypeInput>>>;
  createMany?: InputMaybe<ProductCreateManyTypeInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutTypeInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutTypeInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutTypeInput>>>;
};

export type TagUpdateManyWithoutTypeInput = {
  connect?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<TagCreateOrConnectWithoutTypeInput>>>;
  create?: InputMaybe<Array<InputMaybe<TagCreateWithoutTypeInput>>>;
  createMany?: InputMaybe<TagCreateManyTypeInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<TagScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<TagWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<TagUpdateWithWhereUniqueWithoutTypeInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<TagUpdateManyWithWhereWithoutTypeInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<TagUpsertWithWhereUniqueWithoutTypeInput>>>;
};

export type UserUpdateInput = {
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type AttachmentUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutUserInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AttachmentUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AttachmentUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AttachmentUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type AudioUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AudioCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<AudioCreateWithoutUserInput>>>;
  createMany?: InputMaybe<AudioCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AudioScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AudioWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AudioUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AudioUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AudioUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type BlockUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<BlockCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<BlockCreateWithoutUserInput>>>;
  createMany?: InputMaybe<BlockCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<BlockScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<BlockWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<BlockUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<BlockUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<BlockUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type CustomerUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CustomerCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<CustomerCreateWithoutUserInput>>>;
  createMany?: InputMaybe<CustomerCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CustomerScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CustomerUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CustomerUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CustomerUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type DocumentUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<DocumentCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<DocumentCreateWithoutUserInput>>>;
  createMany?: InputMaybe<DocumentCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<DocumentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<DocumentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<DocumentUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<DocumentUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<DocumentUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type EmbedUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<EmbedWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<EmbedCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<EmbedCreateWithoutUserInput>>>;
  createMany?: InputMaybe<EmbedCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<EmbedWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<EmbedScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<EmbedWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<EmbedWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<EmbedUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<EmbedUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<EmbedUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type LinkUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LinkCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<LinkCreateWithoutUserInput>>>;
  createMany?: InputMaybe<LinkCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<LinkScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<LinkWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<LinkUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<LinkUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<LinkUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type LoginTokenUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<LoginTokenCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<LoginTokenCreateWithoutUserInput>>>;
  createMany?: InputMaybe<LoginTokenCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<LoginTokenScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<LoginTokenWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<LoginTokenUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<LoginTokenUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<LoginTokenUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type NotificationUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<NotificationCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<NotificationCreateWithoutUserInput>>>;
  createMany?: InputMaybe<NotificationCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<NotificationScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<NotificationUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<NotificationUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<NotificationUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type PictureUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PictureCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<PictureCreateWithoutUserInput>>>;
  createMany?: InputMaybe<PictureCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PictureScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PictureWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PictureUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PictureUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PictureUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type RedeemableUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RedeemableCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<RedeemableCreateWithoutUserInput>>>;
  createMany?: InputMaybe<RedeemableCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RedeemableScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RedeemableWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RedeemableUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RedeemableUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RedeemableUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type RefreshTokenUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<RefreshTokenCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<RefreshTokenCreateWithoutUserInput>>>;
  createMany?: InputMaybe<RefreshTokenCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<RefreshTokenScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<RefreshTokenWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<RefreshTokenUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<RefreshTokenUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<RefreshTokenUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type VideoUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<VideoCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<VideoCreateWithoutUserInput>>>;
  createMany?: InputMaybe<VideoCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<VideoScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<VideoWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<VideoUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<VideoUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<VideoUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type WebsiteUpdateManyWithoutUserInput = {
  connect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WebsiteCreateOrConnectWithoutUserInput>>>;
  create?: InputMaybe<Array<InputMaybe<WebsiteCreateWithoutUserInput>>>;
  createMany?: InputMaybe<WebsiteCreateManyUserInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<WebsiteWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<WebsiteUpdateWithWhereUniqueWithoutUserInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<WebsiteUpdateManyWithWhereWithoutUserInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<WebsiteUpsertWithWhereUniqueWithoutUserInput>>>;
};

export type ValueUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  percentage?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  trait?: InputMaybe<TraitUpdateOneWithoutValuesInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TraitUpdateOneWithoutValuesInput = {
  connect?: InputMaybe<TraitWhereUniqueInput>;
  connectOrCreate?: InputMaybe<TraitCreateOrConnectWithoutValuesInput>;
  create?: InputMaybe<TraitUncheckedCreateWithoutValuesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<TraitUncheckedUpdateWithoutValuesInput>;
  upsert?: InputMaybe<TraitUpsertWithoutValuesInput>;
};

export type TraitUncheckedUpdateWithoutValuesInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TraitUpsertWithoutValuesInput = {
  create: TraitUncheckedCreateWithoutValuesInput;
  update: TraitUncheckedUpdateWithoutValuesInput;
};

export type VideoUpdateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedVideos?: InputMaybe<OrderedVideoUpdateManyWithoutVideoInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutVideosInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedVideoUpdateManyWithoutVideoInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedVideoCreateOrConnectWithoutVideoInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedVideoCreateWithoutVideoInput>>>;
  createMany?: InputMaybe<OrderedVideoCreateManyVideoInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedVideoScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedVideoWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedVideoUpdateWithWhereUniqueWithoutVideoInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedVideoUpdateManyWithWhereWithoutVideoInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedVideoUpsertWithWhereUniqueWithoutVideoInput>>>;
};

export type ProductUpdateManyWithoutVideosInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutVideosInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutVideosInput>>>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutVideosInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutVideosInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutVideosInput>>>;
};

export type UserUpdateOneWithoutVideosInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutVideosInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutVideosInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutVideosInput>;
  upsert?: InputMaybe<UserUpsertWithoutVideosInput>;
};

export type UserUncheckedUpdateWithoutVideosInput = {
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUncheckedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpsertWithoutVideosInput = {
  create: UserUncheckedCreateWithoutVideosInput;
  update: UserUncheckedUpdateWithoutVideosInput;
};

export type WebsiteUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type AttachmentUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttachmentCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttachmentCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AttachmentCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AttachmentWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AttachmentUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AttachmentUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AttachmentUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type AttributeUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<AttributeCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<AttributeCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<AttributeCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<AttributeScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<AttributeWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<AttributeUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<AttributeUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<AttributeUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type CategoryUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CategoryCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CategoryCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CategoryCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CategoryScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CategoryWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CategoryUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CategoryUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CategoryUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type CollectionUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CollectionCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CollectionUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CollectionUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CollectionUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type CouponUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CouponCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CouponCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CouponCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CouponScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CouponWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CouponUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CouponUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CouponUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type CustomerUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<CustomerCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<CustomerCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<CustomerCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<CustomerScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<CustomerWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<CustomerUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<CustomerUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<CustomerUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type GroupUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<GroupWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<GroupCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<GroupCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<GroupCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<GroupWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<GroupScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<GroupWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<GroupWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<GroupUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<GroupUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<GroupUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type NotificationUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<NotificationCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<NotificationCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<NotificationCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<NotificationScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<NotificationWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<NotificationUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<NotificationUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<NotificationUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type OrderedProductUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderedProductCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderedProductCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<OrderedProductCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderedProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderedProductUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderedProductUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderedProductUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type OrderUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<OrderCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<OrderCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<OrderCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<OrderScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<OrderWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<OrderUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<OrderUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<OrderUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type PageCollectionUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<PageCollectionCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageCollectionUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageCollectionUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageCollectionUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type PageUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<PageCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<PageCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<PageCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<PageScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<PageWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<PageUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<PageUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<PageUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type ProductCollectionUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCollectionCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCollectionCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductCollectionCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductCollectionWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductCollectionUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductCollectionUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductCollectionUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type ProductUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ProductCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ProductCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ProductCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ProductScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ProductWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ProductUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ProductUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ProductUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type ShippingUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<ShippingWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<ShippingCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<ShippingCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<ShippingCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<ShippingWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<ShippingScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<ShippingWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<ShippingWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<ShippingUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<ShippingUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<ShippingUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type SocialUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<SocialWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<SocialCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<SocialCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<SocialCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<SocialWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<SocialScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<SocialWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<SocialWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<SocialUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<SocialUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<SocialUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type TaxUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<TaxWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<TaxCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<TaxCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<TaxCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<TaxWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<TaxScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<TaxWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<TaxWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<TaxUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<TaxUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<TaxUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type UserUpdateOneWithoutWebsitesInput = {
  connect?: InputMaybe<UserWhereUniqueInput>;
  connectOrCreate?: InputMaybe<UserCreateOrConnectWithoutWebsitesInput>;
  create?: InputMaybe<UserUncheckedCreateWithoutWebsitesInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<UserUncheckedUpdateWithoutWebsitesInput>;
  upsert?: InputMaybe<UserUpsertWithoutWebsitesInput>;
};

export type UserUncheckedUpdateWithoutWebsitesInput = {
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUncheckedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpsertWithoutWebsitesInput = {
  create: UserUncheckedCreateWithoutWebsitesInput;
  update: UserUncheckedUpdateWithoutWebsitesInput;
};

export type WithdrawUpdateManyWithoutWebsiteInput = {
  connect?: InputMaybe<Array<InputMaybe<WithdrawWhereUniqueInput>>>;
  connectOrCreate?: InputMaybe<Array<InputMaybe<WithdrawCreateOrConnectWithoutWebsiteInput>>>;
  create?: InputMaybe<Array<InputMaybe<WithdrawCreateWithoutWebsiteInput>>>;
  createMany?: InputMaybe<WithdrawCreateManyWebsiteInputEnvelope>;
  delete?: InputMaybe<Array<InputMaybe<WithdrawWhereUniqueInput>>>;
  deleteMany?: InputMaybe<Array<InputMaybe<WithdrawScalarWhereInput>>>;
  disconnect?: InputMaybe<Array<InputMaybe<WithdrawWhereUniqueInput>>>;
  set?: InputMaybe<Array<InputMaybe<WithdrawWhereUniqueInput>>>;
  update?: InputMaybe<Array<InputMaybe<WithdrawUpdateWithWhereUniqueWithoutWebsiteInput>>>;
  updateMany?: InputMaybe<Array<InputMaybe<WithdrawUpdateManyWithWhereWithoutWebsiteInput>>>;
  upsert?: InputMaybe<Array<InputMaybe<WithdrawUpsertWithWhereUniqueWithoutWebsiteInput>>>;
};

export type WithdrawUpdateInput = {
  amount?: InputMaybe<FloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  processed?: InputMaybe<BoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutWithdrawsInput>;
};

export type WebsiteUpdateOneWithoutWithdrawsInput = {
  connect?: InputMaybe<WebsiteWhereUniqueInput>;
  connectOrCreate?: InputMaybe<WebsiteCreateOrConnectWithoutWithdrawsInput>;
  create?: InputMaybe<WebsiteUncheckedCreateWithoutWithdrawsInput>;
  delete?: InputMaybe<Scalars['Boolean']>;
  disconnect?: InputMaybe<Scalars['Boolean']>;
  update?: InputMaybe<WebsiteUncheckedUpdateWithoutWithdrawsInput>;
  upsert?: InputMaybe<WebsiteUpsertWithoutWithdrawsInput>;
};

export type WebsiteUncheckedUpdateWithoutWithdrawsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type WebsiteUpsertWithoutWithdrawsInput = {
  create: WebsiteUncheckedCreateWithoutWithdrawsInput;
  update: WebsiteUncheckedUpdateWithoutWithdrawsInput;
};

export type AttachmentCountOrderByAggregateInput = {
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  staked?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  upload?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AttachmentCreateManyInput = {
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  staked?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<AttachmentType>;
  upload: Scalars['Json'];
  url: Scalars['String'];
  userId?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AttachmentMaxOrderByAggregateInput = {
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  staked?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AttachmentMinOrderByAggregateInput = {
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  staked?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AttachmentOrderByWithAggregationInput = {
  _count?: InputMaybe<AttachmentCountOrderByAggregateInput>;
  _max?: InputMaybe<AttachmentMaxOrderByAggregateInput>;
  _min?: InputMaybe<AttachmentMinOrderByAggregateInput>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  staked?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  upload?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AttachmentScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereWithAggregatesInput>>>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AttachmentScalarWhereWithAggregatesInput>>>;
  staked?: InputMaybe<BoolNullableWithAggregatesFilter>;
  type?: InputMaybe<EnumAttachmentTypeNullableWithAggregatesFilter>;
  upload?: InputMaybe<JsonWithAggregatesFilter>;
  url?: InputMaybe<StringWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type BoolNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedBoolNullableFilter>;
  _min?: InputMaybe<NestedBoolNullableFilter>;
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolNullableWithAggregatesFilter>;
};

export type NestedBoolNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedBoolNullableFilter>;
  _min?: InputMaybe<NestedBoolNullableFilter>;
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolNullableWithAggregatesFilter>;
};

export type DateTimeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedDateTimeNullableFilter>;
  _min?: InputMaybe<NestedDateTimeNullableFilter>;
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
};

export type NestedDateTimeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedDateTimeNullableFilter>;
  _min?: InputMaybe<NestedDateTimeNullableFilter>;
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
};

export type StringWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedStringFilter>;
  _min?: InputMaybe<NestedStringFilter>;
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type NestedStringWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedStringFilter>;
  _min?: InputMaybe<NestedStringFilter>;
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  not?: InputMaybe<NestedStringWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type EnumAttachmentTypeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumAttachmentTypeNullableFilter>;
  _min?: InputMaybe<NestedEnumAttachmentTypeNullableFilter>;
  equals?: InputMaybe<AttachmentType>;
  in?: InputMaybe<Array<InputMaybe<AttachmentType>>>;
  not?: InputMaybe<NestedEnumAttachmentTypeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<AttachmentType>>>;
};

export type NestedEnumAttachmentTypeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumAttachmentTypeNullableFilter>;
  _min?: InputMaybe<NestedEnumAttachmentTypeNullableFilter>;
  equals?: InputMaybe<AttachmentType>;
  in?: InputMaybe<Array<InputMaybe<AttachmentType>>>;
  not?: InputMaybe<NestedEnumAttachmentTypeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<AttachmentType>>>;
};

export type JsonWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedJsonFilter>;
  _min?: InputMaybe<NestedJsonFilter>;
  array_contains?: InputMaybe<Scalars['Json']>;
  array_ends_with?: InputMaybe<Scalars['Json']>;
  array_starts_with?: InputMaybe<Scalars['Json']>;
  equals?: InputMaybe<Scalars['Json']>;
  gt?: InputMaybe<Scalars['Json']>;
  gte?: InputMaybe<Scalars['Json']>;
  lt?: InputMaybe<Scalars['Json']>;
  lte?: InputMaybe<Scalars['Json']>;
  not?: InputMaybe<Scalars['Json']>;
  path?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  string_contains?: InputMaybe<Scalars['String']>;
  string_ends_with?: InputMaybe<Scalars['String']>;
  string_starts_with?: InputMaybe<Scalars['String']>;
};

export type NestedJsonFilter = {
  array_contains?: InputMaybe<Scalars['Json']>;
  array_ends_with?: InputMaybe<Scalars['Json']>;
  array_starts_with?: InputMaybe<Scalars['Json']>;
  equals?: InputMaybe<Scalars['Json']>;
  gt?: InputMaybe<Scalars['Json']>;
  gte?: InputMaybe<Scalars['Json']>;
  lt?: InputMaybe<Scalars['Json']>;
  lte?: InputMaybe<Scalars['Json']>;
  not?: InputMaybe<Scalars['Json']>;
  path?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  string_contains?: InputMaybe<Scalars['String']>;
  string_ends_with?: InputMaybe<Scalars['String']>;
  string_starts_with?: InputMaybe<Scalars['String']>;
};

export type StringNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedStringNullableFilter>;
  _min?: InputMaybe<NestedStringNullableFilter>;
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  mode?: InputMaybe<QueryMode>;
  not?: InputMaybe<NestedStringNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type NestedStringNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedStringNullableFilter>;
  _min?: InputMaybe<NestedStringNullableFilter>;
  contains?: InputMaybe<Scalars['String']>;
  endsWith?: InputMaybe<Scalars['String']>;
  equals?: InputMaybe<Scalars['String']>;
  gt?: InputMaybe<Scalars['String']>;
  gte?: InputMaybe<Scalars['String']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  lt?: InputMaybe<Scalars['String']>;
  lte?: InputMaybe<Scalars['String']>;
  not?: InputMaybe<NestedStringNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  startsWith?: InputMaybe<Scalars['String']>;
};

export type AttachmentUncheckedCreateInput = {
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  staked?: InputMaybe<Scalars['Boolean']>;
  type?: InputMaybe<AttachmentType>;
  upload: Scalars['Json'];
  url: Scalars['String'];
  userId?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AttachmentUncheckedUpdateInput = {
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  staked?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttachmentUncheckedUpdateManyInput = {
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  staked?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttachmentUpdateWithoutUserInput = {
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  staked?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutAttachmentsInput>;
};

export type AttachmentUpdateWithoutWebsiteInput = {
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  staked?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableEnumAttachmentTypeFieldUpdateOperationsInput>;
  upload?: InputMaybe<Scalars['Json']>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutAttachmentsInput>;
};

export type AttributeCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  values?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AttributeCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  values?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AttributeCreatevaluesInput = {
  set: Scalars['Json'];
};

export type AttributeMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AttributeMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AttributeOrderByWithAggregationInput = {
  _count?: InputMaybe<AttributeCountOrderByAggregateInput>;
  _max?: InputMaybe<AttributeMaxOrderByAggregateInput>;
  _min?: InputMaybe<AttributeMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  values?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type AttributeScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<AttributeScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<AttributeScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AttributeScalarWhereWithAggregatesInput>>>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  values?: InputMaybe<JsonNullableListFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type DateTimeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedDateTimeFilter>;
  _min?: InputMaybe<NestedDateTimeFilter>;
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
};

export type NestedDateTimeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedDateTimeFilter>;
  _min?: InputMaybe<NestedDateTimeFilter>;
  equals?: InputMaybe<Scalars['DateTime']>;
  gt?: InputMaybe<Scalars['DateTime']>;
  gte?: InputMaybe<Scalars['DateTime']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
  lt?: InputMaybe<Scalars['DateTime']>;
  lte?: InputMaybe<Scalars['DateTime']>;
  not?: InputMaybe<NestedDateTimeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['DateTime']>>>;
};

export type BoolWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedBoolFilter>;
  _min?: InputMaybe<NestedBoolFilter>;
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolWithAggregatesFilter>;
};

export type NestedBoolWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedBoolFilter>;
  _min?: InputMaybe<NestedBoolFilter>;
  equals?: InputMaybe<Scalars['Boolean']>;
  not?: InputMaybe<NestedBoolWithAggregatesFilter>;
};

export type AttributeUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  values?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type AttributeUncheckedUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AttributeUpdatevaluesInput = {
  push?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  set?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
};

export type AttributeUpdateWithoutWebsiteInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
};

export type AudioCountOrderByAggregateInput = {
  audioObj?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type AudioCreateManyInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type AudioCreateWithoutOrderedAudiosInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutAudiosInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutAudiosInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type AudioMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type AudioMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type AudioOrderByWithAggregationInput = {
  _count?: InputMaybe<AudioCountOrderByAggregateInput>;
  _max?: InputMaybe<AudioMaxOrderByAggregateInput>;
  _min?: InputMaybe<AudioMinOrderByAggregateInput>;
  audioObj?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type AudioRelationFilter = {
  is?: InputMaybe<AudioWhereInput>;
  isNot?: InputMaybe<AudioWhereInput>;
};

export type AudioScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<AudioScalarWhereWithAggregatesInput>>>;
  audioObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  content?: InputMaybe<JsonNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<AudioScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<AudioScalarWhereWithAggregatesInput>>>;
  paid?: InputMaybe<BoolNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  transactionHash?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type JsonNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedJsonNullableFilter>;
  _min?: InputMaybe<NestedJsonNullableFilter>;
  array_contains?: InputMaybe<Scalars['Json']>;
  array_ends_with?: InputMaybe<Scalars['Json']>;
  array_starts_with?: InputMaybe<Scalars['Json']>;
  equals?: InputMaybe<Scalars['Json']>;
  gt?: InputMaybe<Scalars['Json']>;
  gte?: InputMaybe<Scalars['Json']>;
  lt?: InputMaybe<Scalars['Json']>;
  lte?: InputMaybe<Scalars['Json']>;
  not?: InputMaybe<Scalars['Json']>;
  path?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  string_contains?: InputMaybe<Scalars['String']>;
  string_ends_with?: InputMaybe<Scalars['String']>;
  string_starts_with?: InputMaybe<Scalars['String']>;
};

export type NestedJsonNullableFilter = {
  array_contains?: InputMaybe<Scalars['Json']>;
  array_ends_with?: InputMaybe<Scalars['Json']>;
  array_starts_with?: InputMaybe<Scalars['Json']>;
  equals?: InputMaybe<Scalars['Json']>;
  gt?: InputMaybe<Scalars['Json']>;
  gte?: InputMaybe<Scalars['Json']>;
  lt?: InputMaybe<Scalars['Json']>;
  lte?: InputMaybe<Scalars['Json']>;
  not?: InputMaybe<Scalars['Json']>;
  path?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  string_contains?: InputMaybe<Scalars['String']>;
  string_ends_with?: InputMaybe<Scalars['String']>;
  string_starts_with?: InputMaybe<Scalars['String']>;
};

export type AudioUncheckedCreateInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioUncheckedCreateNestedManyWithoutAudioInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutAudiosInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type AudioUncheckedUpdateInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUncheckedUpdateManyWithoutAudioInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutAudiosInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioUncheckedUpdateManyInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioUpdateWithoutOrderedAudiosInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutAudiosInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutAudiosInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioUpdateWithoutProductsInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUpdateManyWithoutAudioInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutAudiosInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type AudioUpdateWithoutUserInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUpdateManyWithoutAudioInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutAudiosInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BlockCountOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  favourite?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type BlockCreateManyInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  favourite?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type BlockCreateWithoutItemsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  favourite?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  products?: InputMaybe<ProductCreateNestedManyWithoutBlocksInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutBlocksInput>;
};

export type BlockMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  favourite?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type BlockMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  favourite?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type BlockOrderByWithAggregationInput = {
  _count?: InputMaybe<BlockCountOrderByAggregateInput>;
  _max?: InputMaybe<BlockMaxOrderByAggregateInput>;
  _min?: InputMaybe<BlockMinOrderByAggregateInput>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  favourite?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type BlockRelationFilter = {
  is?: InputMaybe<BlockWhereInput>;
  isNot?: InputMaybe<BlockWhereInput>;
};

export type BlockScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<BlockScalarWhereWithAggregatesInput>>>;
  content?: InputMaybe<JsonNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  favourite?: InputMaybe<BoolNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<BlockScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<BlockScalarWhereWithAggregatesInput>>>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type BlockUncheckedCreateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  favourite?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutBlockInput>;
  name: Scalars['String'];
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutBlocksInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type BlockUncheckedUpdateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  favourite?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutBlockInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutBlocksInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BlockUncheckedUpdateManyInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  favourite?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type BlockUpdateWithoutItemsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  favourite?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBlocksInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutBlocksInput>;
};

export type BlockUpdateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  favourite?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  items?: InputMaybe<ItemUpdateManyWithoutBlockInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutBlocksInput>;
};

export type BlockUpdateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  favourite?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  items?: InputMaybe<ItemUpdateManyWithoutBlockInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutBlocksInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type CategoryCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  details?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  parentId?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CategoryCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  parentId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CategoryCreateWithoutChildrenInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutCategoriesInput>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageCreateNestedManyWithoutCategoriesInput>;
  parent?: InputMaybe<CategoryCreateNestedOneWithoutChildrenInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCategoriesInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCategoriesInput>;
};

export type CategoryMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  details?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  parentId?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CategoryMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  details?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  parentId?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CategoryOrderByWithAggregationInput = {
  _count?: InputMaybe<CategoryCountOrderByAggregateInput>;
  _max?: InputMaybe<CategoryMaxOrderByAggregateInput>;
  _min?: InputMaybe<CategoryMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  details?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  parentId?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CategoryRelationFilter = {
  is?: InputMaybe<CategoryWhereInput>;
  isNot?: InputMaybe<CategoryWhereInput>;
};

export type CategoryScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<CategoryScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  details?: InputMaybe<StringNullableWithAggregatesFilter>;
  icon?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<CategoryScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<CategoryScalarWhereWithAggregatesInput>>>;
  parentId?: InputMaybe<StringNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type CategoryUncheckedCreateInput = {
  children?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutParentInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  details?: InputMaybe<Scalars['String']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutCategoriesInput>;
  name?: InputMaybe<Scalars['String']>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutCategoriesInput>;
  parentId?: InputMaybe<Scalars['String']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutCategoriesInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CategoryUncheckedUpdateInput = {
  children?: InputMaybe<CategoryUncheckedUpdateManyWithoutParentInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutCategoriesInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutCategoriesInput>;
  parentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutCategoriesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  parentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CategoryUpdateWithoutChildrenInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutCategoriesInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutCategoriesInput>;
  parent?: InputMaybe<CategoryUpdateOneWithoutChildrenInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCategoriesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCategoriesInput>;
};

export type CategoryUpdateWithoutLinksInput = {
  children?: InputMaybe<CategoryUpdateManyWithoutParentInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutCategoriesInput>;
  parent?: InputMaybe<CategoryUpdateOneWithoutChildrenInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCategoriesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCategoriesInput>;
};

export type CategoryUpdateWithoutPagesInput = {
  children?: InputMaybe<CategoryUpdateManyWithoutParentInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutCategoriesInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  parent?: InputMaybe<CategoryUpdateOneWithoutChildrenInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCategoriesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCategoriesInput>;
};

export type CategoryUpdateWithoutParentInput = {
  children?: InputMaybe<CategoryUpdateManyWithoutParentInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutCategoriesInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutCategoriesInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCategoriesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCategoriesInput>;
};

export type CategoryUpdateWithoutProductsInput = {
  children?: InputMaybe<CategoryUpdateManyWithoutParentInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutCategoriesInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutCategoriesInput>;
  parent?: InputMaybe<CategoryUpdateOneWithoutChildrenInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCategoriesInput>;
};

export type CategoryUpdateWithoutWebsiteInput = {
  children?: InputMaybe<CategoryUpdateManyWithoutParentInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  details?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutCategoriesInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutCategoriesInput>;
  parent?: InputMaybe<CategoryUpdateOneWithoutChildrenInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCategoriesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type CollectionCountOrderByAggregateInput = {
  collectionStyle?: InputMaybe<SortOrder>;
  collectionType?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CollectionCreateManyInput = {
  collectionStyle?: InputMaybe<CollectionStyle>;
  collectionType?: InputMaybe<CollectionType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CollectionCreateWithoutItemsInput = {
  collectionStyle?: InputMaybe<CollectionStyle>;
  collectionType?: InputMaybe<CollectionType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutCollectionsInput>;
  name: Scalars['String'];
  pages?: InputMaybe<PageCreateNestedManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCollectionsInput>;
};

export type CollectionCreateWithoutRequestsInput = {
  collectionStyle?: InputMaybe<CollectionStyle>;
  collectionType?: InputMaybe<CollectionType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<ItemCreateNestedManyWithoutCollectionInput>;
  links?: InputMaybe<LinkCreateNestedManyWithoutCollectionsInput>;
  name: Scalars['String'];
  pages?: InputMaybe<PageCreateNestedManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCollectionsInput>;
};

export type CollectionMaxOrderByAggregateInput = {
  collectionStyle?: InputMaybe<SortOrder>;
  collectionType?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CollectionMinOrderByAggregateInput = {
  collectionStyle?: InputMaybe<SortOrder>;
  collectionType?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CollectionOrderByWithAggregationInput = {
  _count?: InputMaybe<CollectionCountOrderByAggregateInput>;
  _max?: InputMaybe<CollectionMaxOrderByAggregateInput>;
  _min?: InputMaybe<CollectionMinOrderByAggregateInput>;
  collectionStyle?: InputMaybe<SortOrder>;
  collectionType?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CollectionRelationFilter = {
  is?: InputMaybe<CollectionWhereInput>;
  isNot?: InputMaybe<CollectionWhereInput>;
};

export type CollectionScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<CollectionScalarWhereWithAggregatesInput>>>;
  collectionStyle?: InputMaybe<EnumCollectionStyleNullableWithAggregatesFilter>;
  collectionType?: InputMaybe<EnumCollectionTypeNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  displayTitle?: InputMaybe<BoolNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<CollectionScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<CollectionScalarWhereWithAggregatesInput>>>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type EnumCollectionStyleNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumCollectionStyleNullableFilter>;
  _min?: InputMaybe<NestedEnumCollectionStyleNullableFilter>;
  equals?: InputMaybe<CollectionStyle>;
  in?: InputMaybe<Array<InputMaybe<CollectionStyle>>>;
  not?: InputMaybe<NestedEnumCollectionStyleNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CollectionStyle>>>;
};

export type NestedEnumCollectionStyleNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumCollectionStyleNullableFilter>;
  _min?: InputMaybe<NestedEnumCollectionStyleNullableFilter>;
  equals?: InputMaybe<CollectionStyle>;
  in?: InputMaybe<Array<InputMaybe<CollectionStyle>>>;
  not?: InputMaybe<NestedEnumCollectionStyleNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CollectionStyle>>>;
};

export type EnumCollectionTypeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumCollectionTypeNullableFilter>;
  _min?: InputMaybe<NestedEnumCollectionTypeNullableFilter>;
  equals?: InputMaybe<CollectionType>;
  in?: InputMaybe<Array<InputMaybe<CollectionType>>>;
  not?: InputMaybe<NestedEnumCollectionTypeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CollectionType>>>;
};

export type NestedEnumCollectionTypeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumCollectionTypeNullableFilter>;
  _min?: InputMaybe<NestedEnumCollectionTypeNullableFilter>;
  equals?: InputMaybe<CollectionType>;
  in?: InputMaybe<Array<InputMaybe<CollectionType>>>;
  not?: InputMaybe<NestedEnumCollectionTypeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CollectionType>>>;
};

export type CollectionUncheckedCreateInput = {
  collectionStyle?: InputMaybe<CollectionStyle>;
  collectionType?: InputMaybe<CollectionType>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutCollectionInput>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutCollectionsInput>;
  name: Scalars['String'];
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CollectionUncheckedUpdateInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutCollectionInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutCollectionsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CollectionUncheckedUpdateManyInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CollectionUpdateWithoutItemsInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUpdateManyWithoutCollectionsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCollectionsInput>;
};

export type CollectionUpdateWithoutLinksInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<ItemUpdateManyWithoutCollectionInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCollectionsInput>;
};

export type CollectionUpdateWithoutPagesInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<ItemUpdateManyWithoutCollectionInput>;
  links?: InputMaybe<LinkUpdateManyWithoutCollectionsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCollectionsInput>;
};

export type CollectionUpdateWithoutProductsInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<ItemUpdateManyWithoutCollectionInput>;
  links?: InputMaybe<LinkUpdateManyWithoutCollectionsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCollectionsInput>;
};

export type CollectionUpdateWithoutRequestsInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<ItemUpdateManyWithoutCollectionInput>;
  links?: InputMaybe<LinkUpdateManyWithoutCollectionsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCollectionsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCollectionsInput>;
};

export type CollectionUpdateWithoutWebsiteInput = {
  collectionStyle?: InputMaybe<NullableEnumCollectionStyleFieldUpdateOperationsInput>;
  collectionType?: InputMaybe<NullableEnumCollectionTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<ItemUpdateManyWithoutCollectionInput>;
  links?: InputMaybe<LinkUpdateManyWithoutCollectionsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutCollectionsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutCollectionsInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutCollectionInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type CouponAvgOrderByAggregateInput = {
  amount_off?: InputMaybe<SortOrder>;
  percent_off?: InputMaybe<SortOrder>;
};

export type CouponCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  active_from?: InputMaybe<SortOrder>;
  amount_off?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  couponType?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expire_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percent_off?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CouponCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  active_from?: InputMaybe<Scalars['DateTime']>;
  amount_off?: InputMaybe<Scalars['Float']>;
  code?: InputMaybe<Scalars['String']>;
  couponType: CouponType;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expire_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  percent_off?: InputMaybe<Scalars['Float']>;
  type?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CouponCreateWithoutOrdersInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  active_from?: InputMaybe<Scalars['DateTime']>;
  amount_off?: InputMaybe<Scalars['Float']>;
  code?: InputMaybe<Scalars['String']>;
  couponType: CouponType;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expire_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  percent_off?: InputMaybe<Scalars['Float']>;
  type?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCouponsInput>;
};

export type CouponMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  active_from?: InputMaybe<SortOrder>;
  amount_off?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  couponType?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expire_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percent_off?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CouponMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  active_from?: InputMaybe<SortOrder>;
  amount_off?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  couponType?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expire_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percent_off?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CouponOrderByWithAggregationInput = {
  _avg?: InputMaybe<CouponAvgOrderByAggregateInput>;
  _count?: InputMaybe<CouponCountOrderByAggregateInput>;
  _max?: InputMaybe<CouponMaxOrderByAggregateInput>;
  _min?: InputMaybe<CouponMinOrderByAggregateInput>;
  _sum?: InputMaybe<CouponSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  active_from?: InputMaybe<SortOrder>;
  amount_off?: InputMaybe<SortOrder>;
  code?: InputMaybe<SortOrder>;
  couponType?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expire_at?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percent_off?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CouponSumOrderByAggregateInput = {
  amount_off?: InputMaybe<SortOrder>;
  percent_off?: InputMaybe<SortOrder>;
};

export type CouponRelationFilter = {
  is?: InputMaybe<CouponWhereInput>;
  isNot?: InputMaybe<CouponWhereInput>;
};

export type CouponScalarWhereWithAggregatesInput = {
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  active_from?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  amount_off?: InputMaybe<FloatNullableWithAggregatesFilter>;
  AND?: InputMaybe<Array<InputMaybe<CouponScalarWhereWithAggregatesInput>>>;
  code?: InputMaybe<StringNullableWithAggregatesFilter>;
  couponType?: InputMaybe<EnumCouponTypeWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  expire_at?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<CouponScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<CouponScalarWhereWithAggregatesInput>>>;
  percent_off?: InputMaybe<FloatNullableWithAggregatesFilter>;
  type?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type FloatNullableWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatNullableFilter>;
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedFloatNullableFilter>;
  _min?: InputMaybe<NestedFloatNullableFilter>;
  _sum?: InputMaybe<NestedFloatNullableFilter>;
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
};

export type NestedFloatNullableWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatNullableFilter>;
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedFloatNullableFilter>;
  _min?: InputMaybe<NestedFloatNullableFilter>;
  _sum?: InputMaybe<NestedFloatNullableFilter>;
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
};

export type EnumCouponTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumCouponTypeFilter>;
  _min?: InputMaybe<NestedEnumCouponTypeFilter>;
  equals?: InputMaybe<CouponType>;
  in?: InputMaybe<Array<InputMaybe<CouponType>>>;
  not?: InputMaybe<NestedEnumCouponTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CouponType>>>;
};

export type NestedEnumCouponTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumCouponTypeFilter>;
  _min?: InputMaybe<NestedEnumCouponTypeFilter>;
  equals?: InputMaybe<CouponType>;
  in?: InputMaybe<Array<InputMaybe<CouponType>>>;
  not?: InputMaybe<NestedEnumCouponTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CouponType>>>;
};

export type CouponUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  active_from?: InputMaybe<Scalars['DateTime']>;
  amount_off?: InputMaybe<Scalars['Float']>;
  code?: InputMaybe<Scalars['String']>;
  couponType: CouponType;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  expire_at?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutCouponInput>;
  percent_off?: InputMaybe<Scalars['Float']>;
  type?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CouponUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  active_from?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  amount_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  couponType?: InputMaybe<EnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expire_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutCouponInput>;
  percent_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CouponUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  active_from?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  amount_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  couponType?: InputMaybe<EnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expire_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  percent_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CouponUpdateWithoutOrdersInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  active_from?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  amount_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  couponType?: InputMaybe<EnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expire_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  percent_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCouponsInput>;
};

export type CouponUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  active_from?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  amount_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  couponType?: InputMaybe<EnumCouponTypeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  expire_at?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutCouponInput>;
  percent_off?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type CustomerAvgOrderByAggregateInput = {
  age?: InputMaybe<SortOrder>;
};

export type CustomerCountOrderByAggregateInput = {
  age?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  gender?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  isActive?: InputMaybe<SortOrder>;
  latestSales?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CustomerCreateManyInput = {
  age?: InputMaybe<Scalars['Int']>;
  city?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CustomerCreateWithoutOrdersInput = {
  age?: InputMaybe<Scalars['Int']>;
  city?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutCustomersInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCustomersInput>;
};

export type CustomerCreateWithoutRequestsInput = {
  age?: InputMaybe<Scalars['Int']>;
  city?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutCustomersInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutCustomersInput>;
};

export type CustomerMaxOrderByAggregateInput = {
  age?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  gender?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isActive?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CustomerMinOrderByAggregateInput = {
  age?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  gender?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isActive?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CustomerOrderByWithAggregationInput = {
  _avg?: InputMaybe<CustomerAvgOrderByAggregateInput>;
  _count?: InputMaybe<CustomerCountOrderByAggregateInput>;
  _max?: InputMaybe<CustomerMaxOrderByAggregateInput>;
  _min?: InputMaybe<CustomerMinOrderByAggregateInput>;
  _sum?: InputMaybe<CustomerSumOrderByAggregateInput>;
  age?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  gender?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  isActive?: InputMaybe<SortOrder>;
  latestSales?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  note?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type CustomerSumOrderByAggregateInput = {
  age?: InputMaybe<SortOrder>;
};

export type CustomerRelationFilter = {
  is?: InputMaybe<CustomerWhereInput>;
  isNot?: InputMaybe<CustomerWhereInput>;
};

export type CustomerScalarWhereWithAggregatesInput = {
  age?: InputMaybe<IntNullableWithAggregatesFilter>;
  AND?: InputMaybe<Array<InputMaybe<CustomerScalarWhereWithAggregatesInput>>>;
  city?: InputMaybe<StringNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  email?: InputMaybe<StringNullableWithAggregatesFilter>;
  gender?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  isActive?: InputMaybe<BoolNullableWithAggregatesFilter>;
  latestSales?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<CustomerScalarWhereWithAggregatesInput>>>;
  note?: InputMaybe<StringNullableWithAggregatesFilter>;
  OR?: InputMaybe<Array<InputMaybe<CustomerScalarWhereWithAggregatesInput>>>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type IntNullableWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatNullableFilter>;
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedIntNullableFilter>;
  _min?: InputMaybe<NestedIntNullableFilter>;
  _sum?: InputMaybe<NestedIntNullableFilter>;
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
};

export type NestedIntNullableWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatNullableFilter>;
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedIntNullableFilter>;
  _min?: InputMaybe<NestedIntNullableFilter>;
  _sum?: InputMaybe<NestedIntNullableFilter>;
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
};

export type CustomerUncheckedCreateInput = {
  age?: InputMaybe<Scalars['Int']>;
  city?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email?: InputMaybe<Scalars['String']>;
  gender?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<Scalars['Boolean']>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  note?: InputMaybe<Scalars['String']>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type CustomerUncheckedUpdateInput = {
  age?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUncheckedUpdateManyInput = {
  age?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type CustomerUpdateWithoutOrdersInput = {
  age?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutCustomersInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCustomersInput>;
};

export type CustomerUpdateWithoutRequestsInput = {
  age?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutCustomersInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCustomersInput>;
};

export type CustomerUpdateWithoutUserInput = {
  age?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutCustomersInput>;
};

export type CustomerUpdateWithoutWebsiteInput = {
  age?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gender?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isActive?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  latestSales?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  note?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutCustomerInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutCustomerInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutCustomersInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DocumentCountOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  documentObj?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type DocumentCreateManyInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type DocumentCreateWithoutOrderedDocumentsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutDocumentsInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutDocumentsInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type DocumentMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type DocumentMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type DocumentOrderByWithAggregationInput = {
  _count?: InputMaybe<DocumentCountOrderByAggregateInput>;
  _max?: InputMaybe<DocumentMaxOrderByAggregateInput>;
  _min?: InputMaybe<DocumentMinOrderByAggregateInput>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  documentObj?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type DocumentRelationFilter = {
  is?: InputMaybe<DocumentWhereInput>;
  isNot?: InputMaybe<DocumentWhereInput>;
};

export type DocumentScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<DocumentScalarWhereWithAggregatesInput>>>;
  content?: InputMaybe<JsonNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  documentObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<DocumentScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<DocumentScalarWhereWithAggregatesInput>>>;
  paid?: InputMaybe<BoolNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  transactionHash?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type DocumentUncheckedCreateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedCreateNestedManyWithoutDocumentInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutDocumentsInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type DocumentUncheckedUpdateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedUpdateManyWithoutDocumentInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutDocumentsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DocumentUncheckedUpdateManyInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DocumentUpdateWithoutOrderedDocumentsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutDocumentsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutDocumentsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DocumentUpdateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUpdateManyWithoutDocumentInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutDocumentsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type DocumentUpdateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUpdateManyWithoutDocumentInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutDocumentsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EmbedCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  embedCode?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type EmbedCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  embedCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type EmbedCreateWithoutItemsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  embedCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutEmbedsInput>;
};

export type EmbedMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  embedCode?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type EmbedMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  embedCode?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type EmbedOrderByWithAggregationInput = {
  _count?: InputMaybe<EmbedCountOrderByAggregateInput>;
  _max?: InputMaybe<EmbedMaxOrderByAggregateInput>;
  _min?: InputMaybe<EmbedMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  embedCode?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type EmbedRelationFilter = {
  is?: InputMaybe<EmbedWhereInput>;
  isNot?: InputMaybe<EmbedWhereInput>;
};

export type EmbedScalarWhereWithAggregatesInput = {
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  AND?: InputMaybe<Array<InputMaybe<EmbedScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  embedCode?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<EmbedScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<EmbedScalarWhereWithAggregatesInput>>>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type EmbedUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  embedCode?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutEmbedInput>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
};

export type EmbedUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  embedCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutEmbedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EmbedUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  embedCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type EmbedUpdateWithoutItemsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  embedCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutEmbedsInput>;
};

export type EmbedUpdateWithoutUserInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  embedCode?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  items?: InputMaybe<ItemUpdateManyWithoutEmbedInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type EnumChainNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumChainNullableFilter>;
  _min?: InputMaybe<NestedEnumChainNullableFilter>;
  equals?: InputMaybe<Chain>;
  in?: InputMaybe<Array<InputMaybe<Chain>>>;
  not?: InputMaybe<NestedEnumChainNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Chain>>>;
};

export type NestedEnumChainNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumChainNullableFilter>;
  _min?: InputMaybe<NestedEnumChainNullableFilter>;
  equals?: InputMaybe<Chain>;
  in?: InputMaybe<Array<InputMaybe<Chain>>>;
  not?: InputMaybe<NestedEnumChainNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Chain>>>;
};

export type EnumColorWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumColorFilter>;
  _min?: InputMaybe<NestedEnumColorFilter>;
  equals?: InputMaybe<Color>;
  in?: InputMaybe<Array<InputMaybe<Color>>>;
  not?: InputMaybe<NestedEnumColorWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Color>>>;
};

export type NestedEnumColorWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumColorFilter>;
  _min?: InputMaybe<NestedEnumColorFilter>;
  equals?: InputMaybe<Color>;
  in?: InputMaybe<Array<InputMaybe<Color>>>;
  not?: InputMaybe<NestedEnumColorWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Color>>>;
};

export type EnumCountryCodeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumCountryCodeNullableFilter>;
  _min?: InputMaybe<NestedEnumCountryCodeNullableFilter>;
  equals?: InputMaybe<CountryCode>;
  in?: InputMaybe<Array<InputMaybe<CountryCode>>>;
  not?: InputMaybe<NestedEnumCountryCodeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CountryCode>>>;
};

export type NestedEnumCountryCodeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumCountryCodeNullableFilter>;
  _min?: InputMaybe<NestedEnumCountryCodeNullableFilter>;
  equals?: InputMaybe<CountryCode>;
  in?: InputMaybe<Array<InputMaybe<CountryCode>>>;
  not?: InputMaybe<NestedEnumCountryCodeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CountryCode>>>;
};

export type EnumCryptoCurrencyNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumCryptoCurrencyNullableFilter>;
  _min?: InputMaybe<NestedEnumCryptoCurrencyNullableFilter>;
  equals?: InputMaybe<CryptoCurrency>;
  in?: InputMaybe<Array<InputMaybe<CryptoCurrency>>>;
  not?: InputMaybe<NestedEnumCryptoCurrencyNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CryptoCurrency>>>;
};

export type NestedEnumCryptoCurrencyNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumCryptoCurrencyNullableFilter>;
  _min?: InputMaybe<NestedEnumCryptoCurrencyNullableFilter>;
  equals?: InputMaybe<CryptoCurrency>;
  in?: InputMaybe<Array<InputMaybe<CryptoCurrency>>>;
  not?: InputMaybe<NestedEnumCryptoCurrencyNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CryptoCurrency>>>;
};

export type EnumCurrencyCodeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumCurrencyCodeNullableFilter>;
  _min?: InputMaybe<NestedEnumCurrencyCodeNullableFilter>;
  equals?: InputMaybe<CurrencyCode>;
  in?: InputMaybe<Array<InputMaybe<CurrencyCode>>>;
  not?: InputMaybe<NestedEnumCurrencyCodeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CurrencyCode>>>;
};

export type NestedEnumCurrencyCodeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumCurrencyCodeNullableFilter>;
  _min?: InputMaybe<NestedEnumCurrencyCodeNullableFilter>;
  equals?: InputMaybe<CurrencyCode>;
  in?: InputMaybe<Array<InputMaybe<CurrencyCode>>>;
  not?: InputMaybe<NestedEnumCurrencyCodeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<CurrencyCode>>>;
};

export type EnumEditionTypeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumEditionTypeNullableFilter>;
  _min?: InputMaybe<NestedEnumEditionTypeNullableFilter>;
  equals?: InputMaybe<EditionType>;
  in?: InputMaybe<Array<InputMaybe<EditionType>>>;
  not?: InputMaybe<NestedEnumEditionTypeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<EditionType>>>;
};

export type NestedEnumEditionTypeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumEditionTypeNullableFilter>;
  _min?: InputMaybe<NestedEnumEditionTypeNullableFilter>;
  equals?: InputMaybe<EditionType>;
  in?: InputMaybe<Array<InputMaybe<EditionType>>>;
  not?: InputMaybe<NestedEnumEditionTypeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<EditionType>>>;
};

export type EnumItemTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumItemTypeFilter>;
  _min?: InputMaybe<NestedEnumItemTypeFilter>;
  equals?: InputMaybe<ItemType>;
  in?: InputMaybe<Array<InputMaybe<ItemType>>>;
  not?: InputMaybe<NestedEnumItemTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<ItemType>>>;
};

export type NestedEnumItemTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumItemTypeFilter>;
  _min?: InputMaybe<NestedEnumItemTypeFilter>;
  equals?: InputMaybe<ItemType>;
  in?: InputMaybe<Array<InputMaybe<ItemType>>>;
  not?: InputMaybe<NestedEnumItemTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<ItemType>>>;
};

export type EnumLanguageCodeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumLanguageCodeFilter>;
  _min?: InputMaybe<NestedEnumLanguageCodeFilter>;
  equals?: InputMaybe<LanguageCode>;
  in?: InputMaybe<Array<InputMaybe<LanguageCode>>>;
  not?: InputMaybe<NestedEnumLanguageCodeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<LanguageCode>>>;
};

export type NestedEnumLanguageCodeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumLanguageCodeFilter>;
  _min?: InputMaybe<NestedEnumLanguageCodeFilter>;
  equals?: InputMaybe<LanguageCode>;
  in?: InputMaybe<Array<InputMaybe<LanguageCode>>>;
  not?: InputMaybe<NestedEnumLanguageCodeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<LanguageCode>>>;
};

export type EnumNavColorNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumNavColorNullableFilter>;
  _min?: InputMaybe<NestedEnumNavColorNullableFilter>;
  equals?: InputMaybe<NavColor>;
  in?: InputMaybe<Array<InputMaybe<NavColor>>>;
  not?: InputMaybe<NestedEnumNavColorNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<NavColor>>>;
};

export type NestedEnumNavColorNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumNavColorNullableFilter>;
  _min?: InputMaybe<NestedEnumNavColorNullableFilter>;
  equals?: InputMaybe<NavColor>;
  in?: InputMaybe<Array<InputMaybe<NavColor>>>;
  not?: InputMaybe<NestedEnumNavColorNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<NavColor>>>;
};

export type EnumOrderStatusWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumOrderStatusFilter>;
  _min?: InputMaybe<NestedEnumOrderStatusFilter>;
  equals?: InputMaybe<OrderStatus>;
  in?: InputMaybe<Array<InputMaybe<OrderStatus>>>;
  not?: InputMaybe<NestedEnumOrderStatusWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<OrderStatus>>>;
};

export type NestedEnumOrderStatusWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumOrderStatusFilter>;
  _min?: InputMaybe<NestedEnumOrderStatusFilter>;
  equals?: InputMaybe<OrderStatus>;
  in?: InputMaybe<Array<InputMaybe<OrderStatus>>>;
  not?: InputMaybe<NestedEnumOrderStatusWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<OrderStatus>>>;
};

export type EnumPaymentMethodWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumPaymentMethodFilter>;
  _min?: InputMaybe<NestedEnumPaymentMethodFilter>;
  equals?: InputMaybe<PaymentMethod>;
  in?: InputMaybe<Array<InputMaybe<PaymentMethod>>>;
  not?: InputMaybe<NestedEnumPaymentMethodWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<PaymentMethod>>>;
};

export type NestedEnumPaymentMethodWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumPaymentMethodFilter>;
  _min?: InputMaybe<NestedEnumPaymentMethodFilter>;
  equals?: InputMaybe<PaymentMethod>;
  in?: InputMaybe<Array<InputMaybe<PaymentMethod>>>;
  not?: InputMaybe<NestedEnumPaymentMethodWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<PaymentMethod>>>;
};

export type EnumProductTypeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumProductTypeNullableFilter>;
  _min?: InputMaybe<NestedEnumProductTypeNullableFilter>;
  equals?: InputMaybe<ProductType>;
  in?: InputMaybe<Array<InputMaybe<ProductType>>>;
  not?: InputMaybe<NestedEnumProductTypeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<ProductType>>>;
};

export type NestedEnumProductTypeNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumProductTypeNullableFilter>;
  _min?: InputMaybe<NestedEnumProductTypeNullableFilter>;
  equals?: InputMaybe<ProductType>;
  in?: InputMaybe<Array<InputMaybe<ProductType>>>;
  not?: InputMaybe<NestedEnumProductTypeNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<ProductType>>>;
};

export type EnumRequestAcceptNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumRequestAcceptNullableFilter>;
  _min?: InputMaybe<NestedEnumRequestAcceptNullableFilter>;
  equals?: InputMaybe<RequestAccept>;
  in?: InputMaybe<Array<InputMaybe<RequestAccept>>>;
  not?: InputMaybe<NestedEnumRequestAcceptNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<RequestAccept>>>;
};

export type NestedEnumRequestAcceptNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumRequestAcceptNullableFilter>;
  _min?: InputMaybe<NestedEnumRequestAcceptNullableFilter>;
  equals?: InputMaybe<RequestAccept>;
  in?: InputMaybe<Array<InputMaybe<RequestAccept>>>;
  not?: InputMaybe<NestedEnumRequestAcceptNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<RequestAccept>>>;
};

export type EnumRequestStatusNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumRequestStatusNullableFilter>;
  _min?: InputMaybe<NestedEnumRequestStatusNullableFilter>;
  equals?: InputMaybe<RequestStatus>;
  in?: InputMaybe<Array<InputMaybe<RequestStatus>>>;
  not?: InputMaybe<NestedEnumRequestStatusNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<RequestStatus>>>;
};

export type NestedEnumRequestStatusNullableWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntNullableFilter>;
  _max?: InputMaybe<NestedEnumRequestStatusNullableFilter>;
  _min?: InputMaybe<NestedEnumRequestStatusNullableFilter>;
  equals?: InputMaybe<RequestStatus>;
  in?: InputMaybe<Array<InputMaybe<RequestStatus>>>;
  not?: InputMaybe<NestedEnumRequestStatusNullableWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<RequestStatus>>>;
};

export type EnumSocialTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumSocialTypeFilter>;
  _min?: InputMaybe<NestedEnumSocialTypeFilter>;
  equals?: InputMaybe<SocialType>;
  in?: InputMaybe<Array<InputMaybe<SocialType>>>;
  not?: InputMaybe<NestedEnumSocialTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<SocialType>>>;
};

export type NestedEnumSocialTypeWithAggregatesFilter = {
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedEnumSocialTypeFilter>;
  _min?: InputMaybe<NestedEnumSocialTypeFilter>;
  equals?: InputMaybe<SocialType>;
  in?: InputMaybe<Array<InputMaybe<SocialType>>>;
  not?: InputMaybe<NestedEnumSocialTypeWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<SocialType>>>;
};

export type FloatWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatFilter>;
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedFloatFilter>;
  _min?: InputMaybe<NestedFloatFilter>;
  _sum?: InputMaybe<NestedFloatFilter>;
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
};

export type NestedFloatWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatFilter>;
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedFloatFilter>;
  _min?: InputMaybe<NestedFloatFilter>;
  _sum?: InputMaybe<NestedFloatFilter>;
  equals?: InputMaybe<Scalars['Float']>;
  gt?: InputMaybe<Scalars['Float']>;
  gte?: InputMaybe<Scalars['Float']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
  lt?: InputMaybe<Scalars['Float']>;
  lte?: InputMaybe<Scalars['Float']>;
  not?: InputMaybe<NestedFloatWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Float']>>>;
};

export type GroupCountOrderByAggregateInput = {
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type GroupCreateManyInput = {
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type GroupMaxOrderByAggregateInput = {
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type GroupMinOrderByAggregateInput = {
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type GroupOrderByWithAggregationInput = {
  _count?: InputMaybe<GroupCountOrderByAggregateInput>;
  _max?: InputMaybe<GroupMaxOrderByAggregateInput>;
  _min?: InputMaybe<GroupMinOrderByAggregateInput>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type GroupScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<GroupScalarWhereWithAggregatesInput>>>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<GroupScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<GroupScalarWhereWithAggregatesInput>>>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type GroupUncheckedCreateInput = {
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type GroupUncheckedUpdateInput = {
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type GroupUncheckedUpdateManyInput = {
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type GroupUpdateWithoutWebsiteInput = {
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type IntWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatFilter>;
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedIntFilter>;
  _min?: InputMaybe<NestedIntFilter>;
  _sum?: InputMaybe<NestedIntFilter>;
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
};

export type NestedIntWithAggregatesFilter = {
  _avg?: InputMaybe<NestedFloatFilter>;
  _count?: InputMaybe<NestedIntFilter>;
  _max?: InputMaybe<NestedIntFilter>;
  _min?: InputMaybe<NestedIntFilter>;
  _sum?: InputMaybe<NestedIntFilter>;
  equals?: InputMaybe<Scalars['Int']>;
  gt?: InputMaybe<Scalars['Int']>;
  gte?: InputMaybe<Scalars['Int']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
  lt?: InputMaybe<Scalars['Int']>;
  lte?: InputMaybe<Scalars['Int']>;
  not?: InputMaybe<NestedIntWithAggregatesFilter>;
  notIn?: InputMaybe<Array<InputMaybe<Scalars['Int']>>>;
};

export type ItemCountOrderByAggregateInput = {
  blockId?: InputMaybe<SortOrder>;
  collectionId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  embedId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  itemType?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type ItemCreateManyInput = {
  blockId?: InputMaybe<Scalars['String']>;
  collectionId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  embedId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  itemType: ItemType;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ItemMaxOrderByAggregateInput = {
  blockId?: InputMaybe<SortOrder>;
  collectionId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  embedId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  itemType?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type ItemMinOrderByAggregateInput = {
  blockId?: InputMaybe<SortOrder>;
  collectionId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  embedId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  itemType?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type ItemOrderByWithAggregationInput = {
  _count?: InputMaybe<ItemCountOrderByAggregateInput>;
  _max?: InputMaybe<ItemMaxOrderByAggregateInput>;
  _min?: InputMaybe<ItemMinOrderByAggregateInput>;
  blockId?: InputMaybe<SortOrder>;
  collectionId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  embedId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  itemType?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type ItemScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<ItemScalarWhereWithAggregatesInput>>>;
  blockId?: InputMaybe<StringNullableWithAggregatesFilter>;
  collectionId?: InputMaybe<StringNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  embedId?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  itemType?: InputMaybe<EnumItemTypeWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<ItemScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ItemScalarWhereWithAggregatesInput>>>;
  pageId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
};

export type ItemUncheckedCreateInput = {
  blockId?: InputMaybe<Scalars['String']>;
  collectionId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  embedId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  itemType: ItemType;
  name?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ItemUncheckedUpdateInput = {
  blockId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  collectionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  embedId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  itemType?: InputMaybe<EnumItemTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ItemUncheckedUpdateManyInput = {
  blockId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  collectionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  embedId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  itemType?: InputMaybe<EnumItemTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ItemUpdateWithoutBlockInput = {
  collection?: InputMaybe<CollectionUpdateOneWithoutItemsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  embed?: InputMaybe<EmbedUpdateOneWithoutItemsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  itemType?: InputMaybe<EnumItemTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutItemsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ItemUpdateWithoutCollectionInput = {
  block?: InputMaybe<BlockUpdateOneWithoutItemsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  embed?: InputMaybe<EmbedUpdateOneWithoutItemsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  itemType?: InputMaybe<EnumItemTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutItemsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ItemUpdateWithoutEmbedInput = {
  block?: InputMaybe<BlockUpdateOneWithoutItemsInput>;
  collection?: InputMaybe<CollectionUpdateOneWithoutItemsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  itemType?: InputMaybe<EnumItemTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutItemsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ItemUpdateWithoutPageInput = {
  block?: InputMaybe<BlockUpdateOneWithoutItemsInput>;
  collection?: InputMaybe<CollectionUpdateOneWithoutItemsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  embed?: InputMaybe<EmbedUpdateOneWithoutItemsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  itemType?: InputMaybe<EnumItemTypeFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export enum JsonNullValueFilter {
  AnyNull = 'AnyNull',
  DbNull = 'DbNull',
  JsonNull = 'JsonNull'
}

export enum JsonNullValueInput {
  JsonNull = 'JsonNull'
}

export type LinkCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  hiddenMessage?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type LinkCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  userId?: InputMaybe<Scalars['String']>;
};

export type LinkCreateWithoutOrderedLinksInput = {
  categories?: InputMaybe<CategoryCreateNestedManyWithoutLinksInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutLinksInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  products?: InputMaybe<ProductCreateNestedManyWithoutLinksInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  user?: InputMaybe<UserCreateNestedOneWithoutLinksInput>;
};

export type LinkMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  hiddenMessage?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type LinkMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  hiddenMessage?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type LinkOrderByWithAggregationInput = {
  _count?: InputMaybe<LinkCountOrderByAggregateInput>;
  _max?: InputMaybe<LinkMaxOrderByAggregateInput>;
  _min?: InputMaybe<LinkMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  hiddenMessage?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type LinkRelationFilter = {
  is?: InputMaybe<LinkWhereInput>;
  isNot?: InputMaybe<LinkWhereInput>;
};

export type LinkScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<LinkScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  hiddenMessage?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<LinkScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<LinkScalarWhereWithAggregatesInput>>>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  url?: InputMaybe<StringWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type LinkUncheckedCreateInput = {
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutLinksInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutLinksInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedLinks?: InputMaybe<OrderedLinkUncheckedCreateNestedManyWithoutLinkInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutLinksInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  userId?: InputMaybe<Scalars['String']>;
};

export type LinkUncheckedUpdateInput = {
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutLinksInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutLinksInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedUpdateManyWithoutLinkInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutLinksInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LinkUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type LinkUpdateWithoutCategoriesInput = {
  collections?: InputMaybe<CollectionUpdateManyWithoutLinksInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedLinks?: InputMaybe<OrderedLinkUpdateManyWithoutLinkInput>;
  products?: InputMaybe<ProductUpdateManyWithoutLinksInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutLinksInput>;
};

export type LinkUpdateWithoutCollectionsInput = {
  categories?: InputMaybe<CategoryUpdateManyWithoutLinksInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedLinks?: InputMaybe<OrderedLinkUpdateManyWithoutLinkInput>;
  products?: InputMaybe<ProductUpdateManyWithoutLinksInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutLinksInput>;
};

export type LinkUpdateWithoutOrderedLinksInput = {
  categories?: InputMaybe<CategoryUpdateManyWithoutLinksInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutLinksInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutLinksInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutLinksInput>;
};

export type LinkUpdateWithoutProductsInput = {
  categories?: InputMaybe<CategoryUpdateManyWithoutLinksInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutLinksInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedLinks?: InputMaybe<OrderedLinkUpdateManyWithoutLinkInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutLinksInput>;
};

export type LinkUpdateWithoutUserInput = {
  categories?: InputMaybe<CategoryUpdateManyWithoutLinksInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutLinksInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedLinks?: InputMaybe<OrderedLinkUpdateManyWithoutLinkInput>;
  products?: InputMaybe<ProductUpdateManyWithoutLinksInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type LoginTokenCountOrderByAggregateInput = {
  approved?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  domain?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  expires?: InputMaybe<SortOrder>;
  geo?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  secret?: InputMaybe<SortOrder>;
  userAgent?: InputMaybe<SortOrder>;
  userAgentRaw?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type LoginTokenCreateManyInput = {
  approved?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  domain: Scalars['String'];
  email: Scalars['String'];
  expires: Scalars['DateTime'];
  geo: Scalars['String'];
  id?: InputMaybe<Scalars['String']>;
  ip: Scalars['String'];
  secret: Scalars['String'];
  userAgent: Scalars['String'];
  userAgentRaw: Scalars['String'];
  userId: Scalars['String'];
};

export type LoginTokenMaxOrderByAggregateInput = {
  approved?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  domain?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  expires?: InputMaybe<SortOrder>;
  geo?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  secret?: InputMaybe<SortOrder>;
  userAgent?: InputMaybe<SortOrder>;
  userAgentRaw?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type LoginTokenMinOrderByAggregateInput = {
  approved?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  domain?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  expires?: InputMaybe<SortOrder>;
  geo?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  secret?: InputMaybe<SortOrder>;
  userAgent?: InputMaybe<SortOrder>;
  userAgentRaw?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type LoginTokenOrderByWithAggregationInput = {
  _count?: InputMaybe<LoginTokenCountOrderByAggregateInput>;
  _max?: InputMaybe<LoginTokenMaxOrderByAggregateInput>;
  _min?: InputMaybe<LoginTokenMinOrderByAggregateInput>;
  approved?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  domain?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  expires?: InputMaybe<SortOrder>;
  geo?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  secret?: InputMaybe<SortOrder>;
  userAgent?: InputMaybe<SortOrder>;
  userAgentRaw?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
};

export type LoginTokenScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<LoginTokenScalarWhereWithAggregatesInput>>>;
  approved?: InputMaybe<BoolWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  domain?: InputMaybe<StringWithAggregatesFilter>;
  email?: InputMaybe<StringWithAggregatesFilter>;
  expires?: InputMaybe<DateTimeWithAggregatesFilter>;
  geo?: InputMaybe<StringWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  ip?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<LoginTokenScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<LoginTokenScalarWhereWithAggregatesInput>>>;
  secret?: InputMaybe<StringWithAggregatesFilter>;
  userAgent?: InputMaybe<StringWithAggregatesFilter>;
  userAgentRaw?: InputMaybe<StringWithAggregatesFilter>;
  userId?: InputMaybe<StringWithAggregatesFilter>;
};

export type LoginTokenUncheckedCreateInput = {
  approved?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  domain: Scalars['String'];
  email: Scalars['String'];
  expires: Scalars['DateTime'];
  geo: Scalars['String'];
  id?: InputMaybe<Scalars['String']>;
  ip: Scalars['String'];
  secret: Scalars['String'];
  userAgent: Scalars['String'];
  userAgentRaw: Scalars['String'];
  userId: Scalars['String'];
};

export type LoginTokenUncheckedUpdateInput = {
  approved?: InputMaybe<BoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  domain?: InputMaybe<StringFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  expires?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<StringFieldUpdateOperationsInput>;
  secret?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<StringFieldUpdateOperationsInput>;
  userId?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type LoginTokenUncheckedUpdateManyInput = {
  approved?: InputMaybe<BoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  domain?: InputMaybe<StringFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  expires?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<StringFieldUpdateOperationsInput>;
  secret?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<StringFieldUpdateOperationsInput>;
  userId?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type LoginTokenUpdateWithoutUserInput = {
  approved?: InputMaybe<BoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  domain?: InputMaybe<StringFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  expires?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<StringFieldUpdateOperationsInput>;
  secret?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type NotificationCountOrderByAggregateInput = {
  action?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isUnRead?: InputMaybe<SortOrder>;
  message?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrder>;
  modelId?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type NotificationCreateManyInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type NotificationMaxOrderByAggregateInput = {
  action?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isUnRead?: InputMaybe<SortOrder>;
  message?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrder>;
  modelId?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type NotificationMinOrderByAggregateInput = {
  action?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isUnRead?: InputMaybe<SortOrder>;
  message?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrder>;
  modelId?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type NotificationOrderByWithAggregationInput = {
  _count?: InputMaybe<NotificationCountOrderByAggregateInput>;
  _max?: InputMaybe<NotificationMaxOrderByAggregateInput>;
  _min?: InputMaybe<NotificationMinOrderByAggregateInput>;
  action?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isUnRead?: InputMaybe<SortOrder>;
  message?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrder>;
  modelId?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type NotificationScalarWhereWithAggregatesInput = {
  action?: InputMaybe<StringNullableWithAggregatesFilter>;
  AND?: InputMaybe<Array<InputMaybe<NotificationScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  isUnRead?: InputMaybe<BoolNullableWithAggregatesFilter>;
  message?: InputMaybe<StringNullableWithAggregatesFilter>;
  model?: InputMaybe<StringNullableWithAggregatesFilter>;
  modelId?: InputMaybe<StringNullableWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<NotificationScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<NotificationScalarWhereWithAggregatesInput>>>;
  title?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  url?: InputMaybe<StringNullableWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type NotificationUncheckedCreateInput = {
  action?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  isUnRead?: InputMaybe<Scalars['Boolean']>;
  message?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  modelId?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  userId?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type NotificationUncheckedUpdateInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationUncheckedUpdateManyInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type NotificationUpdateWithoutUserInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutNotificationsInput>;
};

export type NotificationUpdateWithoutWebsiteInput = {
  action?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isUnRead?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  message?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  modelId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutNotificationsInput>;
};

export enum NullableJsonNullValueInput {
  DbNull = 'DbNull',
  JsonNull = 'JsonNull'
}

export type OrderAvgOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  delivery_fee?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  paid_total?: InputMaybe<SortOrder>;
  sales_tax?: InputMaybe<SortOrder>;
  storageFee?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
};

export type OrderCountOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  billing_address?: InputMaybe<SortOrder>;
  completedAt?: InputMaybe<SortOrder>;
  couponId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  cryptoCurrencyCode?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  customerContact?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  delivery_fee?: InputMaybe<SortOrder>;
  delivery_name?: InputMaybe<SortOrder>;
  delivery_time?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  orderNumber?: InputMaybe<SortOrder>;
  orderStatus?: InputMaybe<SortOrder>;
  paid_total?: InputMaybe<SortOrder>;
  paymentGateway?: InputMaybe<SortOrder>;
  paymentId?: InputMaybe<SortOrder>;
  received?: InputMaybe<SortOrder>;
  refundObj?: InputMaybe<SortOrder>;
  requireShipping?: InputMaybe<SortOrder>;
  sales_tax?: InputMaybe<SortOrder>;
  shipping_address?: InputMaybe<SortOrder>;
  shippingImages?: InputMaybe<SortOrder>;
  storageFee?: InputMaybe<SortOrder>;
  stripePrivateSessionId?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  tracking_number?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type OrderCreateManyInput = {
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<Scalars['DateTime']>;
  couponId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerContact?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  delivery_fee?: InputMaybe<Scalars['Float']>;
  delivery_name?: InputMaybe<Scalars['String']>;
  delivery_time?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: InputMaybe<Scalars['Float']>;
  paymentGateway?: InputMaybe<Scalars['String']>;
  paymentId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  requireShipping?: InputMaybe<Scalars['Boolean']>;
  sales_tax?: InputMaybe<Scalars['Float']>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<Scalars['Float']>;
  stripePrivateSessionId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  tracking_number?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderCreaterefundObjInput = {
  set: Scalars['Json'];
};

export type OrderCreateshippingImagesInput = {
  set: Scalars['Json'];
};

export type OrderCreateWithoutOrderedProductsInput = {
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<Scalars['DateTime']>;
  coupon?: InputMaybe<CouponCreateNestedOneWithoutOrdersInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutOrdersInput>;
  customerContact?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  delivery_fee?: InputMaybe<Scalars['Float']>;
  delivery_name?: InputMaybe<Scalars['String']>;
  delivery_time?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: InputMaybe<Scalars['Float']>;
  paymentGateway?: InputMaybe<Scalars['String']>;
  paymentId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundCreateNestedManyWithoutOrderInput>;
  requireShipping?: InputMaybe<Scalars['Boolean']>;
  sales_tax?: InputMaybe<Scalars['Float']>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<Scalars['Float']>;
  stripePrivateSessionId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  tracking_number?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrdersInput>;
};

export type OrderCreateWithoutRefundsInput = {
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<Scalars['DateTime']>;
  coupon?: InputMaybe<CouponCreateNestedOneWithoutOrdersInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customer?: InputMaybe<CustomerCreateNestedOneWithoutOrdersInput>;
  customerContact?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  delivery_fee?: InputMaybe<Scalars['Float']>;
  delivery_name?: InputMaybe<Scalars['String']>;
  delivery_time?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutOrderInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: InputMaybe<Scalars['Float']>;
  paymentGateway?: InputMaybe<Scalars['String']>;
  paymentId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  requireShipping?: InputMaybe<Scalars['Boolean']>;
  sales_tax?: InputMaybe<Scalars['Float']>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<Scalars['Float']>;
  stripePrivateSessionId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  tracking_number?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrdersInput>;
};

export type OrderedAudioCountOrderByAggregateInput = {
  audioId?: InputMaybe<SortOrder>;
  audioObj?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedAudioCreateManyInput = {
  audioId?: InputMaybe<Scalars['String']>;
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedAudioMaxOrderByAggregateInput = {
  audioId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedAudioMinOrderByAggregateInput = {
  audioId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedAudioOrderByWithAggregationInput = {
  _count?: InputMaybe<OrderedAudioCountOrderByAggregateInput>;
  _max?: InputMaybe<OrderedAudioMaxOrderByAggregateInput>;
  _min?: InputMaybe<OrderedAudioMinOrderByAggregateInput>;
  audioId?: InputMaybe<SortOrder>;
  audioObj?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedAudioScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedAudioScalarWhereWithAggregatesInput>>>;
  audioId?: InputMaybe<StringNullableWithAggregatesFilter>;
  audioObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedAudioScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedAudioScalarWhereWithAggregatesInput>>>;
  orderedProductId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  url?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type OrderedAudioUncheckedCreateInput = {
  audioId?: InputMaybe<Scalars['String']>;
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedAudioUncheckedUpdateInput = {
  audioId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedAudioUncheckedUpdateManyInput = {
  audioId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedAudioUpdateWithoutAudioInput = {
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProduct?: InputMaybe<OrderedProductUpdateOneWithoutOrderedAudiosInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedAudioUpdateWithoutOrderedProductInput = {
  audio?: InputMaybe<AudioUpdateOneWithoutOrderedAudiosInput>;
  audioObj?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedDocumentCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  documentId?: InputMaybe<SortOrder>;
  documentObj?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedDocumentCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentId?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedDocumentMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  documentId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedDocumentMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  documentId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedDocumentOrderByWithAggregationInput = {
  _count?: InputMaybe<OrderedDocumentCountOrderByAggregateInput>;
  _max?: InputMaybe<OrderedDocumentMaxOrderByAggregateInput>;
  _min?: InputMaybe<OrderedDocumentMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  documentId?: InputMaybe<SortOrder>;
  documentObj?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedDocumentScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedDocumentScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  documentId?: InputMaybe<StringNullableWithAggregatesFilter>;
  documentObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedDocumentScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedDocumentScalarWhereWithAggregatesInput>>>;
  orderedProductId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  url?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type OrderedDocumentUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documentId?: InputMaybe<Scalars['String']>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedDocumentUncheckedUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedDocumentUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedDocumentUpdateWithoutDocumentInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProduct?: InputMaybe<OrderedProductUpdateOneWithoutOrderedDocumentsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedDocumentUpdateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  document?: InputMaybe<DocumentUpdateOneWithoutOrderedDocumentsInput>;
  documentObj?: InputMaybe<Scalars['Json']>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedLinkCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  hiddenMessage?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  linkId?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedLinkCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  linkId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
};

export type OrderedLinkMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  hiddenMessage?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  linkId?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedLinkMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  hiddenMessage?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  linkId?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedLinkOrderByWithAggregationInput = {
  _count?: InputMaybe<OrderedLinkCountOrderByAggregateInput>;
  _max?: InputMaybe<OrderedLinkMaxOrderByAggregateInput>;
  _min?: InputMaybe<OrderedLinkMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  hiddenMessage?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  linkId?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedLinkScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedLinkScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  hiddenMessage?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  linkId?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedLinkScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedLinkScalarWhereWithAggregatesInput>>>;
  orderedProductId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  url?: InputMaybe<StringWithAggregatesFilter>;
};

export type OrderedLinkUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  hiddenMessage?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  linkId?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
};

export type OrderedLinkUncheckedUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  linkId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type OrderedLinkUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  linkId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type OrderedLinkUpdateWithoutLinkInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderedProduct?: InputMaybe<OrderedProductUpdateOneWithoutOrderedLinksInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type OrderedLinkUpdateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  hiddenMessage?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  link?: InputMaybe<LinkUpdateOneWithoutOrderedLinksInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type OrderedPictureCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  pictureId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedPictureCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  pictureId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedPictureMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  pictureId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedPictureMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  pictureId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedPictureOrderByWithAggregationInput = {
  _count?: InputMaybe<OrderedPictureCountOrderByAggregateInput>;
  _max?: InputMaybe<OrderedPictureMaxOrderByAggregateInput>;
  _min?: InputMaybe<OrderedPictureMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  pictureId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedPictureScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedPictureScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedPictureScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedPictureScalarWhereWithAggregatesInput>>>;
  orderedProductId?: InputMaybe<StringNullableWithAggregatesFilter>;
  pictureId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  url?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type OrderedPictureUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  pictureId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedPictureUncheckedUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictureId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedPictureUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictureId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedPictureUpdateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  picture?: InputMaybe<PictureUpdateOneWithoutOrderedPicturesInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedPictureUpdateWithoutPictureInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProduct?: InputMaybe<OrderedProductUpdateOneWithoutOrderedPicturesInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductAvgOrderByAggregateInput = {
  itemTotal?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
};

export type OrderedProductCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  itemTotal?: InputMaybe<SortOrder>;
  minted?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderId?: InputMaybe<SortOrder>;
  orderNumber?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productId?: InputMaybe<SortOrder>;
  productSlug?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  refundId?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  variationId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type OrderedProductCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderId?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refundId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderedProductCreateWithoutOrderedAudiosInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  order?: InputMaybe<OrderCreateNestedOneWithoutOrderedProductsInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoCreateNestedManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutOrderedProductsInput>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refund?: InputMaybe<RefundCreateNestedOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrderedProductsInput>;
};

export type OrderedProductCreateWithoutOrderedDocumentsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  order?: InputMaybe<OrderCreateNestedOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoCreateNestedManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutOrderedProductsInput>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refund?: InputMaybe<RefundCreateNestedOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrderedProductsInput>;
};

export type OrderedProductCreateWithoutOrderedLinksInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  order?: InputMaybe<OrderCreateNestedOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoCreateNestedManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutOrderedProductsInput>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refund?: InputMaybe<RefundCreateNestedOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrderedProductsInput>;
};

export type OrderedProductCreateWithoutOrderedPicturesInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  order?: InputMaybe<OrderCreateNestedOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoCreateNestedManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutOrderedProductsInput>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refund?: InputMaybe<RefundCreateNestedOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrderedProductsInput>;
};

export type OrderedProductCreateWithoutOrderedRedeemablesInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  order?: InputMaybe<OrderCreateNestedOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoCreateNestedManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutOrderedProductsInput>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refund?: InputMaybe<RefundCreateNestedOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrderedProductsInput>;
};

export type OrderedProductCreateWithoutOrderedVideosInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  order?: InputMaybe<OrderCreateNestedOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableCreateNestedManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutOrderedProductsInput>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refund?: InputMaybe<RefundCreateNestedOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutOrderedProductsInput>;
};

export type OrderedProductMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  itemTotal?: InputMaybe<SortOrder>;
  minted?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderId?: InputMaybe<SortOrder>;
  orderNumber?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productId?: InputMaybe<SortOrder>;
  productSlug?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  refundId?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  variationId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type OrderedProductMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  itemTotal?: InputMaybe<SortOrder>;
  minted?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderId?: InputMaybe<SortOrder>;
  orderNumber?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productId?: InputMaybe<SortOrder>;
  productSlug?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  refundId?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  variationId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type OrderedProductOrderByWithAggregationInput = {
  _avg?: InputMaybe<OrderedProductAvgOrderByAggregateInput>;
  _count?: InputMaybe<OrderedProductCountOrderByAggregateInput>;
  _max?: InputMaybe<OrderedProductMaxOrderByAggregateInput>;
  _min?: InputMaybe<OrderedProductMinOrderByAggregateInput>;
  _sum?: InputMaybe<OrderedProductSumOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  itemTotal?: InputMaybe<SortOrder>;
  minted?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderId?: InputMaybe<SortOrder>;
  orderNumber?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productId?: InputMaybe<SortOrder>;
  productSlug?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  refundId?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  variationId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type OrderedProductSumOrderByAggregateInput = {
  itemTotal?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
};

export type OrderedProductRelationFilter = {
  is?: InputMaybe<OrderedProductWhereInput>;
  isNot?: InputMaybe<OrderedProductWhereInput>;
};

export type OrderedProductScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  itemTotal?: InputMaybe<FloatNullableWithAggregatesFilter>;
  minted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedProductScalarWhereWithAggregatesInput>>>;
  orderId?: InputMaybe<StringNullableWithAggregatesFilter>;
  orderNumber?: InputMaybe<StringNullableWithAggregatesFilter>;
  price?: InputMaybe<FloatNullableWithAggregatesFilter>;
  productId?: InputMaybe<StringNullableWithAggregatesFilter>;
  productSlug?: InputMaybe<StringWithAggregatesFilter>;
  productType?: InputMaybe<EnumProductTypeNullableWithAggregatesFilter>;
  quantity?: InputMaybe<IntNullableWithAggregatesFilter>;
  refundId?: InputMaybe<StringNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  transactionHash?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  url?: InputMaybe<StringNullableWithAggregatesFilter>;
  variationId?: InputMaybe<StringNullableWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type OrderedProductUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<Scalars['Float']>;
  minted?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  orderedAudios?: InputMaybe<OrderedAudioUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedCreateNestedManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<Scalars['String']>;
  orderNumber?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  productId?: InputMaybe<Scalars['String']>;
  productSlug: Scalars['String'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  refundId?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  variationId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderedProductUncheckedUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedUpdateManyWithoutOrderedProductInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refundId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refundId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedProductUpdateWithoutOrderedAudiosInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<OrderUpdateOneWithoutOrderedProductsInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUpdateManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutOrderedProductsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refund?: InputMaybe<RefundUpdateOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrderedProductsInput>;
};

export type OrderedProductUpdateWithoutOrderedDocumentsInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<OrderUpdateOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUpdateManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutOrderedProductsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refund?: InputMaybe<RefundUpdateOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrderedProductsInput>;
};

export type OrderedProductUpdateWithoutOrderedLinksInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<OrderUpdateOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUpdateManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutOrderedProductsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refund?: InputMaybe<RefundUpdateOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrderedProductsInput>;
};

export type OrderedProductUpdateWithoutOrderedPicturesInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<OrderUpdateOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUpdateManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutOrderedProductsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refund?: InputMaybe<RefundUpdateOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrderedProductsInput>;
};

export type OrderedProductUpdateWithoutOrderedRedeemablesInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<OrderUpdateOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUpdateManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutOrderedProductsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refund?: InputMaybe<RefundUpdateOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrderedProductsInput>;
};

export type OrderedProductUpdateWithoutOrderedVideosInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<OrderUpdateOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUpdateManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutOrderedProductsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refund?: InputMaybe<RefundUpdateOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrderedProductsInput>;
};

export type OrderedProductUpdateWithoutOrderInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUpdateManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutOrderedProductsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refund?: InputMaybe<RefundUpdateOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrderedProductsInput>;
};

export type OrderedProductUpdateWithoutProductInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<OrderUpdateOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUpdateManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refund?: InputMaybe<RefundUpdateOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrderedProductsInput>;
};

export type OrderedProductUpdateWithoutRefundInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<OrderUpdateOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUpdateManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutOrderedProductsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrderedProductsInput>;
};

export type OrderedProductUpdateWithoutWebsiteInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  itemTotal?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  minted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<OrderUpdateOneWithoutOrderedProductsInput>;
  orderedAudios?: InputMaybe<OrderedAudioUpdateManyWithoutOrderedProductInput>;
  orderedDocuments?: InputMaybe<OrderedDocumentUpdateManyWithoutOrderedProductInput>;
  orderedLinks?: InputMaybe<OrderedLinkUpdateManyWithoutOrderedProductInput>;
  orderedPictures?: InputMaybe<OrderedPictureUpdateManyWithoutOrderedProductInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUpdateManyWithoutOrderedProductInput>;
  orderedVideos?: InputMaybe<OrderedVideoUpdateManyWithoutOrderedProductInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutOrderedProductsInput>;
  productSlug?: InputMaybe<StringFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  refund?: InputMaybe<RefundUpdateOneWithoutOrderedProductsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  variationId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedRedeemableAvgOrderByAggregateInput = {
  perLimit?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
};

export type OrderedRedeemableCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  perLimit?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  redeemableId?: InputMaybe<SortOrder>;
  redeemInfo?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedRedeemableCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  perLimit?: InputMaybe<Scalars['Int']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemableId?: InputMaybe<Scalars['String']>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedRedeemableMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  perLimit?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  redeemableId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedRedeemableMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  perLimit?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  redeemableId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedRedeemableOrderByWithAggregationInput = {
  _avg?: InputMaybe<OrderedRedeemableAvgOrderByAggregateInput>;
  _count?: InputMaybe<OrderedRedeemableCountOrderByAggregateInput>;
  _max?: InputMaybe<OrderedRedeemableMaxOrderByAggregateInput>;
  _min?: InputMaybe<OrderedRedeemableMinOrderByAggregateInput>;
  _sum?: InputMaybe<OrderedRedeemableSumOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  perLimit?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  redeemableId?: InputMaybe<SortOrder>;
  redeemInfo?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
};

export type OrderedRedeemableSumOrderByAggregateInput = {
  perLimit?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
};

export type OrderedRedeemableScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedRedeemableScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedRedeemableScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedRedeemableScalarWhereWithAggregatesInput>>>;
  orderedProductId?: InputMaybe<StringNullableWithAggregatesFilter>;
  perLimit?: InputMaybe<IntNullableWithAggregatesFilter>;
  quantity?: InputMaybe<IntNullableWithAggregatesFilter>;
  redeemableId?: InputMaybe<StringNullableWithAggregatesFilter>;
  redeemInfo?: InputMaybe<JsonNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  url?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type OrderedRedeemableUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  perLimit?: InputMaybe<Scalars['Int']>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemableId?: InputMaybe<Scalars['String']>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
};

export type OrderedRedeemableUncheckedUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemableId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedRedeemableUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemableId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedRedeemableUpdateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemable?: InputMaybe<RedeemableUpdateOneWithoutOrderedRedeemablesInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedRedeemableUpdateWithoutRedeemableInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProduct?: InputMaybe<OrderedProductUpdateOneWithoutOrderedRedeemablesInput>;
  perLimit?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderedVideoCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  videoId?: InputMaybe<SortOrder>;
  videoObj?: InputMaybe<SortOrder>;
};

export type OrderedVideoCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  videoId?: InputMaybe<Scalars['String']>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type OrderedVideoMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  videoId?: InputMaybe<SortOrder>;
};

export type OrderedVideoMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  videoId?: InputMaybe<SortOrder>;
};

export type OrderedVideoOrderByWithAggregationInput = {
  _count?: InputMaybe<OrderedVideoCountOrderByAggregateInput>;
  _max?: InputMaybe<OrderedVideoMaxOrderByAggregateInput>;
  _min?: InputMaybe<OrderedVideoMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  orderedProductId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  videoId?: InputMaybe<SortOrder>;
  videoObj?: InputMaybe<SortOrder>;
};

export type OrderedVideoScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<OrderedVideoScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderedVideoScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderedVideoScalarWhereWithAggregatesInput>>>;
  orderedProductId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  url?: InputMaybe<StringNullableWithAggregatesFilter>;
  videoId?: InputMaybe<StringNullableWithAggregatesFilter>;
  videoObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
};

export type OrderedVideoUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedProductId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url?: InputMaybe<Scalars['String']>;
  videoId?: InputMaybe<Scalars['String']>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type OrderedVideoUncheckedUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type OrderedVideoUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProductId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type OrderedVideoUpdateWithoutOrderedProductInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  video?: InputMaybe<VideoUpdateOneWithoutOrderedVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type OrderedVideoUpdateWithoutVideoInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProduct?: InputMaybe<OrderedProductUpdateOneWithoutOrderedVideosInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
};

export type OrderMaxOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  completedAt?: InputMaybe<SortOrder>;
  couponId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  cryptoCurrencyCode?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  customerContact?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  delivery_fee?: InputMaybe<SortOrder>;
  delivery_name?: InputMaybe<SortOrder>;
  delivery_time?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  orderNumber?: InputMaybe<SortOrder>;
  orderStatus?: InputMaybe<SortOrder>;
  paid_total?: InputMaybe<SortOrder>;
  paymentGateway?: InputMaybe<SortOrder>;
  paymentId?: InputMaybe<SortOrder>;
  received?: InputMaybe<SortOrder>;
  requireShipping?: InputMaybe<SortOrder>;
  sales_tax?: InputMaybe<SortOrder>;
  storageFee?: InputMaybe<SortOrder>;
  stripePrivateSessionId?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  tracking_number?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type OrderMinOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  completedAt?: InputMaybe<SortOrder>;
  couponId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  cryptoCurrencyCode?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  customerContact?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  delivery_fee?: InputMaybe<SortOrder>;
  delivery_name?: InputMaybe<SortOrder>;
  delivery_time?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  orderNumber?: InputMaybe<SortOrder>;
  orderStatus?: InputMaybe<SortOrder>;
  paid_total?: InputMaybe<SortOrder>;
  paymentGateway?: InputMaybe<SortOrder>;
  paymentId?: InputMaybe<SortOrder>;
  received?: InputMaybe<SortOrder>;
  requireShipping?: InputMaybe<SortOrder>;
  sales_tax?: InputMaybe<SortOrder>;
  storageFee?: InputMaybe<SortOrder>;
  stripePrivateSessionId?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  tracking_number?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type OrderOrderByWithAggregationInput = {
  _avg?: InputMaybe<OrderAvgOrderByAggregateInput>;
  _count?: InputMaybe<OrderCountOrderByAggregateInput>;
  _max?: InputMaybe<OrderMaxOrderByAggregateInput>;
  _min?: InputMaybe<OrderMinOrderByAggregateInput>;
  _sum?: InputMaybe<OrderSumOrderByAggregateInput>;
  amount?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  billing_address?: InputMaybe<SortOrder>;
  completedAt?: InputMaybe<SortOrder>;
  couponId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  cryptoCurrencyCode?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  customerContact?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  delivery_fee?: InputMaybe<SortOrder>;
  delivery_name?: InputMaybe<SortOrder>;
  delivery_time?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  orderNumber?: InputMaybe<SortOrder>;
  orderStatus?: InputMaybe<SortOrder>;
  paid_total?: InputMaybe<SortOrder>;
  paymentGateway?: InputMaybe<SortOrder>;
  paymentId?: InputMaybe<SortOrder>;
  received?: InputMaybe<SortOrder>;
  refundObj?: InputMaybe<SortOrder>;
  requireShipping?: InputMaybe<SortOrder>;
  sales_tax?: InputMaybe<SortOrder>;
  shipping_address?: InputMaybe<SortOrder>;
  shippingImages?: InputMaybe<SortOrder>;
  storageFee?: InputMaybe<SortOrder>;
  stripePrivateSessionId?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  tracking_number?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type OrderSumOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  delivery_fee?: InputMaybe<SortOrder>;
  discount?: InputMaybe<SortOrder>;
  paid_total?: InputMaybe<SortOrder>;
  sales_tax?: InputMaybe<SortOrder>;
  storageFee?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
};

export type OrderRelationFilter = {
  is?: InputMaybe<OrderWhereInput>;
  isNot?: InputMaybe<OrderWhereInput>;
};

export type OrderScalarWhereWithAggregatesInput = {
  amount?: InputMaybe<FloatNullableWithAggregatesFilter>;
  AND?: InputMaybe<Array<InputMaybe<OrderScalarWhereWithAggregatesInput>>>;
  applicationFee?: InputMaybe<FloatNullableWithAggregatesFilter>;
  billing_address?: InputMaybe<JsonNullableWithAggregatesFilter>;
  completedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  couponId?: InputMaybe<StringNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  cryptoCurrencyCode?: InputMaybe<EnumCryptoCurrencyNullableWithAggregatesFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableWithAggregatesFilter>;
  customerContact?: InputMaybe<StringNullableWithAggregatesFilter>;
  customerId?: InputMaybe<StringNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  delivery_fee?: InputMaybe<FloatNullableWithAggregatesFilter>;
  delivery_name?: InputMaybe<StringNullableWithAggregatesFilter>;
  delivery_time?: InputMaybe<StringNullableWithAggregatesFilter>;
  discount?: InputMaybe<FloatNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<OrderScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<OrderScalarWhereWithAggregatesInput>>>;
  orderNumber?: InputMaybe<StringNullableWithAggregatesFilter>;
  orderStatus?: InputMaybe<EnumOrderStatusWithAggregatesFilter>;
  paid_total?: InputMaybe<FloatNullableWithAggregatesFilter>;
  paymentGateway?: InputMaybe<StringNullableWithAggregatesFilter>;
  paymentId?: InputMaybe<StringNullableWithAggregatesFilter>;
  received?: InputMaybe<BoolNullableWithAggregatesFilter>;
  refundObj?: InputMaybe<JsonNullableListFilter>;
  requireShipping?: InputMaybe<BoolNullableWithAggregatesFilter>;
  sales_tax?: InputMaybe<FloatNullableWithAggregatesFilter>;
  shipping_address?: InputMaybe<JsonNullableWithAggregatesFilter>;
  shippingImages?: InputMaybe<JsonNullableListFilter>;
  storageFee?: InputMaybe<FloatNullableWithAggregatesFilter>;
  stripePrivateSessionId?: InputMaybe<StringNullableWithAggregatesFilter>;
  total?: InputMaybe<FloatNullableWithAggregatesFilter>;
  tracking_number?: InputMaybe<StringNullableWithAggregatesFilter>;
  transactionHash?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type OrderUncheckedCreateInput = {
  amount?: InputMaybe<Scalars['Float']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<Scalars['DateTime']>;
  couponId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerContact?: InputMaybe<Scalars['String']>;
  customerId?: InputMaybe<Scalars['String']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  delivery_fee?: InputMaybe<Scalars['Float']>;
  delivery_name?: InputMaybe<Scalars['String']>;
  delivery_time?: InputMaybe<Scalars['String']>;
  discount?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutOrderInput>;
  orderNumber?: InputMaybe<Scalars['String']>;
  orderStatus: OrderStatus;
  paid_total?: InputMaybe<Scalars['Float']>;
  paymentGateway?: InputMaybe<Scalars['String']>;
  paymentId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundUncheckedCreateNestedManyWithoutOrderInput>;
  requireShipping?: InputMaybe<Scalars['Boolean']>;
  sales_tax?: InputMaybe<Scalars['Float']>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<Scalars['Float']>;
  stripePrivateSessionId?: InputMaybe<Scalars['String']>;
  total?: InputMaybe<Scalars['Float']>;
  tracking_number?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type OrderUncheckedUpdateInput = {
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  couponId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerContact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delivery_fee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  delivery_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  delivery_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutOrderInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderStatus?: InputMaybe<EnumOrderStatusFieldUpdateOperationsInput>;
  paid_total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  paymentGateway?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundUncheckedUpdateManyWithoutOrderInput>;
  requireShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  sales_tax?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  stripePrivateSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  tracking_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUncheckedUpdateManyInput = {
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  couponId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerContact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delivery_fee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  delivery_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  delivery_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderStatus?: InputMaybe<EnumOrderStatusFieldUpdateOperationsInput>;
  paid_total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  paymentGateway?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  requireShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  sales_tax?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  stripePrivateSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  tracking_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type OrderUpdaterefundObjInput = {
  push?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  set?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
};

export type OrderUpdateshippingImagesInput = {
  push?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  set?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
};

export type OrderUpdateWithoutCouponInput = {
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutOrdersInput>;
  customerContact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delivery_fee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  delivery_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  delivery_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutOrderInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderStatus?: InputMaybe<EnumOrderStatusFieldUpdateOperationsInput>;
  paid_total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  paymentGateway?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundUpdateManyWithoutOrderInput>;
  requireShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  sales_tax?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  stripePrivateSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  tracking_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrdersInput>;
};

export type OrderUpdateWithoutCustomerInput = {
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  coupon?: InputMaybe<CouponUpdateOneWithoutOrdersInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerContact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delivery_fee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  delivery_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  delivery_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutOrderInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderStatus?: InputMaybe<EnumOrderStatusFieldUpdateOperationsInput>;
  paid_total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  paymentGateway?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundUpdateManyWithoutOrderInput>;
  requireShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  sales_tax?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  stripePrivateSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  tracking_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrdersInput>;
};

export type OrderUpdateWithoutOrderedProductsInput = {
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  coupon?: InputMaybe<CouponUpdateOneWithoutOrdersInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutOrdersInput>;
  customerContact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delivery_fee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  delivery_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  delivery_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderStatus?: InputMaybe<EnumOrderStatusFieldUpdateOperationsInput>;
  paid_total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  paymentGateway?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundUpdateManyWithoutOrderInput>;
  requireShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  sales_tax?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  stripePrivateSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  tracking_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrdersInput>;
};

export type OrderUpdateWithoutRefundsInput = {
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  coupon?: InputMaybe<CouponUpdateOneWithoutOrdersInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutOrdersInput>;
  customerContact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delivery_fee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  delivery_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  delivery_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutOrderInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderStatus?: InputMaybe<EnumOrderStatusFieldUpdateOperationsInput>;
  paid_total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  paymentGateway?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  requireShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  sales_tax?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  stripePrivateSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  tracking_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutOrdersInput>;
};

export type OrderUpdateWithoutWebsiteInput = {
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  billing_address?: InputMaybe<Scalars['Json']>;
  completedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  coupon?: InputMaybe<CouponUpdateOneWithoutOrdersInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutOrdersInput>;
  customerContact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  delivery_fee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  delivery_name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  delivery_time?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutOrderInput>;
  orderNumber?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  orderStatus?: InputMaybe<EnumOrderStatusFieldUpdateOperationsInput>;
  paid_total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  paymentGateway?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  refundObj?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  refunds?: InputMaybe<RefundUpdateManyWithoutOrderInput>;
  requireShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  sales_tax?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  shipping_address?: InputMaybe<Scalars['Json']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  storageFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  stripePrivateSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  tracking_number?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageCollectionCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type PageCollectionCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageCollectionMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type PageCollectionMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type PageCollectionOrderByWithAggregationInput = {
  _count?: InputMaybe<PageCollectionCountOrderByAggregateInput>;
  _max?: InputMaybe<PageCollectionMaxOrderByAggregateInput>;
  _min?: InputMaybe<PageCollectionMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type PageCollectionScalarWhereWithAggregatesInput = {
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  AND?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  displayTitle?: InputMaybe<BoolNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageCollectionScalarWhereWithAggregatesInput>>>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type PageCollectionUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutPageCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageCollectionUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutPageCollectionsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageCollectionUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageCollectionUpdateWithoutPagesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPageCollectionsInput>;
};

export type PageCollectionUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pages?: InputMaybe<PageUpdateManyWithoutPageCollectionsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PageCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  isIndex?: InputMaybe<SortOrder>;
  itemIds?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  navColor?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type PageCreateitemIdsInput = {
  set: Scalars['String'];
};

export type PageCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageCreateWithoutItemsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewCreateNestedManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPagesInput>;
};

export type PageCreateWithoutPageViewsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemCreateNestedManyWithoutPageInput>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutPagesInput>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPagesInput>;
};

export type PageCreateWithoutRequestClicksInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemCreateNestedManyWithoutPageInput>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPagesInput>;
};

export type PageCreateWithoutRequestsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemCreateNestedManyWithoutPageInput>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewCreateNestedManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutPagesInput>;
};

export type PageMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isIndex?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  navColor?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type PageMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isIndex?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  navColor?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type PageOrderByWithAggregationInput = {
  _count?: InputMaybe<PageCountOrderByAggregateInput>;
  _max?: InputMaybe<PageMaxOrderByAggregateInput>;
  _min?: InputMaybe<PageMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  isIndex?: InputMaybe<SortOrder>;
  itemIds?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  navColor?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type PageRelationFilter = {
  is?: InputMaybe<PageWhereInput>;
  isNot?: InputMaybe<PageWhereInput>;
};

export type PageScalarWhereWithAggregatesInput = {
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  AND?: InputMaybe<Array<InputMaybe<PageScalarWhereWithAggregatesInput>>>;
  content?: InputMaybe<JsonNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  isIndex?: InputMaybe<BoolNullableWithAggregatesFilter>;
  itemIds?: InputMaybe<StringNullableListFilter>;
  menu?: InputMaybe<BoolNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  navColor?: InputMaybe<EnumNavColorNullableWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<PageScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageScalarWhereWithAggregatesInput>>>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type PageUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<Scalars['Boolean']>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUncheckedCreateNestedManyWithoutPageInput>;
  menu?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  navColor?: InputMaybe<NavColor>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedCreateNestedManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedCreateNestedManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedCreateNestedManyWithoutPageInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type PageUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUncheckedUpdateManyWithoutPageInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUncheckedUpdateManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUncheckedUpdateManyWithoutPageInput>;
  requests?: InputMaybe<RequestUncheckedUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PageUpdateitemIdsInput = {
  push?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  set?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type PageUpdateWithoutCategoriesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUpdateManyWithoutPageInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUpdateManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutPageInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPagesInput>;
};

export type PageUpdateWithoutCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUpdateManyWithoutPageInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUpdateManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutPageInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPagesInput>;
};

export type PageUpdateWithoutItemsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUpdateManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutPageInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPagesInput>;
};

export type PageUpdateWithoutPageCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUpdateManyWithoutPageInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageViews?: InputMaybe<PageViewUpdateManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutPageInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPagesInput>;
};

export type PageUpdateWithoutPageViewsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUpdateManyWithoutPageInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutPagesInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutPageInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPagesInput>;
};

export type PageUpdateWithoutRequestClicksInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUpdateManyWithoutPageInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUpdateManyWithoutPageInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPagesInput>;
};

export type PageUpdateWithoutRequestsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUpdateManyWithoutPageInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUpdateManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutPagesInput>;
};

export type PageUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutPagesInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutPagesInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  isIndex?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  itemIds?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  items?: InputMaybe<ItemUpdateManyWithoutPageInput>;
  menu?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  navColor?: InputMaybe<NullableEnumNavColorFieldUpdateOperationsInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutPagesInput>;
  pageViews?: InputMaybe<PageViewUpdateManyWithoutPageInput>;
  requestClicks?: InputMaybe<RequestClickUpdateManyWithoutPageInput>;
  requests?: InputMaybe<RequestUpdateManyWithoutPageInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PageViewCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type PageViewCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageViewMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type PageViewMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type PageViewOrderByWithAggregationInput = {
  _count?: InputMaybe<PageViewCountOrderByAggregateInput>;
  _max?: InputMaybe<PageViewMaxOrderByAggregateInput>;
  _min?: InputMaybe<PageViewMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type PageViewScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<PageViewScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  ip?: InputMaybe<StringNullableWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<PageViewScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PageViewScalarWhereWithAggregatesInput>>>;
  pageId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
};

export type PageViewUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type PageViewUncheckedUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PageViewUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PageViewUpdateWithoutPageInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type PictureCountOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type PictureCreateManyInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type PictureCreateWithoutOrderedPicturesInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutPicturesInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutPicturesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type PictureMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type PictureMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type PictureOrderByWithAggregationInput = {
  _count?: InputMaybe<PictureCountOrderByAggregateInput>;
  _max?: InputMaybe<PictureMaxOrderByAggregateInput>;
  _min?: InputMaybe<PictureMinOrderByAggregateInput>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type PictureRelationFilter = {
  is?: InputMaybe<PictureWhereInput>;
  isNot?: InputMaybe<PictureWhereInput>;
};

export type PictureScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<PictureScalarWhereWithAggregatesInput>>>;
  content?: InputMaybe<JsonNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<PictureScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<PictureScalarWhereWithAggregatesInput>>>;
  paid?: InputMaybe<BoolNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  transactionHash?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type PictureUncheckedCreateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedPictures?: InputMaybe<OrderedPictureUncheckedCreateNestedManyWithoutPictureInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutPicturesInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type PictureUncheckedUpdateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedPictures?: InputMaybe<OrderedPictureUncheckedUpdateManyWithoutPictureInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutPicturesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PictureUncheckedUpdateManyInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PictureUpdateWithoutOrderedPicturesInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutPicturesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutPicturesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PictureUpdateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedPictures?: InputMaybe<OrderedPictureUpdateManyWithoutPictureInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutPicturesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type PictureUpdateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedPictures?: InputMaybe<OrderedPictureUpdateManyWithoutPictureInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutPicturesInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductAvgOrderByAggregateInput = {
  creatorEarnings?: InputMaybe<SortOrder>;
  editionMinted?: InputMaybe<SortOrder>;
  editionSize?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  length?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_price?: InputMaybe<SortOrder>;
  storageSize?: InputMaybe<SortOrder>;
  width?: InputMaybe<SortOrder>;
};

export type ProductCollectionCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ProductCollectionCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductCollectionMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ProductCollectionMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ProductCollectionOrderByWithAggregationInput = {
  _count?: InputMaybe<ProductCollectionCountOrderByAggregateInput>;
  _max?: InputMaybe<ProductCollectionMaxOrderByAggregateInput>;
  _min?: InputMaybe<ProductCollectionMinOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  displayTitle?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ProductCollectionScalarWhereWithAggregatesInput = {
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  AND?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  displayTitle?: InputMaybe<BoolNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ProductCollectionScalarWhereWithAggregatesInput>>>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ProductCollectionUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  displayTitle?: InputMaybe<Scalars['Boolean']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutProductCollectionsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ProductCollectionUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutProductCollectionsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductCollectionUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ProductCollectionUpdateWithoutProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductCollectionsInput>;
};

export type ProductCollectionUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  displayTitle?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutProductCollectionsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ProductCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  creatorEarnings?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  editionAddress?: InputMaybe<SortOrder>;
  editionMinted?: InputMaybe<SortOrder>;
  editionSize?: InputMaybe<SortOrder>;
  editionType?: InputMaybe<SortOrder>;
  externalNftChain?: InputMaybe<SortOrder>;
  externalNftContractAddress?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  gallery?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  inStock?: InputMaybe<SortOrder>;
  isExternalNft?: InputMaybe<SortOrder>;
  length?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_price?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  storageSize?: InputMaybe<SortOrder>;
  tax_code?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  typeId?: InputMaybe<SortOrder>;
  unit?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  variation_options?: InputMaybe<SortOrder>;
  variations?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
  width?: InputMaybe<SortOrder>;
};

export type ProductCreategalleryInput = {
  set: Scalars['Json'];
};

export type ProductCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  name: Scalars['String'];
  price: Scalars['Float'];
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tax_code?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type ProductCreatevariation_OptionsInput = {
  set: Scalars['Json'];
};

export type ProductCreatevariationsInput = {
  set: Scalars['Json'];
};

export type ProductCreateWithoutOrderedProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  pictures?: InputMaybe<PictureCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutProductsInput>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type ProductCreateWithoutTraitsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<TypeCreateNestedOneWithoutProductsInput>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteCreateNestedOneWithoutProductsInput>;
  width?: InputMaybe<Scalars['Float']>;
};

export type ProductMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  creatorEarnings?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  editionAddress?: InputMaybe<SortOrder>;
  editionMinted?: InputMaybe<SortOrder>;
  editionSize?: InputMaybe<SortOrder>;
  editionType?: InputMaybe<SortOrder>;
  externalNftChain?: InputMaybe<SortOrder>;
  externalNftContractAddress?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  inStock?: InputMaybe<SortOrder>;
  isExternalNft?: InputMaybe<SortOrder>;
  length?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_price?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  storageSize?: InputMaybe<SortOrder>;
  tax_code?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  typeId?: InputMaybe<SortOrder>;
  unit?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
  width?: InputMaybe<SortOrder>;
};

export type ProductMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  creatorEarnings?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  editionAddress?: InputMaybe<SortOrder>;
  editionMinted?: InputMaybe<SortOrder>;
  editionSize?: InputMaybe<SortOrder>;
  editionType?: InputMaybe<SortOrder>;
  externalNftChain?: InputMaybe<SortOrder>;
  externalNftContractAddress?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  inStock?: InputMaybe<SortOrder>;
  isExternalNft?: InputMaybe<SortOrder>;
  length?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_price?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  storageSize?: InputMaybe<SortOrder>;
  tax_code?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  typeId?: InputMaybe<SortOrder>;
  unit?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
  width?: InputMaybe<SortOrder>;
};

export type ProductOrderByWithAggregationInput = {
  _avg?: InputMaybe<ProductAvgOrderByAggregateInput>;
  _count?: InputMaybe<ProductCountOrderByAggregateInput>;
  _max?: InputMaybe<ProductMaxOrderByAggregateInput>;
  _min?: InputMaybe<ProductMinOrderByAggregateInput>;
  _sum?: InputMaybe<ProductSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  creatorEarnings?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  editionAddress?: InputMaybe<SortOrder>;
  editionMinted?: InputMaybe<SortOrder>;
  editionSize?: InputMaybe<SortOrder>;
  editionType?: InputMaybe<SortOrder>;
  externalNftChain?: InputMaybe<SortOrder>;
  externalNftContractAddress?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  gallery?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  inStock?: InputMaybe<SortOrder>;
  isExternalNft?: InputMaybe<SortOrder>;
  length?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  productType?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_price?: InputMaybe<SortOrder>;
  sku?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  storageSize?: InputMaybe<SortOrder>;
  tax_code?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  typeId?: InputMaybe<SortOrder>;
  unit?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  variation_options?: InputMaybe<SortOrder>;
  variations?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
  width?: InputMaybe<SortOrder>;
};

export type ProductSumOrderByAggregateInput = {
  creatorEarnings?: InputMaybe<SortOrder>;
  editionMinted?: InputMaybe<SortOrder>;
  editionSize?: InputMaybe<SortOrder>;
  height?: InputMaybe<SortOrder>;
  length?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  sale_price?: InputMaybe<SortOrder>;
  storageSize?: InputMaybe<SortOrder>;
  width?: InputMaybe<SortOrder>;
};

export type ProductRelationFilter = {
  is?: InputMaybe<ProductWhereInput>;
  isNot?: InputMaybe<ProductWhereInput>;
};

export type ProductScalarWhereWithAggregatesInput = {
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  AND?: InputMaybe<Array<InputMaybe<ProductScalarWhereWithAggregatesInput>>>;
  content?: InputMaybe<JsonNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  creatorEarnings?: InputMaybe<IntWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  editionAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  editionMinted?: InputMaybe<IntNullableWithAggregatesFilter>;
  editionSize?: InputMaybe<IntWithAggregatesFilter>;
  editionType?: InputMaybe<EnumEditionTypeNullableWithAggregatesFilter>;
  externalNftChain?: InputMaybe<EnumChainNullableWithAggregatesFilter>;
  externalNftContractAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  externalUrl?: InputMaybe<StringNullableWithAggregatesFilter>;
  gallery?: InputMaybe<JsonNullableListFilter>;
  height?: InputMaybe<FloatNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  inStock?: InputMaybe<BoolNullableWithAggregatesFilter>;
  isExternalNft?: InputMaybe<BoolNullableWithAggregatesFilter>;
  length?: InputMaybe<FloatNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<ProductScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ProductScalarWhereWithAggregatesInput>>>;
  price?: InputMaybe<FloatWithAggregatesFilter>;
  productType?: InputMaybe<EnumProductTypeNullableWithAggregatesFilter>;
  quantity?: InputMaybe<IntNullableWithAggregatesFilter>;
  sale_price?: InputMaybe<FloatNullableWithAggregatesFilter>;
  sku?: InputMaybe<StringNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  storageSize?: InputMaybe<IntNullableWithAggregatesFilter>;
  tax_code?: InputMaybe<StringNullableWithAggregatesFilter>;
  transactionHash?: InputMaybe<StringNullableWithAggregatesFilter>;
  typeId?: InputMaybe<StringNullableWithAggregatesFilter>;
  unit?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  variation_options?: InputMaybe<JsonNullableListFilter>;
  variations?: InputMaybe<JsonNullableListFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
  width?: InputMaybe<FloatNullableWithAggregatesFilter>;
};

export type ProductUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  creatorEarnings: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutProductsInput>;
  editionAddress?: InputMaybe<Scalars['String']>;
  editionMinted?: InputMaybe<Scalars['Int']>;
  editionSize: Scalars['Int'];
  editionType?: InputMaybe<EditionType>;
  externalNftChain?: InputMaybe<Chain>;
  externalNftContractAddress?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<Scalars['Float']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<Scalars['Boolean']>;
  isExternalNft?: InputMaybe<Scalars['Boolean']>;
  length?: InputMaybe<Scalars['Float']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutProductsInput>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutProductsInput>;
  price: Scalars['Float'];
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutProductsInput>;
  productType?: InputMaybe<ProductType>;
  quantity?: InputMaybe<Scalars['Int']>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutProductsInput>;
  sale_price?: InputMaybe<Scalars['Float']>;
  sku?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  storageSize?: InputMaybe<Scalars['Int']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutProductsInput>;
  tax_code?: InputMaybe<Scalars['String']>;
  traits?: InputMaybe<TraitUncheckedCreateNestedManyWithoutProductInput>;
  transactionHash?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  unit?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutProductsInput>;
  websiteId?: InputMaybe<Scalars['String']>;
  width?: InputMaybe<Scalars['Float']>;
};

export type ProductUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUncheckedUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutProductsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdategalleryInput = {
  push?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  set?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
};

export type ProductUpdatevariation_OptionsInput = {
  push?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  set?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
};

export type ProductUpdatevariationsInput = {
  push?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  set?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
};

export type ProductUpdateWithoutAudiosInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutProductsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUpdateManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutBlocksInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutProductsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUpdateManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutCategoriesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutProductsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUpdateManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutProductsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUpdateManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutDocumentsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutProductsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUpdateManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutLinksInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutProductsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUpdateManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutOrderedProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutProductsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUpdateManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutPicturesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutProductsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUpdateManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutProductCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutProductsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUpdateManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutRedeemablesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutProductsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUpdateManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutTagsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutProductsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUpdateManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutTraitsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutProductsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUpdateManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutTypeInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUpdateManyWithoutProductsInput>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutVideosInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutProductsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  website?: InputMaybe<WebsiteUpdateOneWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ProductUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutProductsInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutProductsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutProductsInput>;
  collections?: InputMaybe<CollectionUpdateManyWithoutProductsInput>;
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  creatorEarnings?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutProductsInput>;
  editionAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  editionMinted?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  editionSize?: InputMaybe<IntFieldUpdateOperationsInput>;
  editionType?: InputMaybe<NullableEnumEditionTypeFieldUpdateOperationsInput>;
  externalNftChain?: InputMaybe<NullableEnumChainFieldUpdateOperationsInput>;
  externalNftContractAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  gallery?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  height?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  inStock?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  isExternalNft?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  length?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  links?: InputMaybe<LinkUpdateManyWithoutProductsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutProductInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutProductsInput>;
  price?: InputMaybe<FloatFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutProductsInput>;
  productType?: InputMaybe<NullableEnumProductTypeFieldUpdateOperationsInput>;
  quantity?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutProductsInput>;
  sale_price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  sku?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  storageSize?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutProductsInput>;
  tax_code?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  traits?: InputMaybe<TraitUpdateManyWithoutProductInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutProductsInput>;
  unit?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  variation_options?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  variations?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  videos?: InputMaybe<VideoUpdateManyWithoutProductsInput>;
  width?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type RedeemableAvgOrderByAggregateInput = {
  perLimit?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
};

export type RedeemableCountOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  perLimit?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  redeemInfo?: InputMaybe<SortOrder>;
  redeemPassword?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type RedeemableCreateManyInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  perLimit: Scalars['Int'];
  quantity: Scalars['Int'];
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RedeemableCreateWithoutOrderedRedeemablesInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  perLimit: Scalars['Int'];
  products?: InputMaybe<ProductCreateNestedManyWithoutRedeemablesInput>;
  quantity: Scalars['Int'];
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutRedeemablesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RedeemableMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  perLimit?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  redeemPassword?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type RedeemableMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  perLimit?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  redeemPassword?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type RedeemableOrderByWithAggregationInput = {
  _avg?: InputMaybe<RedeemableAvgOrderByAggregateInput>;
  _count?: InputMaybe<RedeemableCountOrderByAggregateInput>;
  _max?: InputMaybe<RedeemableMaxOrderByAggregateInput>;
  _min?: InputMaybe<RedeemableMinOrderByAggregateInput>;
  _sum?: InputMaybe<RedeemableSumOrderByAggregateInput>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  perLimit?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
  redeemInfo?: InputMaybe<SortOrder>;
  redeemPassword?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type RedeemableSumOrderByAggregateInput = {
  perLimit?: InputMaybe<SortOrder>;
  quantity?: InputMaybe<SortOrder>;
};

export type RedeemableRelationFilter = {
  is?: InputMaybe<RedeemableWhereInput>;
  isNot?: InputMaybe<RedeemableWhereInput>;
};

export type RedeemableScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<RedeemableScalarWhereWithAggregatesInput>>>;
  content?: InputMaybe<JsonNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<RedeemableScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RedeemableScalarWhereWithAggregatesInput>>>;
  paid?: InputMaybe<BoolNullableWithAggregatesFilter>;
  perLimit?: InputMaybe<IntWithAggregatesFilter>;
  quantity?: InputMaybe<IntWithAggregatesFilter>;
  redeemInfo?: InputMaybe<JsonNullableWithAggregatesFilter>;
  redeemPassword?: InputMaybe<StringNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  transactionHash?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type RedeemableUncheckedCreateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedCreateNestedManyWithoutRedeemableInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  perLimit: Scalars['Int'];
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutRedeemablesInput>;
  quantity: Scalars['Int'];
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RedeemableUncheckedUpdateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUncheckedUpdateManyWithoutRedeemableInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<IntFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutRedeemablesInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RedeemableUncheckedUpdateManyInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<IntFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RedeemableUpdateWithoutOrderedRedeemablesInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<IntFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutRedeemablesInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutRedeemablesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RedeemableUpdateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUpdateManyWithoutRedeemableInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<IntFieldUpdateOperationsInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutRedeemablesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RedeemableUpdateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedRedeemables?: InputMaybe<OrderedRedeemableUpdateManyWithoutRedeemableInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  perLimit?: InputMaybe<IntFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutRedeemablesInput>;
  quantity?: InputMaybe<IntFieldUpdateOperationsInput>;
  redeemInfo?: InputMaybe<Scalars['Json']>;
  redeemPassword?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RefreshTokenCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  expires?: InputMaybe<SortOrder>;
  geo?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  lastActive?: InputMaybe<SortOrder>;
  loginTokenId?: InputMaybe<SortOrder>;
  userAgent?: InputMaybe<SortOrder>;
  userAgentRaw?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
};

export type RefreshTokenCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  expires: Scalars['DateTime'];
  geo: Scalars['String'];
  ip: Scalars['String'];
  lastActive?: InputMaybe<Scalars['DateTime']>;
  loginTokenId: Scalars['String'];
  userAgent: Scalars['String'];
  userAgentRaw: Scalars['String'];
  userId: Scalars['String'];
  value: Scalars['String'];
};

export type RefreshTokenMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  expires?: InputMaybe<SortOrder>;
  geo?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  lastActive?: InputMaybe<SortOrder>;
  loginTokenId?: InputMaybe<SortOrder>;
  userAgent?: InputMaybe<SortOrder>;
  userAgentRaw?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
};

export type RefreshTokenMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  expires?: InputMaybe<SortOrder>;
  geo?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  lastActive?: InputMaybe<SortOrder>;
  loginTokenId?: InputMaybe<SortOrder>;
  userAgent?: InputMaybe<SortOrder>;
  userAgentRaw?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
};

export type RefreshTokenOrderByWithAggregationInput = {
  _count?: InputMaybe<RefreshTokenCountOrderByAggregateInput>;
  _max?: InputMaybe<RefreshTokenMaxOrderByAggregateInput>;
  _min?: InputMaybe<RefreshTokenMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  expires?: InputMaybe<SortOrder>;
  geo?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  lastActive?: InputMaybe<SortOrder>;
  loginTokenId?: InputMaybe<SortOrder>;
  userAgent?: InputMaybe<SortOrder>;
  userAgentRaw?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  value?: InputMaybe<SortOrder>;
};

export type RefreshTokenScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<RefreshTokenScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  expires?: InputMaybe<DateTimeWithAggregatesFilter>;
  geo?: InputMaybe<StringWithAggregatesFilter>;
  ip?: InputMaybe<StringWithAggregatesFilter>;
  lastActive?: InputMaybe<DateTimeWithAggregatesFilter>;
  loginTokenId?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<RefreshTokenScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RefreshTokenScalarWhereWithAggregatesInput>>>;
  userAgent?: InputMaybe<StringWithAggregatesFilter>;
  userAgentRaw?: InputMaybe<StringWithAggregatesFilter>;
  userId?: InputMaybe<StringWithAggregatesFilter>;
  value?: InputMaybe<StringWithAggregatesFilter>;
};

export type RefreshTokenUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  expires: Scalars['DateTime'];
  geo: Scalars['String'];
  ip: Scalars['String'];
  lastActive?: InputMaybe<Scalars['DateTime']>;
  loginTokenId: Scalars['String'];
  userAgent: Scalars['String'];
  userAgentRaw: Scalars['String'];
  userId: Scalars['String'];
  value: Scalars['String'];
};

export type RefreshTokenUncheckedUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  expires?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<StringFieldUpdateOperationsInput>;
  lastActive?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  loginTokenId?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<StringFieldUpdateOperationsInput>;
  userId?: InputMaybe<StringFieldUpdateOperationsInput>;
  value?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type RefreshTokenUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  expires?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<StringFieldUpdateOperationsInput>;
  lastActive?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  loginTokenId?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<StringFieldUpdateOperationsInput>;
  userId?: InputMaybe<StringFieldUpdateOperationsInput>;
  value?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type RefreshTokenUpdateWithoutUserInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  expires?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  geo?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<StringFieldUpdateOperationsInput>;
  lastActive?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  loginTokenId?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgent?: InputMaybe<StringFieldUpdateOperationsInput>;
  userAgentRaw?: InputMaybe<StringFieldUpdateOperationsInput>;
  value?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type RefundAvgOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
};

export type RefundCountOrderByAggregateInput = {
  accept?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  orderId?: InputMaybe<SortOrder>;
  received?: InputMaybe<SortOrder>;
  shippingImages?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type RefundCreateManyInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  amount?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  orderId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type RefundCreateshippingImagesInput = {
  set: Scalars['Json'];
};

export type RefundCreateWithoutOrderedProductsInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  amount?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  order?: InputMaybe<OrderCreateNestedOneWithoutRefundsInput>;
  received?: InputMaybe<Scalars['Boolean']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type RefundMaxOrderByAggregateInput = {
  accept?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  orderId?: InputMaybe<SortOrder>;
  received?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type RefundMinOrderByAggregateInput = {
  accept?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  orderId?: InputMaybe<SortOrder>;
  received?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type RefundOrderByWithAggregationInput = {
  _avg?: InputMaybe<RefundAvgOrderByAggregateInput>;
  _count?: InputMaybe<RefundCountOrderByAggregateInput>;
  _max?: InputMaybe<RefundMaxOrderByAggregateInput>;
  _min?: InputMaybe<RefundMinOrderByAggregateInput>;
  _sum?: InputMaybe<RefundSumOrderByAggregateInput>;
  accept?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  orderId?: InputMaybe<SortOrder>;
  received?: InputMaybe<SortOrder>;
  shippingImages?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type RefundSumOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
};

export type RefundRelationFilter = {
  is?: InputMaybe<RefundWhereInput>;
  isNot?: InputMaybe<RefundWhereInput>;
};

export type RefundScalarWhereWithAggregatesInput = {
  accept?: InputMaybe<BoolNullableWithAggregatesFilter>;
  amount?: InputMaybe<FloatNullableWithAggregatesFilter>;
  AND?: InputMaybe<Array<InputMaybe<RefundScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<RefundScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RefundScalarWhereWithAggregatesInput>>>;
  orderId?: InputMaybe<StringNullableWithAggregatesFilter>;
  received?: InputMaybe<BoolNullableWithAggregatesFilter>;
  shippingImages?: InputMaybe<JsonNullableListFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
};

export type RefundUncheckedCreateInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  amount?: InputMaybe<Scalars['Float']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutRefundInput>;
  orderId?: InputMaybe<Scalars['String']>;
  received?: InputMaybe<Scalars['Boolean']>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type RefundUncheckedUpdateInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutRefundInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type RefundUncheckedUpdateManyInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type RefundUpdateshippingImagesInput = {
  push?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  set?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
};

export type RefundUpdateWithoutOrderedProductsInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  order?: InputMaybe<OrderUpdateOneWithoutRefundsInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type RefundUpdateWithoutOrderInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutRefundInput>;
  received?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  shippingImages?: InputMaybe<Array<InputMaybe<Scalars['Json']>>>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type RequestAvgOrderByAggregateInput = {
  applicationFee?: InputMaybe<SortOrder>;
  days?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
};

export type RequestClickCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type RequestClickCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type RequestClickMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type RequestClickMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type RequestClickOrderByWithAggregationInput = {
  _count?: InputMaybe<RequestClickCountOrderByAggregateInput>;
  _max?: InputMaybe<RequestClickMaxOrderByAggregateInput>;
  _min?: InputMaybe<RequestClickMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  ip?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type RequestClickScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  ip?: InputMaybe<StringNullableWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RequestClickScalarWhereWithAggregatesInput>>>;
  pageId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
};

export type RequestClickUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  ip?: InputMaybe<Scalars['String']>;
  pageId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type RequestClickUncheckedUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type RequestClickUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type RequestClickUpdateWithoutPageInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  ip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type RequestCountOrderByAggregateInput = {
  accept?: InputMaybe<SortOrder>;
  acceptBefore?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  collectionId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  cryptoCurrencyCode?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  days?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expiredAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  message?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  paidAt?: InputMaybe<SortOrder>;
  paymentId?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  requestAccept?: InputMaybe<SortOrder>;
  requestStatus?: InputMaybe<SortOrder>;
  stripeSessionId?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type RequestCreateManyInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  collectionId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  days: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description: Scalars['String'];
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message: Scalars['String'];
  name: Scalars['String'];
  pageId?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  requestAccept?: InputMaybe<RequestAccept>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeSessionId?: InputMaybe<Scalars['String']>;
  subject: Scalars['String'];
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestMaxOrderByAggregateInput = {
  accept?: InputMaybe<SortOrder>;
  acceptBefore?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  collectionId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  cryptoCurrencyCode?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  days?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expiredAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  message?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  paidAt?: InputMaybe<SortOrder>;
  paymentId?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  requestAccept?: InputMaybe<SortOrder>;
  requestStatus?: InputMaybe<SortOrder>;
  stripeSessionId?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type RequestMinOrderByAggregateInput = {
  accept?: InputMaybe<SortOrder>;
  acceptBefore?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  collectionId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  cryptoCurrencyCode?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  days?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expiredAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  message?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  paidAt?: InputMaybe<SortOrder>;
  paymentId?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  requestAccept?: InputMaybe<SortOrder>;
  requestStatus?: InputMaybe<SortOrder>;
  stripeSessionId?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type RequestOrderByWithAggregationInput = {
  _avg?: InputMaybe<RequestAvgOrderByAggregateInput>;
  _count?: InputMaybe<RequestCountOrderByAggregateInput>;
  _max?: InputMaybe<RequestMaxOrderByAggregateInput>;
  _min?: InputMaybe<RequestMinOrderByAggregateInput>;
  _sum?: InputMaybe<RequestSumOrderByAggregateInput>;
  accept?: InputMaybe<SortOrder>;
  acceptBefore?: InputMaybe<SortOrder>;
  active?: InputMaybe<SortOrder>;
  applicationFee?: InputMaybe<SortOrder>;
  collectionId?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  cryptoCurrencyCode?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  customerId?: InputMaybe<SortOrder>;
  days?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  expiredAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  message?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  pageId?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  paidAt?: InputMaybe<SortOrder>;
  paymentId?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  requestAccept?: InputMaybe<SortOrder>;
  requestStatus?: InputMaybe<SortOrder>;
  stripeSessionId?: InputMaybe<SortOrder>;
  subject?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type RequestSumOrderByAggregateInput = {
  applicationFee?: InputMaybe<SortOrder>;
  days?: InputMaybe<SortOrder>;
  price?: InputMaybe<SortOrder>;
  total?: InputMaybe<SortOrder>;
};

export type RequestScalarWhereWithAggregatesInput = {
  accept?: InputMaybe<BoolNullableWithAggregatesFilter>;
  acceptBefore?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  AND?: InputMaybe<Array<InputMaybe<RequestScalarWhereWithAggregatesInput>>>;
  applicationFee?: InputMaybe<FloatNullableWithAggregatesFilter>;
  collectionId?: InputMaybe<StringNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  cryptoCurrencyCode?: InputMaybe<EnumCryptoCurrencyNullableWithAggregatesFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableWithAggregatesFilter>;
  customerId?: InputMaybe<StringNullableWithAggregatesFilter>;
  days?: InputMaybe<IntWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringWithAggregatesFilter>;
  expiredAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  message?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<RequestScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<RequestScalarWhereWithAggregatesInput>>>;
  pageId?: InputMaybe<StringNullableWithAggregatesFilter>;
  paid?: InputMaybe<BoolNullableWithAggregatesFilter>;
  paidAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  paymentId?: InputMaybe<StringNullableWithAggregatesFilter>;
  price?: InputMaybe<FloatNullableWithAggregatesFilter>;
  requestAccept?: InputMaybe<EnumRequestAcceptNullableWithAggregatesFilter>;
  requestStatus?: InputMaybe<EnumRequestStatusNullableWithAggregatesFilter>;
  stripeSessionId?: InputMaybe<StringNullableWithAggregatesFilter>;
  subject?: InputMaybe<StringWithAggregatesFilter>;
  total?: InputMaybe<FloatNullableWithAggregatesFilter>;
  transactionHash?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  url?: InputMaybe<StringWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type RequestUncheckedCreateInput = {
  accept?: InputMaybe<Scalars['Boolean']>;
  acceptBefore?: InputMaybe<Scalars['DateTime']>;
  active?: InputMaybe<Scalars['Boolean']>;
  applicationFee?: InputMaybe<Scalars['Float']>;
  collectionId?: InputMaybe<Scalars['String']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  customerId?: InputMaybe<Scalars['String']>;
  days: Scalars['Int'];
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description: Scalars['String'];
  expiredAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message: Scalars['String'];
  name: Scalars['String'];
  pageId?: InputMaybe<Scalars['String']>;
  paid?: InputMaybe<Scalars['Boolean']>;
  paidAt?: InputMaybe<Scalars['DateTime']>;
  paymentId?: InputMaybe<Scalars['String']>;
  price?: InputMaybe<Scalars['Float']>;
  requestAccept?: InputMaybe<RequestAccept>;
  requestStatus?: InputMaybe<RequestStatus>;
  stripeSessionId?: InputMaybe<Scalars['String']>;
  subject: Scalars['String'];
  total?: InputMaybe<Scalars['Float']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type RequestUncheckedUpdateInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  collectionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  days?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<StringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestAccept?: InputMaybe<NullableEnumRequestAcceptFieldUpdateOperationsInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subject?: InputMaybe<StringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUncheckedUpdateManyInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  collectionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  days?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<StringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestAccept?: InputMaybe<NullableEnumRequestAcceptFieldUpdateOperationsInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subject?: InputMaybe<StringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUpdateWithoutCollectionInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutRequestsInput>;
  days?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<StringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutRequestsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestAccept?: InputMaybe<NullableEnumRequestAcceptFieldUpdateOperationsInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subject?: InputMaybe<StringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUpdateWithoutCustomerInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  collection?: InputMaybe<CollectionUpdateOneWithoutRequestsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  days?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<StringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  page?: InputMaybe<PageUpdateOneWithoutRequestsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestAccept?: InputMaybe<NullableEnumRequestAcceptFieldUpdateOperationsInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subject?: InputMaybe<StringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type RequestUpdateWithoutPageInput = {
  accept?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  acceptBefore?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  applicationFee?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  collection?: InputMaybe<CollectionUpdateOneWithoutRequestsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  customer?: InputMaybe<CustomerUpdateOneWithoutRequestsInput>;
  days?: InputMaybe<IntFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<StringFieldUpdateOperationsInput>;
  expiredAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  message?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  paidAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  paymentId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  price?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  requestAccept?: InputMaybe<NullableEnumRequestAcceptFieldUpdateOperationsInput>;
  requestStatus?: InputMaybe<NullableEnumRequestStatusFieldUpdateOperationsInput>;
  stripeSessionId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  subject?: InputMaybe<StringFieldUpdateOperationsInput>;
  total?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ShippingAvgOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
};

export type ShippingCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  countryCode?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isGlobal?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ShippingCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amount: Scalars['Float'];
  countryCode?: InputMaybe<CountryCode>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  isGlobal?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  state?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ShippingMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  countryCode?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isGlobal?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ShippingMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  countryCode?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isGlobal?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ShippingOrderByWithAggregationInput = {
  _avg?: InputMaybe<ShippingAvgOrderByAggregateInput>;
  _count?: InputMaybe<ShippingCountOrderByAggregateInput>;
  _max?: InputMaybe<ShippingMaxOrderByAggregateInput>;
  _min?: InputMaybe<ShippingMinOrderByAggregateInput>;
  _sum?: InputMaybe<ShippingSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  amount?: InputMaybe<SortOrder>;
  countryCode?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  isGlobal?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  type?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type ShippingSumOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
};

export type ShippingScalarWhereWithAggregatesInput = {
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  amount?: InputMaybe<FloatWithAggregatesFilter>;
  AND?: InputMaybe<Array<InputMaybe<ShippingScalarWhereWithAggregatesInput>>>;
  countryCode?: InputMaybe<EnumCountryCodeNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  isGlobal?: InputMaybe<BoolNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<ShippingScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ShippingScalarWhereWithAggregatesInput>>>;
  state?: InputMaybe<StringNullableWithAggregatesFilter>;
  type?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type ShippingUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  amount: Scalars['Float'];
  countryCode?: InputMaybe<CountryCode>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  isGlobal?: InputMaybe<Scalars['Boolean']>;
  name: Scalars['String'];
  state?: InputMaybe<Scalars['String']>;
  type?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type ShippingUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amount?: InputMaybe<FloatFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isGlobal?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ShippingUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amount?: InputMaybe<FloatFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isGlobal?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type ShippingUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  amount?: InputMaybe<FloatFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  isGlobal?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type SlugCounterAvgOrderByAggregateInput = {
  counter?: InputMaybe<SortOrder>;
};

export type SlugCounterCountOrderByAggregateInput = {
  counter?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type SlugCounterCreateManyInput = {
  counter?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SlugCounterMaxOrderByAggregateInput = {
  counter?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type SlugCounterMinOrderByAggregateInput = {
  counter?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type SlugCounterOrderByWithAggregationInput = {
  _avg?: InputMaybe<SlugCounterAvgOrderByAggregateInput>;
  _count?: InputMaybe<SlugCounterCountOrderByAggregateInput>;
  _max?: InputMaybe<SlugCounterMaxOrderByAggregateInput>;
  _min?: InputMaybe<SlugCounterMinOrderByAggregateInput>;
  _sum?: InputMaybe<SlugCounterSumOrderByAggregateInput>;
  counter?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  model?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  title?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type SlugCounterSumOrderByAggregateInput = {
  counter?: InputMaybe<SortOrder>;
};

export type SlugCounterScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<SlugCounterScalarWhereWithAggregatesInput>>>;
  counter?: InputMaybe<IntNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  model?: InputMaybe<StringNullableWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<SlugCounterScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<SlugCounterScalarWhereWithAggregatesInput>>>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  title?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
};

export type SlugCounterUncheckedCreateInput = {
  counter?: InputMaybe<Scalars['Int']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  model?: InputMaybe<Scalars['String']>;
  slug?: InputMaybe<Scalars['String']>;
  title?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type SlugCounterUncheckedUpdateInput = {
  counter?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SlugCounterUncheckedUpdateManyInput = {
  counter?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  model?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  title?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
};

export type SocialCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  socialType?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type SocialCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  socialType: SocialType;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  websiteId?: InputMaybe<Scalars['String']>;
};

export type SocialMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  socialType?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type SocialMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  socialType?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type SocialOrderByWithAggregationInput = {
  _count?: InputMaybe<SocialCountOrderByAggregateInput>;
  _max?: InputMaybe<SocialMaxOrderByAggregateInput>;
  _min?: InputMaybe<SocialMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  socialType?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  url?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type SocialScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<SocialScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<SocialScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<SocialScalarWhereWithAggregatesInput>>>;
  socialType?: InputMaybe<EnumSocialTypeWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  url?: InputMaybe<StringWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type SocialUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  socialType: SocialType;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  url: Scalars['String'];
  websiteId?: InputMaybe<Scalars['String']>;
};

export type SocialUncheckedUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  socialType?: InputMaybe<EnumSocialTypeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SocialUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  socialType?: InputMaybe<EnumSocialTypeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type SocialUpdateWithoutWebsiteInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  socialType?: InputMaybe<EnumSocialTypeFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  url?: InputMaybe<StringFieldUpdateOperationsInput>;
};

export type TagCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  typeId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type TagCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type TagMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  typeId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type TagMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  typeId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type TagOrderByWithAggregationInput = {
  _count?: InputMaybe<TagCountOrderByAggregateInput>;
  _max?: InputMaybe<TagMaxOrderByAggregateInput>;
  _min?: InputMaybe<TagMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  icon?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  typeId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type TagScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<TagScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  icon?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<TagScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<TagScalarWhereWithAggregatesInput>>>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  typeId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
};

export type TagUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  icon?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutTagsInput>;
  slug?: InputMaybe<Scalars['String']>;
  typeId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type TagUncheckedUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutTagsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TagUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  typeId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TagUpdateWithoutProductsInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  type?: InputMaybe<TypeUpdateOneWithoutTagsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TagUpdateWithoutTypeInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  icon?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutTagsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TaxAvgOrderByAggregateInput = {
  percentage?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
};

export type TaxCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  countryCode?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  inclusive?: InputMaybe<SortOrder>;
  isGlobal?: InputMaybe<SortOrder>;
  jurisdiction?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  onShipping?: InputMaybe<SortOrder>;
  percentage?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  stripePrivateTaxId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
  zip?: InputMaybe<SortOrder>;
};

export type TaxCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  inclusive: Scalars['Boolean'];
  isGlobal?: InputMaybe<Scalars['Boolean']>;
  jurisdiction?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  onShipping?: InputMaybe<Scalars['Boolean']>;
  percentage: Scalars['Float'];
  priority?: InputMaybe<Scalars['Int']>;
  state?: InputMaybe<Scalars['String']>;
  stripePrivateTaxId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
  zip?: InputMaybe<Scalars['String']>;
};

export type TaxMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  countryCode?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  inclusive?: InputMaybe<SortOrder>;
  isGlobal?: InputMaybe<SortOrder>;
  jurisdiction?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  onShipping?: InputMaybe<SortOrder>;
  percentage?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  stripePrivateTaxId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
  zip?: InputMaybe<SortOrder>;
};

export type TaxMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  countryCode?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  inclusive?: InputMaybe<SortOrder>;
  isGlobal?: InputMaybe<SortOrder>;
  jurisdiction?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  onShipping?: InputMaybe<SortOrder>;
  percentage?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  stripePrivateTaxId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
  zip?: InputMaybe<SortOrder>;
};

export type TaxOrderByWithAggregationInput = {
  _avg?: InputMaybe<TaxAvgOrderByAggregateInput>;
  _count?: InputMaybe<TaxCountOrderByAggregateInput>;
  _max?: InputMaybe<TaxMaxOrderByAggregateInput>;
  _min?: InputMaybe<TaxMinOrderByAggregateInput>;
  _sum?: InputMaybe<TaxSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  city?: InputMaybe<SortOrder>;
  country?: InputMaybe<SortOrder>;
  countryCode?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  inclusive?: InputMaybe<SortOrder>;
  isGlobal?: InputMaybe<SortOrder>;
  jurisdiction?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  onShipping?: InputMaybe<SortOrder>;
  percentage?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
  state?: InputMaybe<SortOrder>;
  stripePrivateTaxId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
  zip?: InputMaybe<SortOrder>;
};

export type TaxSumOrderByAggregateInput = {
  percentage?: InputMaybe<SortOrder>;
  priority?: InputMaybe<SortOrder>;
};

export type TaxScalarWhereWithAggregatesInput = {
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  AND?: InputMaybe<Array<InputMaybe<TaxScalarWhereWithAggregatesInput>>>;
  city?: InputMaybe<StringNullableWithAggregatesFilter>;
  country?: InputMaybe<StringNullableWithAggregatesFilter>;
  countryCode?: InputMaybe<EnumCountryCodeNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  inclusive?: InputMaybe<BoolWithAggregatesFilter>;
  isGlobal?: InputMaybe<BoolNullableWithAggregatesFilter>;
  jurisdiction?: InputMaybe<StringNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<TaxScalarWhereWithAggregatesInput>>>;
  onShipping?: InputMaybe<BoolNullableWithAggregatesFilter>;
  OR?: InputMaybe<Array<InputMaybe<TaxScalarWhereWithAggregatesInput>>>;
  percentage?: InputMaybe<FloatWithAggregatesFilter>;
  priority?: InputMaybe<IntNullableWithAggregatesFilter>;
  state?: InputMaybe<StringNullableWithAggregatesFilter>;
  stripePrivateTaxId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
  zip?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type TaxUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  city?: InputMaybe<Scalars['String']>;
  country?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currencyCode?: InputMaybe<CurrencyCode>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  inclusive: Scalars['Boolean'];
  isGlobal?: InputMaybe<Scalars['Boolean']>;
  jurisdiction?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  onShipping?: InputMaybe<Scalars['Boolean']>;
  percentage: Scalars['Float'];
  priority?: InputMaybe<Scalars['Int']>;
  state?: InputMaybe<Scalars['String']>;
  stripePrivateTaxId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
  zip?: InputMaybe<Scalars['String']>;
};

export type TaxUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  inclusive?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isGlobal?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  jurisdiction?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  onShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  percentage?: InputMaybe<FloatFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripePrivateTaxId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  zip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type TaxUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  inclusive?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isGlobal?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  jurisdiction?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  onShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  percentage?: InputMaybe<FloatFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripePrivateTaxId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  zip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type TaxUpdateWithoutWebsiteInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  city?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  country?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  inclusive?: InputMaybe<BoolFieldUpdateOperationsInput>;
  isGlobal?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  jurisdiction?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  onShipping?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  percentage?: InputMaybe<FloatFieldUpdateOperationsInput>;
  priority?: InputMaybe<NullableIntFieldUpdateOperationsInput>;
  state?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripePrivateTaxId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  zip?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type TraitCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  productId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type TraitCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  productId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type TraitCreateWithoutValuesInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  product?: InputMaybe<ProductCreateNestedOneWithoutTraitsInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type TraitMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  productId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type TraitMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  productId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type TraitOrderByWithAggregationInput = {
  _count?: InputMaybe<TraitCountOrderByAggregateInput>;
  _max?: InputMaybe<TraitMaxOrderByAggregateInput>;
  _min?: InputMaybe<TraitMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  productId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type TraitRelationFilter = {
  is?: InputMaybe<TraitWhereInput>;
  isNot?: InputMaybe<TraitWhereInput>;
};

export type TraitScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<TraitScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<TraitScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<TraitScalarWhereWithAggregatesInput>>>;
  productId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
};

export type TraitUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name?: InputMaybe<Scalars['String']>;
  productId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  values?: InputMaybe<ValueUncheckedCreateNestedManyWithoutTraitInput>;
};

export type TraitUncheckedUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<ValueUncheckedUpdateManyWithoutTraitInput>;
};

export type TraitUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  productId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TraitUpdateWithoutProductInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  values?: InputMaybe<ValueUpdateManyWithoutTraitInput>;
};

export type TraitUpdateWithoutValuesInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  product?: InputMaybe<ProductUpdateOneWithoutTraitsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TypeCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type TypeCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type TypeCreateWithoutProductsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  slug?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<TagCreateNestedManyWithoutTypeInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type TypeCreateWithoutTagsInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<ProductCreateNestedManyWithoutTypeInput>;
  slug?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type TypeMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type TypeMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type TypeOrderByWithAggregationInput = {
  _count?: InputMaybe<TypeCountOrderByAggregateInput>;
  _max?: InputMaybe<TypeMaxOrderByAggregateInput>;
  _min?: InputMaybe<TypeMinOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type TypeRelationFilter = {
  is?: InputMaybe<TypeWhereInput>;
  isNot?: InputMaybe<TypeWhereInput>;
};

export type TypeScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<TypeScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<TypeScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<TypeScalarWhereWithAggregatesInput>>>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
};

export type TypeUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  name: Scalars['String'];
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutTypeInput>;
  slug?: InputMaybe<Scalars['String']>;
  tags?: InputMaybe<TagUncheckedCreateNestedManyWithoutTypeInput>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type TypeUncheckedUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutTypeInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUncheckedUpdateManyWithoutTypeInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TypeUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TypeUpdateWithoutProductsInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  tags?: InputMaybe<TagUpdateManyWithoutTypeInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type TypeUpdateWithoutTagsInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutTypeInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type UserAvgOrderByAggregateInput = {
  currentBalance?: InputMaybe<SortOrder>;
  totalEarnings?: InputMaybe<SortOrder>;
  withdrawnAmount?: InputMaybe<SortOrder>;
};

export type UserCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  currentBalance?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  stripeAccountId?: InputMaybe<SortOrder>;
  stripeCustomerId?: InputMaybe<SortOrder>;
  totalEarnings?: InputMaybe<SortOrder>;
  withdrawnAmount?: InputMaybe<SortOrder>;
};

export type UserCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email: Scalars['String'];
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  password?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type UserCreateWithoutAttachmentsInput = {
  audios?: InputMaybe<AudioCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type UserCreateWithoutAudiosInput = {
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type UserCreateWithoutBlocksInput = {
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type UserCreateWithoutCustomersInput = {
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type UserCreateWithoutDocumentsInput = {
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type UserCreateWithoutEmbedsInput = {
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type UserCreateWithoutLinksInput = {
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type UserCreateWithoutLoginTokensInput = {
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type UserCreateWithoutNotificationsInput = {
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type UserCreateWithoutPicturesInput = {
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type UserCreateWithoutRedeemablesInput = {
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type UserCreateWithoutRefreshTokensInput = {
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type UserCreateWithoutVideosInput = {
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  websites?: InputMaybe<WebsiteCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type UserCreateWithoutWebsitesInput = {
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type UserMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  currentBalance?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  stripeAccountId?: InputMaybe<SortOrder>;
  stripeCustomerId?: InputMaybe<SortOrder>;
  totalEarnings?: InputMaybe<SortOrder>;
  withdrawnAmount?: InputMaybe<SortOrder>;
};

export type UserMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  currentBalance?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  stripeAccountId?: InputMaybe<SortOrder>;
  stripeCustomerId?: InputMaybe<SortOrder>;
  totalEarnings?: InputMaybe<SortOrder>;
  withdrawnAmount?: InputMaybe<SortOrder>;
};

export type UserOrderByWithAggregationInput = {
  _avg?: InputMaybe<UserAvgOrderByAggregateInput>;
  _count?: InputMaybe<UserCountOrderByAggregateInput>;
  _max?: InputMaybe<UserMaxOrderByAggregateInput>;
  _min?: InputMaybe<UserMinOrderByAggregateInput>;
  _sum?: InputMaybe<UserSumOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  currentBalance?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  email?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  password?: InputMaybe<SortOrder>;
  stripeAccountId?: InputMaybe<SortOrder>;
  stripeCustomerId?: InputMaybe<SortOrder>;
  totalEarnings?: InputMaybe<SortOrder>;
  withdrawnAmount?: InputMaybe<SortOrder>;
};

export type UserSumOrderByAggregateInput = {
  currentBalance?: InputMaybe<SortOrder>;
  totalEarnings?: InputMaybe<SortOrder>;
  withdrawnAmount?: InputMaybe<SortOrder>;
};

export type UserRelationFilter = {
  is?: InputMaybe<UserWhereInput>;
  isNot?: InputMaybe<UserWhereInput>;
};

export type UserScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<UserScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  currentBalance?: InputMaybe<FloatNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolNullableWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  email?: InputMaybe<StringWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<UserScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<UserScalarWhereWithAggregatesInput>>>;
  password?: InputMaybe<StringNullableWithAggregatesFilter>;
  stripeAccountId?: InputMaybe<StringNullableWithAggregatesFilter>;
  stripeCustomerId?: InputMaybe<StringNullableWithAggregatesFilter>;
  totalEarnings?: InputMaybe<FloatNullableWithAggregatesFilter>;
  withdrawnAmount?: InputMaybe<FloatNullableWithAggregatesFilter>;
};

export type UserUncheckedCreateInput = {
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedCreateNestedManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedCreateNestedManyWithoutUserInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutUserInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  documents?: InputMaybe<DocumentUncheckedCreateNestedManyWithoutUserInput>;
  email: Scalars['String'];
  embeds?: InputMaybe<EmbedUncheckedCreateNestedManyWithoutUserInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedCreateNestedManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedCreateNestedManyWithoutUserInput>;
  name?: InputMaybe<Scalars['String']>;
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutUserInput>;
  password?: InputMaybe<Scalars['String']>;
  pictures?: InputMaybe<PictureUncheckedCreateNestedManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedCreateNestedManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedCreateNestedManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  stripeCustomerId?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  videos?: InputMaybe<VideoUncheckedCreateNestedManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedCreateNestedManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type UserUncheckedUpdateInput = {
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUncheckedUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUncheckedUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUncheckedUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUncheckedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUncheckedUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUncheckedUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUncheckedUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUncheckedUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUncheckedUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUncheckedUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUncheckedUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutAttachmentsInput = {
  audios?: InputMaybe<AudioUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutAudiosInput = {
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutBlocksInput = {
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutCustomersInput = {
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutDocumentsInput = {
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutEmbedsInput = {
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutLinksInput = {
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutLoginTokensInput = {
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutNotificationsInput = {
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutPicturesInput = {
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutRedeemablesInput = {
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutRefreshTokensInput = {
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutUserInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutVideosInput = {
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  websites?: InputMaybe<WebsiteUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type UserUpdateWithoutWebsitesInput = {
  attachments?: InputMaybe<AttachmentUpdateManyWithoutUserInput>;
  audios?: InputMaybe<AudioUpdateManyWithoutUserInput>;
  blocks?: InputMaybe<BlockUpdateManyWithoutUserInput>;
  createdAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutUserInput>;
  deleted?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  documents?: InputMaybe<DocumentUpdateManyWithoutUserInput>;
  email?: InputMaybe<StringFieldUpdateOperationsInput>;
  embeds?: InputMaybe<EmbedUpdateManyWithoutUserInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  links?: InputMaybe<LinkUpdateManyWithoutUserInput>;
  loginTokens?: InputMaybe<LoginTokenUpdateManyWithoutUserInput>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutUserInput>;
  password?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  pictures?: InputMaybe<PictureUpdateManyWithoutUserInput>;
  redeemables?: InputMaybe<RedeemableUpdateManyWithoutUserInput>;
  refreshTokens?: InputMaybe<RefreshTokenUpdateManyWithoutUserInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeCustomerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  videos?: InputMaybe<VideoUpdateManyWithoutUserInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type ValueAvgOrderByAggregateInput = {
  percentage?: InputMaybe<SortOrder>;
};

export type ValueCountOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percentage?: InputMaybe<SortOrder>;
  traitId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type ValueCreateManyInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  percentage?: InputMaybe<Scalars['Float']>;
  traitId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ValueMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percentage?: InputMaybe<SortOrder>;
  traitId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type ValueMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percentage?: InputMaybe<SortOrder>;
  traitId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type ValueOrderByWithAggregationInput = {
  _avg?: InputMaybe<ValueAvgOrderByAggregateInput>;
  _count?: InputMaybe<ValueCountOrderByAggregateInput>;
  _max?: InputMaybe<ValueMaxOrderByAggregateInput>;
  _min?: InputMaybe<ValueMinOrderByAggregateInput>;
  _sum?: InputMaybe<ValueSumOrderByAggregateInput>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  percentage?: InputMaybe<SortOrder>;
  traitId?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
};

export type ValueSumOrderByAggregateInput = {
  percentage?: InputMaybe<SortOrder>;
};

export type ValueScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<ValueScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringNullableWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<ValueScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<ValueScalarWhereWithAggregatesInput>>>;
  percentage?: InputMaybe<FloatNullableWithAggregatesFilter>;
  traitId?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
};

export type ValueUncheckedCreateInput = {
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<Scalars['String']>;
  percentage?: InputMaybe<Scalars['Float']>;
  traitId?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
};

export type ValueUncheckedUpdateInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  percentage?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  traitId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ValueUncheckedUpdateManyInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  percentage?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  traitId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type ValueUpdateWithoutTraitInput = {
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  percentage?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type VideoCountOrderByAggregateInput = {
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  videoObj?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type VideoCreateManyInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type VideoCreateWithoutOrderedVideosInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductCreateNestedManyWithoutVideosInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type VideoMaxOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type VideoMinOrderByAggregateInput = {
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type VideoOrderByWithAggregationInput = {
  _count?: InputMaybe<VideoCountOrderByAggregateInput>;
  _max?: InputMaybe<VideoMaxOrderByAggregateInput>;
  _min?: InputMaybe<VideoMinOrderByAggregateInput>;
  content?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paid?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  transactionHash?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  videoObj?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
};

export type VideoRelationFilter = {
  is?: InputMaybe<VideoWhereInput>;
  isNot?: InputMaybe<VideoWhereInput>;
};

export type VideoScalarWhereWithAggregatesInput = {
  AND?: InputMaybe<Array<InputMaybe<VideoScalarWhereWithAggregatesInput>>>;
  content?: InputMaybe<JsonNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<VideoScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<VideoScalarWhereWithAggregatesInput>>>;
  paid?: InputMaybe<BoolNullableWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  transactionHash?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
  videoObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type VideoUncheckedCreateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name: Scalars['String'];
  orderedVideos?: InputMaybe<OrderedVideoUncheckedCreateNestedManyWithoutVideoInput>;
  paid?: InputMaybe<Scalars['Boolean']>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutVideosInput>;
  slug?: InputMaybe<Scalars['String']>;
  transactionHash?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<Scalars['String']>;
};

export type VideoUncheckedUpdateInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedVideos?: InputMaybe<OrderedVideoUncheckedUpdateManyWithoutVideoInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutVideosInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoUncheckedUpdateManyInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoUpdateWithoutOrderedVideosInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutVideosInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoUpdateWithoutProductsInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedVideos?: InputMaybe<OrderedVideoUpdateManyWithoutVideoInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutVideosInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type VideoUpdateWithoutUserInput = {
  content?: InputMaybe<Scalars['Json']>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedVideos?: InputMaybe<OrderedVideoUpdateManyWithoutVideoInput>;
  paid?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutVideosInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  transactionHash?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  videoObj?: InputMaybe<Scalars['Json']>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WebsiteAvgOrderByAggregateInput = {
  currentBalance?: InputMaybe<SortOrder>;
  totalEarnings?: InputMaybe<SortOrder>;
  withdrawnAmount?: InputMaybe<SortOrder>;
};

export type WebsiteCountOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  address?: InputMaybe<SortOrder>;
  adminFilters?: InputMaybe<SortOrder>;
  canonicalUrl?: InputMaybe<SortOrder>;
  chain?: InputMaybe<SortOrder>;
  contact?: InputMaybe<SortOrder>;
  countryCode?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  cryptoCurrencyCode?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  currentBalance?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  discordLink?: InputMaybe<SortOrder>;
  externalName?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  facebookAppId?: InputMaybe<SortOrder>;
  facebookIsEnable?: InputMaybe<SortOrder>;
  facebookLink?: InputMaybe<SortOrder>;
  facebookPageId?: InputMaybe<SortOrder>;
  googleIsEnable?: InputMaybe<SortOrder>;
  googleTagManagerId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  instagramLink?: InputMaybe<SortOrder>;
  languageCode?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  logoObj?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  metaTags?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  pageOrder?: InputMaybe<SortOrder>;
  paymentMethod?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  stripeAccountId?: InputMaybe<SortOrder>;
  themeColor?: InputMaybe<SortOrder>;
  tikTokLink?: InputMaybe<SortOrder>;
  totalEarnings?: InputMaybe<SortOrder>;
  twitterCardType?: InputMaybe<SortOrder>;
  twitterHandle?: InputMaybe<SortOrder>;
  twitterLink?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteUrl?: InputMaybe<SortOrder>;
  withdrawnAmount?: InputMaybe<SortOrder>;
};

export type WebsiteCreateManyInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  chain?: InputMaybe<Scalars['Json']>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  paymentMethod: PaymentMethod;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type WebsiteCreatemetaTagsInput = {
  set: Scalars['String'];
};

export type WebsiteCreatepageOrderInput = {
  set: Scalars['String'];
};

export type WebsiteCreateWithoutAttachmentsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutAttributesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutCategoriesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutCouponsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutCustomersInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutGroupInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutNotificationsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutOrderedProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutOrdersInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutPageCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutPagesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutProductCollectionsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutProductsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutShippingsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutSocialsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutTaxesInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteCreateWithoutWithdrawsInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  user?: InputMaybe<UserCreateNestedOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
};

export type WebsiteMaxOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  canonicalUrl?: InputMaybe<SortOrder>;
  contact?: InputMaybe<SortOrder>;
  countryCode?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  cryptoCurrencyCode?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  currentBalance?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  discordLink?: InputMaybe<SortOrder>;
  externalName?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  facebookAppId?: InputMaybe<SortOrder>;
  facebookIsEnable?: InputMaybe<SortOrder>;
  facebookLink?: InputMaybe<SortOrder>;
  facebookPageId?: InputMaybe<SortOrder>;
  googleIsEnable?: InputMaybe<SortOrder>;
  googleTagManagerId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  instagramLink?: InputMaybe<SortOrder>;
  languageCode?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paymentMethod?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  stripeAccountId?: InputMaybe<SortOrder>;
  themeColor?: InputMaybe<SortOrder>;
  tikTokLink?: InputMaybe<SortOrder>;
  totalEarnings?: InputMaybe<SortOrder>;
  twitterCardType?: InputMaybe<SortOrder>;
  twitterHandle?: InputMaybe<SortOrder>;
  twitterLink?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteUrl?: InputMaybe<SortOrder>;
  withdrawnAmount?: InputMaybe<SortOrder>;
};

export type WebsiteMinOrderByAggregateInput = {
  active?: InputMaybe<SortOrder>;
  canonicalUrl?: InputMaybe<SortOrder>;
  contact?: InputMaybe<SortOrder>;
  countryCode?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  cryptoCurrencyCode?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  currentBalance?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  discordLink?: InputMaybe<SortOrder>;
  externalName?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  facebookAppId?: InputMaybe<SortOrder>;
  facebookIsEnable?: InputMaybe<SortOrder>;
  facebookLink?: InputMaybe<SortOrder>;
  facebookPageId?: InputMaybe<SortOrder>;
  googleIsEnable?: InputMaybe<SortOrder>;
  googleTagManagerId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  instagramLink?: InputMaybe<SortOrder>;
  languageCode?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  paymentMethod?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  stripeAccountId?: InputMaybe<SortOrder>;
  themeColor?: InputMaybe<SortOrder>;
  tikTokLink?: InputMaybe<SortOrder>;
  totalEarnings?: InputMaybe<SortOrder>;
  twitterCardType?: InputMaybe<SortOrder>;
  twitterHandle?: InputMaybe<SortOrder>;
  twitterLink?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteUrl?: InputMaybe<SortOrder>;
  withdrawnAmount?: InputMaybe<SortOrder>;
};

export type WebsiteOrderByWithAggregationInput = {
  _avg?: InputMaybe<WebsiteAvgOrderByAggregateInput>;
  _count?: InputMaybe<WebsiteCountOrderByAggregateInput>;
  _max?: InputMaybe<WebsiteMaxOrderByAggregateInput>;
  _min?: InputMaybe<WebsiteMinOrderByAggregateInput>;
  _sum?: InputMaybe<WebsiteSumOrderByAggregateInput>;
  active?: InputMaybe<SortOrder>;
  address?: InputMaybe<SortOrder>;
  adminFilters?: InputMaybe<SortOrder>;
  canonicalUrl?: InputMaybe<SortOrder>;
  chain?: InputMaybe<SortOrder>;
  contact?: InputMaybe<SortOrder>;
  countryCode?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  cryptoCurrencyCode?: InputMaybe<SortOrder>;
  currencyCode?: InputMaybe<SortOrder>;
  currentBalance?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  description?: InputMaybe<SortOrder>;
  discordLink?: InputMaybe<SortOrder>;
  externalName?: InputMaybe<SortOrder>;
  externalUrl?: InputMaybe<SortOrder>;
  facebookAppId?: InputMaybe<SortOrder>;
  facebookIsEnable?: InputMaybe<SortOrder>;
  facebookLink?: InputMaybe<SortOrder>;
  facebookPageId?: InputMaybe<SortOrder>;
  googleIsEnable?: InputMaybe<SortOrder>;
  googleTagManagerId?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  imageObj?: InputMaybe<SortOrder>;
  instagramLink?: InputMaybe<SortOrder>;
  languageCode?: InputMaybe<SortOrder>;
  location?: InputMaybe<SortOrder>;
  logoObj?: InputMaybe<SortOrder>;
  menu?: InputMaybe<SortOrder>;
  metaTags?: InputMaybe<SortOrder>;
  name?: InputMaybe<SortOrder>;
  pageOrder?: InputMaybe<SortOrder>;
  paymentMethod?: InputMaybe<SortOrder>;
  slug?: InputMaybe<SortOrder>;
  stripeAccountId?: InputMaybe<SortOrder>;
  themeColor?: InputMaybe<SortOrder>;
  tikTokLink?: InputMaybe<SortOrder>;
  totalEarnings?: InputMaybe<SortOrder>;
  twitterCardType?: InputMaybe<SortOrder>;
  twitterHandle?: InputMaybe<SortOrder>;
  twitterLink?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  userId?: InputMaybe<SortOrder>;
  walletAddress?: InputMaybe<SortOrder>;
  websiteUrl?: InputMaybe<SortOrder>;
  withdrawnAmount?: InputMaybe<SortOrder>;
};

export type WebsiteSumOrderByAggregateInput = {
  currentBalance?: InputMaybe<SortOrder>;
  totalEarnings?: InputMaybe<SortOrder>;
  withdrawnAmount?: InputMaybe<SortOrder>;
};

export type WebsiteRelationFilter = {
  is?: InputMaybe<WebsiteWhereInput>;
  isNot?: InputMaybe<WebsiteWhereInput>;
};

export type WebsiteScalarWhereWithAggregatesInput = {
  active?: InputMaybe<BoolNullableWithAggregatesFilter>;
  address?: InputMaybe<JsonNullableWithAggregatesFilter>;
  adminFilters?: InputMaybe<JsonNullableWithAggregatesFilter>;
  AND?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereWithAggregatesInput>>>;
  canonicalUrl?: InputMaybe<StringNullableWithAggregatesFilter>;
  chain?: InputMaybe<JsonNullableWithAggregatesFilter>;
  contact?: InputMaybe<StringNullableWithAggregatesFilter>;
  countryCode?: InputMaybe<EnumCountryCodeNullableWithAggregatesFilter>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  cryptoCurrencyCode?: InputMaybe<EnumCryptoCurrencyNullableWithAggregatesFilter>;
  currencyCode?: InputMaybe<EnumCurrencyCodeNullableWithAggregatesFilter>;
  currentBalance?: InputMaybe<FloatNullableWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  description?: InputMaybe<StringNullableWithAggregatesFilter>;
  discordLink?: InputMaybe<StringNullableWithAggregatesFilter>;
  externalName?: InputMaybe<StringNullableWithAggregatesFilter>;
  externalUrl?: InputMaybe<StringNullableWithAggregatesFilter>;
  facebookAppId?: InputMaybe<StringNullableWithAggregatesFilter>;
  facebookIsEnable?: InputMaybe<BoolNullableWithAggregatesFilter>;
  facebookLink?: InputMaybe<StringNullableWithAggregatesFilter>;
  facebookPageId?: InputMaybe<StringNullableWithAggregatesFilter>;
  googleIsEnable?: InputMaybe<BoolNullableWithAggregatesFilter>;
  googleTagManagerId?: InputMaybe<StringNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  imageObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  instagramLink?: InputMaybe<StringNullableWithAggregatesFilter>;
  languageCode?: InputMaybe<EnumLanguageCodeWithAggregatesFilter>;
  location?: InputMaybe<JsonNullableWithAggregatesFilter>;
  logoObj?: InputMaybe<JsonNullableWithAggregatesFilter>;
  menu?: InputMaybe<JsonNullableWithAggregatesFilter>;
  metaTags?: InputMaybe<StringNullableListFilter>;
  name?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<WebsiteScalarWhereWithAggregatesInput>>>;
  pageOrder?: InputMaybe<StringNullableListFilter>;
  paymentMethod?: InputMaybe<EnumPaymentMethodWithAggregatesFilter>;
  slug?: InputMaybe<StringNullableWithAggregatesFilter>;
  stripeAccountId?: InputMaybe<StringNullableWithAggregatesFilter>;
  themeColor?: InputMaybe<EnumColorWithAggregatesFilter>;
  tikTokLink?: InputMaybe<StringNullableWithAggregatesFilter>;
  totalEarnings?: InputMaybe<FloatNullableWithAggregatesFilter>;
  twitterCardType?: InputMaybe<StringNullableWithAggregatesFilter>;
  twitterHandle?: InputMaybe<StringNullableWithAggregatesFilter>;
  twitterLink?: InputMaybe<StringNullableWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  userId?: InputMaybe<StringNullableWithAggregatesFilter>;
  walletAddress?: InputMaybe<StringNullableWithAggregatesFilter>;
  websiteUrl?: InputMaybe<StringNullableWithAggregatesFilter>;
  withdrawnAmount?: InputMaybe<FloatNullableWithAggregatesFilter>;
};

export type WebsiteUncheckedCreateInput = {
  active?: InputMaybe<Scalars['Boolean']>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedCreateNestedManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedCreateNestedManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<Scalars['String']>;
  categories?: InputMaybe<CategoryUncheckedCreateNestedManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  contact?: InputMaybe<Scalars['String']>;
  countryCode?: InputMaybe<CountryCode>;
  coupons?: InputMaybe<CouponUncheckedCreateNestedManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<Scalars['DateTime']>;
  cryptoCurrencyCode?: InputMaybe<CryptoCurrency>;
  currencyCode?: InputMaybe<CurrencyCode>;
  currentBalance?: InputMaybe<Scalars['Float']>;
  customers?: InputMaybe<CustomerUncheckedCreateNestedManyWithoutWebsiteInput>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  description?: InputMaybe<Scalars['String']>;
  discordLink?: InputMaybe<Scalars['String']>;
  externalName?: InputMaybe<Scalars['String']>;
  externalUrl?: InputMaybe<Scalars['String']>;
  facebookAppId?: InputMaybe<Scalars['String']>;
  facebookIsEnable?: InputMaybe<Scalars['Boolean']>;
  facebookLink?: InputMaybe<Scalars['String']>;
  facebookPageId?: InputMaybe<Scalars['String']>;
  googleIsEnable?: InputMaybe<Scalars['Boolean']>;
  googleTagManagerId?: InputMaybe<Scalars['String']>;
  Group?: InputMaybe<GroupUncheckedCreateNestedManyWithoutWebsiteInput>;
  id?: InputMaybe<Scalars['String']>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<Scalars['String']>;
  languageCode: LanguageCode;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name: Scalars['String'];
  notifications?: InputMaybe<NotificationUncheckedCreateNestedManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedCreateNestedManyWithoutWebsiteInput>;
  paymentMethod: PaymentMethod;
  productCollections?: InputMaybe<ProductCollectionUncheckedCreateNestedManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedCreateNestedManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedCreateNestedManyWithoutWebsiteInput>;
  slug?: InputMaybe<Scalars['String']>;
  socials?: InputMaybe<SocialUncheckedCreateNestedManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<Scalars['String']>;
  taxes?: InputMaybe<TaxUncheckedCreateNestedManyWithoutWebsiteInput>;
  themeColor: Color;
  tikTokLink?: InputMaybe<Scalars['String']>;
  totalEarnings?: InputMaybe<Scalars['Float']>;
  twitterCardType?: InputMaybe<Scalars['String']>;
  twitterHandle?: InputMaybe<Scalars['String']>;
  twitterLink?: InputMaybe<Scalars['String']>;
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  userId?: InputMaybe<Scalars['String']>;
  walletAddress?: InputMaybe<Scalars['String']>;
  websiteUrl?: InputMaybe<Scalars['String']>;
  withdrawnAmount?: InputMaybe<Scalars['Float']>;
  withdraws?: InputMaybe<WithdrawUncheckedCreateNestedManyWithoutWebsiteInput>;
};

export type WebsiteUncheckedUpdateInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUncheckedUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUncheckedUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUncheckedUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUncheckedUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUncheckedUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUncheckedUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUncheckedUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUncheckedUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUncheckedUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUncheckedUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUncheckedUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUncheckedUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUncheckedUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUncheckedUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUncheckedUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUncheckedUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUncheckedUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUncheckedUpdateManyInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chain?: InputMaybe<Scalars['Json']>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  userId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type WebsiteUpdatemetaTagsInput = {
  push?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  set?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type WebsiteUpdatepageOrderInput = {
  push?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  set?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
};

export type WebsiteUpdateWithoutAttachmentsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutAttributesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutCategoriesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutCouponsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutCustomersInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutGroupInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutNotificationsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutOrderedProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutOrdersInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutPageCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutPagesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutProductCollectionsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutProductsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutShippingsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutSocialsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutTaxesInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutUserInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  withdraws?: InputMaybe<WithdrawUpdateManyWithoutWebsiteInput>;
};

export type WebsiteUpdateWithoutWithdrawsInput = {
  active?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  address?: InputMaybe<Scalars['Json']>;
  adminFilters?: InputMaybe<Scalars['Json']>;
  attachments?: InputMaybe<AttachmentUpdateManyWithoutWebsiteInput>;
  attributes?: InputMaybe<AttributeUpdateManyWithoutWebsiteInput>;
  canonicalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  categories?: InputMaybe<CategoryUpdateManyWithoutWebsiteInput>;
  chain?: InputMaybe<Scalars['Json']>;
  collections?: InputMaybe<CollectionUpdateManyWithoutWebsiteInput>;
  contact?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  countryCode?: InputMaybe<NullableEnumCountryCodeFieldUpdateOperationsInput>;
  coupons?: InputMaybe<CouponUpdateManyWithoutWebsiteInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  cryptoCurrencyCode?: InputMaybe<NullableEnumCryptoCurrencyFieldUpdateOperationsInput>;
  currencyCode?: InputMaybe<NullableEnumCurrencyCodeFieldUpdateOperationsInput>;
  currentBalance?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  customers?: InputMaybe<CustomerUpdateManyWithoutWebsiteInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  description?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  discordLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalName?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  externalUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookAppId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  facebookLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  facebookPageId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  googleIsEnable?: InputMaybe<NullableBoolFieldUpdateOperationsInput>;
  googleTagManagerId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  Group?: InputMaybe<GroupUpdateManyWithoutWebsiteInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  imageObj?: InputMaybe<Scalars['Json']>;
  instagramLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  languageCode?: InputMaybe<EnumLanguageCodeFieldUpdateOperationsInput>;
  location?: InputMaybe<Scalars['Json']>;
  logoObj?: InputMaybe<Scalars['Json']>;
  menu?: InputMaybe<Scalars['Json']>;
  metaTags?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  name?: InputMaybe<StringFieldUpdateOperationsInput>;
  notifications?: InputMaybe<NotificationUpdateManyWithoutWebsiteInput>;
  orderedProducts?: InputMaybe<OrderedProductUpdateManyWithoutWebsiteInput>;
  orders?: InputMaybe<OrderUpdateManyWithoutWebsiteInput>;
  pageCollections?: InputMaybe<PageCollectionUpdateManyWithoutWebsiteInput>;
  pageOrder?: InputMaybe<Array<InputMaybe<Scalars['String']>>>;
  pages?: InputMaybe<PageUpdateManyWithoutWebsiteInput>;
  paymentMethod?: InputMaybe<EnumPaymentMethodFieldUpdateOperationsInput>;
  productCollections?: InputMaybe<ProductCollectionUpdateManyWithoutWebsiteInput>;
  products?: InputMaybe<ProductUpdateManyWithoutWebsiteInput>;
  shippings?: InputMaybe<ShippingUpdateManyWithoutWebsiteInput>;
  slug?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  socials?: InputMaybe<SocialUpdateManyWithoutWebsiteInput>;
  stripeAccountId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  taxes?: InputMaybe<TaxUpdateManyWithoutWebsiteInput>;
  themeColor?: InputMaybe<EnumColorFieldUpdateOperationsInput>;
  tikTokLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  totalEarnings?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
  twitterCardType?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterHandle?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  twitterLink?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  user?: InputMaybe<UserUpdateOneWithoutWebsitesInput>;
  walletAddress?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  websiteUrl?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
  withdrawnAmount?: InputMaybe<NullableFloatFieldUpdateOperationsInput>;
};

export type WithdrawAvgOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
};

export type WithdrawCountOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  processed?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type WithdrawCreateManyInput = {
  amount: Scalars['Float'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  processed: Scalars['Boolean'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type WithdrawMaxOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  processed?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type WithdrawMinOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  processed?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type WithdrawOrderByWithAggregationInput = {
  _avg?: InputMaybe<WithdrawAvgOrderByAggregateInput>;
  _count?: InputMaybe<WithdrawCountOrderByAggregateInput>;
  _max?: InputMaybe<WithdrawMaxOrderByAggregateInput>;
  _min?: InputMaybe<WithdrawMinOrderByAggregateInput>;
  _sum?: InputMaybe<WithdrawSumOrderByAggregateInput>;
  amount?: InputMaybe<SortOrder>;
  createdAt?: InputMaybe<SortOrder>;
  deleted?: InputMaybe<SortOrder>;
  deletedAt?: InputMaybe<SortOrder>;
  id?: InputMaybe<SortOrder>;
  processed?: InputMaybe<SortOrder>;
  updatedAt?: InputMaybe<SortOrder>;
  websiteId?: InputMaybe<SortOrder>;
};

export type WithdrawSumOrderByAggregateInput = {
  amount?: InputMaybe<SortOrder>;
};

export type WithdrawScalarWhereWithAggregatesInput = {
  amount?: InputMaybe<FloatWithAggregatesFilter>;
  AND?: InputMaybe<Array<InputMaybe<WithdrawScalarWhereWithAggregatesInput>>>;
  createdAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  deleted?: InputMaybe<BoolWithAggregatesFilter>;
  deletedAt?: InputMaybe<DateTimeNullableWithAggregatesFilter>;
  id?: InputMaybe<StringWithAggregatesFilter>;
  NOT?: InputMaybe<Array<InputMaybe<WithdrawScalarWhereWithAggregatesInput>>>;
  OR?: InputMaybe<Array<InputMaybe<WithdrawScalarWhereWithAggregatesInput>>>;
  processed?: InputMaybe<BoolWithAggregatesFilter>;
  updatedAt?: InputMaybe<DateTimeWithAggregatesFilter>;
  websiteId?: InputMaybe<StringNullableWithAggregatesFilter>;
};

export type WithdrawUncheckedCreateInput = {
  amount: Scalars['Float'];
  createdAt?: InputMaybe<Scalars['DateTime']>;
  deleted?: InputMaybe<Scalars['Boolean']>;
  deletedAt?: InputMaybe<Scalars['DateTime']>;
  id?: InputMaybe<Scalars['String']>;
  processed: Scalars['Boolean'];
  updatedAt?: InputMaybe<Scalars['DateTime']>;
  websiteId?: InputMaybe<Scalars['String']>;
};

export type WithdrawUncheckedUpdateInput = {
  amount?: InputMaybe<FloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  processed?: InputMaybe<BoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WithdrawUncheckedUpdateManyInput = {
  amount?: InputMaybe<FloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  processed?: InputMaybe<BoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  websiteId?: InputMaybe<NullableStringFieldUpdateOperationsInput>;
};

export type WithdrawUpdateWithoutWebsiteInput = {
  amount?: InputMaybe<FloatFieldUpdateOperationsInput>;
  createdAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
  deleted?: InputMaybe<BoolFieldUpdateOperationsInput>;
  deletedAt?: InputMaybe<NullableDateTimeFieldUpdateOperationsInput>;
  id?: InputMaybe<StringFieldUpdateOperationsInput>;
  processed?: InputMaybe<BoolFieldUpdateOperationsInput>;
  updatedAt?: InputMaybe<DateTimeFieldUpdateOperationsInput>;
};

export type AttachmentFieldsFragment = { __typename?: 'Attachment', id: string, url: string, upload: any, deleted?: boolean | undefined, deletedAt?: any | undefined, type?: AttachmentType | undefined, staked?: boolean | undefined, websiteId?: string | undefined, userId?: string | undefined };

export type AttachmentFragment = { __typename?: 'Attachment', id: string, url: string, upload: any, deleted?: boolean | undefined, deletedAt?: any | undefined, type?: AttachmentType | undefined, staked?: boolean | undefined, websiteId?: string | undefined, userId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueAttachmentQueryVariables = Exact<{
  where: AttachmentWhereUniqueInput;
}>;


export type FindUniqueAttachmentQuery = { __typename?: 'Query', findUniqueAttachment?: { __typename?: 'Attachment', id: string, url: string, upload: any, deleted?: boolean | undefined, deletedAt?: any | undefined, type?: AttachmentType | undefined, staked?: boolean | undefined, websiteId?: string | undefined, userId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyAttachmentQueryVariables = Exact<{
  where?: InputMaybe<AttachmentWhereInput>;
  orderBy?: InputMaybe<Array<AttachmentOrderByWithRelationInput> | AttachmentOrderByWithRelationInput>;
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAttachmentQuery = { __typename?: 'Query', findManyAttachment: Array<{ __typename?: 'Attachment', id: string, url: string, upload: any, deleted?: boolean | undefined, deletedAt?: any | undefined, type?: AttachmentType | undefined, staked?: boolean | undefined, websiteId?: string | undefined, userId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyAttachmentCountQueryVariables = Exact<{
  where?: InputMaybe<AttachmentWhereInput>;
  orderBy?: InputMaybe<Array<AttachmentOrderByWithRelationInput> | AttachmentOrderByWithRelationInput>;
  cursor?: InputMaybe<AttachmentWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAttachmentCountQuery = { __typename?: 'Query', findManyAttachmentCount: number };

export type CreateOneAttachmentMutationVariables = Exact<{
  data: AttachmentCreateInput;
}>;


export type CreateOneAttachmentMutation = { __typename?: 'Mutation', createOneAttachment: { __typename?: 'Attachment', id: string, url: string, upload: any, deleted?: boolean | undefined, deletedAt?: any | undefined, type?: AttachmentType | undefined, staked?: boolean | undefined, websiteId?: string | undefined, userId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneAttachmentMutationVariables = Exact<{
  where: AttachmentWhereUniqueInput;
  data: AttachmentUpdateInput;
}>;


export type UpdateOneAttachmentMutation = { __typename?: 'Mutation', updateOneAttachment: { __typename?: 'Attachment', id: string, url: string, upload: any, deleted?: boolean | undefined, deletedAt?: any | undefined, type?: AttachmentType | undefined, staked?: boolean | undefined, websiteId?: string | undefined, userId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneAttachmentMutationVariables = Exact<{
  where: AttachmentWhereUniqueInput;
}>;


export type DeleteOneAttachmentMutation = { __typename?: 'Mutation', deleteOneAttachment?: { __typename?: 'Attachment', id: string, url: string, upload: any, deleted?: boolean | undefined, deletedAt?: any | undefined, type?: AttachmentType | undefined, staked?: boolean | undefined, websiteId?: string | undefined, userId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyAttachmentMutationVariables = Exact<{
  where?: InputMaybe<AttachmentWhereInput>;
}>;


export type DeleteManyAttachmentMutation = { __typename?: 'Mutation', deleteManyAttachment: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyAttachmentMutationVariables = Exact<{
  where?: InputMaybe<AttachmentWhereInput>;
  data: AttachmentUpdateManyMutationInput;
}>;


export type UpdateManyAttachmentMutation = { __typename?: 'Mutation', updateManyAttachment: { __typename?: 'BatchPayload', count: number } };

export type AttributeFieldsFragment = { __typename?: 'Attribute', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined, values: Array<any>, websiteId?: string | undefined };

export type AttributeFragment = { __typename?: 'Attribute', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined, values: Array<any>, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueAttributeQueryVariables = Exact<{
  where: AttributeWhereUniqueInput;
}>;


export type FindUniqueAttributeQuery = { __typename?: 'Query', findUniqueAttribute?: { __typename?: 'Attribute', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined, values: Array<any>, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyAttributeQueryVariables = Exact<{
  where?: InputMaybe<AttributeWhereInput>;
  orderBy?: InputMaybe<Array<AttributeOrderByWithRelationInput> | AttributeOrderByWithRelationInput>;
  cursor?: InputMaybe<AttributeWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAttributeQuery = { __typename?: 'Query', findManyAttribute: Array<{ __typename?: 'Attribute', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined, values: Array<any>, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyAttributeCountQueryVariables = Exact<{
  where?: InputMaybe<AttributeWhereInput>;
  orderBy?: InputMaybe<Array<AttributeOrderByWithRelationInput> | AttributeOrderByWithRelationInput>;
  cursor?: InputMaybe<AttributeWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAttributeCountQuery = { __typename?: 'Query', findManyAttributeCount: number };

export type CreateOneAttributeMutationVariables = Exact<{
  data: AttributeCreateInput;
}>;


export type CreateOneAttributeMutation = { __typename?: 'Mutation', createOneAttribute: { __typename?: 'Attribute', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined, values: Array<any>, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneAttributeMutationVariables = Exact<{
  where: AttributeWhereUniqueInput;
  data: AttributeUpdateInput;
}>;


export type UpdateOneAttributeMutation = { __typename?: 'Mutation', updateOneAttribute: { __typename?: 'Attribute', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined, values: Array<any>, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneAttributeMutationVariables = Exact<{
  where: AttributeWhereUniqueInput;
}>;


export type DeleteOneAttributeMutation = { __typename?: 'Mutation', deleteOneAttribute?: { __typename?: 'Attribute', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined, values: Array<any>, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyAttributeMutationVariables = Exact<{
  where?: InputMaybe<AttributeWhereInput>;
}>;


export type DeleteManyAttributeMutation = { __typename?: 'Mutation', deleteManyAttribute: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyAttributeMutationVariables = Exact<{
  where?: InputMaybe<AttributeWhereInput>;
  data: AttributeUpdateManyMutationInput;
}>;


export type UpdateManyAttributeMutation = { __typename?: 'Mutation', updateManyAttribute: { __typename?: 'BatchPayload', count: number } };

export type AudioFieldsFragment = { __typename?: 'Audio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioObj?: any | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined };

export type AudioFragment = { __typename?: 'Audio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioObj?: any | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueAudioQueryVariables = Exact<{
  where: AudioWhereUniqueInput;
}>;


export type FindUniqueAudioQuery = { __typename?: 'Query', findUniqueAudio?: { __typename?: 'Audio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioObj?: any | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyAudioQueryVariables = Exact<{
  where?: InputMaybe<AudioWhereInput>;
  orderBy?: InputMaybe<Array<AudioOrderByWithRelationInput> | AudioOrderByWithRelationInput>;
  cursor?: InputMaybe<AudioWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAudioQuery = { __typename?: 'Query', findManyAudio: Array<{ __typename?: 'Audio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioObj?: any | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyAudioCountQueryVariables = Exact<{
  where?: InputMaybe<AudioWhereInput>;
  orderBy?: InputMaybe<Array<AudioOrderByWithRelationInput> | AudioOrderByWithRelationInput>;
  cursor?: InputMaybe<AudioWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyAudioCountQuery = { __typename?: 'Query', findManyAudioCount: number };

export type CreateOneAudioMutationVariables = Exact<{
  data: AudioCreateInput;
}>;


export type CreateOneAudioMutation = { __typename?: 'Mutation', createOneAudio: { __typename?: 'Audio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioObj?: any | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneAudioMutationVariables = Exact<{
  where: AudioWhereUniqueInput;
  data: AudioUpdateInput;
}>;


export type UpdateOneAudioMutation = { __typename?: 'Mutation', updateOneAudio: { __typename?: 'Audio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioObj?: any | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneAudioMutationVariables = Exact<{
  where: AudioWhereUniqueInput;
}>;


export type DeleteOneAudioMutation = { __typename?: 'Mutation', deleteOneAudio?: { __typename?: 'Audio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioObj?: any | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyAudioMutationVariables = Exact<{
  where?: InputMaybe<AudioWhereInput>;
}>;


export type DeleteManyAudioMutation = { __typename?: 'Mutation', deleteManyAudio: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyAudioMutationVariables = Exact<{
  where?: InputMaybe<AudioWhereInput>;
  data: AudioUpdateManyMutationInput;
}>;


export type UpdateManyAudioMutation = { __typename?: 'Mutation', updateManyAudio: { __typename?: 'BatchPayload', count: number } };

export type BlockFieldsFragment = { __typename?: 'Block', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, favourite?: boolean | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, userId?: string | undefined };

export type BlockFragment = { __typename?: 'Block', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, favourite?: boolean | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueBlockQueryVariables = Exact<{
  where: BlockWhereUniqueInput;
}>;


export type FindUniqueBlockQuery = { __typename?: 'Query', findUniqueBlock?: { __typename?: 'Block', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, favourite?: boolean | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyBlockQueryVariables = Exact<{
  where?: InputMaybe<BlockWhereInput>;
  orderBy?: InputMaybe<Array<BlockOrderByWithRelationInput> | BlockOrderByWithRelationInput>;
  cursor?: InputMaybe<BlockWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyBlockQuery = { __typename?: 'Query', findManyBlock: Array<{ __typename?: 'Block', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, favourite?: boolean | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyBlockCountQueryVariables = Exact<{
  where?: InputMaybe<BlockWhereInput>;
  orderBy?: InputMaybe<Array<BlockOrderByWithRelationInput> | BlockOrderByWithRelationInput>;
  cursor?: InputMaybe<BlockWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyBlockCountQuery = { __typename?: 'Query', findManyBlockCount: number };

export type CreateOneBlockMutationVariables = Exact<{
  data: BlockCreateInput;
}>;


export type CreateOneBlockMutation = { __typename?: 'Mutation', createOneBlock: { __typename?: 'Block', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, favourite?: boolean | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneBlockMutationVariables = Exact<{
  where: BlockWhereUniqueInput;
  data: BlockUpdateInput;
}>;


export type UpdateOneBlockMutation = { __typename?: 'Mutation', updateOneBlock: { __typename?: 'Block', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, favourite?: boolean | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneBlockMutationVariables = Exact<{
  where: BlockWhereUniqueInput;
}>;


export type DeleteOneBlockMutation = { __typename?: 'Mutation', deleteOneBlock?: { __typename?: 'Block', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, favourite?: boolean | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyBlockMutationVariables = Exact<{
  where?: InputMaybe<BlockWhereInput>;
}>;


export type DeleteManyBlockMutation = { __typename?: 'Mutation', deleteManyBlock: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyBlockMutationVariables = Exact<{
  where?: InputMaybe<BlockWhereInput>;
  data: BlockUpdateManyMutationInput;
}>;


export type UpdateManyBlockMutation = { __typename?: 'Mutation', updateManyBlock: { __typename?: 'BatchPayload', count: number } };

export type CategoryFieldsFragment = { __typename?: 'Category', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, details?: string | undefined, icon?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, parentId?: string | undefined, slug?: string | undefined, websiteId?: string | undefined };

export type CategoryFragment = { __typename?: 'Category', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, details?: string | undefined, icon?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, parentId?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, parent?: { __typename?: 'Category', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, details?: string | undefined, icon?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, parentId?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueCategoryQueryVariables = Exact<{
  where: CategoryWhereUniqueInput;
}>;


export type FindUniqueCategoryQuery = { __typename?: 'Query', findUniqueCategory?: { __typename?: 'Category', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, details?: string | undefined, icon?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, parentId?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, parent?: { __typename?: 'Category', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, details?: string | undefined, icon?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, parentId?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyCategoryQueryVariables = Exact<{
  where?: InputMaybe<CategoryWhereInput>;
  orderBy?: InputMaybe<Array<CategoryOrderByWithRelationInput> | CategoryOrderByWithRelationInput>;
  cursor?: InputMaybe<CategoryWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyCategoryQuery = { __typename?: 'Query', findManyCategory: Array<{ __typename?: 'Category', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, details?: string | undefined, icon?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, parentId?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, parent?: { __typename?: 'Category', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, details?: string | undefined, icon?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, parentId?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyCategoryCountQueryVariables = Exact<{
  where?: InputMaybe<CategoryWhereInput>;
  orderBy?: InputMaybe<Array<CategoryOrderByWithRelationInput> | CategoryOrderByWithRelationInput>;
  cursor?: InputMaybe<CategoryWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyCategoryCountQuery = { __typename?: 'Query', findManyCategoryCount: number };

export type CreateOneCategoryMutationVariables = Exact<{
  data: CategoryCreateInput;
}>;


export type CreateOneCategoryMutation = { __typename?: 'Mutation', createOneCategory: { __typename?: 'Category', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, details?: string | undefined, icon?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, parentId?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, parent?: { __typename?: 'Category', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, details?: string | undefined, icon?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, parentId?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneCategoryMutationVariables = Exact<{
  where: CategoryWhereUniqueInput;
  data: CategoryUpdateInput;
}>;


export type UpdateOneCategoryMutation = { __typename?: 'Mutation', updateOneCategory: { __typename?: 'Category', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, details?: string | undefined, icon?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, parentId?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, parent?: { __typename?: 'Category', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, details?: string | undefined, icon?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, parentId?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneCategoryMutationVariables = Exact<{
  where: CategoryWhereUniqueInput;
}>;


export type DeleteOneCategoryMutation = { __typename?: 'Mutation', deleteOneCategory?: { __typename?: 'Category', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, details?: string | undefined, icon?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, parentId?: string | undefined, slug?: string | undefined, websiteId?: string | undefined, parent?: { __typename?: 'Category', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, details?: string | undefined, icon?: string | undefined, id: string, imageObj?: any | undefined, name?: string | undefined, parentId?: string | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyCategoryMutationVariables = Exact<{
  where?: InputMaybe<CategoryWhereInput>;
}>;


export type DeleteManyCategoryMutation = { __typename?: 'Mutation', deleteManyCategory: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyCategoryMutationVariables = Exact<{
  where?: InputMaybe<CategoryWhereInput>;
  data: CategoryUpdateManyMutationInput;
}>;


export type UpdateManyCategoryMutation = { __typename?: 'Mutation', updateManyCategory: { __typename?: 'BatchPayload', count: number } };

export type CollectionFieldsFragment = { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined };

export type CollectionFragment = { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueCollectionQueryVariables = Exact<{
  where: CollectionWhereUniqueInput;
}>;


export type FindUniqueCollectionQuery = { __typename?: 'Query', findUniqueCollection?: { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyCollectionQueryVariables = Exact<{
  where?: InputMaybe<CollectionWhereInput>;
  orderBy?: InputMaybe<Array<CollectionOrderByWithRelationInput> | CollectionOrderByWithRelationInput>;
  cursor?: InputMaybe<CollectionWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyCollectionQuery = { __typename?: 'Query', findManyCollection: Array<{ __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyCollectionCountQueryVariables = Exact<{
  where?: InputMaybe<CollectionWhereInput>;
  orderBy?: InputMaybe<Array<CollectionOrderByWithRelationInput> | CollectionOrderByWithRelationInput>;
  cursor?: InputMaybe<CollectionWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyCollectionCountQuery = { __typename?: 'Query', findManyCollectionCount: number };

export type CreateOneCollectionMutationVariables = Exact<{
  data: CollectionCreateInput;
}>;


export type CreateOneCollectionMutation = { __typename?: 'Mutation', createOneCollection: { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneCollectionMutationVariables = Exact<{
  where: CollectionWhereUniqueInput;
  data: CollectionUpdateInput;
}>;


export type UpdateOneCollectionMutation = { __typename?: 'Mutation', updateOneCollection: { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneCollectionMutationVariables = Exact<{
  where: CollectionWhereUniqueInput;
}>;


export type DeleteOneCollectionMutation = { __typename?: 'Mutation', deleteOneCollection?: { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyCollectionMutationVariables = Exact<{
  where?: InputMaybe<CollectionWhereInput>;
}>;


export type DeleteManyCollectionMutation = { __typename?: 'Mutation', deleteManyCollection: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyCollectionMutationVariables = Exact<{
  where?: InputMaybe<CollectionWhereInput>;
  data: CollectionUpdateManyMutationInput;
}>;


export type UpdateManyCollectionMutation = { __typename?: 'Mutation', updateManyCollection: { __typename?: 'BatchPayload', count: number } };

export type CouponFieldsFragment = { __typename?: 'Coupon', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, active_from?: any | undefined, amount_off?: number | undefined, code?: string | undefined, couponType: CouponType, description?: string | undefined, expire_at?: any | undefined, id: string, imageObj?: any | undefined, name: string, percent_off?: number | undefined, type?: string | undefined, websiteId?: string | undefined };

export type CouponFragment = { __typename?: 'Coupon', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, active_from?: any | undefined, amount_off?: number | undefined, code?: string | undefined, couponType: CouponType, description?: string | undefined, expire_at?: any | undefined, id: string, imageObj?: any | undefined, name: string, percent_off?: number | undefined, type?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueCouponQueryVariables = Exact<{
  where: CouponWhereUniqueInput;
}>;


export type FindUniqueCouponQuery = { __typename?: 'Query', findUniqueCoupon?: { __typename?: 'Coupon', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, active_from?: any | undefined, amount_off?: number | undefined, code?: string | undefined, couponType: CouponType, description?: string | undefined, expire_at?: any | undefined, id: string, imageObj?: any | undefined, name: string, percent_off?: number | undefined, type?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyCouponQueryVariables = Exact<{
  where?: InputMaybe<CouponWhereInput>;
  orderBy?: InputMaybe<Array<CouponOrderByWithRelationInput> | CouponOrderByWithRelationInput>;
  cursor?: InputMaybe<CouponWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyCouponQuery = { __typename?: 'Query', findManyCoupon: Array<{ __typename?: 'Coupon', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, active_from?: any | undefined, amount_off?: number | undefined, code?: string | undefined, couponType: CouponType, description?: string | undefined, expire_at?: any | undefined, id: string, imageObj?: any | undefined, name: string, percent_off?: number | undefined, type?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyCouponCountQueryVariables = Exact<{
  where?: InputMaybe<CouponWhereInput>;
  orderBy?: InputMaybe<Array<CouponOrderByWithRelationInput> | CouponOrderByWithRelationInput>;
  cursor?: InputMaybe<CouponWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyCouponCountQuery = { __typename?: 'Query', findManyCouponCount: number };

export type CreateOneCouponMutationVariables = Exact<{
  data: CouponCreateInput;
}>;


export type CreateOneCouponMutation = { __typename?: 'Mutation', createOneCoupon: { __typename?: 'Coupon', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, active_from?: any | undefined, amount_off?: number | undefined, code?: string | undefined, couponType: CouponType, description?: string | undefined, expire_at?: any | undefined, id: string, imageObj?: any | undefined, name: string, percent_off?: number | undefined, type?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneCouponMutationVariables = Exact<{
  where: CouponWhereUniqueInput;
  data: CouponUpdateInput;
}>;


export type UpdateOneCouponMutation = { __typename?: 'Mutation', updateOneCoupon: { __typename?: 'Coupon', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, active_from?: any | undefined, amount_off?: number | undefined, code?: string | undefined, couponType: CouponType, description?: string | undefined, expire_at?: any | undefined, id: string, imageObj?: any | undefined, name: string, percent_off?: number | undefined, type?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneCouponMutationVariables = Exact<{
  where: CouponWhereUniqueInput;
}>;


export type DeleteOneCouponMutation = { __typename?: 'Mutation', deleteOneCoupon?: { __typename?: 'Coupon', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, active_from?: any | undefined, amount_off?: number | undefined, code?: string | undefined, couponType: CouponType, description?: string | undefined, expire_at?: any | undefined, id: string, imageObj?: any | undefined, name: string, percent_off?: number | undefined, type?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyCouponMutationVariables = Exact<{
  where?: InputMaybe<CouponWhereInput>;
}>;


export type DeleteManyCouponMutation = { __typename?: 'Mutation', deleteManyCoupon: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyCouponMutationVariables = Exact<{
  where?: InputMaybe<CouponWhereInput>;
  data: CouponUpdateManyMutationInput;
}>;


export type UpdateManyCouponMutation = { __typename?: 'Mutation', updateManyCoupon: { __typename?: 'BatchPayload', count: number } };

export type CustomerFieldsFragment = { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined };

export type CustomerFragment = { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueCustomerQueryVariables = Exact<{
  where: CustomerWhereUniqueInput;
}>;


export type FindUniqueCustomerQuery = { __typename?: 'Query', findUniqueCustomer?: { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyCustomerQueryVariables = Exact<{
  where?: InputMaybe<CustomerWhereInput>;
  orderBy?: InputMaybe<Array<CustomerOrderByWithRelationInput> | CustomerOrderByWithRelationInput>;
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyCustomerQuery = { __typename?: 'Query', findManyCustomer: Array<{ __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyCustomerCountQueryVariables = Exact<{
  where?: InputMaybe<CustomerWhereInput>;
  orderBy?: InputMaybe<Array<CustomerOrderByWithRelationInput> | CustomerOrderByWithRelationInput>;
  cursor?: InputMaybe<CustomerWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyCustomerCountQuery = { __typename?: 'Query', findManyCustomerCount: number };

export type CreateOneCustomerMutationVariables = Exact<{
  data: CustomerCreateInput;
}>;


export type CreateOneCustomerMutation = { __typename?: 'Mutation', createOneCustomer: { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneCustomerMutationVariables = Exact<{
  where: CustomerWhereUniqueInput;
  data: CustomerUpdateInput;
}>;


export type UpdateOneCustomerMutation = { __typename?: 'Mutation', updateOneCustomer: { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneCustomerMutationVariables = Exact<{
  where: CustomerWhereUniqueInput;
}>;


export type DeleteOneCustomerMutation = { __typename?: 'Mutation', deleteOneCustomer?: { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyCustomerMutationVariables = Exact<{
  where?: InputMaybe<CustomerWhereInput>;
}>;


export type DeleteManyCustomerMutation = { __typename?: 'Mutation', deleteManyCustomer: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyCustomerMutationVariables = Exact<{
  where?: InputMaybe<CustomerWhereInput>;
  data: CustomerUpdateManyMutationInput;
}>;


export type UpdateManyCustomerMutation = { __typename?: 'Mutation', updateManyCustomer: { __typename?: 'BatchPayload', count: number } };

export type DocumentFieldsFragment = { __typename?: 'Document', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined };

export type DocumentFragment = { __typename?: 'Document', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueDocumentQueryVariables = Exact<{
  where: DocumentWhereUniqueInput;
}>;


export type FindUniqueDocumentQuery = { __typename?: 'Query', findUniqueDocument?: { __typename?: 'Document', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyDocumentQueryVariables = Exact<{
  where?: InputMaybe<DocumentWhereInput>;
  orderBy?: InputMaybe<Array<DocumentOrderByWithRelationInput> | DocumentOrderByWithRelationInput>;
  cursor?: InputMaybe<DocumentWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyDocumentQuery = { __typename?: 'Query', findManyDocument: Array<{ __typename?: 'Document', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyDocumentCountQueryVariables = Exact<{
  where?: InputMaybe<DocumentWhereInput>;
  orderBy?: InputMaybe<Array<DocumentOrderByWithRelationInput> | DocumentOrderByWithRelationInput>;
  cursor?: InputMaybe<DocumentWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyDocumentCountQuery = { __typename?: 'Query', findManyDocumentCount: number };

export type CreateOneDocumentMutationVariables = Exact<{
  data: DocumentCreateInput;
}>;


export type CreateOneDocumentMutation = { __typename?: 'Mutation', createOneDocument: { __typename?: 'Document', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneDocumentMutationVariables = Exact<{
  where: DocumentWhereUniqueInput;
  data: DocumentUpdateInput;
}>;


export type UpdateOneDocumentMutation = { __typename?: 'Mutation', updateOneDocument: { __typename?: 'Document', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneDocumentMutationVariables = Exact<{
  where: DocumentWhereUniqueInput;
}>;


export type DeleteOneDocumentMutation = { __typename?: 'Mutation', deleteOneDocument?: { __typename?: 'Document', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyDocumentMutationVariables = Exact<{
  where?: InputMaybe<DocumentWhereInput>;
}>;


export type DeleteManyDocumentMutation = { __typename?: 'Mutation', deleteManyDocument: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyDocumentMutationVariables = Exact<{
  where?: InputMaybe<DocumentWhereInput>;
  data: DocumentUpdateManyMutationInput;
}>;


export type UpdateManyDocumentMutation = { __typename?: 'Mutation', updateManyDocument: { __typename?: 'BatchPayload', count: number } };

export type EmbedFieldsFragment = { __typename?: 'Embed', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, embedCode?: string | undefined, id: string, name: string, slug?: string | undefined, userId?: string | undefined };

export type EmbedFragment = { __typename?: 'Embed', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, embedCode?: string | undefined, id: string, name: string, slug?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueEmbedQueryVariables = Exact<{
  where: EmbedWhereUniqueInput;
}>;


export type FindUniqueEmbedQuery = { __typename?: 'Query', findUniqueEmbed?: { __typename?: 'Embed', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, embedCode?: string | undefined, id: string, name: string, slug?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyEmbedQueryVariables = Exact<{
  where?: InputMaybe<EmbedWhereInput>;
  orderBy?: InputMaybe<Array<EmbedOrderByWithRelationInput> | EmbedOrderByWithRelationInput>;
  cursor?: InputMaybe<EmbedWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyEmbedQuery = { __typename?: 'Query', findManyEmbed: Array<{ __typename?: 'Embed', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, embedCode?: string | undefined, id: string, name: string, slug?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyEmbedCountQueryVariables = Exact<{
  where?: InputMaybe<EmbedWhereInput>;
  orderBy?: InputMaybe<Array<EmbedOrderByWithRelationInput> | EmbedOrderByWithRelationInput>;
  cursor?: InputMaybe<EmbedWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyEmbedCountQuery = { __typename?: 'Query', findManyEmbedCount: number };

export type CreateOneEmbedMutationVariables = Exact<{
  data: EmbedCreateInput;
}>;


export type CreateOneEmbedMutation = { __typename?: 'Mutation', createOneEmbed: { __typename?: 'Embed', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, embedCode?: string | undefined, id: string, name: string, slug?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneEmbedMutationVariables = Exact<{
  where: EmbedWhereUniqueInput;
  data: EmbedUpdateInput;
}>;


export type UpdateOneEmbedMutation = { __typename?: 'Mutation', updateOneEmbed: { __typename?: 'Embed', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, embedCode?: string | undefined, id: string, name: string, slug?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneEmbedMutationVariables = Exact<{
  where: EmbedWhereUniqueInput;
}>;


export type DeleteOneEmbedMutation = { __typename?: 'Mutation', deleteOneEmbed?: { __typename?: 'Embed', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, embedCode?: string | undefined, id: string, name: string, slug?: string | undefined, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyEmbedMutationVariables = Exact<{
  where?: InputMaybe<EmbedWhereInput>;
}>;


export type DeleteManyEmbedMutation = { __typename?: 'Mutation', deleteManyEmbed: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyEmbedMutationVariables = Exact<{
  where?: InputMaybe<EmbedWhereInput>;
  data: EmbedUpdateManyMutationInput;
}>;


export type UpdateManyEmbedMutation = { __typename?: 'Mutation', updateManyEmbed: { __typename?: 'BatchPayload', count: number } };

export type GroupFieldsFragment = { __typename?: 'Group', id: string, deleted?: boolean | undefined, deletedAt?: any | undefined, websiteId?: string | undefined };

export type GroupFragment = { __typename?: 'Group', id: string, deleted?: boolean | undefined, deletedAt?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueGroupQueryVariables = Exact<{
  where: GroupWhereUniqueInput;
}>;


export type FindUniqueGroupQuery = { __typename?: 'Query', findUniqueGroup?: { __typename?: 'Group', id: string, deleted?: boolean | undefined, deletedAt?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyGroupQueryVariables = Exact<{
  where?: InputMaybe<GroupWhereInput>;
  orderBy?: InputMaybe<Array<GroupOrderByWithRelationInput> | GroupOrderByWithRelationInput>;
  cursor?: InputMaybe<GroupWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyGroupQuery = { __typename?: 'Query', findManyGroup: Array<{ __typename?: 'Group', id: string, deleted?: boolean | undefined, deletedAt?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyGroupCountQueryVariables = Exact<{
  where?: InputMaybe<GroupWhereInput>;
  orderBy?: InputMaybe<Array<GroupOrderByWithRelationInput> | GroupOrderByWithRelationInput>;
  cursor?: InputMaybe<GroupWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyGroupCountQuery = { __typename?: 'Query', findManyGroupCount: number };

export type CreateOneGroupMutationVariables = Exact<{
  data: GroupCreateInput;
}>;


export type CreateOneGroupMutation = { __typename?: 'Mutation', createOneGroup: { __typename?: 'Group', id: string, deleted?: boolean | undefined, deletedAt?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneGroupMutationVariables = Exact<{
  where: GroupWhereUniqueInput;
  data: GroupUpdateInput;
}>;


export type UpdateOneGroupMutation = { __typename?: 'Mutation', updateOneGroup: { __typename?: 'Group', id: string, deleted?: boolean | undefined, deletedAt?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneGroupMutationVariables = Exact<{
  where: GroupWhereUniqueInput;
}>;


export type DeleteOneGroupMutation = { __typename?: 'Mutation', deleteOneGroup?: { __typename?: 'Group', id: string, deleted?: boolean | undefined, deletedAt?: any | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyGroupMutationVariables = Exact<{
  where?: InputMaybe<GroupWhereInput>;
}>;


export type DeleteManyGroupMutation = { __typename?: 'Mutation', deleteManyGroup: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyGroupMutationVariables = Exact<{
  where?: InputMaybe<GroupWhereInput>;
  data: GroupUpdateManyMutationInput;
}>;


export type UpdateManyGroupMutation = { __typename?: 'Mutation', updateManyGroup: { __typename?: 'BatchPayload', count: number } };

export type ItemFieldsFragment = { __typename?: 'Item', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, blockId?: string | undefined, collectionId?: string | undefined, embedId?: string | undefined, id: string, itemType: ItemType, name?: string | undefined, pageId?: string | undefined };

export type ItemFragment = { __typename?: 'Item', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, blockId?: string | undefined, collectionId?: string | undefined, embedId?: string | undefined, id: string, itemType: ItemType, name?: string | undefined, pageId?: string | undefined, block?: { __typename?: 'Block', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, favourite?: boolean | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, userId?: string | undefined } | undefined, collection?: { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined } | undefined, embed?: { __typename?: 'Embed', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, embedCode?: string | undefined, id: string, name: string, slug?: string | undefined, userId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined };

export type FindUniqueItemQueryVariables = Exact<{
  where: ItemWhereUniqueInput;
}>;


export type FindUniqueItemQuery = { __typename?: 'Query', findUniqueItem?: { __typename?: 'Item', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, blockId?: string | undefined, collectionId?: string | undefined, embedId?: string | undefined, id: string, itemType: ItemType, name?: string | undefined, pageId?: string | undefined, block?: { __typename?: 'Block', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, favourite?: boolean | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, userId?: string | undefined } | undefined, collection?: { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined } | undefined, embed?: { __typename?: 'Embed', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, embedCode?: string | undefined, id: string, name: string, slug?: string | undefined, userId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type FindManyItemQueryVariables = Exact<{
  where?: InputMaybe<ItemWhereInput>;
  orderBy?: InputMaybe<Array<ItemOrderByWithRelationInput> | ItemOrderByWithRelationInput>;
  cursor?: InputMaybe<ItemWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyItemQuery = { __typename?: 'Query', findManyItem: Array<{ __typename?: 'Item', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, blockId?: string | undefined, collectionId?: string | undefined, embedId?: string | undefined, id: string, itemType: ItemType, name?: string | undefined, pageId?: string | undefined, block?: { __typename?: 'Block', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, favourite?: boolean | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, userId?: string | undefined } | undefined, collection?: { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined } | undefined, embed?: { __typename?: 'Embed', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, embedCode?: string | undefined, id: string, name: string, slug?: string | undefined, userId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined }> };

export type FindManyItemCountQueryVariables = Exact<{
  where?: InputMaybe<ItemWhereInput>;
  orderBy?: InputMaybe<Array<ItemOrderByWithRelationInput> | ItemOrderByWithRelationInput>;
  cursor?: InputMaybe<ItemWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyItemCountQuery = { __typename?: 'Query', findManyItemCount: number };

export type CreateOneItemMutationVariables = Exact<{
  data: ItemCreateInput;
}>;


export type CreateOneItemMutation = { __typename?: 'Mutation', createOneItem: { __typename?: 'Item', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, blockId?: string | undefined, collectionId?: string | undefined, embedId?: string | undefined, id: string, itemType: ItemType, name?: string | undefined, pageId?: string | undefined, block?: { __typename?: 'Block', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, favourite?: boolean | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, userId?: string | undefined } | undefined, collection?: { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined } | undefined, embed?: { __typename?: 'Embed', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, embedCode?: string | undefined, id: string, name: string, slug?: string | undefined, userId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } };

export type UpdateOneItemMutationVariables = Exact<{
  where: ItemWhereUniqueInput;
  data: ItemUpdateInput;
}>;


export type UpdateOneItemMutation = { __typename?: 'Mutation', updateOneItem: { __typename?: 'Item', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, blockId?: string | undefined, collectionId?: string | undefined, embedId?: string | undefined, id: string, itemType: ItemType, name?: string | undefined, pageId?: string | undefined, block?: { __typename?: 'Block', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, favourite?: boolean | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, userId?: string | undefined } | undefined, collection?: { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined } | undefined, embed?: { __typename?: 'Embed', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, embedCode?: string | undefined, id: string, name: string, slug?: string | undefined, userId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } };

export type DeleteOneItemMutationVariables = Exact<{
  where: ItemWhereUniqueInput;
}>;


export type DeleteOneItemMutation = { __typename?: 'Mutation', deleteOneItem?: { __typename?: 'Item', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, blockId?: string | undefined, collectionId?: string | undefined, embedId?: string | undefined, id: string, itemType: ItemType, name?: string | undefined, pageId?: string | undefined, block?: { __typename?: 'Block', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, favourite?: boolean | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, userId?: string | undefined } | undefined, collection?: { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined } | undefined, embed?: { __typename?: 'Embed', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, embedCode?: string | undefined, id: string, name: string, slug?: string | undefined, userId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type DeleteManyItemMutationVariables = Exact<{
  where?: InputMaybe<ItemWhereInput>;
}>;


export type DeleteManyItemMutation = { __typename?: 'Mutation', deleteManyItem: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyItemMutationVariables = Exact<{
  where?: InputMaybe<ItemWhereInput>;
  data: ItemUpdateManyMutationInput;
}>;


export type UpdateManyItemMutation = { __typename?: 'Mutation', updateManyItem: { __typename?: 'BatchPayload', count: number } };

export type LinkFieldsFragment = { __typename?: 'Link', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, url: string, userId?: string | undefined };

export type LinkFragment = { __typename?: 'Link', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, url: string, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueLinkQueryVariables = Exact<{
  where: LinkWhereUniqueInput;
}>;


export type FindUniqueLinkQuery = { __typename?: 'Query', findUniqueLink?: { __typename?: 'Link', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, url: string, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyLinkQueryVariables = Exact<{
  where?: InputMaybe<LinkWhereInput>;
  orderBy?: InputMaybe<Array<LinkOrderByWithRelationInput> | LinkOrderByWithRelationInput>;
  cursor?: InputMaybe<LinkWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyLinkQuery = { __typename?: 'Query', findManyLink: Array<{ __typename?: 'Link', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, url: string, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyLinkCountQueryVariables = Exact<{
  where?: InputMaybe<LinkWhereInput>;
  orderBy?: InputMaybe<Array<LinkOrderByWithRelationInput> | LinkOrderByWithRelationInput>;
  cursor?: InputMaybe<LinkWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyLinkCountQuery = { __typename?: 'Query', findManyLinkCount: number };

export type CreateOneLinkMutationVariables = Exact<{
  data: LinkCreateInput;
}>;


export type CreateOneLinkMutation = { __typename?: 'Mutation', createOneLink: { __typename?: 'Link', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, url: string, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneLinkMutationVariables = Exact<{
  where: LinkWhereUniqueInput;
  data: LinkUpdateInput;
}>;


export type UpdateOneLinkMutation = { __typename?: 'Mutation', updateOneLink: { __typename?: 'Link', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, url: string, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneLinkMutationVariables = Exact<{
  where: LinkWhereUniqueInput;
}>;


export type DeleteOneLinkMutation = { __typename?: 'Mutation', deleteOneLink?: { __typename?: 'Link', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, url: string, userId?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyLinkMutationVariables = Exact<{
  where?: InputMaybe<LinkWhereInput>;
}>;


export type DeleteManyLinkMutation = { __typename?: 'Mutation', deleteManyLink: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyLinkMutationVariables = Exact<{
  where?: InputMaybe<LinkWhereInput>;
  data: LinkUpdateManyMutationInput;
}>;


export type UpdateManyLinkMutation = { __typename?: 'Mutation', updateManyLink: { __typename?: 'BatchPayload', count: number } };

export type LoginTokenFieldsFragment = { __typename?: 'LoginToken', id: string, userId: string, approved: boolean, expires: any, createdAt: any, email: string, secret: string, ip: string, userAgent: string, userAgentRaw: string, geo: string, domain: string, deleted?: boolean | undefined, deletedAt?: any | undefined };

export type LoginTokenFragment = { __typename?: 'LoginToken', id: string, userId: string, approved: boolean, expires: any, createdAt: any, email: string, secret: string, ip: string, userAgent: string, userAgentRaw: string, geo: string, domain: string, deleted?: boolean | undefined, deletedAt?: any | undefined, user: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } };

export type FindUniqueLoginTokenQueryVariables = Exact<{
  where: LoginTokenWhereUniqueInput;
}>;


export type FindUniqueLoginTokenQuery = { __typename?: 'Query', findUniqueLoginToken?: { __typename?: 'LoginToken', id: string, userId: string, approved: boolean, expires: any, createdAt: any, email: string, secret: string, ip: string, userAgent: string, userAgentRaw: string, geo: string, domain: string, deleted?: boolean | undefined, deletedAt?: any | undefined, user: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } } | undefined };

export type FindManyLoginTokenQueryVariables = Exact<{
  where?: InputMaybe<LoginTokenWhereInput>;
  orderBy?: InputMaybe<Array<LoginTokenOrderByWithRelationInput> | LoginTokenOrderByWithRelationInput>;
  cursor?: InputMaybe<LoginTokenWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyLoginTokenQuery = { __typename?: 'Query', findManyLoginToken: Array<{ __typename?: 'LoginToken', id: string, userId: string, approved: boolean, expires: any, createdAt: any, email: string, secret: string, ip: string, userAgent: string, userAgentRaw: string, geo: string, domain: string, deleted?: boolean | undefined, deletedAt?: any | undefined, user: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } }> };

export type FindManyLoginTokenCountQueryVariables = Exact<{
  where?: InputMaybe<LoginTokenWhereInput>;
  orderBy?: InputMaybe<Array<LoginTokenOrderByWithRelationInput> | LoginTokenOrderByWithRelationInput>;
  cursor?: InputMaybe<LoginTokenWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyLoginTokenCountQuery = { __typename?: 'Query', findManyLoginTokenCount: number };

export type CreateOneLoginTokenMutationVariables = Exact<{
  data: LoginTokenCreateInput;
}>;


export type CreateOneLoginTokenMutation = { __typename?: 'Mutation', createOneLoginToken: { __typename?: 'LoginToken', id: string, userId: string, approved: boolean, expires: any, createdAt: any, email: string, secret: string, ip: string, userAgent: string, userAgentRaw: string, geo: string, domain: string, deleted?: boolean | undefined, deletedAt?: any | undefined, user: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } } };

export type UpdateOneLoginTokenMutationVariables = Exact<{
  where: LoginTokenWhereUniqueInput;
  data: LoginTokenUpdateInput;
}>;


export type UpdateOneLoginTokenMutation = { __typename?: 'Mutation', updateOneLoginToken: { __typename?: 'LoginToken', id: string, userId: string, approved: boolean, expires: any, createdAt: any, email: string, secret: string, ip: string, userAgent: string, userAgentRaw: string, geo: string, domain: string, deleted?: boolean | undefined, deletedAt?: any | undefined, user: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } } };

export type DeleteOneLoginTokenMutationVariables = Exact<{
  where: LoginTokenWhereUniqueInput;
}>;


export type DeleteOneLoginTokenMutation = { __typename?: 'Mutation', deleteOneLoginToken?: { __typename?: 'LoginToken', id: string, userId: string, approved: boolean, expires: any, createdAt: any, email: string, secret: string, ip: string, userAgent: string, userAgentRaw: string, geo: string, domain: string, deleted?: boolean | undefined, deletedAt?: any | undefined, user: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } } | undefined };

export type DeleteManyLoginTokenMutationVariables = Exact<{
  where?: InputMaybe<LoginTokenWhereInput>;
}>;


export type DeleteManyLoginTokenMutation = { __typename?: 'Mutation', deleteManyLoginToken: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyLoginTokenMutationVariables = Exact<{
  where?: InputMaybe<LoginTokenWhereInput>;
  data: LoginTokenUpdateManyMutationInput;
}>;


export type UpdateManyLoginTokenMutation = { __typename?: 'Mutation', updateManyLoginToken: { __typename?: 'BatchPayload', count: number } };

export type NotificationFieldsFragment = { __typename?: 'Notification', id: string, message?: string | undefined, model?: string | undefined, action?: string | undefined, modelId?: string | undefined, isUnRead?: boolean | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, title?: string | undefined, description?: string | undefined, url?: string | undefined, createdAt?: any | undefined, updatedAt?: any | undefined, websiteId?: string | undefined, userId?: string | undefined };

export type NotificationFragment = { __typename?: 'Notification', id: string, message?: string | undefined, model?: string | undefined, action?: string | undefined, modelId?: string | undefined, isUnRead?: boolean | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, title?: string | undefined, description?: string | undefined, url?: string | undefined, createdAt?: any | undefined, updatedAt?: any | undefined, websiteId?: string | undefined, userId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueNotificationQueryVariables = Exact<{
  where: NotificationWhereUniqueInput;
}>;


export type FindUniqueNotificationQuery = { __typename?: 'Query', findUniqueNotification?: { __typename?: 'Notification', id: string, message?: string | undefined, model?: string | undefined, action?: string | undefined, modelId?: string | undefined, isUnRead?: boolean | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, title?: string | undefined, description?: string | undefined, url?: string | undefined, createdAt?: any | undefined, updatedAt?: any | undefined, websiteId?: string | undefined, userId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyNotificationQueryVariables = Exact<{
  where?: InputMaybe<NotificationWhereInput>;
  orderBy?: InputMaybe<Array<NotificationOrderByWithRelationInput> | NotificationOrderByWithRelationInput>;
  cursor?: InputMaybe<NotificationWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyNotificationQuery = { __typename?: 'Query', findManyNotification: Array<{ __typename?: 'Notification', id: string, message?: string | undefined, model?: string | undefined, action?: string | undefined, modelId?: string | undefined, isUnRead?: boolean | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, title?: string | undefined, description?: string | undefined, url?: string | undefined, createdAt?: any | undefined, updatedAt?: any | undefined, websiteId?: string | undefined, userId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyNotificationCountQueryVariables = Exact<{
  where?: InputMaybe<NotificationWhereInput>;
  orderBy?: InputMaybe<Array<NotificationOrderByWithRelationInput> | NotificationOrderByWithRelationInput>;
  cursor?: InputMaybe<NotificationWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyNotificationCountQuery = { __typename?: 'Query', findManyNotificationCount: number };

export type CreateOneNotificationMutationVariables = Exact<{
  data: NotificationCreateInput;
}>;


export type CreateOneNotificationMutation = { __typename?: 'Mutation', createOneNotification: { __typename?: 'Notification', id: string, message?: string | undefined, model?: string | undefined, action?: string | undefined, modelId?: string | undefined, isUnRead?: boolean | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, title?: string | undefined, description?: string | undefined, url?: string | undefined, createdAt?: any | undefined, updatedAt?: any | undefined, websiteId?: string | undefined, userId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneNotificationMutationVariables = Exact<{
  where: NotificationWhereUniqueInput;
  data: NotificationUpdateInput;
}>;


export type UpdateOneNotificationMutation = { __typename?: 'Mutation', updateOneNotification: { __typename?: 'Notification', id: string, message?: string | undefined, model?: string | undefined, action?: string | undefined, modelId?: string | undefined, isUnRead?: boolean | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, title?: string | undefined, description?: string | undefined, url?: string | undefined, createdAt?: any | undefined, updatedAt?: any | undefined, websiteId?: string | undefined, userId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneNotificationMutationVariables = Exact<{
  where: NotificationWhereUniqueInput;
}>;


export type DeleteOneNotificationMutation = { __typename?: 'Mutation', deleteOneNotification?: { __typename?: 'Notification', id: string, message?: string | undefined, model?: string | undefined, action?: string | undefined, modelId?: string | undefined, isUnRead?: boolean | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, title?: string | undefined, description?: string | undefined, url?: string | undefined, createdAt?: any | undefined, updatedAt?: any | undefined, websiteId?: string | undefined, userId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyNotificationMutationVariables = Exact<{
  where?: InputMaybe<NotificationWhereInput>;
}>;


export type DeleteManyNotificationMutation = { __typename?: 'Mutation', deleteManyNotification: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyNotificationMutationVariables = Exact<{
  where?: InputMaybe<NotificationWhereInput>;
  data: NotificationUpdateManyMutationInput;
}>;


export type UpdateManyNotificationMutation = { __typename?: 'Mutation', updateManyNotification: { __typename?: 'BatchPayload', count: number } };

export type OrderFieldsFragment = { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined };

export type OrderFragment = { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, coupon?: { __typename?: 'Coupon', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, active_from?: any | undefined, amount_off?: number | undefined, code?: string | undefined, couponType: CouponType, description?: string | undefined, expire_at?: any | undefined, id: string, imageObj?: any | undefined, name: string, percent_off?: number | undefined, type?: string | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueOrderQueryVariables = Exact<{
  where: OrderWhereUniqueInput;
}>;


export type FindUniqueOrderQuery = { __typename?: 'Query', findUniqueOrder?: { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, coupon?: { __typename?: 'Coupon', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, active_from?: any | undefined, amount_off?: number | undefined, code?: string | undefined, couponType: CouponType, description?: string | undefined, expire_at?: any | undefined, id: string, imageObj?: any | undefined, name: string, percent_off?: number | undefined, type?: string | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyOrderQueryVariables = Exact<{
  where?: InputMaybe<OrderWhereInput>;
  orderBy?: InputMaybe<Array<OrderOrderByWithRelationInput> | OrderOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderQuery = { __typename?: 'Query', findManyOrder: Array<{ __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, coupon?: { __typename?: 'Coupon', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, active_from?: any | undefined, amount_off?: number | undefined, code?: string | undefined, couponType: CouponType, description?: string | undefined, expire_at?: any | undefined, id: string, imageObj?: any | undefined, name: string, percent_off?: number | undefined, type?: string | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyOrderCountQueryVariables = Exact<{
  where?: InputMaybe<OrderWhereInput>;
  orderBy?: InputMaybe<Array<OrderOrderByWithRelationInput> | OrderOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderCountQuery = { __typename?: 'Query', findManyOrderCount: number };

export type CreateOneOrderMutationVariables = Exact<{
  data: OrderCreateInput;
}>;


export type CreateOneOrderMutation = { __typename?: 'Mutation', createOneOrder: { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, coupon?: { __typename?: 'Coupon', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, active_from?: any | undefined, amount_off?: number | undefined, code?: string | undefined, couponType: CouponType, description?: string | undefined, expire_at?: any | undefined, id: string, imageObj?: any | undefined, name: string, percent_off?: number | undefined, type?: string | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneOrderMutationVariables = Exact<{
  where: OrderWhereUniqueInput;
  data: OrderUpdateInput;
}>;


export type UpdateOneOrderMutation = { __typename?: 'Mutation', updateOneOrder: { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, coupon?: { __typename?: 'Coupon', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, active_from?: any | undefined, amount_off?: number | undefined, code?: string | undefined, couponType: CouponType, description?: string | undefined, expire_at?: any | undefined, id: string, imageObj?: any | undefined, name: string, percent_off?: number | undefined, type?: string | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneOrderMutationVariables = Exact<{
  where: OrderWhereUniqueInput;
}>;


export type DeleteOneOrderMutation = { __typename?: 'Mutation', deleteOneOrder?: { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, coupon?: { __typename?: 'Coupon', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, active_from?: any | undefined, amount_off?: number | undefined, code?: string | undefined, couponType: CouponType, description?: string | undefined, expire_at?: any | undefined, id: string, imageObj?: any | undefined, name: string, percent_off?: number | undefined, type?: string | undefined, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyOrderMutationVariables = Exact<{
  where?: InputMaybe<OrderWhereInput>;
}>;


export type DeleteManyOrderMutation = { __typename?: 'Mutation', deleteManyOrder: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyOrderMutationVariables = Exact<{
  where?: InputMaybe<OrderWhereInput>;
  data: OrderUpdateManyMutationInput;
}>;


export type UpdateManyOrderMutation = { __typename?: 'Mutation', updateManyOrder: { __typename?: 'BatchPayload', count: number } };

export type OrderedAudioFieldsFragment = { __typename?: 'OrderedAudio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioId?: string | undefined, audioObj?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined };

export type OrderedAudioFragment = { __typename?: 'OrderedAudio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioId?: string | undefined, audioObj?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, audio?: { __typename?: 'Audio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioObj?: any | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined };

export type FindUniqueOrderedAudioQueryVariables = Exact<{
  where: OrderedAudioWhereUniqueInput;
}>;


export type FindUniqueOrderedAudioQuery = { __typename?: 'Query', findUniqueOrderedAudio?: { __typename?: 'OrderedAudio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioId?: string | undefined, audioObj?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, audio?: { __typename?: 'Audio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioObj?: any | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type FindManyOrderedAudioQueryVariables = Exact<{
  where?: InputMaybe<OrderedAudioWhereInput>;
  orderBy?: InputMaybe<Array<OrderedAudioOrderByWithRelationInput> | OrderedAudioOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderedAudioWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderedAudioQuery = { __typename?: 'Query', findManyOrderedAudio: Array<{ __typename?: 'OrderedAudio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioId?: string | undefined, audioObj?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, audio?: { __typename?: 'Audio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioObj?: any | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined }> };

export type FindManyOrderedAudioCountQueryVariables = Exact<{
  where?: InputMaybe<OrderedAudioWhereInput>;
  orderBy?: InputMaybe<Array<OrderedAudioOrderByWithRelationInput> | OrderedAudioOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderedAudioWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderedAudioCountQuery = { __typename?: 'Query', findManyOrderedAudioCount: number };

export type CreateOneOrderedAudioMutationVariables = Exact<{
  data: OrderedAudioCreateInput;
}>;


export type CreateOneOrderedAudioMutation = { __typename?: 'Mutation', createOneOrderedAudio: { __typename?: 'OrderedAudio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioId?: string | undefined, audioObj?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, audio?: { __typename?: 'Audio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioObj?: any | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined } };

export type UpdateOneOrderedAudioMutationVariables = Exact<{
  where: OrderedAudioWhereUniqueInput;
  data: OrderedAudioUpdateInput;
}>;


export type UpdateOneOrderedAudioMutation = { __typename?: 'Mutation', updateOneOrderedAudio: { __typename?: 'OrderedAudio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioId?: string | undefined, audioObj?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, audio?: { __typename?: 'Audio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioObj?: any | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined } };

export type DeleteOneOrderedAudioMutationVariables = Exact<{
  where: OrderedAudioWhereUniqueInput;
}>;


export type DeleteOneOrderedAudioMutation = { __typename?: 'Mutation', deleteOneOrderedAudio?: { __typename?: 'OrderedAudio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioId?: string | undefined, audioObj?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, audio?: { __typename?: 'Audio', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, audioObj?: any | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type DeleteManyOrderedAudioMutationVariables = Exact<{
  where?: InputMaybe<OrderedAudioWhereInput>;
}>;


export type DeleteManyOrderedAudioMutation = { __typename?: 'Mutation', deleteManyOrderedAudio: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyOrderedAudioMutationVariables = Exact<{
  where?: InputMaybe<OrderedAudioWhereInput>;
  data: OrderedAudioUpdateManyMutationInput;
}>;


export type UpdateManyOrderedAudioMutation = { __typename?: 'Mutation', updateManyOrderedAudio: { __typename?: 'BatchPayload', count: number } };

export type OrderedDocumentFieldsFragment = { __typename?: 'OrderedDocument', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, documentId?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined };

export type OrderedDocumentFragment = { __typename?: 'OrderedDocument', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, documentId?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, document?: { __typename?: 'Document', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined };

export type FindUniqueOrderedDocumentQueryVariables = Exact<{
  where: OrderedDocumentWhereUniqueInput;
}>;


export type FindUniqueOrderedDocumentQuery = { __typename?: 'Query', findUniqueOrderedDocument?: { __typename?: 'OrderedDocument', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, documentId?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, document?: { __typename?: 'Document', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type FindManyOrderedDocumentQueryVariables = Exact<{
  where?: InputMaybe<OrderedDocumentWhereInput>;
  orderBy?: InputMaybe<Array<OrderedDocumentOrderByWithRelationInput> | OrderedDocumentOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderedDocumentWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderedDocumentQuery = { __typename?: 'Query', findManyOrderedDocument: Array<{ __typename?: 'OrderedDocument', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, documentId?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, document?: { __typename?: 'Document', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined }> };

export type FindManyOrderedDocumentCountQueryVariables = Exact<{
  where?: InputMaybe<OrderedDocumentWhereInput>;
  orderBy?: InputMaybe<Array<OrderedDocumentOrderByWithRelationInput> | OrderedDocumentOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderedDocumentWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderedDocumentCountQuery = { __typename?: 'Query', findManyOrderedDocumentCount: number };

export type CreateOneOrderedDocumentMutationVariables = Exact<{
  data: OrderedDocumentCreateInput;
}>;


export type CreateOneOrderedDocumentMutation = { __typename?: 'Mutation', createOneOrderedDocument: { __typename?: 'OrderedDocument', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, documentId?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, document?: { __typename?: 'Document', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined } };

export type UpdateOneOrderedDocumentMutationVariables = Exact<{
  where: OrderedDocumentWhereUniqueInput;
  data: OrderedDocumentUpdateInput;
}>;


export type UpdateOneOrderedDocumentMutation = { __typename?: 'Mutation', updateOneOrderedDocument: { __typename?: 'OrderedDocument', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, documentId?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, document?: { __typename?: 'Document', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined } };

export type DeleteOneOrderedDocumentMutationVariables = Exact<{
  where: OrderedDocumentWhereUniqueInput;
}>;


export type DeleteOneOrderedDocumentMutation = { __typename?: 'Mutation', deleteOneOrderedDocument?: { __typename?: 'OrderedDocument', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, documentId?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, document?: { __typename?: 'Document', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, documentObj?: any | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type DeleteManyOrderedDocumentMutationVariables = Exact<{
  where?: InputMaybe<OrderedDocumentWhereInput>;
}>;


export type DeleteManyOrderedDocumentMutation = { __typename?: 'Mutation', deleteManyOrderedDocument: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyOrderedDocumentMutationVariables = Exact<{
  where?: InputMaybe<OrderedDocumentWhereInput>;
  data: OrderedDocumentUpdateManyMutationInput;
}>;


export type UpdateManyOrderedDocumentMutation = { __typename?: 'Mutation', updateManyOrderedDocument: { __typename?: 'BatchPayload', count: number } };

export type OrderedLinkFieldsFragment = { __typename?: 'OrderedLink', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, linkId?: string | undefined, name?: string | undefined, orderedProductId?: string | undefined, url: string };

export type OrderedLinkFragment = { __typename?: 'OrderedLink', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, linkId?: string | undefined, name?: string | undefined, orderedProductId?: string | undefined, url: string, link?: { __typename?: 'Link', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, url: string, userId?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined };

export type FindUniqueOrderedLinkQueryVariables = Exact<{
  where: OrderedLinkWhereUniqueInput;
}>;


export type FindUniqueOrderedLinkQuery = { __typename?: 'Query', findUniqueOrderedLink?: { __typename?: 'OrderedLink', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, linkId?: string | undefined, name?: string | undefined, orderedProductId?: string | undefined, url: string, link?: { __typename?: 'Link', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, url: string, userId?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type FindManyOrderedLinkQueryVariables = Exact<{
  where?: InputMaybe<OrderedLinkWhereInput>;
  orderBy?: InputMaybe<Array<OrderedLinkOrderByWithRelationInput> | OrderedLinkOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderedLinkWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderedLinkQuery = { __typename?: 'Query', findManyOrderedLink: Array<{ __typename?: 'OrderedLink', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, linkId?: string | undefined, name?: string | undefined, orderedProductId?: string | undefined, url: string, link?: { __typename?: 'Link', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, url: string, userId?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined }> };

export type FindManyOrderedLinkCountQueryVariables = Exact<{
  where?: InputMaybe<OrderedLinkWhereInput>;
  orderBy?: InputMaybe<Array<OrderedLinkOrderByWithRelationInput> | OrderedLinkOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderedLinkWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderedLinkCountQuery = { __typename?: 'Query', findManyOrderedLinkCount: number };

export type CreateOneOrderedLinkMutationVariables = Exact<{
  data: OrderedLinkCreateInput;
}>;


export type CreateOneOrderedLinkMutation = { __typename?: 'Mutation', createOneOrderedLink: { __typename?: 'OrderedLink', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, linkId?: string | undefined, name?: string | undefined, orderedProductId?: string | undefined, url: string, link?: { __typename?: 'Link', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, url: string, userId?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined } };

export type UpdateOneOrderedLinkMutationVariables = Exact<{
  where: OrderedLinkWhereUniqueInput;
  data: OrderedLinkUpdateInput;
}>;


export type UpdateOneOrderedLinkMutation = { __typename?: 'Mutation', updateOneOrderedLink: { __typename?: 'OrderedLink', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, linkId?: string | undefined, name?: string | undefined, orderedProductId?: string | undefined, url: string, link?: { __typename?: 'Link', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, url: string, userId?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined } };

export type DeleteOneOrderedLinkMutationVariables = Exact<{
  where: OrderedLinkWhereUniqueInput;
}>;


export type DeleteOneOrderedLinkMutation = { __typename?: 'Mutation', deleteOneOrderedLink?: { __typename?: 'OrderedLink', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, linkId?: string | undefined, name?: string | undefined, orderedProductId?: string | undefined, url: string, link?: { __typename?: 'Link', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, hiddenMessage?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, url: string, userId?: string | undefined } | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type DeleteManyOrderedLinkMutationVariables = Exact<{
  where?: InputMaybe<OrderedLinkWhereInput>;
}>;


export type DeleteManyOrderedLinkMutation = { __typename?: 'Mutation', deleteManyOrderedLink: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyOrderedLinkMutationVariables = Exact<{
  where?: InputMaybe<OrderedLinkWhereInput>;
  data: OrderedLinkUpdateManyMutationInput;
}>;


export type UpdateManyOrderedLinkMutation = { __typename?: 'Mutation', updateManyOrderedLink: { __typename?: 'BatchPayload', count: number } };

export type OrderedPictureFieldsFragment = { __typename?: 'OrderedPicture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, pictureId?: string | undefined, url?: string | undefined };

export type OrderedPictureFragment = { __typename?: 'OrderedPicture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, pictureId?: string | undefined, url?: string | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, picture?: { __typename?: 'Picture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueOrderedPictureQueryVariables = Exact<{
  where: OrderedPictureWhereUniqueInput;
}>;


export type FindUniqueOrderedPictureQuery = { __typename?: 'Query', findUniqueOrderedPicture?: { __typename?: 'OrderedPicture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, pictureId?: string | undefined, url?: string | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, picture?: { __typename?: 'Picture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyOrderedPictureQueryVariables = Exact<{
  where?: InputMaybe<OrderedPictureWhereInput>;
  orderBy?: InputMaybe<Array<OrderedPictureOrderByWithRelationInput> | OrderedPictureOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderedPictureWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderedPictureQuery = { __typename?: 'Query', findManyOrderedPicture: Array<{ __typename?: 'OrderedPicture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, pictureId?: string | undefined, url?: string | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, picture?: { __typename?: 'Picture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyOrderedPictureCountQueryVariables = Exact<{
  where?: InputMaybe<OrderedPictureWhereInput>;
  orderBy?: InputMaybe<Array<OrderedPictureOrderByWithRelationInput> | OrderedPictureOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderedPictureWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderedPictureCountQuery = { __typename?: 'Query', findManyOrderedPictureCount: number };

export type CreateOneOrderedPictureMutationVariables = Exact<{
  data: OrderedPictureCreateInput;
}>;


export type CreateOneOrderedPictureMutation = { __typename?: 'Mutation', createOneOrderedPicture: { __typename?: 'OrderedPicture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, pictureId?: string | undefined, url?: string | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, picture?: { __typename?: 'Picture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneOrderedPictureMutationVariables = Exact<{
  where: OrderedPictureWhereUniqueInput;
  data: OrderedPictureUpdateInput;
}>;


export type UpdateOneOrderedPictureMutation = { __typename?: 'Mutation', updateOneOrderedPicture: { __typename?: 'OrderedPicture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, pictureId?: string | undefined, url?: string | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, picture?: { __typename?: 'Picture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneOrderedPictureMutationVariables = Exact<{
  where: OrderedPictureWhereUniqueInput;
}>;


export type DeleteOneOrderedPictureMutation = { __typename?: 'Mutation', deleteOneOrderedPicture?: { __typename?: 'OrderedPicture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, pictureId?: string | undefined, url?: string | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, picture?: { __typename?: 'Picture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyOrderedPictureMutationVariables = Exact<{
  where?: InputMaybe<OrderedPictureWhereInput>;
}>;


export type DeleteManyOrderedPictureMutation = { __typename?: 'Mutation', deleteManyOrderedPicture: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyOrderedPictureMutationVariables = Exact<{
  where?: InputMaybe<OrderedPictureWhereInput>;
  data: OrderedPictureUpdateManyMutationInput;
}>;


export type UpdateManyOrderedPictureMutation = { __typename?: 'Mutation', updateManyOrderedPicture: { __typename?: 'BatchPayload', count: number } };

export type OrderedProductFieldsFragment = { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined };

export type OrderedProductFragment = { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, order?: { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined } | undefined, refund?: { __typename?: 'Refund', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, amount?: number | undefined, id: string, orderId?: string | undefined, received?: boolean | undefined, shippingImages: Array<any> } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueOrderedProductQueryVariables = Exact<{
  where: OrderedProductWhereUniqueInput;
}>;


export type FindUniqueOrderedProductQuery = { __typename?: 'Query', findUniqueOrderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, order?: { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined } | undefined, refund?: { __typename?: 'Refund', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, amount?: number | undefined, id: string, orderId?: string | undefined, received?: boolean | undefined, shippingImages: Array<any> } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyOrderedProductQueryVariables = Exact<{
  where?: InputMaybe<OrderedProductWhereInput>;
  orderBy?: InputMaybe<Array<OrderedProductOrderByWithRelationInput> | OrderedProductOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderedProductQuery = { __typename?: 'Query', findManyOrderedProduct: Array<{ __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, order?: { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined } | undefined, refund?: { __typename?: 'Refund', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, amount?: number | undefined, id: string, orderId?: string | undefined, received?: boolean | undefined, shippingImages: Array<any> } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyOrderedProductCountQueryVariables = Exact<{
  where?: InputMaybe<OrderedProductWhereInput>;
  orderBy?: InputMaybe<Array<OrderedProductOrderByWithRelationInput> | OrderedProductOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderedProductWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderedProductCountQuery = { __typename?: 'Query', findManyOrderedProductCount: number };

export type CreateOneOrderedProductMutationVariables = Exact<{
  data: OrderedProductCreateInput;
}>;


export type CreateOneOrderedProductMutation = { __typename?: 'Mutation', createOneOrderedProduct: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, order?: { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined } | undefined, refund?: { __typename?: 'Refund', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, amount?: number | undefined, id: string, orderId?: string | undefined, received?: boolean | undefined, shippingImages: Array<any> } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneOrderedProductMutationVariables = Exact<{
  where: OrderedProductWhereUniqueInput;
  data: OrderedProductUpdateInput;
}>;


export type UpdateOneOrderedProductMutation = { __typename?: 'Mutation', updateOneOrderedProduct: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, order?: { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined } | undefined, refund?: { __typename?: 'Refund', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, amount?: number | undefined, id: string, orderId?: string | undefined, received?: boolean | undefined, shippingImages: Array<any> } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneOrderedProductMutationVariables = Exact<{
  where: OrderedProductWhereUniqueInput;
}>;


export type DeleteOneOrderedProductMutation = { __typename?: 'Mutation', deleteOneOrderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined, order?: { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, product?: { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined } | undefined, refund?: { __typename?: 'Refund', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, amount?: number | undefined, id: string, orderId?: string | undefined, received?: boolean | undefined, shippingImages: Array<any> } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyOrderedProductMutationVariables = Exact<{
  where?: InputMaybe<OrderedProductWhereInput>;
}>;


export type DeleteManyOrderedProductMutation = { __typename?: 'Mutation', deleteManyOrderedProduct: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyOrderedProductMutationVariables = Exact<{
  where?: InputMaybe<OrderedProductWhereInput>;
  data: OrderedProductUpdateManyMutationInput;
}>;


export type UpdateManyOrderedProductMutation = { __typename?: 'Mutation', updateManyOrderedProduct: { __typename?: 'BatchPayload', count: number } };

export type OrderedRedeemableFieldsFragment = { __typename?: 'OrderedRedeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, perLimit?: number | undefined, quantity?: number | undefined, redeemInfo?: any | undefined, redeemableId?: string | undefined, url?: string | undefined };

export type OrderedRedeemableFragment = { __typename?: 'OrderedRedeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, perLimit?: number | undefined, quantity?: number | undefined, redeemInfo?: any | undefined, redeemableId?: string | undefined, url?: string | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, redeemable?: { __typename?: 'Redeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, perLimit: number, quantity: number, redeemInfo?: any | undefined, redeemPassword?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueOrderedRedeemableQueryVariables = Exact<{
  where: OrderedRedeemableWhereUniqueInput;
}>;


export type FindUniqueOrderedRedeemableQuery = { __typename?: 'Query', findUniqueOrderedRedeemable?: { __typename?: 'OrderedRedeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, perLimit?: number | undefined, quantity?: number | undefined, redeemInfo?: any | undefined, redeemableId?: string | undefined, url?: string | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, redeemable?: { __typename?: 'Redeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, perLimit: number, quantity: number, redeemInfo?: any | undefined, redeemPassword?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyOrderedRedeemableQueryVariables = Exact<{
  where?: InputMaybe<OrderedRedeemableWhereInput>;
  orderBy?: InputMaybe<Array<OrderedRedeemableOrderByWithRelationInput> | OrderedRedeemableOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderedRedeemableWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderedRedeemableQuery = { __typename?: 'Query', findManyOrderedRedeemable: Array<{ __typename?: 'OrderedRedeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, perLimit?: number | undefined, quantity?: number | undefined, redeemInfo?: any | undefined, redeemableId?: string | undefined, url?: string | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, redeemable?: { __typename?: 'Redeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, perLimit: number, quantity: number, redeemInfo?: any | undefined, redeemPassword?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyOrderedRedeemableCountQueryVariables = Exact<{
  where?: InputMaybe<OrderedRedeemableWhereInput>;
  orderBy?: InputMaybe<Array<OrderedRedeemableOrderByWithRelationInput> | OrderedRedeemableOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderedRedeemableWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderedRedeemableCountQuery = { __typename?: 'Query', findManyOrderedRedeemableCount: number };

export type CreateOneOrderedRedeemableMutationVariables = Exact<{
  data: OrderedRedeemableCreateInput;
}>;


export type CreateOneOrderedRedeemableMutation = { __typename?: 'Mutation', createOneOrderedRedeemable: { __typename?: 'OrderedRedeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, perLimit?: number | undefined, quantity?: number | undefined, redeemInfo?: any | undefined, redeemableId?: string | undefined, url?: string | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, redeemable?: { __typename?: 'Redeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, perLimit: number, quantity: number, redeemInfo?: any | undefined, redeemPassword?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneOrderedRedeemableMutationVariables = Exact<{
  where: OrderedRedeemableWhereUniqueInput;
  data: OrderedRedeemableUpdateInput;
}>;


export type UpdateOneOrderedRedeemableMutation = { __typename?: 'Mutation', updateOneOrderedRedeemable: { __typename?: 'OrderedRedeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, perLimit?: number | undefined, quantity?: number | undefined, redeemInfo?: any | undefined, redeemableId?: string | undefined, url?: string | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, redeemable?: { __typename?: 'Redeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, perLimit: number, quantity: number, redeemInfo?: any | undefined, redeemPassword?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneOrderedRedeemableMutationVariables = Exact<{
  where: OrderedRedeemableWhereUniqueInput;
}>;


export type DeleteOneOrderedRedeemableMutation = { __typename?: 'Mutation', deleteOneOrderedRedeemable?: { __typename?: 'OrderedRedeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, perLimit?: number | undefined, quantity?: number | undefined, redeemInfo?: any | undefined, redeemableId?: string | undefined, url?: string | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, redeemable?: { __typename?: 'Redeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, perLimit: number, quantity: number, redeemInfo?: any | undefined, redeemPassword?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyOrderedRedeemableMutationVariables = Exact<{
  where?: InputMaybe<OrderedRedeemableWhereInput>;
}>;


export type DeleteManyOrderedRedeemableMutation = { __typename?: 'Mutation', deleteManyOrderedRedeemable: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyOrderedRedeemableMutationVariables = Exact<{
  where?: InputMaybe<OrderedRedeemableWhereInput>;
  data: OrderedRedeemableUpdateManyMutationInput;
}>;


export type UpdateManyOrderedRedeemableMutation = { __typename?: 'Mutation', updateManyOrderedRedeemable: { __typename?: 'BatchPayload', count: number } };

export type OrderedVideoFieldsFragment = { __typename?: 'OrderedVideo', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, videoId?: string | undefined, videoObj?: any | undefined };

export type OrderedVideoFragment = { __typename?: 'OrderedVideo', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, videoId?: string | undefined, videoObj?: any | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, videoObj?: any | undefined, walletAddress?: string | undefined } | undefined };

export type FindUniqueOrderedVideoQueryVariables = Exact<{
  where: OrderedVideoWhereUniqueInput;
}>;


export type FindUniqueOrderedVideoQuery = { __typename?: 'Query', findUniqueOrderedVideo?: { __typename?: 'OrderedVideo', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, videoId?: string | undefined, videoObj?: any | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, videoObj?: any | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type FindManyOrderedVideoQueryVariables = Exact<{
  where?: InputMaybe<OrderedVideoWhereInput>;
  orderBy?: InputMaybe<Array<OrderedVideoOrderByWithRelationInput> | OrderedVideoOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderedVideoWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderedVideoQuery = { __typename?: 'Query', findManyOrderedVideo: Array<{ __typename?: 'OrderedVideo', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, videoId?: string | undefined, videoObj?: any | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, videoObj?: any | undefined, walletAddress?: string | undefined } | undefined }> };

export type FindManyOrderedVideoCountQueryVariables = Exact<{
  where?: InputMaybe<OrderedVideoWhereInput>;
  orderBy?: InputMaybe<Array<OrderedVideoOrderByWithRelationInput> | OrderedVideoOrderByWithRelationInput>;
  cursor?: InputMaybe<OrderedVideoWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyOrderedVideoCountQuery = { __typename?: 'Query', findManyOrderedVideoCount: number };

export type CreateOneOrderedVideoMutationVariables = Exact<{
  data: OrderedVideoCreateInput;
}>;


export type CreateOneOrderedVideoMutation = { __typename?: 'Mutation', createOneOrderedVideo: { __typename?: 'OrderedVideo', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, videoId?: string | undefined, videoObj?: any | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, videoObj?: any | undefined, walletAddress?: string | undefined } | undefined } };

export type UpdateOneOrderedVideoMutationVariables = Exact<{
  where: OrderedVideoWhereUniqueInput;
  data: OrderedVideoUpdateInput;
}>;


export type UpdateOneOrderedVideoMutation = { __typename?: 'Mutation', updateOneOrderedVideo: { __typename?: 'OrderedVideo', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, videoId?: string | undefined, videoObj?: any | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, videoObj?: any | undefined, walletAddress?: string | undefined } | undefined } };

export type DeleteOneOrderedVideoMutationVariables = Exact<{
  where: OrderedVideoWhereUniqueInput;
}>;


export type DeleteOneOrderedVideoMutation = { __typename?: 'Mutation', deleteOneOrderedVideo?: { __typename?: 'OrderedVideo', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, orderedProductId?: string | undefined, url?: string | undefined, videoId?: string | undefined, videoObj?: any | undefined, orderedProduct?: { __typename?: 'OrderedProduct', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, description?: string | undefined, id: string, imageObj?: any | undefined, itemTotal?: number | undefined, minted?: boolean | undefined, name: string, orderId?: string | undefined, orderNumber?: string | undefined, price?: number | undefined, productId?: string | undefined, productSlug: string, productType?: ProductType | undefined, quantity?: number | undefined, refundId?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, url?: string | undefined, variationId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, video?: { __typename?: 'Video', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, videoObj?: any | undefined, walletAddress?: string | undefined } | undefined } | undefined };

export type DeleteManyOrderedVideoMutationVariables = Exact<{
  where?: InputMaybe<OrderedVideoWhereInput>;
}>;


export type DeleteManyOrderedVideoMutation = { __typename?: 'Mutation', deleteManyOrderedVideo: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyOrderedVideoMutationVariables = Exact<{
  where?: InputMaybe<OrderedVideoWhereInput>;
  data: OrderedVideoUpdateManyMutationInput;
}>;


export type UpdateManyOrderedVideoMutation = { __typename?: 'Mutation', updateManyOrderedVideo: { __typename?: 'BatchPayload', count: number } };

export type PageFieldsFragment = { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined };

export type PageFragment = { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniquePageQueryVariables = Exact<{
  where: PageWhereUniqueInput;
}>;


export type FindUniquePageQuery = { __typename?: 'Query', findUniquePage?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyPageQueryVariables = Exact<{
  where?: InputMaybe<PageWhereInput>;
  orderBy?: InputMaybe<Array<PageOrderByWithRelationInput> | PageOrderByWithRelationInput>;
  cursor?: InputMaybe<PageWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyPageQuery = { __typename?: 'Query', findManyPage: Array<{ __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyPageCountQueryVariables = Exact<{
  where?: InputMaybe<PageWhereInput>;
  orderBy?: InputMaybe<Array<PageOrderByWithRelationInput> | PageOrderByWithRelationInput>;
  cursor?: InputMaybe<PageWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyPageCountQuery = { __typename?: 'Query', findManyPageCount: number };

export type CreateOnePageMutationVariables = Exact<{
  data: PageCreateInput;
}>;


export type CreateOnePageMutation = { __typename?: 'Mutation', createOnePage: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOnePageMutationVariables = Exact<{
  where: PageWhereUniqueInput;
  data: PageUpdateInput;
}>;


export type UpdateOnePageMutation = { __typename?: 'Mutation', updateOnePage: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOnePageMutationVariables = Exact<{
  where: PageWhereUniqueInput;
}>;


export type DeleteOnePageMutation = { __typename?: 'Mutation', deleteOnePage?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyPageMutationVariables = Exact<{
  where?: InputMaybe<PageWhereInput>;
}>;


export type DeleteManyPageMutation = { __typename?: 'Mutation', deleteManyPage: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyPageMutationVariables = Exact<{
  where?: InputMaybe<PageWhereInput>;
  data: PageUpdateManyMutationInput;
}>;


export type UpdateManyPageMutation = { __typename?: 'Mutation', updateManyPage: { __typename?: 'BatchPayload', count: number } };

export type PageCollectionFieldsFragment = { __typename?: 'PageCollection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined };

export type PageCollectionFragment = { __typename?: 'PageCollection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniquePageCollectionQueryVariables = Exact<{
  where: PageCollectionWhereUniqueInput;
}>;


export type FindUniquePageCollectionQuery = { __typename?: 'Query', findUniquePageCollection?: { __typename?: 'PageCollection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyPageCollectionQueryVariables = Exact<{
  where?: InputMaybe<PageCollectionWhereInput>;
  orderBy?: InputMaybe<Array<PageCollectionOrderByWithRelationInput> | PageCollectionOrderByWithRelationInput>;
  cursor?: InputMaybe<PageCollectionWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyPageCollectionQuery = { __typename?: 'Query', findManyPageCollection: Array<{ __typename?: 'PageCollection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyPageCollectionCountQueryVariables = Exact<{
  where?: InputMaybe<PageCollectionWhereInput>;
  orderBy?: InputMaybe<Array<PageCollectionOrderByWithRelationInput> | PageCollectionOrderByWithRelationInput>;
  cursor?: InputMaybe<PageCollectionWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyPageCollectionCountQuery = { __typename?: 'Query', findManyPageCollectionCount: number };

export type CreateOnePageCollectionMutationVariables = Exact<{
  data: PageCollectionCreateInput;
}>;


export type CreateOnePageCollectionMutation = { __typename?: 'Mutation', createOnePageCollection: { __typename?: 'PageCollection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOnePageCollectionMutationVariables = Exact<{
  where: PageCollectionWhereUniqueInput;
  data: PageCollectionUpdateInput;
}>;


export type UpdateOnePageCollectionMutation = { __typename?: 'Mutation', updateOnePageCollection: { __typename?: 'PageCollection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOnePageCollectionMutationVariables = Exact<{
  where: PageCollectionWhereUniqueInput;
}>;


export type DeleteOnePageCollectionMutation = { __typename?: 'Mutation', deleteOnePageCollection?: { __typename?: 'PageCollection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyPageCollectionMutationVariables = Exact<{
  where?: InputMaybe<PageCollectionWhereInput>;
}>;


export type DeleteManyPageCollectionMutation = { __typename?: 'Mutation', deleteManyPageCollection: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyPageCollectionMutationVariables = Exact<{
  where?: InputMaybe<PageCollectionWhereInput>;
  data: PageCollectionUpdateManyMutationInput;
}>;


export type UpdateManyPageCollectionMutation = { __typename?: 'Mutation', updateManyPageCollection: { __typename?: 'BatchPayload', count: number } };

export type PageViewFieldsFragment = { __typename?: 'PageView', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, ip?: string | undefined, pageId?: string | undefined };

export type PageViewFragment = { __typename?: 'PageView', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined };

export type FindUniquePageViewQueryVariables = Exact<{
  where: PageViewWhereUniqueInput;
}>;


export type FindUniquePageViewQuery = { __typename?: 'Query', findUniquePageView?: { __typename?: 'PageView', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type FindManyPageViewQueryVariables = Exact<{
  where?: InputMaybe<PageViewWhereInput>;
  orderBy?: InputMaybe<Array<PageViewOrderByWithRelationInput> | PageViewOrderByWithRelationInput>;
  cursor?: InputMaybe<PageViewWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyPageViewQuery = { __typename?: 'Query', findManyPageView: Array<{ __typename?: 'PageView', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined }> };

export type FindManyPageViewCountQueryVariables = Exact<{
  where?: InputMaybe<PageViewWhereInput>;
  orderBy?: InputMaybe<Array<PageViewOrderByWithRelationInput> | PageViewOrderByWithRelationInput>;
  cursor?: InputMaybe<PageViewWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyPageViewCountQuery = { __typename?: 'Query', findManyPageViewCount: number };

export type CreateOnePageViewMutationVariables = Exact<{
  data: PageViewCreateInput;
}>;


export type CreateOnePageViewMutation = { __typename?: 'Mutation', createOnePageView: { __typename?: 'PageView', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } };

export type UpdateOnePageViewMutationVariables = Exact<{
  where: PageViewWhereUniqueInput;
  data: PageViewUpdateInput;
}>;


export type UpdateOnePageViewMutation = { __typename?: 'Mutation', updateOnePageView: { __typename?: 'PageView', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } };

export type DeleteOnePageViewMutationVariables = Exact<{
  where: PageViewWhereUniqueInput;
}>;


export type DeleteOnePageViewMutation = { __typename?: 'Mutation', deleteOnePageView?: { __typename?: 'PageView', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type DeleteManyPageViewMutationVariables = Exact<{
  where?: InputMaybe<PageViewWhereInput>;
}>;


export type DeleteManyPageViewMutation = { __typename?: 'Mutation', deleteManyPageView: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyPageViewMutationVariables = Exact<{
  where?: InputMaybe<PageViewWhereInput>;
  data: PageViewUpdateManyMutationInput;
}>;


export type UpdateManyPageViewMutation = { __typename?: 'Mutation', updateManyPageView: { __typename?: 'BatchPayload', count: number } };

export type PictureFieldsFragment = { __typename?: 'Picture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined };

export type PictureFragment = { __typename?: 'Picture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniquePictureQueryVariables = Exact<{
  where: PictureWhereUniqueInput;
}>;


export type FindUniquePictureQuery = { __typename?: 'Query', findUniquePicture?: { __typename?: 'Picture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyPictureQueryVariables = Exact<{
  where?: InputMaybe<PictureWhereInput>;
  orderBy?: InputMaybe<Array<PictureOrderByWithRelationInput> | PictureOrderByWithRelationInput>;
  cursor?: InputMaybe<PictureWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyPictureQuery = { __typename?: 'Query', findManyPicture: Array<{ __typename?: 'Picture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyPictureCountQueryVariables = Exact<{
  where?: InputMaybe<PictureWhereInput>;
  orderBy?: InputMaybe<Array<PictureOrderByWithRelationInput> | PictureOrderByWithRelationInput>;
  cursor?: InputMaybe<PictureWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyPictureCountQuery = { __typename?: 'Query', findManyPictureCount: number };

export type CreateOnePictureMutationVariables = Exact<{
  data: PictureCreateInput;
}>;


export type CreateOnePictureMutation = { __typename?: 'Mutation', createOnePicture: { __typename?: 'Picture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOnePictureMutationVariables = Exact<{
  where: PictureWhereUniqueInput;
  data: PictureUpdateInput;
}>;


export type UpdateOnePictureMutation = { __typename?: 'Mutation', updateOnePicture: { __typename?: 'Picture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOnePictureMutationVariables = Exact<{
  where: PictureWhereUniqueInput;
}>;


export type DeleteOnePictureMutation = { __typename?: 'Mutation', deleteOnePicture?: { __typename?: 'Picture', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyPictureMutationVariables = Exact<{
  where?: InputMaybe<PictureWhereInput>;
}>;


export type DeleteManyPictureMutation = { __typename?: 'Mutation', deleteManyPicture: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyPictureMutationVariables = Exact<{
  where?: InputMaybe<PictureWhereInput>;
  data: PictureUpdateManyMutationInput;
}>;


export type UpdateManyPictureMutation = { __typename?: 'Mutation', updateManyPicture: { __typename?: 'BatchPayload', count: number } };

export type ProductFieldsFragment = { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined };

export type ProductFragment = { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined, type?: { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueProductQueryVariables = Exact<{
  where: ProductWhereUniqueInput;
}>;


export type FindUniqueProductQuery = { __typename?: 'Query', findUniqueProduct?: { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined, type?: { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyProductQueryVariables = Exact<{
  where?: InputMaybe<ProductWhereInput>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput> | ProductOrderByWithRelationInput>;
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyProductQuery = { __typename?: 'Query', findManyProduct: Array<{ __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined, type?: { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyProductCountQueryVariables = Exact<{
  where?: InputMaybe<ProductWhereInput>;
  orderBy?: InputMaybe<Array<ProductOrderByWithRelationInput> | ProductOrderByWithRelationInput>;
  cursor?: InputMaybe<ProductWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyProductCountQuery = { __typename?: 'Query', findManyProductCount: number };

export type CreateOneProductMutationVariables = Exact<{
  data: ProductCreateInput;
}>;


export type CreateOneProductMutation = { __typename?: 'Mutation', createOneProduct: { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined, type?: { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneProductMutationVariables = Exact<{
  where: ProductWhereUniqueInput;
  data: ProductUpdateInput;
}>;


export type UpdateOneProductMutation = { __typename?: 'Mutation', updateOneProduct: { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined, type?: { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneProductMutationVariables = Exact<{
  where: ProductWhereUniqueInput;
}>;


export type DeleteOneProductMutation = { __typename?: 'Mutation', deleteOneProduct?: { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined, type?: { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined } | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyProductMutationVariables = Exact<{
  where?: InputMaybe<ProductWhereInput>;
}>;


export type DeleteManyProductMutation = { __typename?: 'Mutation', deleteManyProduct: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyProductMutationVariables = Exact<{
  where?: InputMaybe<ProductWhereInput>;
  data: ProductUpdateManyMutationInput;
}>;


export type UpdateManyProductMutation = { __typename?: 'Mutation', updateManyProduct: { __typename?: 'BatchPayload', count: number } };

export type ProductCollectionFieldsFragment = { __typename?: 'ProductCollection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined };

export type ProductCollectionFragment = { __typename?: 'ProductCollection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueProductCollectionQueryVariables = Exact<{
  where: ProductCollectionWhereUniqueInput;
}>;


export type FindUniqueProductCollectionQuery = { __typename?: 'Query', findUniqueProductCollection?: { __typename?: 'ProductCollection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyProductCollectionQueryVariables = Exact<{
  where?: InputMaybe<ProductCollectionWhereInput>;
  orderBy?: InputMaybe<Array<ProductCollectionOrderByWithRelationInput> | ProductCollectionOrderByWithRelationInput>;
  cursor?: InputMaybe<ProductCollectionWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyProductCollectionQuery = { __typename?: 'Query', findManyProductCollection: Array<{ __typename?: 'ProductCollection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyProductCollectionCountQueryVariables = Exact<{
  where?: InputMaybe<ProductCollectionWhereInput>;
  orderBy?: InputMaybe<Array<ProductCollectionOrderByWithRelationInput> | ProductCollectionOrderByWithRelationInput>;
  cursor?: InputMaybe<ProductCollectionWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyProductCollectionCountQuery = { __typename?: 'Query', findManyProductCollectionCount: number };

export type CreateOneProductCollectionMutationVariables = Exact<{
  data: ProductCollectionCreateInput;
}>;


export type CreateOneProductCollectionMutation = { __typename?: 'Mutation', createOneProductCollection: { __typename?: 'ProductCollection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneProductCollectionMutationVariables = Exact<{
  where: ProductCollectionWhereUniqueInput;
  data: ProductCollectionUpdateInput;
}>;


export type UpdateOneProductCollectionMutation = { __typename?: 'Mutation', updateOneProductCollection: { __typename?: 'ProductCollection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneProductCollectionMutationVariables = Exact<{
  where: ProductCollectionWhereUniqueInput;
}>;


export type DeleteOneProductCollectionMutation = { __typename?: 'Mutation', deleteOneProductCollection?: { __typename?: 'ProductCollection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyProductCollectionMutationVariables = Exact<{
  where?: InputMaybe<ProductCollectionWhereInput>;
}>;


export type DeleteManyProductCollectionMutation = { __typename?: 'Mutation', deleteManyProductCollection: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyProductCollectionMutationVariables = Exact<{
  where?: InputMaybe<ProductCollectionWhereInput>;
  data: ProductCollectionUpdateManyMutationInput;
}>;


export type UpdateManyProductCollectionMutation = { __typename?: 'Mutation', updateManyProductCollection: { __typename?: 'BatchPayload', count: number } };

export type RedeemableFieldsFragment = { __typename?: 'Redeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, perLimit: number, quantity: number, redeemInfo?: any | undefined, redeemPassword?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined };

export type RedeemableFragment = { __typename?: 'Redeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, perLimit: number, quantity: number, redeemInfo?: any | undefined, redeemPassword?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueRedeemableQueryVariables = Exact<{
  where: RedeemableWhereUniqueInput;
}>;


export type FindUniqueRedeemableQuery = { __typename?: 'Query', findUniqueRedeemable?: { __typename?: 'Redeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, perLimit: number, quantity: number, redeemInfo?: any | undefined, redeemPassword?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyRedeemableQueryVariables = Exact<{
  where?: InputMaybe<RedeemableWhereInput>;
  orderBy?: InputMaybe<Array<RedeemableOrderByWithRelationInput> | RedeemableOrderByWithRelationInput>;
  cursor?: InputMaybe<RedeemableWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyRedeemableQuery = { __typename?: 'Query', findManyRedeemable: Array<{ __typename?: 'Redeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, perLimit: number, quantity: number, redeemInfo?: any | undefined, redeemPassword?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyRedeemableCountQueryVariables = Exact<{
  where?: InputMaybe<RedeemableWhereInput>;
  orderBy?: InputMaybe<Array<RedeemableOrderByWithRelationInput> | RedeemableOrderByWithRelationInput>;
  cursor?: InputMaybe<RedeemableWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyRedeemableCountQuery = { __typename?: 'Query', findManyRedeemableCount: number };

export type CreateOneRedeemableMutationVariables = Exact<{
  data: RedeemableCreateInput;
}>;


export type CreateOneRedeemableMutation = { __typename?: 'Mutation', createOneRedeemable: { __typename?: 'Redeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, perLimit: number, quantity: number, redeemInfo?: any | undefined, redeemPassword?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneRedeemableMutationVariables = Exact<{
  where: RedeemableWhereUniqueInput;
  data: RedeemableUpdateInput;
}>;


export type UpdateOneRedeemableMutation = { __typename?: 'Mutation', updateOneRedeemable: { __typename?: 'Redeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, perLimit: number, quantity: number, redeemInfo?: any | undefined, redeemPassword?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneRedeemableMutationVariables = Exact<{
  where: RedeemableWhereUniqueInput;
}>;


export type DeleteOneRedeemableMutation = { __typename?: 'Mutation', deleteOneRedeemable?: { __typename?: 'Redeemable', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, perLimit: number, quantity: number, redeemInfo?: any | undefined, redeemPassword?: string | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyRedeemableMutationVariables = Exact<{
  where?: InputMaybe<RedeemableWhereInput>;
}>;


export type DeleteManyRedeemableMutation = { __typename?: 'Mutation', deleteManyRedeemable: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyRedeemableMutationVariables = Exact<{
  where?: InputMaybe<RedeemableWhereInput>;
  data: RedeemableUpdateManyMutationInput;
}>;


export type UpdateManyRedeemableMutation = { __typename?: 'Mutation', updateManyRedeemable: { __typename?: 'BatchPayload', count: number } };

export type RefreshTokenFieldsFragment = { __typename?: 'RefreshToken', loginTokenId: string, userId: string, createdAt: any, expires: any, value: string, lastActive: any, ip: string, userAgent: string, userAgentRaw: string, geo: string, deleted?: boolean | undefined, deletedAt?: any | undefined };

export type RefreshTokenFragment = { __typename?: 'RefreshToken', loginTokenId: string, userId: string, createdAt: any, expires: any, value: string, lastActive: any, ip: string, userAgent: string, userAgentRaw: string, geo: string, deleted?: boolean | undefined, deletedAt?: any | undefined, user: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } };

export type FindUniqueRefreshTokenQueryVariables = Exact<{
  where: RefreshTokenWhereUniqueInput;
}>;


export type FindUniqueRefreshTokenQuery = { __typename?: 'Query', findUniqueRefreshToken?: { __typename?: 'RefreshToken', loginTokenId: string, userId: string, createdAt: any, expires: any, value: string, lastActive: any, ip: string, userAgent: string, userAgentRaw: string, geo: string, deleted?: boolean | undefined, deletedAt?: any | undefined, user: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } } | undefined };

export type FindManyRefreshTokenQueryVariables = Exact<{
  where?: InputMaybe<RefreshTokenWhereInput>;
  orderBy?: InputMaybe<Array<RefreshTokenOrderByWithRelationInput> | RefreshTokenOrderByWithRelationInput>;
  cursor?: InputMaybe<RefreshTokenWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyRefreshTokenQuery = { __typename?: 'Query', findManyRefreshToken: Array<{ __typename?: 'RefreshToken', loginTokenId: string, userId: string, createdAt: any, expires: any, value: string, lastActive: any, ip: string, userAgent: string, userAgentRaw: string, geo: string, deleted?: boolean | undefined, deletedAt?: any | undefined, user: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } }> };

export type FindManyRefreshTokenCountQueryVariables = Exact<{
  where?: InputMaybe<RefreshTokenWhereInput>;
  orderBy?: InputMaybe<Array<RefreshTokenOrderByWithRelationInput> | RefreshTokenOrderByWithRelationInput>;
  cursor?: InputMaybe<RefreshTokenWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyRefreshTokenCountQuery = { __typename?: 'Query', findManyRefreshTokenCount: number };

export type CreateOneRefreshTokenMutationVariables = Exact<{
  data: RefreshTokenCreateInput;
}>;


export type CreateOneRefreshTokenMutation = { __typename?: 'Mutation', createOneRefreshToken: { __typename?: 'RefreshToken', loginTokenId: string, userId: string, createdAt: any, expires: any, value: string, lastActive: any, ip: string, userAgent: string, userAgentRaw: string, geo: string, deleted?: boolean | undefined, deletedAt?: any | undefined, user: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } } };

export type UpdateOneRefreshTokenMutationVariables = Exact<{
  where: RefreshTokenWhereUniqueInput;
  data: RefreshTokenUpdateInput;
}>;


export type UpdateOneRefreshTokenMutation = { __typename?: 'Mutation', updateOneRefreshToken: { __typename?: 'RefreshToken', loginTokenId: string, userId: string, createdAt: any, expires: any, value: string, lastActive: any, ip: string, userAgent: string, userAgentRaw: string, geo: string, deleted?: boolean | undefined, deletedAt?: any | undefined, user: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } } };

export type DeleteOneRefreshTokenMutationVariables = Exact<{
  where: RefreshTokenWhereUniqueInput;
}>;


export type DeleteOneRefreshTokenMutation = { __typename?: 'Mutation', deleteOneRefreshToken?: { __typename?: 'RefreshToken', loginTokenId: string, userId: string, createdAt: any, expires: any, value: string, lastActive: any, ip: string, userAgent: string, userAgentRaw: string, geo: string, deleted?: boolean | undefined, deletedAt?: any | undefined, user: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } } | undefined };

export type DeleteManyRefreshTokenMutationVariables = Exact<{
  where?: InputMaybe<RefreshTokenWhereInput>;
}>;


export type DeleteManyRefreshTokenMutation = { __typename?: 'Mutation', deleteManyRefreshToken: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyRefreshTokenMutationVariables = Exact<{
  where?: InputMaybe<RefreshTokenWhereInput>;
  data: RefreshTokenUpdateManyMutationInput;
}>;


export type UpdateManyRefreshTokenMutation = { __typename?: 'Mutation', updateManyRefreshToken: { __typename?: 'BatchPayload', count: number } };

export type RefundFieldsFragment = { __typename?: 'Refund', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, amount?: number | undefined, id: string, orderId?: string | undefined, received?: boolean | undefined, shippingImages: Array<any> };

export type RefundFragment = { __typename?: 'Refund', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, amount?: number | undefined, id: string, orderId?: string | undefined, received?: boolean | undefined, shippingImages: Array<any>, order?: { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined };

export type FindUniqueRefundQueryVariables = Exact<{
  where: RefundWhereUniqueInput;
}>;


export type FindUniqueRefundQuery = { __typename?: 'Query', findUniqueRefund?: { __typename?: 'Refund', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, amount?: number | undefined, id: string, orderId?: string | undefined, received?: boolean | undefined, shippingImages: Array<any>, order?: { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type FindManyRefundQueryVariables = Exact<{
  where?: InputMaybe<RefundWhereInput>;
  orderBy?: InputMaybe<Array<RefundOrderByWithRelationInput> | RefundOrderByWithRelationInput>;
  cursor?: InputMaybe<RefundWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyRefundQuery = { __typename?: 'Query', findManyRefund: Array<{ __typename?: 'Refund', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, amount?: number | undefined, id: string, orderId?: string | undefined, received?: boolean | undefined, shippingImages: Array<any>, order?: { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined }> };

export type FindManyRefundCountQueryVariables = Exact<{
  where?: InputMaybe<RefundWhereInput>;
  orderBy?: InputMaybe<Array<RefundOrderByWithRelationInput> | RefundOrderByWithRelationInput>;
  cursor?: InputMaybe<RefundWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyRefundCountQuery = { __typename?: 'Query', findManyRefundCount: number };

export type CreateOneRefundMutationVariables = Exact<{
  data: RefundCreateInput;
}>;


export type CreateOneRefundMutation = { __typename?: 'Mutation', createOneRefund: { __typename?: 'Refund', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, amount?: number | undefined, id: string, orderId?: string | undefined, received?: boolean | undefined, shippingImages: Array<any>, order?: { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined } };

export type UpdateOneRefundMutationVariables = Exact<{
  where: RefundWhereUniqueInput;
  data: RefundUpdateInput;
}>;


export type UpdateOneRefundMutation = { __typename?: 'Mutation', updateOneRefund: { __typename?: 'Refund', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, amount?: number | undefined, id: string, orderId?: string | undefined, received?: boolean | undefined, shippingImages: Array<any>, order?: { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined } };

export type DeleteOneRefundMutationVariables = Exact<{
  where: RefundWhereUniqueInput;
}>;


export type DeleteOneRefundMutation = { __typename?: 'Mutation', deleteOneRefund?: { __typename?: 'Refund', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, amount?: number | undefined, id: string, orderId?: string | undefined, received?: boolean | undefined, shippingImages: Array<any>, order?: { __typename?: 'Order', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount?: number | undefined, applicationFee?: number | undefined, billing_address?: any | undefined, completedAt?: any | undefined, couponId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerContact?: string | undefined, customerId?: string | undefined, delivery_fee?: number | undefined, delivery_name?: string | undefined, delivery_time?: string | undefined, discount?: number | undefined, id: string, orderNumber?: string | undefined, orderStatus: OrderStatus, paid_total?: number | undefined, paymentGateway?: string | undefined, paymentId?: string | undefined, received?: boolean | undefined, refundObj: Array<any>, requireShipping?: boolean | undefined, sales_tax?: number | undefined, shippingImages: Array<any>, shipping_address?: any | undefined, storageFee?: number | undefined, stripePrivateSessionId?: string | undefined, total?: number | undefined, tracking_number?: string | undefined, transactionHash?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type DeleteManyRefundMutationVariables = Exact<{
  where?: InputMaybe<RefundWhereInput>;
}>;


export type DeleteManyRefundMutation = { __typename?: 'Mutation', deleteManyRefund: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyRefundMutationVariables = Exact<{
  where?: InputMaybe<RefundWhereInput>;
  data: RefundUpdateManyMutationInput;
}>;


export type UpdateManyRefundMutation = { __typename?: 'Mutation', updateManyRefund: { __typename?: 'BatchPayload', count: number } };

export type RequestFieldsFragment = { __typename?: 'Request', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, collectionId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days: number, description: string, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message: string, name: string, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, price?: number | undefined, requestAccept?: RequestAccept | undefined, requestStatus?: RequestStatus | undefined, stripeSessionId?: string | undefined, subject: string, total?: number | undefined, transactionHash?: string | undefined, url: string, walletAddress?: string | undefined };

export type RequestFragment = { __typename?: 'Request', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, collectionId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days: number, description: string, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message: string, name: string, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, price?: number | undefined, requestAccept?: RequestAccept | undefined, requestStatus?: RequestStatus | undefined, stripeSessionId?: string | undefined, subject: string, total?: number | undefined, transactionHash?: string | undefined, url: string, walletAddress?: string | undefined, collection?: { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined };

export type FindUniqueRequestQueryVariables = Exact<{
  where: RequestWhereUniqueInput;
}>;


export type FindUniqueRequestQuery = { __typename?: 'Query', findUniqueRequest?: { __typename?: 'Request', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, collectionId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days: number, description: string, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message: string, name: string, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, price?: number | undefined, requestAccept?: RequestAccept | undefined, requestStatus?: RequestStatus | undefined, stripeSessionId?: string | undefined, subject: string, total?: number | undefined, transactionHash?: string | undefined, url: string, walletAddress?: string | undefined, collection?: { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type FindManyRequestQueryVariables = Exact<{
  where?: InputMaybe<RequestWhereInput>;
  orderBy?: InputMaybe<Array<RequestOrderByWithRelationInput> | RequestOrderByWithRelationInput>;
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyRequestQuery = { __typename?: 'Query', findManyRequest: Array<{ __typename?: 'Request', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, collectionId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days: number, description: string, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message: string, name: string, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, price?: number | undefined, requestAccept?: RequestAccept | undefined, requestStatus?: RequestStatus | undefined, stripeSessionId?: string | undefined, subject: string, total?: number | undefined, transactionHash?: string | undefined, url: string, walletAddress?: string | undefined, collection?: { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined }> };

export type FindManyRequestCountQueryVariables = Exact<{
  where?: InputMaybe<RequestWhereInput>;
  orderBy?: InputMaybe<Array<RequestOrderByWithRelationInput> | RequestOrderByWithRelationInput>;
  cursor?: InputMaybe<RequestWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyRequestCountQuery = { __typename?: 'Query', findManyRequestCount: number };

export type CreateOneRequestMutationVariables = Exact<{
  data: RequestCreateInput;
}>;


export type CreateOneRequestMutation = { __typename?: 'Mutation', createOneRequest: { __typename?: 'Request', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, collectionId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days: number, description: string, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message: string, name: string, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, price?: number | undefined, requestAccept?: RequestAccept | undefined, requestStatus?: RequestStatus | undefined, stripeSessionId?: string | undefined, subject: string, total?: number | undefined, transactionHash?: string | undefined, url: string, walletAddress?: string | undefined, collection?: { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } };

export type UpdateOneRequestMutationVariables = Exact<{
  where: RequestWhereUniqueInput;
  data: RequestUpdateInput;
}>;


export type UpdateOneRequestMutation = { __typename?: 'Mutation', updateOneRequest: { __typename?: 'Request', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, collectionId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days: number, description: string, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message: string, name: string, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, price?: number | undefined, requestAccept?: RequestAccept | undefined, requestStatus?: RequestStatus | undefined, stripeSessionId?: string | undefined, subject: string, total?: number | undefined, transactionHash?: string | undefined, url: string, walletAddress?: string | undefined, collection?: { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } };

export type DeleteOneRequestMutationVariables = Exact<{
  where: RequestWhereUniqueInput;
}>;


export type DeleteOneRequestMutation = { __typename?: 'Mutation', deleteOneRequest?: { __typename?: 'Request', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, accept?: boolean | undefined, acceptBefore?: any | undefined, active?: boolean | undefined, applicationFee?: number | undefined, collectionId?: string | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, customerId?: string | undefined, days: number, description: string, expiredAt?: any | undefined, id: string, imageObj?: any | undefined, message: string, name: string, pageId?: string | undefined, paid?: boolean | undefined, paidAt?: any | undefined, paymentId?: string | undefined, price?: number | undefined, requestAccept?: RequestAccept | undefined, requestStatus?: RequestStatus | undefined, stripeSessionId?: string | undefined, subject: string, total?: number | undefined, transactionHash?: string | undefined, url: string, walletAddress?: string | undefined, collection?: { __typename?: 'Collection', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, collectionStyle?: CollectionStyle | undefined, collectionType?: CollectionType | undefined, description?: string | undefined, displayTitle?: boolean | undefined, id: string, name: string, websiteId?: string | undefined } | undefined, customer?: { __typename?: 'Customer', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, age?: number | undefined, city?: string | undefined, email?: string | undefined, gender?: string | undefined, id: string, imageObj?: any | undefined, isActive?: boolean | undefined, latestSales?: any | undefined, name?: string | undefined, note?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteId?: string | undefined } | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type DeleteManyRequestMutationVariables = Exact<{
  where?: InputMaybe<RequestWhereInput>;
}>;


export type DeleteManyRequestMutation = { __typename?: 'Mutation', deleteManyRequest: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyRequestMutationVariables = Exact<{
  where?: InputMaybe<RequestWhereInput>;
  data: RequestUpdateManyMutationInput;
}>;


export type UpdateManyRequestMutation = { __typename?: 'Mutation', updateManyRequest: { __typename?: 'BatchPayload', count: number } };

export type RequestClickFieldsFragment = { __typename?: 'RequestClick', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, ip?: string | undefined, pageId?: string | undefined };

export type RequestClickFragment = { __typename?: 'RequestClick', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined };

export type FindUniqueRequestClickQueryVariables = Exact<{
  where: RequestClickWhereUniqueInput;
}>;


export type FindUniqueRequestClickQuery = { __typename?: 'Query', findUniqueRequestClick?: { __typename?: 'RequestClick', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type FindManyRequestClickQueryVariables = Exact<{
  where?: InputMaybe<RequestClickWhereInput>;
  orderBy?: InputMaybe<Array<RequestClickOrderByWithRelationInput> | RequestClickOrderByWithRelationInput>;
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyRequestClickQuery = { __typename?: 'Query', findManyRequestClick: Array<{ __typename?: 'RequestClick', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined }> };

export type FindManyRequestClickCountQueryVariables = Exact<{
  where?: InputMaybe<RequestClickWhereInput>;
  orderBy?: InputMaybe<Array<RequestClickOrderByWithRelationInput> | RequestClickOrderByWithRelationInput>;
  cursor?: InputMaybe<RequestClickWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyRequestClickCountQuery = { __typename?: 'Query', findManyRequestClickCount: number };

export type CreateOneRequestClickMutationVariables = Exact<{
  data: RequestClickCreateInput;
}>;


export type CreateOneRequestClickMutation = { __typename?: 'Mutation', createOneRequestClick: { __typename?: 'RequestClick', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } };

export type UpdateOneRequestClickMutationVariables = Exact<{
  where: RequestClickWhereUniqueInput;
  data: RequestClickUpdateInput;
}>;


export type UpdateOneRequestClickMutation = { __typename?: 'Mutation', updateOneRequestClick: { __typename?: 'RequestClick', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } };

export type DeleteOneRequestClickMutationVariables = Exact<{
  where: RequestClickWhereUniqueInput;
}>;


export type DeleteOneRequestClickMutation = { __typename?: 'Mutation', deleteOneRequestClick?: { __typename?: 'RequestClick', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, ip?: string | undefined, pageId?: string | undefined, page?: { __typename?: 'Page', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, isIndex?: boolean | undefined, itemIds: Array<string>, menu?: boolean | undefined, name: string, navColor?: NavColor | undefined, slug?: string | undefined, websiteId?: string | undefined } | undefined } | undefined };

export type DeleteManyRequestClickMutationVariables = Exact<{
  where?: InputMaybe<RequestClickWhereInput>;
}>;


export type DeleteManyRequestClickMutation = { __typename?: 'Mutation', deleteManyRequestClick: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyRequestClickMutationVariables = Exact<{
  where?: InputMaybe<RequestClickWhereInput>;
  data: RequestClickUpdateManyMutationInput;
}>;


export type UpdateManyRequestClickMutation = { __typename?: 'Mutation', updateManyRequestClick: { __typename?: 'BatchPayload', count: number } };

export type ShippingFieldsFragment = { __typename?: 'Shipping', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, amount: number, countryCode?: CountryCode | undefined, currencyCode?: CurrencyCode | undefined, id: string, isGlobal?: boolean | undefined, name: string, state?: string | undefined, type?: string | undefined, websiteId?: string | undefined };

export type ShippingFragment = { __typename?: 'Shipping', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, amount: number, countryCode?: CountryCode | undefined, currencyCode?: CurrencyCode | undefined, id: string, isGlobal?: boolean | undefined, name: string, state?: string | undefined, type?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueShippingQueryVariables = Exact<{
  where: ShippingWhereUniqueInput;
}>;


export type FindUniqueShippingQuery = { __typename?: 'Query', findUniqueShipping?: { __typename?: 'Shipping', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, amount: number, countryCode?: CountryCode | undefined, currencyCode?: CurrencyCode | undefined, id: string, isGlobal?: boolean | undefined, name: string, state?: string | undefined, type?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyShippingQueryVariables = Exact<{
  where?: InputMaybe<ShippingWhereInput>;
  orderBy?: InputMaybe<Array<ShippingOrderByWithRelationInput> | ShippingOrderByWithRelationInput>;
  cursor?: InputMaybe<ShippingWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyShippingQuery = { __typename?: 'Query', findManyShipping: Array<{ __typename?: 'Shipping', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, amount: number, countryCode?: CountryCode | undefined, currencyCode?: CurrencyCode | undefined, id: string, isGlobal?: boolean | undefined, name: string, state?: string | undefined, type?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyShippingCountQueryVariables = Exact<{
  where?: InputMaybe<ShippingWhereInput>;
  orderBy?: InputMaybe<Array<ShippingOrderByWithRelationInput> | ShippingOrderByWithRelationInput>;
  cursor?: InputMaybe<ShippingWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyShippingCountQuery = { __typename?: 'Query', findManyShippingCount: number };

export type CreateOneShippingMutationVariables = Exact<{
  data: ShippingCreateInput;
}>;


export type CreateOneShippingMutation = { __typename?: 'Mutation', createOneShipping: { __typename?: 'Shipping', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, amount: number, countryCode?: CountryCode | undefined, currencyCode?: CurrencyCode | undefined, id: string, isGlobal?: boolean | undefined, name: string, state?: string | undefined, type?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneShippingMutationVariables = Exact<{
  where: ShippingWhereUniqueInput;
  data: ShippingUpdateInput;
}>;


export type UpdateOneShippingMutation = { __typename?: 'Mutation', updateOneShipping: { __typename?: 'Shipping', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, amount: number, countryCode?: CountryCode | undefined, currencyCode?: CurrencyCode | undefined, id: string, isGlobal?: boolean | undefined, name: string, state?: string | undefined, type?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneShippingMutationVariables = Exact<{
  where: ShippingWhereUniqueInput;
}>;


export type DeleteOneShippingMutation = { __typename?: 'Mutation', deleteOneShipping?: { __typename?: 'Shipping', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, amount: number, countryCode?: CountryCode | undefined, currencyCode?: CurrencyCode | undefined, id: string, isGlobal?: boolean | undefined, name: string, state?: string | undefined, type?: string | undefined, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyShippingMutationVariables = Exact<{
  where?: InputMaybe<ShippingWhereInput>;
}>;


export type DeleteManyShippingMutation = { __typename?: 'Mutation', deleteManyShipping: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyShippingMutationVariables = Exact<{
  where?: InputMaybe<ShippingWhereInput>;
  data: ShippingUpdateManyMutationInput;
}>;


export type UpdateManyShippingMutation = { __typename?: 'Mutation', updateManyShipping: { __typename?: 'BatchPayload', count: number } };

export type SlugCounterFieldsFragment = { __typename?: 'SlugCounter', counter?: number | undefined, createdAt?: any | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, id: string, model?: string | undefined, slug?: string | undefined, title?: string | undefined, updatedAt?: any | undefined };

export type SlugCounterFragment = { __typename?: 'SlugCounter', counter?: number | undefined, createdAt?: any | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, id: string, model?: string | undefined, slug?: string | undefined, title?: string | undefined, updatedAt?: any | undefined };

export type FindUniqueSlugCounterQueryVariables = Exact<{
  where: SlugCounterWhereUniqueInput;
}>;


export type FindUniqueSlugCounterQuery = { __typename?: 'Query', findUniqueSlugCounter?: { __typename?: 'SlugCounter', counter?: number | undefined, createdAt?: any | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, id: string, model?: string | undefined, slug?: string | undefined, title?: string | undefined, updatedAt?: any | undefined } | undefined };

export type FindManySlugCounterQueryVariables = Exact<{
  where?: InputMaybe<SlugCounterWhereInput>;
  orderBy?: InputMaybe<Array<SlugCounterOrderByWithRelationInput> | SlugCounterOrderByWithRelationInput>;
  cursor?: InputMaybe<SlugCounterWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManySlugCounterQuery = { __typename?: 'Query', findManySlugCounter: Array<{ __typename?: 'SlugCounter', counter?: number | undefined, createdAt?: any | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, id: string, model?: string | undefined, slug?: string | undefined, title?: string | undefined, updatedAt?: any | undefined }> };

export type FindManySlugCounterCountQueryVariables = Exact<{
  where?: InputMaybe<SlugCounterWhereInput>;
  orderBy?: InputMaybe<Array<SlugCounterOrderByWithRelationInput> | SlugCounterOrderByWithRelationInput>;
  cursor?: InputMaybe<SlugCounterWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManySlugCounterCountQuery = { __typename?: 'Query', findManySlugCounterCount: number };

export type CreateOneSlugCounterMutationVariables = Exact<{
  data: SlugCounterCreateInput;
}>;


export type CreateOneSlugCounterMutation = { __typename?: 'Mutation', createOneSlugCounter: { __typename?: 'SlugCounter', counter?: number | undefined, createdAt?: any | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, id: string, model?: string | undefined, slug?: string | undefined, title?: string | undefined, updatedAt?: any | undefined } };

export type UpdateOneSlugCounterMutationVariables = Exact<{
  where: SlugCounterWhereUniqueInput;
  data: SlugCounterUpdateInput;
}>;


export type UpdateOneSlugCounterMutation = { __typename?: 'Mutation', updateOneSlugCounter: { __typename?: 'SlugCounter', counter?: number | undefined, createdAt?: any | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, id: string, model?: string | undefined, slug?: string | undefined, title?: string | undefined, updatedAt?: any | undefined } };

export type DeleteOneSlugCounterMutationVariables = Exact<{
  where: SlugCounterWhereUniqueInput;
}>;


export type DeleteOneSlugCounterMutation = { __typename?: 'Mutation', deleteOneSlugCounter?: { __typename?: 'SlugCounter', counter?: number | undefined, createdAt?: any | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, id: string, model?: string | undefined, slug?: string | undefined, title?: string | undefined, updatedAt?: any | undefined } | undefined };

export type DeleteManySlugCounterMutationVariables = Exact<{
  where?: InputMaybe<SlugCounterWhereInput>;
}>;


export type DeleteManySlugCounterMutation = { __typename?: 'Mutation', deleteManySlugCounter: { __typename?: 'BatchPayload', count: number } };

export type UpdateManySlugCounterMutationVariables = Exact<{
  where?: InputMaybe<SlugCounterWhereInput>;
  data: SlugCounterUpdateManyMutationInput;
}>;


export type UpdateManySlugCounterMutation = { __typename?: 'Mutation', updateManySlugCounter: { __typename?: 'BatchPayload', count: number } };

export type SocialFieldsFragment = { __typename?: 'Social', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, socialType: SocialType, url: string, websiteId?: string | undefined };

export type SocialFragment = { __typename?: 'Social', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, socialType: SocialType, url: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueSocialQueryVariables = Exact<{
  where: SocialWhereUniqueInput;
}>;


export type FindUniqueSocialQuery = { __typename?: 'Query', findUniqueSocial?: { __typename?: 'Social', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, socialType: SocialType, url: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManySocialQueryVariables = Exact<{
  where?: InputMaybe<SocialWhereInput>;
  orderBy?: InputMaybe<Array<SocialOrderByWithRelationInput> | SocialOrderByWithRelationInput>;
  cursor?: InputMaybe<SocialWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManySocialQuery = { __typename?: 'Query', findManySocial: Array<{ __typename?: 'Social', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, socialType: SocialType, url: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManySocialCountQueryVariables = Exact<{
  where?: InputMaybe<SocialWhereInput>;
  orderBy?: InputMaybe<Array<SocialOrderByWithRelationInput> | SocialOrderByWithRelationInput>;
  cursor?: InputMaybe<SocialWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManySocialCountQuery = { __typename?: 'Query', findManySocialCount: number };

export type CreateOneSocialMutationVariables = Exact<{
  data: SocialCreateInput;
}>;


export type CreateOneSocialMutation = { __typename?: 'Mutation', createOneSocial: { __typename?: 'Social', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, socialType: SocialType, url: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneSocialMutationVariables = Exact<{
  where: SocialWhereUniqueInput;
  data: SocialUpdateInput;
}>;


export type UpdateOneSocialMutation = { __typename?: 'Mutation', updateOneSocial: { __typename?: 'Social', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, socialType: SocialType, url: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneSocialMutationVariables = Exact<{
  where: SocialWhereUniqueInput;
}>;


export type DeleteOneSocialMutation = { __typename?: 'Mutation', deleteOneSocial?: { __typename?: 'Social', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, socialType: SocialType, url: string, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManySocialMutationVariables = Exact<{
  where?: InputMaybe<SocialWhereInput>;
}>;


export type DeleteManySocialMutation = { __typename?: 'Mutation', deleteManySocial: { __typename?: 'BatchPayload', count: number } };

export type UpdateManySocialMutationVariables = Exact<{
  where?: InputMaybe<SocialWhereInput>;
  data: SocialUpdateManyMutationInput;
}>;


export type UpdateManySocialMutation = { __typename?: 'Mutation', updateManySocial: { __typename?: 'BatchPayload', count: number } };

export type TagFieldsFragment = { __typename?: 'Tag', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, icon?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, typeId?: string | undefined };

export type TagFragment = { __typename?: 'Tag', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, icon?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, typeId?: string | undefined, type?: { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined } | undefined };

export type FindUniqueTagQueryVariables = Exact<{
  where: TagWhereUniqueInput;
}>;


export type FindUniqueTagQuery = { __typename?: 'Query', findUniqueTag?: { __typename?: 'Tag', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, icon?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, typeId?: string | undefined, type?: { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined } | undefined } | undefined };

export type FindManyTagQueryVariables = Exact<{
  where?: InputMaybe<TagWhereInput>;
  orderBy?: InputMaybe<Array<TagOrderByWithRelationInput> | TagOrderByWithRelationInput>;
  cursor?: InputMaybe<TagWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyTagQuery = { __typename?: 'Query', findManyTag: Array<{ __typename?: 'Tag', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, icon?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, typeId?: string | undefined, type?: { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined } | undefined }> };

export type FindManyTagCountQueryVariables = Exact<{
  where?: InputMaybe<TagWhereInput>;
  orderBy?: InputMaybe<Array<TagOrderByWithRelationInput> | TagOrderByWithRelationInput>;
  cursor?: InputMaybe<TagWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyTagCountQuery = { __typename?: 'Query', findManyTagCount: number };

export type CreateOneTagMutationVariables = Exact<{
  data: TagCreateInput;
}>;


export type CreateOneTagMutation = { __typename?: 'Mutation', createOneTag: { __typename?: 'Tag', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, icon?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, typeId?: string | undefined, type?: { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined } | undefined } };

export type UpdateOneTagMutationVariables = Exact<{
  where: TagWhereUniqueInput;
  data: TagUpdateInput;
}>;


export type UpdateOneTagMutation = { __typename?: 'Mutation', updateOneTag: { __typename?: 'Tag', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, icon?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, typeId?: string | undefined, type?: { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined } | undefined } };

export type DeleteOneTagMutationVariables = Exact<{
  where: TagWhereUniqueInput;
}>;


export type DeleteOneTagMutation = { __typename?: 'Mutation', deleteOneTag?: { __typename?: 'Tag', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, icon?: string | undefined, id: string, imageObj?: any | undefined, name: string, slug?: string | undefined, typeId?: string | undefined, type?: { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined } | undefined } | undefined };

export type DeleteManyTagMutationVariables = Exact<{
  where?: InputMaybe<TagWhereInput>;
}>;


export type DeleteManyTagMutation = { __typename?: 'Mutation', deleteManyTag: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyTagMutationVariables = Exact<{
  where?: InputMaybe<TagWhereInput>;
  data: TagUpdateManyMutationInput;
}>;


export type UpdateManyTagMutation = { __typename?: 'Mutation', updateManyTag: { __typename?: 'BatchPayload', count: number } };

export type TaxFieldsFragment = { __typename?: 'Tax', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, city?: string | undefined, country?: string | undefined, countryCode?: CountryCode | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, id: string, inclusive: boolean, isGlobal?: boolean | undefined, jurisdiction?: string | undefined, name: string, onShipping?: boolean | undefined, percentage: number, priority?: number | undefined, state?: string | undefined, stripePrivateTaxId?: string | undefined, websiteId?: string | undefined, zip?: string | undefined };

export type TaxFragment = { __typename?: 'Tax', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, city?: string | undefined, country?: string | undefined, countryCode?: CountryCode | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, id: string, inclusive: boolean, isGlobal?: boolean | undefined, jurisdiction?: string | undefined, name: string, onShipping?: boolean | undefined, percentage: number, priority?: number | undefined, state?: string | undefined, stripePrivateTaxId?: string | undefined, websiteId?: string | undefined, zip?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueTaxQueryVariables = Exact<{
  where: TaxWhereUniqueInput;
}>;


export type FindUniqueTaxQuery = { __typename?: 'Query', findUniqueTax?: { __typename?: 'Tax', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, city?: string | undefined, country?: string | undefined, countryCode?: CountryCode | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, id: string, inclusive: boolean, isGlobal?: boolean | undefined, jurisdiction?: string | undefined, name: string, onShipping?: boolean | undefined, percentage: number, priority?: number | undefined, state?: string | undefined, stripePrivateTaxId?: string | undefined, websiteId?: string | undefined, zip?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyTaxQueryVariables = Exact<{
  where?: InputMaybe<TaxWhereInput>;
  orderBy?: InputMaybe<Array<TaxOrderByWithRelationInput> | TaxOrderByWithRelationInput>;
  cursor?: InputMaybe<TaxWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyTaxQuery = { __typename?: 'Query', findManyTax: Array<{ __typename?: 'Tax', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, city?: string | undefined, country?: string | undefined, countryCode?: CountryCode | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, id: string, inclusive: boolean, isGlobal?: boolean | undefined, jurisdiction?: string | undefined, name: string, onShipping?: boolean | undefined, percentage: number, priority?: number | undefined, state?: string | undefined, stripePrivateTaxId?: string | undefined, websiteId?: string | undefined, zip?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyTaxCountQueryVariables = Exact<{
  where?: InputMaybe<TaxWhereInput>;
  orderBy?: InputMaybe<Array<TaxOrderByWithRelationInput> | TaxOrderByWithRelationInput>;
  cursor?: InputMaybe<TaxWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyTaxCountQuery = { __typename?: 'Query', findManyTaxCount: number };

export type CreateOneTaxMutationVariables = Exact<{
  data: TaxCreateInput;
}>;


export type CreateOneTaxMutation = { __typename?: 'Mutation', createOneTax: { __typename?: 'Tax', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, city?: string | undefined, country?: string | undefined, countryCode?: CountryCode | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, id: string, inclusive: boolean, isGlobal?: boolean | undefined, jurisdiction?: string | undefined, name: string, onShipping?: boolean | undefined, percentage: number, priority?: number | undefined, state?: string | undefined, stripePrivateTaxId?: string | undefined, websiteId?: string | undefined, zip?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneTaxMutationVariables = Exact<{
  where: TaxWhereUniqueInput;
  data: TaxUpdateInput;
}>;


export type UpdateOneTaxMutation = { __typename?: 'Mutation', updateOneTax: { __typename?: 'Tax', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, city?: string | undefined, country?: string | undefined, countryCode?: CountryCode | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, id: string, inclusive: boolean, isGlobal?: boolean | undefined, jurisdiction?: string | undefined, name: string, onShipping?: boolean | undefined, percentage: number, priority?: number | undefined, state?: string | undefined, stripePrivateTaxId?: string | undefined, websiteId?: string | undefined, zip?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneTaxMutationVariables = Exact<{
  where: TaxWhereUniqueInput;
}>;


export type DeleteOneTaxMutation = { __typename?: 'Mutation', deleteOneTax?: { __typename?: 'Tax', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, city?: string | undefined, country?: string | undefined, countryCode?: CountryCode | undefined, currencyCode?: CurrencyCode | undefined, description?: string | undefined, id: string, inclusive: boolean, isGlobal?: boolean | undefined, jurisdiction?: string | undefined, name: string, onShipping?: boolean | undefined, percentage: number, priority?: number | undefined, state?: string | undefined, stripePrivateTaxId?: string | undefined, websiteId?: string | undefined, zip?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyTaxMutationVariables = Exact<{
  where?: InputMaybe<TaxWhereInput>;
}>;


export type DeleteManyTaxMutation = { __typename?: 'Mutation', deleteManyTax: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyTaxMutationVariables = Exact<{
  where?: InputMaybe<TaxWhereInput>;
  data: TaxUpdateManyMutationInput;
}>;


export type UpdateManyTaxMutation = { __typename?: 'Mutation', updateManyTax: { __typename?: 'BatchPayload', count: number } };

export type TraitFieldsFragment = { __typename?: 'Trait', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name?: string | undefined, productId?: string | undefined };

export type TraitFragment = { __typename?: 'Trait', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name?: string | undefined, productId?: string | undefined, product?: { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined } | undefined };

export type FindUniqueTraitQueryVariables = Exact<{
  where: TraitWhereUniqueInput;
}>;


export type FindUniqueTraitQuery = { __typename?: 'Query', findUniqueTrait?: { __typename?: 'Trait', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name?: string | undefined, productId?: string | undefined, product?: { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined } | undefined } | undefined };

export type FindManyTraitQueryVariables = Exact<{
  where?: InputMaybe<TraitWhereInput>;
  orderBy?: InputMaybe<Array<TraitOrderByWithRelationInput> | TraitOrderByWithRelationInput>;
  cursor?: InputMaybe<TraitWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyTraitQuery = { __typename?: 'Query', findManyTrait: Array<{ __typename?: 'Trait', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name?: string | undefined, productId?: string | undefined, product?: { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined } | undefined }> };

export type FindManyTraitCountQueryVariables = Exact<{
  where?: InputMaybe<TraitWhereInput>;
  orderBy?: InputMaybe<Array<TraitOrderByWithRelationInput> | TraitOrderByWithRelationInput>;
  cursor?: InputMaybe<TraitWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyTraitCountQuery = { __typename?: 'Query', findManyTraitCount: number };

export type CreateOneTraitMutationVariables = Exact<{
  data: TraitCreateInput;
}>;


export type CreateOneTraitMutation = { __typename?: 'Mutation', createOneTrait: { __typename?: 'Trait', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name?: string | undefined, productId?: string | undefined, product?: { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined } | undefined } };

export type UpdateOneTraitMutationVariables = Exact<{
  where: TraitWhereUniqueInput;
  data: TraitUpdateInput;
}>;


export type UpdateOneTraitMutation = { __typename?: 'Mutation', updateOneTrait: { __typename?: 'Trait', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name?: string | undefined, productId?: string | undefined, product?: { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined } | undefined } };

export type DeleteOneTraitMutationVariables = Exact<{
  where: TraitWhereUniqueInput;
}>;


export type DeleteOneTraitMutation = { __typename?: 'Mutation', deleteOneTrait?: { __typename?: 'Trait', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name?: string | undefined, productId?: string | undefined, product?: { __typename?: 'Product', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, content?: any | undefined, creatorEarnings: number, description?: string | undefined, editionAddress?: string | undefined, editionMinted?: number | undefined, editionSize: number, editionType?: EditionType | undefined, externalNftChain?: Chain | undefined, externalNftContractAddress?: string | undefined, externalUrl?: string | undefined, gallery: Array<any>, height?: number | undefined, id: string, imageObj?: any | undefined, inStock?: boolean | undefined, isExternalNft?: boolean | undefined, length?: number | undefined, name: string, price: number, productType?: ProductType | undefined, quantity?: number | undefined, sale_price?: number | undefined, sku?: string | undefined, slug?: string | undefined, storageSize?: number | undefined, tax_code?: string | undefined, transactionHash?: string | undefined, typeId?: string | undefined, unit?: string | undefined, variation_options: Array<any>, variations: Array<any>, websiteId?: string | undefined, width?: number | undefined } | undefined } | undefined };

export type DeleteManyTraitMutationVariables = Exact<{
  where?: InputMaybe<TraitWhereInput>;
}>;


export type DeleteManyTraitMutation = { __typename?: 'Mutation', deleteManyTrait: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyTraitMutationVariables = Exact<{
  where?: InputMaybe<TraitWhereInput>;
  data: TraitUpdateManyMutationInput;
}>;


export type UpdateManyTraitMutation = { __typename?: 'Mutation', updateManyTrait: { __typename?: 'BatchPayload', count: number } };

export type TypeFieldsFragment = { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined };

export type TypeFragment = { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined };

export type FindUniqueTypeQueryVariables = Exact<{
  where: TypeWhereUniqueInput;
}>;


export type FindUniqueTypeQuery = { __typename?: 'Query', findUniqueType?: { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined } | undefined };

export type FindManyTypeQueryVariables = Exact<{
  where?: InputMaybe<TypeWhereInput>;
  orderBy?: InputMaybe<Array<TypeOrderByWithRelationInput> | TypeOrderByWithRelationInput>;
  cursor?: InputMaybe<TypeWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyTypeQuery = { __typename?: 'Query', findManyType: Array<{ __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined }> };

export type FindManyTypeCountQueryVariables = Exact<{
  where?: InputMaybe<TypeWhereInput>;
  orderBy?: InputMaybe<Array<TypeOrderByWithRelationInput> | TypeOrderByWithRelationInput>;
  cursor?: InputMaybe<TypeWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyTypeCountQuery = { __typename?: 'Query', findManyTypeCount: number };

export type CreateOneTypeMutationVariables = Exact<{
  data: TypeCreateInput;
}>;


export type CreateOneTypeMutation = { __typename?: 'Mutation', createOneType: { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined } };

export type UpdateOneTypeMutationVariables = Exact<{
  where: TypeWhereUniqueInput;
  data: TypeUpdateInput;
}>;


export type UpdateOneTypeMutation = { __typename?: 'Mutation', updateOneType: { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined } };

export type DeleteOneTypeMutationVariables = Exact<{
  where: TypeWhereUniqueInput;
}>;


export type DeleteOneTypeMutation = { __typename?: 'Mutation', deleteOneType?: { __typename?: 'Type', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name: string, slug?: string | undefined } | undefined };

export type DeleteManyTypeMutationVariables = Exact<{
  where?: InputMaybe<TypeWhereInput>;
}>;


export type DeleteManyTypeMutation = { __typename?: 'Mutation', deleteManyType: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyTypeMutationVariables = Exact<{
  where?: InputMaybe<TypeWhereInput>;
  data: TypeUpdateManyMutationInput;
}>;


export type UpdateManyTypeMutation = { __typename?: 'Mutation', updateManyType: { __typename?: 'BatchPayload', count: number } };

export type UserFieldsFragment = { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined };

export type UserFragment = { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined };

export type FindUniqueUserQueryVariables = Exact<{
  where: UserWhereUniqueInput;
}>;


export type FindUniqueUserQuery = { __typename?: 'Query', findUniqueUser?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindManyUserQueryVariables = Exact<{
  where?: InputMaybe<UserWhereInput>;
  orderBy?: InputMaybe<Array<UserOrderByWithRelationInput> | UserOrderByWithRelationInput>;
  cursor?: InputMaybe<UserWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyUserQuery = { __typename?: 'Query', findManyUser: Array<{ __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined }> };

export type FindManyUserCountQueryVariables = Exact<{
  where?: InputMaybe<UserWhereInput>;
  orderBy?: InputMaybe<Array<UserOrderByWithRelationInput> | UserOrderByWithRelationInput>;
  cursor?: InputMaybe<UserWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyUserCountQuery = { __typename?: 'Query', findManyUserCount: number };

export type CreateOneUserMutationVariables = Exact<{
  data: UserCreateInput;
}>;


export type CreateOneUserMutation = { __typename?: 'Mutation', createOneUser: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } };

export type UpdateOneUserMutationVariables = Exact<{
  where: UserWhereUniqueInput;
  data: UserUpdateInput;
}>;


export type UpdateOneUserMutation = { __typename?: 'Mutation', updateOneUser: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } };

export type DeleteOneUserMutationVariables = Exact<{
  where: UserWhereUniqueInput;
}>;


export type DeleteOneUserMutation = { __typename?: 'Mutation', deleteOneUser?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined };

export type DeleteManyUserMutationVariables = Exact<{
  where?: InputMaybe<UserWhereInput>;
}>;


export type DeleteManyUserMutation = { __typename?: 'Mutation', deleteManyUser: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyUserMutationVariables = Exact<{
  where?: InputMaybe<UserWhereInput>;
  data: UserUpdateManyMutationInput;
}>;


export type UpdateManyUserMutation = { __typename?: 'Mutation', updateManyUser: { __typename?: 'BatchPayload', count: number } };

export type ValueFieldsFragment = { __typename?: 'Value', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, imageObj?: any | undefined, name?: string | undefined, percentage?: number | undefined, traitId?: string | undefined };

export type ValueFragment = { __typename?: 'Value', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, imageObj?: any | undefined, name?: string | undefined, percentage?: number | undefined, traitId?: string | undefined, trait?: { __typename?: 'Trait', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name?: string | undefined, productId?: string | undefined } | undefined };

export type FindUniqueValueQueryVariables = Exact<{
  where: ValueWhereUniqueInput;
}>;


export type FindUniqueValueQuery = { __typename?: 'Query', findUniqueValue?: { __typename?: 'Value', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, imageObj?: any | undefined, name?: string | undefined, percentage?: number | undefined, traitId?: string | undefined, trait?: { __typename?: 'Trait', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name?: string | undefined, productId?: string | undefined } | undefined } | undefined };

export type FindManyValueQueryVariables = Exact<{
  where?: InputMaybe<ValueWhereInput>;
  orderBy?: InputMaybe<Array<ValueOrderByWithRelationInput> | ValueOrderByWithRelationInput>;
  cursor?: InputMaybe<ValueWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyValueQuery = { __typename?: 'Query', findManyValue: Array<{ __typename?: 'Value', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, imageObj?: any | undefined, name?: string | undefined, percentage?: number | undefined, traitId?: string | undefined, trait?: { __typename?: 'Trait', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name?: string | undefined, productId?: string | undefined } | undefined }> };

export type FindManyValueCountQueryVariables = Exact<{
  where?: InputMaybe<ValueWhereInput>;
  orderBy?: InputMaybe<Array<ValueOrderByWithRelationInput> | ValueOrderByWithRelationInput>;
  cursor?: InputMaybe<ValueWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyValueCountQuery = { __typename?: 'Query', findManyValueCount: number };

export type CreateOneValueMutationVariables = Exact<{
  data: ValueCreateInput;
}>;


export type CreateOneValueMutation = { __typename?: 'Mutation', createOneValue: { __typename?: 'Value', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, imageObj?: any | undefined, name?: string | undefined, percentage?: number | undefined, traitId?: string | undefined, trait?: { __typename?: 'Trait', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name?: string | undefined, productId?: string | undefined } | undefined } };

export type UpdateOneValueMutationVariables = Exact<{
  where: ValueWhereUniqueInput;
  data: ValueUpdateInput;
}>;


export type UpdateOneValueMutation = { __typename?: 'Mutation', updateOneValue: { __typename?: 'Value', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, imageObj?: any | undefined, name?: string | undefined, percentage?: number | undefined, traitId?: string | undefined, trait?: { __typename?: 'Trait', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name?: string | undefined, productId?: string | undefined } | undefined } };

export type DeleteOneValueMutationVariables = Exact<{
  where: ValueWhereUniqueInput;
}>;


export type DeleteOneValueMutation = { __typename?: 'Mutation', deleteOneValue?: { __typename?: 'Value', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, imageObj?: any | undefined, name?: string | undefined, percentage?: number | undefined, traitId?: string | undefined, trait?: { __typename?: 'Trait', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, id: string, name?: string | undefined, productId?: string | undefined } | undefined } | undefined };

export type DeleteManyValueMutationVariables = Exact<{
  where?: InputMaybe<ValueWhereInput>;
}>;


export type DeleteManyValueMutation = { __typename?: 'Mutation', deleteManyValue: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyValueMutationVariables = Exact<{
  where?: InputMaybe<ValueWhereInput>;
  data: ValueUpdateManyMutationInput;
}>;


export type UpdateManyValueMutation = { __typename?: 'Mutation', updateManyValue: { __typename?: 'BatchPayload', count: number } };

export type VideoFieldsFragment = { __typename?: 'Video', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, videoObj?: any | undefined, walletAddress?: string | undefined };

export type VideoFragment = { __typename?: 'Video', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, videoObj?: any | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueVideoQueryVariables = Exact<{
  where: VideoWhereUniqueInput;
}>;


export type FindUniqueVideoQuery = { __typename?: 'Query', findUniqueVideo?: { __typename?: 'Video', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, videoObj?: any | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyVideoQueryVariables = Exact<{
  where?: InputMaybe<VideoWhereInput>;
  orderBy?: InputMaybe<Array<VideoOrderByWithRelationInput> | VideoOrderByWithRelationInput>;
  cursor?: InputMaybe<VideoWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyVideoQuery = { __typename?: 'Query', findManyVideo: Array<{ __typename?: 'Video', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, videoObj?: any | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyVideoCountQueryVariables = Exact<{
  where?: InputMaybe<VideoWhereInput>;
  orderBy?: InputMaybe<Array<VideoOrderByWithRelationInput> | VideoOrderByWithRelationInput>;
  cursor?: InputMaybe<VideoWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyVideoCountQuery = { __typename?: 'Query', findManyVideoCount: number };

export type CreateOneVideoMutationVariables = Exact<{
  data: VideoCreateInput;
}>;


export type CreateOneVideoMutation = { __typename?: 'Mutation', createOneVideo: { __typename?: 'Video', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, videoObj?: any | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneVideoMutationVariables = Exact<{
  where: VideoWhereUniqueInput;
  data: VideoUpdateInput;
}>;


export type UpdateOneVideoMutation = { __typename?: 'Mutation', updateOneVideo: { __typename?: 'Video', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, videoObj?: any | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneVideoMutationVariables = Exact<{
  where: VideoWhereUniqueInput;
}>;


export type DeleteOneVideoMutation = { __typename?: 'Mutation', deleteOneVideo?: { __typename?: 'Video', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, content?: any | undefined, description?: string | undefined, id: string, imageObj?: any | undefined, name: string, paid?: boolean | undefined, slug?: string | undefined, transactionHash?: string | undefined, userId?: string | undefined, videoObj?: any | undefined, walletAddress?: string | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyVideoMutationVariables = Exact<{
  where?: InputMaybe<VideoWhereInput>;
}>;


export type DeleteManyVideoMutation = { __typename?: 'Mutation', deleteManyVideo: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyVideoMutationVariables = Exact<{
  where?: InputMaybe<VideoWhereInput>;
  data: VideoUpdateManyMutationInput;
}>;


export type UpdateManyVideoMutation = { __typename?: 'Mutation', updateManyVideo: { __typename?: 'BatchPayload', count: number } };

export type WebsiteFieldsFragment = { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined };

export type WebsiteFragment = { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueWebsiteQueryVariables = Exact<{
  where: WebsiteWhereUniqueInput;
}>;


export type FindUniqueWebsiteQuery = { __typename?: 'Query', findUniqueWebsite?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyWebsiteQueryVariables = Exact<{
  where?: InputMaybe<WebsiteWhereInput>;
  orderBy?: InputMaybe<Array<WebsiteOrderByWithRelationInput> | WebsiteOrderByWithRelationInput>;
  cursor?: InputMaybe<WebsiteWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyWebsiteQuery = { __typename?: 'Query', findManyWebsite: Array<{ __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyWebsiteCountQueryVariables = Exact<{
  where?: InputMaybe<WebsiteWhereInput>;
  orderBy?: InputMaybe<Array<WebsiteOrderByWithRelationInput> | WebsiteOrderByWithRelationInput>;
  cursor?: InputMaybe<WebsiteWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyWebsiteCountQuery = { __typename?: 'Query', findManyWebsiteCount: number };

export type CreateOneWebsiteMutationVariables = Exact<{
  data: WebsiteCreateInput;
}>;


export type CreateOneWebsiteMutation = { __typename?: 'Mutation', createOneWebsite: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneWebsiteMutationVariables = Exact<{
  where: WebsiteWhereUniqueInput;
  data: WebsiteUpdateInput;
}>;


export type UpdateOneWebsiteMutation = { __typename?: 'Mutation', updateOneWebsite: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneWebsiteMutationVariables = Exact<{
  where: WebsiteWhereUniqueInput;
}>;


export type DeleteOneWebsiteMutation = { __typename?: 'Mutation', deleteOneWebsite?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined, user?: { __typename?: 'User', id: string, name?: string | undefined, password?: string | undefined, stripeAccountId?: string | undefined, stripeCustomerId?: string | undefined, deleted?: boolean | undefined, deletedAt?: any | undefined, createdAt?: any | undefined, currentBalance?: number | undefined, email: string, imageObj?: any | undefined, totalEarnings?: number | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyWebsiteMutationVariables = Exact<{
  where?: InputMaybe<WebsiteWhereInput>;
}>;


export type DeleteManyWebsiteMutation = { __typename?: 'Mutation', deleteManyWebsite: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyWebsiteMutationVariables = Exact<{
  where?: InputMaybe<WebsiteWhereInput>;
  data: WebsiteUpdateManyMutationInput;
}>;


export type UpdateManyWebsiteMutation = { __typename?: 'Mutation', updateManyWebsite: { __typename?: 'BatchPayload', count: number } };

export type WithdrawFieldsFragment = { __typename?: 'Withdraw', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount: number, id: string, processed: boolean, websiteId?: string | undefined };

export type WithdrawFragment = { __typename?: 'Withdraw', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount: number, id: string, processed: boolean, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined };

export type FindUniqueWithdrawQueryVariables = Exact<{
  where: WithdrawWhereUniqueInput;
}>;


export type FindUniqueWithdrawQuery = { __typename?: 'Query', findUniqueWithdraw?: { __typename?: 'Withdraw', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount: number, id: string, processed: boolean, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type FindManyWithdrawQueryVariables = Exact<{
  where?: InputMaybe<WithdrawWhereInput>;
  orderBy?: InputMaybe<Array<WithdrawOrderByWithRelationInput> | WithdrawOrderByWithRelationInput>;
  cursor?: InputMaybe<WithdrawWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyWithdrawQuery = { __typename?: 'Query', findManyWithdraw: Array<{ __typename?: 'Withdraw', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount: number, id: string, processed: boolean, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined }> };

export type FindManyWithdrawCountQueryVariables = Exact<{
  where?: InputMaybe<WithdrawWhereInput>;
  orderBy?: InputMaybe<Array<WithdrawOrderByWithRelationInput> | WithdrawOrderByWithRelationInput>;
  cursor?: InputMaybe<WithdrawWhereUniqueInput>;
  skip?: InputMaybe<Scalars['Int']>;
  take?: InputMaybe<Scalars['Int']>;
}>;


export type FindManyWithdrawCountQuery = { __typename?: 'Query', findManyWithdrawCount: number };

export type CreateOneWithdrawMutationVariables = Exact<{
  data: WithdrawCreateInput;
}>;


export type CreateOneWithdrawMutation = { __typename?: 'Mutation', createOneWithdraw: { __typename?: 'Withdraw', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount: number, id: string, processed: boolean, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type UpdateOneWithdrawMutationVariables = Exact<{
  where: WithdrawWhereUniqueInput;
  data: WithdrawUpdateInput;
}>;


export type UpdateOneWithdrawMutation = { __typename?: 'Mutation', updateOneWithdraw: { __typename?: 'Withdraw', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount: number, id: string, processed: boolean, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } };

export type DeleteOneWithdrawMutationVariables = Exact<{
  where: WithdrawWhereUniqueInput;
}>;


export type DeleteOneWithdrawMutation = { __typename?: 'Mutation', deleteOneWithdraw?: { __typename?: 'Withdraw', createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, amount: number, id: string, processed: boolean, websiteId?: string | undefined, website?: { __typename?: 'Website', adminFilters?: any | undefined, createdAt: any, deletedAt?: any | undefined, deleted: boolean, updatedAt: any, active?: boolean | undefined, address?: any | undefined, canonicalUrl?: string | undefined, chain?: any | undefined, contact?: string | undefined, countryCode?: CountryCode | undefined, cryptoCurrencyCode?: CryptoCurrency | undefined, currencyCode?: CurrencyCode | undefined, currentBalance?: number | undefined, description?: string | undefined, discordLink?: string | undefined, externalName?: string | undefined, externalUrl?: string | undefined, facebookAppId?: string | undefined, facebookIsEnable?: boolean | undefined, facebookLink?: string | undefined, facebookPageId?: string | undefined, googleIsEnable?: boolean | undefined, googleTagManagerId?: string | undefined, id: string, imageObj?: any | undefined, instagramLink?: string | undefined, languageCode: LanguageCode, location?: any | undefined, logoObj?: any | undefined, menu?: any | undefined, metaTags: Array<string>, name: string, pageOrder: Array<string>, paymentMethod: PaymentMethod, slug?: string | undefined, stripeAccountId?: string | undefined, themeColor: Color, tikTokLink?: string | undefined, totalEarnings?: number | undefined, twitterCardType?: string | undefined, twitterHandle?: string | undefined, twitterLink?: string | undefined, userId?: string | undefined, walletAddress?: string | undefined, websiteUrl?: string | undefined, withdrawnAmount?: number | undefined } | undefined } | undefined };

export type DeleteManyWithdrawMutationVariables = Exact<{
  where?: InputMaybe<WithdrawWhereInput>;
}>;


export type DeleteManyWithdrawMutation = { __typename?: 'Mutation', deleteManyWithdraw: { __typename?: 'BatchPayload', count: number } };

export type UpdateManyWithdrawMutationVariables = Exact<{
  where?: InputMaybe<WithdrawWhereInput>;
  data: WithdrawUpdateManyMutationInput;
}>;


export type UpdateManyWithdrawMutation = { __typename?: 'Mutation', updateManyWithdraw: { __typename?: 'BatchPayload', count: number } };

export type LoginMutationVariables = Exact<{
  email: Scalars['String'];
  password: Scalars['String'];
}>;


export type LoginMutation = { __typename?: 'Mutation', login?: { __typename?: 'User', id: string, email: string, name?: string | undefined } | undefined };

export type SignupMutationVariables = Exact<{
  email: Scalars['String'];
  password: Scalars['String'];
  name: Scalars['String'];
}>;


export type SignupMutation = { __typename?: 'Mutation', signup?: { __typename?: 'User', id: string, email: string, name?: string | undefined } | undefined };

export type MeQueryVariables = Exact<{ [key: string]: never; }>;


export type MeQuery = { __typename?: 'Query', me?: { __typename?: 'User', id: string, name?: string | undefined, email: string } | undefined };

export type GetCustomerQueryVariables = Exact<{
  websiteSlug: Scalars['String'];
}>;


export type GetCustomerQuery = { __typename?: 'Query', getCustomer?: any | undefined };

export type SignUploadUrlMutationVariables = Exact<{
  filename: Scalars['String'];
  acl: Scalars['String'];
  contentType: Scalars['String'];
}>;


export type SignUploadUrlMutation = { __typename?: 'Mutation', signUploadUrl?: string | undefined };

export type PermissionQueryVariables = Exact<{ [key: string]: never; }>;


export type PermissionQuery = { __typename?: 'Query', permission?: any | undefined };

export type EnterAdminMutationVariables = Exact<{
  admin: Scalars['String'];
  id: Scalars['String'];
}>;


export type EnterAdminMutation = { __typename?: 'Mutation', enterAdmin?: any | undefined };

export type LogoutAdminMutationVariables = Exact<{ [key: string]: never; }>;


export type LogoutAdminMutation = { __typename?: 'Mutation', logoutAdmin?: any | undefined };

export type LogoutMutationVariables = Exact<{ [key: string]: never; }>;


export type LogoutMutation = { __typename?: 'Mutation', logout?: boolean | undefined };

export type AddTemplateMutationVariables = Exact<{
  id: Scalars['String'];
  currentJson: Scalars['String'];
}>;


export type AddTemplateMutation = { __typename?: 'Mutation', addTemplate?: any | undefined };

export type GetTemplatesQueryVariables = Exact<{ [key: string]: never; }>;


export type GetTemplatesQuery = { __typename?: 'Query', getTemplates?: any | undefined };

export type StripeCheckoutMutationVariables = Exact<{
  items: Scalars['Json'];
  websiteSlug: Scalars['String'];
  couponCode?: InputMaybe<Scalars['String']>;
  shippingId?: InputMaybe<Scalars['String']>;
  customerId: Scalars['String'];
}>;


export type StripeCheckoutMutation = { __typename?: 'Mutation', stripeCheckout?: any | undefined };

export type GetAdminSettingsQueryVariables = Exact<{
  admin: Scalars['String'];
  Admin?: InputMaybe<Scalars['String']>;
  Version: Scalars['String'];
}>;


export type GetAdminSettingsQuery = { __typename?: 'Query', getAdminSettings?: any | undefined };

export type GetUiTreeQueryVariables = Exact<{
  adminId: Scalars['String'];
}>;


export type GetUiTreeQuery = { __typename?: 'Query', getUiTree?: any | undefined };

export type StripeEnabledQueryVariables = Exact<{
  websiteSlug: Scalars['String'];
}>;


export type StripeEnabledQuery = { __typename?: 'Query', stripeEnabled?: boolean | undefined };

export type StripeAccountStatusQueryVariables = Exact<{ [key: string]: never; }>;


export type StripeAccountStatusQuery = { __typename?: 'Query', stripeAccountStatus?: any | undefined };

export type GetMetadataMutationVariables = Exact<{
  pageUrl: Scalars['String'];
}>;


export type GetMetadataMutation = { __typename?: 'Mutation', getMetadata?: any | undefined };

export type GetAnalyticsMutationVariables = Exact<{
  type: Scalars['String'];
  beginSec: Scalars['Int'];
  endSec: Scalars['Int'];
  wedsiteId: Scalars['String'];
  isRenew?: InputMaybe<Scalars['Boolean']>;
}>;


export type GetAnalyticsMutation = { __typename?: 'Mutation', getAnalytics?: any | undefined };

export type ServerMintMutationVariables = Exact<{
  orderedProductId: Scalars['String'];
  walletAddress: Scalars['String'];
}>;


export type ServerMintMutation = { __typename?: 'Mutation', serverMint?: any | undefined };

export type AdminMintNftMutationVariables = Exact<{
  orderId: Scalars['String'];
}>;


export type AdminMintNftMutation = { __typename?: 'Mutation', adminMintNft?: { __typename?: 'Order', id: string, amount?: number | undefined, applicationFee?: number | undefined, storageFee?: number | undefined } | undefined };

export type PayProductMutationVariables = Exact<{
  productId: Scalars['String'];
  websiteSlug: Scalars['String'];
  customerId: Scalars['String'];
  paymentAddress: Scalars['String'];
}>;


export type PayProductMutation = { __typename?: 'Mutation', payProduct?: { __typename?: 'Order', id: string, amount?: number | undefined, applicationFee?: number | undefined, storageFee?: number | undefined } | undefined };

export type PreparePurchaseMutationVariables = Exact<{
  productId: Scalars['String'];
  websiteSlug: Scalars['String'];
  customerId?: InputMaybe<Scalars['String']>;
  paymentAddress: Scalars['String'];
}>;


export type PreparePurchaseMutation = { __typename?: 'Mutation', preparePurchase?: { __typename?: 'Order', id: string, amount?: number | undefined, applicationFee?: number | undefined, storageFee?: number | undefined } | undefined };

export type PrepareStripePurchaseMutationVariables = Exact<{
  productId: Scalars['String'];
  websiteSlug: Scalars['String'];
  customerId: Scalars['String'];
}>;


export type PrepareStripePurchaseMutation = { __typename?: 'Mutation', prepareStripePurchase?: any | undefined };

export type UpdateOrderMutationVariables = Exact<{
  orderId: Scalars['String'];
  transactionHash?: InputMaybe<Scalars['String']>;
}>;


export type UpdateOrderMutation = { __typename?: 'Mutation', updateOrder?: { __typename?: 'Order', id: string } | undefined };

export type PrepareRequestMutationVariables = Exact<{
  requestId: Scalars['String'];
}>;


export type PrepareRequestMutation = { __typename?: 'Mutation', prepareRequest?: any | undefined };

export const AttachmentFieldsFragmentDoc = gql`
    fragment AttachmentFields on Attachment {
  id
  url
  upload
  deleted
  deletedAt
  type
  staked
  websiteId
  userId
}
    `;
export const WebsiteFieldsFragmentDoc = gql`
    fragment WebsiteFields on Website {
  adminFilters
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  address
  canonicalUrl
  chain
  contact
  countryCode
  cryptoCurrencyCode
  currencyCode
  currentBalance
  description
  discordLink
  externalName
  externalUrl
  facebookAppId
  facebookIsEnable
  facebookLink
  facebookPageId
  googleIsEnable
  googleTagManagerId
  id
  imageObj
  instagramLink
  languageCode
  location
  logoObj
  menu
  metaTags
  name
  pageOrder
  paymentMethod
  slug
  stripeAccountId
  themeColor
  tikTokLink
  totalEarnings
  twitterCardType
  twitterHandle
  twitterLink
  userId
  walletAddress
  websiteUrl
  withdrawnAmount
}
    `;
export const UserFieldsFragmentDoc = gql`
    fragment UserFields on User {
  id
  name
  password
  stripeAccountId
  stripeCustomerId
  deleted
  deletedAt
  createdAt
  currentBalance
  email
  imageObj
  totalEarnings
  withdrawnAmount
}
    `;
export const AttachmentFragmentDoc = gql`
    fragment Attachment on Attachment {
  ...AttachmentFields
  website {
    ...WebsiteFields
  }
  user {
    ...UserFields
  }
}
    ${AttachmentFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const AttributeFieldsFragmentDoc = gql`
    fragment AttributeFields on Attribute {
  createdAt
  deletedAt
  deleted
  updatedAt
  id
  name
  slug
  values
  websiteId
}
    `;
export const AttributeFragmentDoc = gql`
    fragment Attribute on Attribute {
  ...AttributeFields
  website {
    ...WebsiteFields
  }
}
    ${AttributeFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const AudioFieldsFragmentDoc = gql`
    fragment AudioFields on Audio {
  createdAt
  deletedAt
  deleted
  updatedAt
  audioObj
  content
  description
  id
  imageObj
  name
  paid
  slug
  transactionHash
  userId
  walletAddress
}
    `;
export const AudioFragmentDoc = gql`
    fragment Audio on Audio {
  ...AudioFields
  user {
    ...UserFields
  }
}
    ${AudioFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const BlockFieldsFragmentDoc = gql`
    fragment BlockFields on Block {
  createdAt
  deletedAt
  deleted
  updatedAt
  content
  description
  favourite
  id
  imageObj
  name
  slug
  userId
}
    `;
export const BlockFragmentDoc = gql`
    fragment Block on Block {
  ...BlockFields
  user {
    ...UserFields
  }
}
    ${BlockFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const CategoryFieldsFragmentDoc = gql`
    fragment CategoryFields on Category {
  createdAt
  deletedAt
  deleted
  updatedAt
  details
  icon
  id
  imageObj
  name
  parentId
  slug
  websiteId
}
    `;
export const CategoryFragmentDoc = gql`
    fragment Category on Category {
  ...CategoryFields
  parent {
    ...CategoryFields
  }
  website {
    ...WebsiteFields
  }
}
    ${CategoryFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const CollectionFieldsFragmentDoc = gql`
    fragment CollectionFields on Collection {
  createdAt
  deletedAt
  deleted
  updatedAt
  collectionStyle
  collectionType
  description
  displayTitle
  id
  name
  websiteId
}
    `;
export const CollectionFragmentDoc = gql`
    fragment Collection on Collection {
  ...CollectionFields
  website {
    ...WebsiteFields
  }
}
    ${CollectionFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const CouponFieldsFragmentDoc = gql`
    fragment CouponFields on Coupon {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  active_from
  amount_off
  code
  couponType
  description
  expire_at
  id
  imageObj
  name
  percent_off
  type
  websiteId
}
    `;
export const CouponFragmentDoc = gql`
    fragment Coupon on Coupon {
  ...CouponFields
  website {
    ...WebsiteFields
  }
}
    ${CouponFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const CustomerFieldsFragmentDoc = gql`
    fragment CustomerFields on Customer {
  createdAt
  deletedAt
  deleted
  updatedAt
  age
  city
  email
  gender
  id
  imageObj
  isActive
  latestSales
  name
  note
  userId
  walletAddress
  websiteId
}
    `;
export const CustomerFragmentDoc = gql`
    fragment Customer on Customer {
  ...CustomerFields
  user {
    ...UserFields
  }
  website {
    ...WebsiteFields
  }
}
    ${CustomerFieldsFragmentDoc}
${UserFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const DocumentFieldsFragmentDoc = gql`
    fragment DocumentFields on Document {
  createdAt
  deletedAt
  deleted
  updatedAt
  content
  description
  documentObj
  id
  imageObj
  name
  paid
  slug
  transactionHash
  userId
  walletAddress
}
    `;
export const DocumentFragmentDoc = gql`
    fragment Document on Document {
  ...DocumentFields
  user {
    ...UserFields
  }
}
    ${DocumentFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const EmbedFieldsFragmentDoc = gql`
    fragment EmbedFields on Embed {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  description
  embedCode
  id
  name
  slug
  userId
}
    `;
export const EmbedFragmentDoc = gql`
    fragment Embed on Embed {
  ...EmbedFields
  user {
    ...UserFields
  }
}
    ${EmbedFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const GroupFieldsFragmentDoc = gql`
    fragment GroupFields on Group {
  id
  deleted
  deletedAt
  websiteId
}
    `;
export const GroupFragmentDoc = gql`
    fragment Group on Group {
  ...GroupFields
  website {
    ...WebsiteFields
  }
}
    ${GroupFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const ItemFieldsFragmentDoc = gql`
    fragment ItemFields on Item {
  createdAt
  deletedAt
  deleted
  updatedAt
  blockId
  collectionId
  embedId
  id
  itemType
  name
  pageId
}
    `;
export const PageFieldsFragmentDoc = gql`
    fragment PageFields on Page {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  content
  description
  id
  imageObj
  isIndex
  itemIds
  menu
  name
  navColor
  slug
  websiteId
}
    `;
export const ItemFragmentDoc = gql`
    fragment Item on Item {
  ...ItemFields
  block {
    ...BlockFields
  }
  collection {
    ...CollectionFields
  }
  embed {
    ...EmbedFields
  }
  page {
    ...PageFields
  }
}
    ${ItemFieldsFragmentDoc}
${BlockFieldsFragmentDoc}
${CollectionFieldsFragmentDoc}
${EmbedFieldsFragmentDoc}
${PageFieldsFragmentDoc}`;
export const LinkFieldsFragmentDoc = gql`
    fragment LinkFields on Link {
  createdAt
  deletedAt
  deleted
  updatedAt
  description
  hiddenMessage
  id
  imageObj
  name
  slug
  url
  userId
}
    `;
export const LinkFragmentDoc = gql`
    fragment Link on Link {
  ...LinkFields
  user {
    ...UserFields
  }
}
    ${LinkFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const LoginTokenFieldsFragmentDoc = gql`
    fragment LoginTokenFields on LoginToken {
  id
  userId
  approved
  expires
  createdAt
  email
  secret
  ip
  userAgent
  userAgentRaw
  geo
  domain
  deleted
  deletedAt
}
    `;
export const LoginTokenFragmentDoc = gql`
    fragment LoginToken on LoginToken {
  ...LoginTokenFields
  user {
    ...UserFields
  }
}
    ${LoginTokenFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const NotificationFieldsFragmentDoc = gql`
    fragment NotificationFields on Notification {
  id
  message
  model
  action
  modelId
  isUnRead
  deleted
  deletedAt
  title
  description
  url
  createdAt
  updatedAt
  websiteId
  userId
}
    `;
export const NotificationFragmentDoc = gql`
    fragment Notification on Notification {
  ...NotificationFields
  website {
    ...WebsiteFields
  }
  user {
    ...UserFields
  }
}
    ${NotificationFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const OrderFieldsFragmentDoc = gql`
    fragment OrderFields on Order {
  createdAt
  deletedAt
  deleted
  updatedAt
  amount
  applicationFee
  billing_address
  completedAt
  couponId
  cryptoCurrencyCode
  currencyCode
  customerContact
  customerId
  delivery_fee
  delivery_name
  delivery_time
  discount
  id
  orderNumber
  orderStatus
  paid_total
  paymentGateway
  paymentId
  received
  refundObj
  requireShipping
  sales_tax
  shippingImages
  shipping_address
  storageFee
  stripePrivateSessionId
  total
  tracking_number
  transactionHash
  walletAddress
  websiteId
}
    `;
export const OrderFragmentDoc = gql`
    fragment Order on Order {
  ...OrderFields
  coupon {
    ...CouponFields
  }
  customer {
    ...CustomerFields
  }
  website {
    ...WebsiteFields
  }
}
    ${OrderFieldsFragmentDoc}
${CouponFieldsFragmentDoc}
${CustomerFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const OrderedAudioFieldsFragmentDoc = gql`
    fragment OrderedAudioFields on OrderedAudio {
  createdAt
  deletedAt
  deleted
  updatedAt
  audioId
  audioObj
  description
  id
  imageObj
  name
  orderedProductId
  url
}
    `;
export const OrderedProductFieldsFragmentDoc = gql`
    fragment OrderedProductFields on OrderedProduct {
  createdAt
  deletedAt
  deleted
  updatedAt
  description
  id
  imageObj
  itemTotal
  minted
  name
  orderId
  orderNumber
  price
  productId
  productSlug
  productType
  quantity
  refundId
  slug
  transactionHash
  url
  variationId
  walletAddress
  websiteId
}
    `;
export const OrderedAudioFragmentDoc = gql`
    fragment OrderedAudio on OrderedAudio {
  ...OrderedAudioFields
  audio {
    ...AudioFields
  }
  orderedProduct {
    ...OrderedProductFields
  }
}
    ${OrderedAudioFieldsFragmentDoc}
${AudioFieldsFragmentDoc}
${OrderedProductFieldsFragmentDoc}`;
export const OrderedDocumentFieldsFragmentDoc = gql`
    fragment OrderedDocumentFields on OrderedDocument {
  createdAt
  deletedAt
  deleted
  updatedAt
  description
  documentId
  documentObj
  id
  imageObj
  name
  orderedProductId
  url
}
    `;
export const OrderedDocumentFragmentDoc = gql`
    fragment OrderedDocument on OrderedDocument {
  ...OrderedDocumentFields
  document {
    ...DocumentFields
  }
  orderedProduct {
    ...OrderedProductFields
  }
}
    ${OrderedDocumentFieldsFragmentDoc}
${DocumentFieldsFragmentDoc}
${OrderedProductFieldsFragmentDoc}`;
export const OrderedLinkFieldsFragmentDoc = gql`
    fragment OrderedLinkFields on OrderedLink {
  createdAt
  deletedAt
  deleted
  updatedAt
  description
  hiddenMessage
  id
  imageObj
  linkId
  name
  orderedProductId
  url
}
    `;
export const OrderedLinkFragmentDoc = gql`
    fragment OrderedLink on OrderedLink {
  ...OrderedLinkFields
  link {
    ...LinkFields
  }
  orderedProduct {
    ...OrderedProductFields
  }
}
    ${OrderedLinkFieldsFragmentDoc}
${LinkFieldsFragmentDoc}
${OrderedProductFieldsFragmentDoc}`;
export const OrderedPictureFieldsFragmentDoc = gql`
    fragment OrderedPictureFields on OrderedPicture {
  createdAt
  deletedAt
  deleted
  updatedAt
  description
  id
  imageObj
  name
  orderedProductId
  pictureId
  url
}
    `;
export const PictureFieldsFragmentDoc = gql`
    fragment PictureFields on Picture {
  createdAt
  deletedAt
  deleted
  updatedAt
  content
  description
  id
  imageObj
  name
  paid
  slug
  transactionHash
  userId
  walletAddress
}
    `;
export const OrderedPictureFragmentDoc = gql`
    fragment OrderedPicture on OrderedPicture {
  ...OrderedPictureFields
  orderedProduct {
    ...OrderedProductFields
  }
  picture {
    ...PictureFields
  }
}
    ${OrderedPictureFieldsFragmentDoc}
${OrderedProductFieldsFragmentDoc}
${PictureFieldsFragmentDoc}`;
export const ProductFieldsFragmentDoc = gql`
    fragment ProductFields on Product {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  content
  creatorEarnings
  description
  editionAddress
  editionMinted
  editionSize
  editionType
  externalNftChain
  externalNftContractAddress
  externalUrl
  gallery
  height
  id
  imageObj
  inStock
  isExternalNft
  length
  name
  price
  productType
  quantity
  sale_price
  sku
  slug
  storageSize
  tax_code
  transactionHash
  typeId
  unit
  variation_options
  variations
  websiteId
  width
}
    `;
export const RefundFieldsFragmentDoc = gql`
    fragment RefundFields on Refund {
  createdAt
  deletedAt
  deleted
  updatedAt
  accept
  amount
  id
  orderId
  received
  shippingImages
}
    `;
export const OrderedProductFragmentDoc = gql`
    fragment OrderedProduct on OrderedProduct {
  ...OrderedProductFields
  order {
    ...OrderFields
  }
  product {
    ...ProductFields
  }
  refund {
    ...RefundFields
  }
  website {
    ...WebsiteFields
  }
}
    ${OrderedProductFieldsFragmentDoc}
${OrderFieldsFragmentDoc}
${ProductFieldsFragmentDoc}
${RefundFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const OrderedRedeemableFieldsFragmentDoc = gql`
    fragment OrderedRedeemableFields on OrderedRedeemable {
  createdAt
  deletedAt
  deleted
  updatedAt
  description
  id
  imageObj
  name
  orderedProductId
  perLimit
  quantity
  redeemInfo
  redeemableId
  url
}
    `;
export const RedeemableFieldsFragmentDoc = gql`
    fragment RedeemableFields on Redeemable {
  createdAt
  deletedAt
  deleted
  updatedAt
  content
  description
  id
  imageObj
  name
  paid
  perLimit
  quantity
  redeemInfo
  redeemPassword
  slug
  transactionHash
  userId
  walletAddress
}
    `;
export const OrderedRedeemableFragmentDoc = gql`
    fragment OrderedRedeemable on OrderedRedeemable {
  ...OrderedRedeemableFields
  orderedProduct {
    ...OrderedProductFields
  }
  redeemable {
    ...RedeemableFields
  }
}
    ${OrderedRedeemableFieldsFragmentDoc}
${OrderedProductFieldsFragmentDoc}
${RedeemableFieldsFragmentDoc}`;
export const OrderedVideoFieldsFragmentDoc = gql`
    fragment OrderedVideoFields on OrderedVideo {
  createdAt
  deletedAt
  deleted
  updatedAt
  description
  id
  imageObj
  name
  orderedProductId
  url
  videoId
  videoObj
}
    `;
export const VideoFieldsFragmentDoc = gql`
    fragment VideoFields on Video {
  createdAt
  deletedAt
  deleted
  updatedAt
  content
  description
  id
  imageObj
  name
  paid
  slug
  transactionHash
  userId
  videoObj
  walletAddress
}
    `;
export const OrderedVideoFragmentDoc = gql`
    fragment OrderedVideo on OrderedVideo {
  ...OrderedVideoFields
  orderedProduct {
    ...OrderedProductFields
  }
  video {
    ...VideoFields
  }
}
    ${OrderedVideoFieldsFragmentDoc}
${OrderedProductFieldsFragmentDoc}
${VideoFieldsFragmentDoc}`;
export const PageFragmentDoc = gql`
    fragment Page on Page {
  ...PageFields
  website {
    ...WebsiteFields
  }
}
    ${PageFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const PageCollectionFieldsFragmentDoc = gql`
    fragment PageCollectionFields on PageCollection {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  description
  displayTitle
  id
  name
  websiteId
}
    `;
export const PageCollectionFragmentDoc = gql`
    fragment PageCollection on PageCollection {
  ...PageCollectionFields
  website {
    ...WebsiteFields
  }
}
    ${PageCollectionFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const PageViewFieldsFragmentDoc = gql`
    fragment PageViewFields on PageView {
  createdAt
  deletedAt
  deleted
  updatedAt
  id
  ip
  pageId
}
    `;
export const PageViewFragmentDoc = gql`
    fragment PageView on PageView {
  ...PageViewFields
  page {
    ...PageFields
  }
}
    ${PageViewFieldsFragmentDoc}
${PageFieldsFragmentDoc}`;
export const PictureFragmentDoc = gql`
    fragment Picture on Picture {
  ...PictureFields
  user {
    ...UserFields
  }
}
    ${PictureFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const TypeFieldsFragmentDoc = gql`
    fragment TypeFields on Type {
  createdAt
  deletedAt
  deleted
  updatedAt
  id
  name
  slug
}
    `;
export const ProductFragmentDoc = gql`
    fragment Product on Product {
  ...ProductFields
  type {
    ...TypeFields
  }
  website {
    ...WebsiteFields
  }
}
    ${ProductFieldsFragmentDoc}
${TypeFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const ProductCollectionFieldsFragmentDoc = gql`
    fragment ProductCollectionFields on ProductCollection {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  description
  displayTitle
  id
  name
  websiteId
}
    `;
export const ProductCollectionFragmentDoc = gql`
    fragment ProductCollection on ProductCollection {
  ...ProductCollectionFields
  website {
    ...WebsiteFields
  }
}
    ${ProductCollectionFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const RedeemableFragmentDoc = gql`
    fragment Redeemable on Redeemable {
  ...RedeemableFields
  user {
    ...UserFields
  }
}
    ${RedeemableFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const RefreshTokenFieldsFragmentDoc = gql`
    fragment RefreshTokenFields on RefreshToken {
  loginTokenId
  userId
  createdAt
  expires
  value
  lastActive
  ip
  userAgent
  userAgentRaw
  geo
  deleted
  deletedAt
}
    `;
export const RefreshTokenFragmentDoc = gql`
    fragment RefreshToken on RefreshToken {
  ...RefreshTokenFields
  user {
    ...UserFields
  }
}
    ${RefreshTokenFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const RefundFragmentDoc = gql`
    fragment Refund on Refund {
  ...RefundFields
  order {
    ...OrderFields
  }
}
    ${RefundFieldsFragmentDoc}
${OrderFieldsFragmentDoc}`;
export const RequestFieldsFragmentDoc = gql`
    fragment RequestFields on Request {
  createdAt
  deletedAt
  deleted
  updatedAt
  accept
  acceptBefore
  active
  applicationFee
  collectionId
  cryptoCurrencyCode
  currencyCode
  customerId
  days
  description
  expiredAt
  id
  imageObj
  message
  name
  pageId
  paid
  paidAt
  paymentId
  price
  requestAccept
  requestStatus
  stripeSessionId
  subject
  total
  transactionHash
  url
  walletAddress
}
    `;
export const RequestFragmentDoc = gql`
    fragment Request on Request {
  ...RequestFields
  collection {
    ...CollectionFields
  }
  customer {
    ...CustomerFields
  }
  page {
    ...PageFields
  }
}
    ${RequestFieldsFragmentDoc}
${CollectionFieldsFragmentDoc}
${CustomerFieldsFragmentDoc}
${PageFieldsFragmentDoc}`;
export const RequestClickFieldsFragmentDoc = gql`
    fragment RequestClickFields on RequestClick {
  createdAt
  deletedAt
  deleted
  updatedAt
  id
  ip
  pageId
}
    `;
export const RequestClickFragmentDoc = gql`
    fragment RequestClick on RequestClick {
  ...RequestClickFields
  page {
    ...PageFields
  }
}
    ${RequestClickFieldsFragmentDoc}
${PageFieldsFragmentDoc}`;
export const ShippingFieldsFragmentDoc = gql`
    fragment ShippingFields on Shipping {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  amount
  countryCode
  currencyCode
  id
  isGlobal
  name
  state
  type
  websiteId
}
    `;
export const ShippingFragmentDoc = gql`
    fragment Shipping on Shipping {
  ...ShippingFields
  website {
    ...WebsiteFields
  }
}
    ${ShippingFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const SlugCounterFieldsFragmentDoc = gql`
    fragment SlugCounterFields on SlugCounter {
  counter
  createdAt
  deleted
  deletedAt
  id
  model
  slug
  title
  updatedAt
}
    `;
export const SlugCounterFragmentDoc = gql`
    fragment SlugCounter on SlugCounter {
  ...SlugCounterFields
}
    ${SlugCounterFieldsFragmentDoc}`;
export const SocialFieldsFragmentDoc = gql`
    fragment SocialFields on Social {
  createdAt
  deletedAt
  deleted
  updatedAt
  id
  socialType
  url
  websiteId
}
    `;
export const SocialFragmentDoc = gql`
    fragment Social on Social {
  ...SocialFields
  website {
    ...WebsiteFields
  }
}
    ${SocialFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const TagFieldsFragmentDoc = gql`
    fragment TagFields on Tag {
  createdAt
  deletedAt
  deleted
  updatedAt
  icon
  id
  imageObj
  name
  slug
  typeId
}
    `;
export const TagFragmentDoc = gql`
    fragment Tag on Tag {
  ...TagFields
  type {
    ...TypeFields
  }
}
    ${TagFieldsFragmentDoc}
${TypeFieldsFragmentDoc}`;
export const TaxFieldsFragmentDoc = gql`
    fragment TaxFields on Tax {
  createdAt
  deletedAt
  deleted
  updatedAt
  active
  city
  country
  countryCode
  currencyCode
  description
  id
  inclusive
  isGlobal
  jurisdiction
  name
  onShipping
  percentage
  priority
  state
  stripePrivateTaxId
  websiteId
  zip
}
    `;
export const TaxFragmentDoc = gql`
    fragment Tax on Tax {
  ...TaxFields
  website {
    ...WebsiteFields
  }
}
    ${TaxFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const TraitFieldsFragmentDoc = gql`
    fragment TraitFields on Trait {
  createdAt
  deletedAt
  deleted
  updatedAt
  id
  name
  productId
}
    `;
export const TraitFragmentDoc = gql`
    fragment Trait on Trait {
  ...TraitFields
  product {
    ...ProductFields
  }
}
    ${TraitFieldsFragmentDoc}
${ProductFieldsFragmentDoc}`;
export const TypeFragmentDoc = gql`
    fragment Type on Type {
  ...TypeFields
}
    ${TypeFieldsFragmentDoc}`;
export const UserFragmentDoc = gql`
    fragment User on User {
  ...UserFields
}
    ${UserFieldsFragmentDoc}`;
export const ValueFieldsFragmentDoc = gql`
    fragment ValueFields on Value {
  createdAt
  deletedAt
  deleted
  updatedAt
  id
  imageObj
  name
  percentage
  traitId
}
    `;
export const ValueFragmentDoc = gql`
    fragment Value on Value {
  ...ValueFields
  trait {
    ...TraitFields
  }
}
    ${ValueFieldsFragmentDoc}
${TraitFieldsFragmentDoc}`;
export const VideoFragmentDoc = gql`
    fragment Video on Video {
  ...VideoFields
  user {
    ...UserFields
  }
}
    ${VideoFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const WebsiteFragmentDoc = gql`
    fragment Website on Website {
  ...WebsiteFields
  user {
    ...UserFields
  }
}
    ${WebsiteFieldsFragmentDoc}
${UserFieldsFragmentDoc}`;
export const WithdrawFieldsFragmentDoc = gql`
    fragment WithdrawFields on Withdraw {
  createdAt
  deletedAt
  deleted
  updatedAt
  amount
  id
  processed
  websiteId
}
    `;
export const WithdrawFragmentDoc = gql`
    fragment Withdraw on Withdraw {
  ...WithdrawFields
  website {
    ...WebsiteFields
  }
}
    ${WithdrawFieldsFragmentDoc}
${WebsiteFieldsFragmentDoc}`;
export const FindUniqueAttachmentDocument = gql`
    query findUniqueAttachment($where: AttachmentWhereUniqueInput!) {
  findUniqueAttachment(where: $where) {
    ...Attachment
  }
}
    ${AttachmentFragmentDoc}`;

/**
 * __useFindUniqueAttachmentQuery__
 *
 * To run a query within a React component, call `useFindUniqueAttachmentQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueAttachmentQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueAttachmentQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueAttachmentQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueAttachmentQuery, FindUniqueAttachmentQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueAttachmentQuery, FindUniqueAttachmentQueryVariables>(FindUniqueAttachmentDocument, options);
      }
export function useFindUniqueAttachmentLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueAttachmentQuery, FindUniqueAttachmentQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueAttachmentQuery, FindUniqueAttachmentQueryVariables>(FindUniqueAttachmentDocument, options);
        }
export type FindUniqueAttachmentQueryHookResult = ReturnType<typeof useFindUniqueAttachmentQuery>;
export type FindUniqueAttachmentLazyQueryHookResult = ReturnType<typeof useFindUniqueAttachmentLazyQuery>;
export type FindUniqueAttachmentQueryResult = Apollo.QueryResult<FindUniqueAttachmentQuery, FindUniqueAttachmentQueryVariables>;
export const FindManyAttachmentDocument = gql`
    query findManyAttachment($where: AttachmentWhereInput, $orderBy: [AttachmentOrderByWithRelationInput!], $cursor: AttachmentWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAttachment(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Attachment
  }
}
    ${AttachmentFragmentDoc}`;

/**
 * __useFindManyAttachmentQuery__
 *
 * To run a query within a React component, call `useFindManyAttachmentQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAttachmentQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAttachmentQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAttachmentQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAttachmentQuery, FindManyAttachmentQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAttachmentQuery, FindManyAttachmentQueryVariables>(FindManyAttachmentDocument, options);
      }
export function useFindManyAttachmentLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAttachmentQuery, FindManyAttachmentQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAttachmentQuery, FindManyAttachmentQueryVariables>(FindManyAttachmentDocument, options);
        }
export type FindManyAttachmentQueryHookResult = ReturnType<typeof useFindManyAttachmentQuery>;
export type FindManyAttachmentLazyQueryHookResult = ReturnType<typeof useFindManyAttachmentLazyQuery>;
export type FindManyAttachmentQueryResult = Apollo.QueryResult<FindManyAttachmentQuery, FindManyAttachmentQueryVariables>;
export const FindManyAttachmentCountDocument = gql`
    query findManyAttachmentCount($where: AttachmentWhereInput, $orderBy: [AttachmentOrderByWithRelationInput!], $cursor: AttachmentWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAttachmentCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyAttachmentCountQuery__
 *
 * To run a query within a React component, call `useFindManyAttachmentCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAttachmentCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAttachmentCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAttachmentCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAttachmentCountQuery, FindManyAttachmentCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAttachmentCountQuery, FindManyAttachmentCountQueryVariables>(FindManyAttachmentCountDocument, options);
      }
export function useFindManyAttachmentCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAttachmentCountQuery, FindManyAttachmentCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAttachmentCountQuery, FindManyAttachmentCountQueryVariables>(FindManyAttachmentCountDocument, options);
        }
export type FindManyAttachmentCountQueryHookResult = ReturnType<typeof useFindManyAttachmentCountQuery>;
export type FindManyAttachmentCountLazyQueryHookResult = ReturnType<typeof useFindManyAttachmentCountLazyQuery>;
export type FindManyAttachmentCountQueryResult = Apollo.QueryResult<FindManyAttachmentCountQuery, FindManyAttachmentCountQueryVariables>;
export const CreateOneAttachmentDocument = gql`
    mutation createOneAttachment($data: AttachmentCreateInput!) {
  createOneAttachment(data: $data) {
    ...Attachment
  }
}
    ${AttachmentFragmentDoc}`;

/**
 * __useCreateOneAttachmentMutation__
 *
 * To run a mutation, you first call `useCreateOneAttachmentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneAttachmentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneAttachmentMutation, { data, loading, error }] = useCreateOneAttachmentMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneAttachmentMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneAttachmentMutation, CreateOneAttachmentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneAttachmentMutation, CreateOneAttachmentMutationVariables>(CreateOneAttachmentDocument, options);
      }
export type CreateOneAttachmentMutationHookResult = ReturnType<typeof useCreateOneAttachmentMutation>;
export type CreateOneAttachmentMutationResult = Apollo.MutationResult<CreateOneAttachmentMutation>;
export type CreateOneAttachmentMutationOptions = Apollo.BaseMutationOptions<CreateOneAttachmentMutation, CreateOneAttachmentMutationVariables>;
export const UpdateOneAttachmentDocument = gql`
    mutation updateOneAttachment($where: AttachmentWhereUniqueInput!, $data: AttachmentUpdateInput!) {
  updateOneAttachment(where: $where, data: $data) {
    ...Attachment
  }
}
    ${AttachmentFragmentDoc}`;

/**
 * __useUpdateOneAttachmentMutation__
 *
 * To run a mutation, you first call `useUpdateOneAttachmentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneAttachmentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneAttachmentMutation, { data, loading, error }] = useUpdateOneAttachmentMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneAttachmentMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneAttachmentMutation, UpdateOneAttachmentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneAttachmentMutation, UpdateOneAttachmentMutationVariables>(UpdateOneAttachmentDocument, options);
      }
export type UpdateOneAttachmentMutationHookResult = ReturnType<typeof useUpdateOneAttachmentMutation>;
export type UpdateOneAttachmentMutationResult = Apollo.MutationResult<UpdateOneAttachmentMutation>;
export type UpdateOneAttachmentMutationOptions = Apollo.BaseMutationOptions<UpdateOneAttachmentMutation, UpdateOneAttachmentMutationVariables>;
export const DeleteOneAttachmentDocument = gql`
    mutation deleteOneAttachment($where: AttachmentWhereUniqueInput!) {
  deleteOneAttachment(where: $where) {
    ...Attachment
  }
}
    ${AttachmentFragmentDoc}`;

/**
 * __useDeleteOneAttachmentMutation__
 *
 * To run a mutation, you first call `useDeleteOneAttachmentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneAttachmentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneAttachmentMutation, { data, loading, error }] = useDeleteOneAttachmentMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneAttachmentMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneAttachmentMutation, DeleteOneAttachmentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneAttachmentMutation, DeleteOneAttachmentMutationVariables>(DeleteOneAttachmentDocument, options);
      }
export type DeleteOneAttachmentMutationHookResult = ReturnType<typeof useDeleteOneAttachmentMutation>;
export type DeleteOneAttachmentMutationResult = Apollo.MutationResult<DeleteOneAttachmentMutation>;
export type DeleteOneAttachmentMutationOptions = Apollo.BaseMutationOptions<DeleteOneAttachmentMutation, DeleteOneAttachmentMutationVariables>;
export const DeleteManyAttachmentDocument = gql`
    mutation deleteManyAttachment($where: AttachmentWhereInput) {
  deleteManyAttachment(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyAttachmentMutation__
 *
 * To run a mutation, you first call `useDeleteManyAttachmentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyAttachmentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyAttachmentMutation, { data, loading, error }] = useDeleteManyAttachmentMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyAttachmentMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyAttachmentMutation, DeleteManyAttachmentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyAttachmentMutation, DeleteManyAttachmentMutationVariables>(DeleteManyAttachmentDocument, options);
      }
export type DeleteManyAttachmentMutationHookResult = ReturnType<typeof useDeleteManyAttachmentMutation>;
export type DeleteManyAttachmentMutationResult = Apollo.MutationResult<DeleteManyAttachmentMutation>;
export type DeleteManyAttachmentMutationOptions = Apollo.BaseMutationOptions<DeleteManyAttachmentMutation, DeleteManyAttachmentMutationVariables>;
export const UpdateManyAttachmentDocument = gql`
    mutation updateManyAttachment($where: AttachmentWhereInput, $data: AttachmentUpdateManyMutationInput!) {
  updateManyAttachment(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyAttachmentMutation__
 *
 * To run a mutation, you first call `useUpdateManyAttachmentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyAttachmentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyAttachmentMutation, { data, loading, error }] = useUpdateManyAttachmentMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyAttachmentMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyAttachmentMutation, UpdateManyAttachmentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyAttachmentMutation, UpdateManyAttachmentMutationVariables>(UpdateManyAttachmentDocument, options);
      }
export type UpdateManyAttachmentMutationHookResult = ReturnType<typeof useUpdateManyAttachmentMutation>;
export type UpdateManyAttachmentMutationResult = Apollo.MutationResult<UpdateManyAttachmentMutation>;
export type UpdateManyAttachmentMutationOptions = Apollo.BaseMutationOptions<UpdateManyAttachmentMutation, UpdateManyAttachmentMutationVariables>;
export const FindUniqueAttributeDocument = gql`
    query findUniqueAttribute($where: AttributeWhereUniqueInput!) {
  findUniqueAttribute(where: $where) {
    ...Attribute
  }
}
    ${AttributeFragmentDoc}`;

/**
 * __useFindUniqueAttributeQuery__
 *
 * To run a query within a React component, call `useFindUniqueAttributeQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueAttributeQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueAttributeQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueAttributeQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueAttributeQuery, FindUniqueAttributeQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueAttributeQuery, FindUniqueAttributeQueryVariables>(FindUniqueAttributeDocument, options);
      }
export function useFindUniqueAttributeLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueAttributeQuery, FindUniqueAttributeQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueAttributeQuery, FindUniqueAttributeQueryVariables>(FindUniqueAttributeDocument, options);
        }
export type FindUniqueAttributeQueryHookResult = ReturnType<typeof useFindUniqueAttributeQuery>;
export type FindUniqueAttributeLazyQueryHookResult = ReturnType<typeof useFindUniqueAttributeLazyQuery>;
export type FindUniqueAttributeQueryResult = Apollo.QueryResult<FindUniqueAttributeQuery, FindUniqueAttributeQueryVariables>;
export const FindManyAttributeDocument = gql`
    query findManyAttribute($where: AttributeWhereInput, $orderBy: [AttributeOrderByWithRelationInput!], $cursor: AttributeWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAttribute(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Attribute
  }
}
    ${AttributeFragmentDoc}`;

/**
 * __useFindManyAttributeQuery__
 *
 * To run a query within a React component, call `useFindManyAttributeQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAttributeQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAttributeQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAttributeQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAttributeQuery, FindManyAttributeQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAttributeQuery, FindManyAttributeQueryVariables>(FindManyAttributeDocument, options);
      }
export function useFindManyAttributeLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAttributeQuery, FindManyAttributeQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAttributeQuery, FindManyAttributeQueryVariables>(FindManyAttributeDocument, options);
        }
export type FindManyAttributeQueryHookResult = ReturnType<typeof useFindManyAttributeQuery>;
export type FindManyAttributeLazyQueryHookResult = ReturnType<typeof useFindManyAttributeLazyQuery>;
export type FindManyAttributeQueryResult = Apollo.QueryResult<FindManyAttributeQuery, FindManyAttributeQueryVariables>;
export const FindManyAttributeCountDocument = gql`
    query findManyAttributeCount($where: AttributeWhereInput, $orderBy: [AttributeOrderByWithRelationInput!], $cursor: AttributeWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAttributeCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyAttributeCountQuery__
 *
 * To run a query within a React component, call `useFindManyAttributeCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAttributeCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAttributeCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAttributeCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAttributeCountQuery, FindManyAttributeCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAttributeCountQuery, FindManyAttributeCountQueryVariables>(FindManyAttributeCountDocument, options);
      }
export function useFindManyAttributeCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAttributeCountQuery, FindManyAttributeCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAttributeCountQuery, FindManyAttributeCountQueryVariables>(FindManyAttributeCountDocument, options);
        }
export type FindManyAttributeCountQueryHookResult = ReturnType<typeof useFindManyAttributeCountQuery>;
export type FindManyAttributeCountLazyQueryHookResult = ReturnType<typeof useFindManyAttributeCountLazyQuery>;
export type FindManyAttributeCountQueryResult = Apollo.QueryResult<FindManyAttributeCountQuery, FindManyAttributeCountQueryVariables>;
export const CreateOneAttributeDocument = gql`
    mutation createOneAttribute($data: AttributeCreateInput!) {
  createOneAttribute(data: $data) {
    ...Attribute
  }
}
    ${AttributeFragmentDoc}`;

/**
 * __useCreateOneAttributeMutation__
 *
 * To run a mutation, you first call `useCreateOneAttributeMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneAttributeMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneAttributeMutation, { data, loading, error }] = useCreateOneAttributeMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneAttributeMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneAttributeMutation, CreateOneAttributeMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneAttributeMutation, CreateOneAttributeMutationVariables>(CreateOneAttributeDocument, options);
      }
export type CreateOneAttributeMutationHookResult = ReturnType<typeof useCreateOneAttributeMutation>;
export type CreateOneAttributeMutationResult = Apollo.MutationResult<CreateOneAttributeMutation>;
export type CreateOneAttributeMutationOptions = Apollo.BaseMutationOptions<CreateOneAttributeMutation, CreateOneAttributeMutationVariables>;
export const UpdateOneAttributeDocument = gql`
    mutation updateOneAttribute($where: AttributeWhereUniqueInput!, $data: AttributeUpdateInput!) {
  updateOneAttribute(where: $where, data: $data) {
    ...Attribute
  }
}
    ${AttributeFragmentDoc}`;

/**
 * __useUpdateOneAttributeMutation__
 *
 * To run a mutation, you first call `useUpdateOneAttributeMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneAttributeMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneAttributeMutation, { data, loading, error }] = useUpdateOneAttributeMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneAttributeMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneAttributeMutation, UpdateOneAttributeMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneAttributeMutation, UpdateOneAttributeMutationVariables>(UpdateOneAttributeDocument, options);
      }
export type UpdateOneAttributeMutationHookResult = ReturnType<typeof useUpdateOneAttributeMutation>;
export type UpdateOneAttributeMutationResult = Apollo.MutationResult<UpdateOneAttributeMutation>;
export type UpdateOneAttributeMutationOptions = Apollo.BaseMutationOptions<UpdateOneAttributeMutation, UpdateOneAttributeMutationVariables>;
export const DeleteOneAttributeDocument = gql`
    mutation deleteOneAttribute($where: AttributeWhereUniqueInput!) {
  deleteOneAttribute(where: $where) {
    ...Attribute
  }
}
    ${AttributeFragmentDoc}`;

/**
 * __useDeleteOneAttributeMutation__
 *
 * To run a mutation, you first call `useDeleteOneAttributeMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneAttributeMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneAttributeMutation, { data, loading, error }] = useDeleteOneAttributeMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneAttributeMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneAttributeMutation, DeleteOneAttributeMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneAttributeMutation, DeleteOneAttributeMutationVariables>(DeleteOneAttributeDocument, options);
      }
export type DeleteOneAttributeMutationHookResult = ReturnType<typeof useDeleteOneAttributeMutation>;
export type DeleteOneAttributeMutationResult = Apollo.MutationResult<DeleteOneAttributeMutation>;
export type DeleteOneAttributeMutationOptions = Apollo.BaseMutationOptions<DeleteOneAttributeMutation, DeleteOneAttributeMutationVariables>;
export const DeleteManyAttributeDocument = gql`
    mutation deleteManyAttribute($where: AttributeWhereInput) {
  deleteManyAttribute(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyAttributeMutation__
 *
 * To run a mutation, you first call `useDeleteManyAttributeMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyAttributeMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyAttributeMutation, { data, loading, error }] = useDeleteManyAttributeMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyAttributeMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyAttributeMutation, DeleteManyAttributeMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyAttributeMutation, DeleteManyAttributeMutationVariables>(DeleteManyAttributeDocument, options);
      }
export type DeleteManyAttributeMutationHookResult = ReturnType<typeof useDeleteManyAttributeMutation>;
export type DeleteManyAttributeMutationResult = Apollo.MutationResult<DeleteManyAttributeMutation>;
export type DeleteManyAttributeMutationOptions = Apollo.BaseMutationOptions<DeleteManyAttributeMutation, DeleteManyAttributeMutationVariables>;
export const UpdateManyAttributeDocument = gql`
    mutation updateManyAttribute($where: AttributeWhereInput, $data: AttributeUpdateManyMutationInput!) {
  updateManyAttribute(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyAttributeMutation__
 *
 * To run a mutation, you first call `useUpdateManyAttributeMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyAttributeMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyAttributeMutation, { data, loading, error }] = useUpdateManyAttributeMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyAttributeMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyAttributeMutation, UpdateManyAttributeMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyAttributeMutation, UpdateManyAttributeMutationVariables>(UpdateManyAttributeDocument, options);
      }
export type UpdateManyAttributeMutationHookResult = ReturnType<typeof useUpdateManyAttributeMutation>;
export type UpdateManyAttributeMutationResult = Apollo.MutationResult<UpdateManyAttributeMutation>;
export type UpdateManyAttributeMutationOptions = Apollo.BaseMutationOptions<UpdateManyAttributeMutation, UpdateManyAttributeMutationVariables>;
export const FindUniqueAudioDocument = gql`
    query findUniqueAudio($where: AudioWhereUniqueInput!) {
  findUniqueAudio(where: $where) {
    ...Audio
  }
}
    ${AudioFragmentDoc}`;

/**
 * __useFindUniqueAudioQuery__
 *
 * To run a query within a React component, call `useFindUniqueAudioQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueAudioQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueAudioQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueAudioQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueAudioQuery, FindUniqueAudioQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueAudioQuery, FindUniqueAudioQueryVariables>(FindUniqueAudioDocument, options);
      }
export function useFindUniqueAudioLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueAudioQuery, FindUniqueAudioQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueAudioQuery, FindUniqueAudioQueryVariables>(FindUniqueAudioDocument, options);
        }
export type FindUniqueAudioQueryHookResult = ReturnType<typeof useFindUniqueAudioQuery>;
export type FindUniqueAudioLazyQueryHookResult = ReturnType<typeof useFindUniqueAudioLazyQuery>;
export type FindUniqueAudioQueryResult = Apollo.QueryResult<FindUniqueAudioQuery, FindUniqueAudioQueryVariables>;
export const FindManyAudioDocument = gql`
    query findManyAudio($where: AudioWhereInput, $orderBy: [AudioOrderByWithRelationInput!], $cursor: AudioWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAudio(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Audio
  }
}
    ${AudioFragmentDoc}`;

/**
 * __useFindManyAudioQuery__
 *
 * To run a query within a React component, call `useFindManyAudioQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAudioQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAudioQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAudioQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAudioQuery, FindManyAudioQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAudioQuery, FindManyAudioQueryVariables>(FindManyAudioDocument, options);
      }
export function useFindManyAudioLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAudioQuery, FindManyAudioQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAudioQuery, FindManyAudioQueryVariables>(FindManyAudioDocument, options);
        }
export type FindManyAudioQueryHookResult = ReturnType<typeof useFindManyAudioQuery>;
export type FindManyAudioLazyQueryHookResult = ReturnType<typeof useFindManyAudioLazyQuery>;
export type FindManyAudioQueryResult = Apollo.QueryResult<FindManyAudioQuery, FindManyAudioQueryVariables>;
export const FindManyAudioCountDocument = gql`
    query findManyAudioCount($where: AudioWhereInput, $orderBy: [AudioOrderByWithRelationInput!], $cursor: AudioWhereUniqueInput, $skip: Int, $take: Int) {
  findManyAudioCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyAudioCountQuery__
 *
 * To run a query within a React component, call `useFindManyAudioCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyAudioCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyAudioCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyAudioCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyAudioCountQuery, FindManyAudioCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyAudioCountQuery, FindManyAudioCountQueryVariables>(FindManyAudioCountDocument, options);
      }
export function useFindManyAudioCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyAudioCountQuery, FindManyAudioCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyAudioCountQuery, FindManyAudioCountQueryVariables>(FindManyAudioCountDocument, options);
        }
export type FindManyAudioCountQueryHookResult = ReturnType<typeof useFindManyAudioCountQuery>;
export type FindManyAudioCountLazyQueryHookResult = ReturnType<typeof useFindManyAudioCountLazyQuery>;
export type FindManyAudioCountQueryResult = Apollo.QueryResult<FindManyAudioCountQuery, FindManyAudioCountQueryVariables>;
export const CreateOneAudioDocument = gql`
    mutation createOneAudio($data: AudioCreateInput!) {
  createOneAudio(data: $data) {
    ...Audio
  }
}
    ${AudioFragmentDoc}`;

/**
 * __useCreateOneAudioMutation__
 *
 * To run a mutation, you first call `useCreateOneAudioMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneAudioMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneAudioMutation, { data, loading, error }] = useCreateOneAudioMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneAudioMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneAudioMutation, CreateOneAudioMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneAudioMutation, CreateOneAudioMutationVariables>(CreateOneAudioDocument, options);
      }
export type CreateOneAudioMutationHookResult = ReturnType<typeof useCreateOneAudioMutation>;
export type CreateOneAudioMutationResult = Apollo.MutationResult<CreateOneAudioMutation>;
export type CreateOneAudioMutationOptions = Apollo.BaseMutationOptions<CreateOneAudioMutation, CreateOneAudioMutationVariables>;
export const UpdateOneAudioDocument = gql`
    mutation updateOneAudio($where: AudioWhereUniqueInput!, $data: AudioUpdateInput!) {
  updateOneAudio(where: $where, data: $data) {
    ...Audio
  }
}
    ${AudioFragmentDoc}`;

/**
 * __useUpdateOneAudioMutation__
 *
 * To run a mutation, you first call `useUpdateOneAudioMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneAudioMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneAudioMutation, { data, loading, error }] = useUpdateOneAudioMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneAudioMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneAudioMutation, UpdateOneAudioMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneAudioMutation, UpdateOneAudioMutationVariables>(UpdateOneAudioDocument, options);
      }
export type UpdateOneAudioMutationHookResult = ReturnType<typeof useUpdateOneAudioMutation>;
export type UpdateOneAudioMutationResult = Apollo.MutationResult<UpdateOneAudioMutation>;
export type UpdateOneAudioMutationOptions = Apollo.BaseMutationOptions<UpdateOneAudioMutation, UpdateOneAudioMutationVariables>;
export const DeleteOneAudioDocument = gql`
    mutation deleteOneAudio($where: AudioWhereUniqueInput!) {
  deleteOneAudio(where: $where) {
    ...Audio
  }
}
    ${AudioFragmentDoc}`;

/**
 * __useDeleteOneAudioMutation__
 *
 * To run a mutation, you first call `useDeleteOneAudioMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneAudioMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneAudioMutation, { data, loading, error }] = useDeleteOneAudioMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneAudioMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneAudioMutation, DeleteOneAudioMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneAudioMutation, DeleteOneAudioMutationVariables>(DeleteOneAudioDocument, options);
      }
export type DeleteOneAudioMutationHookResult = ReturnType<typeof useDeleteOneAudioMutation>;
export type DeleteOneAudioMutationResult = Apollo.MutationResult<DeleteOneAudioMutation>;
export type DeleteOneAudioMutationOptions = Apollo.BaseMutationOptions<DeleteOneAudioMutation, DeleteOneAudioMutationVariables>;
export const DeleteManyAudioDocument = gql`
    mutation deleteManyAudio($where: AudioWhereInput) {
  deleteManyAudio(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyAudioMutation__
 *
 * To run a mutation, you first call `useDeleteManyAudioMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyAudioMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyAudioMutation, { data, loading, error }] = useDeleteManyAudioMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyAudioMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyAudioMutation, DeleteManyAudioMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyAudioMutation, DeleteManyAudioMutationVariables>(DeleteManyAudioDocument, options);
      }
export type DeleteManyAudioMutationHookResult = ReturnType<typeof useDeleteManyAudioMutation>;
export type DeleteManyAudioMutationResult = Apollo.MutationResult<DeleteManyAudioMutation>;
export type DeleteManyAudioMutationOptions = Apollo.BaseMutationOptions<DeleteManyAudioMutation, DeleteManyAudioMutationVariables>;
export const UpdateManyAudioDocument = gql`
    mutation updateManyAudio($where: AudioWhereInput, $data: AudioUpdateManyMutationInput!) {
  updateManyAudio(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyAudioMutation__
 *
 * To run a mutation, you first call `useUpdateManyAudioMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyAudioMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyAudioMutation, { data, loading, error }] = useUpdateManyAudioMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyAudioMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyAudioMutation, UpdateManyAudioMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyAudioMutation, UpdateManyAudioMutationVariables>(UpdateManyAudioDocument, options);
      }
export type UpdateManyAudioMutationHookResult = ReturnType<typeof useUpdateManyAudioMutation>;
export type UpdateManyAudioMutationResult = Apollo.MutationResult<UpdateManyAudioMutation>;
export type UpdateManyAudioMutationOptions = Apollo.BaseMutationOptions<UpdateManyAudioMutation, UpdateManyAudioMutationVariables>;
export const FindUniqueBlockDocument = gql`
    query findUniqueBlock($where: BlockWhereUniqueInput!) {
  findUniqueBlock(where: $where) {
    ...Block
  }
}
    ${BlockFragmentDoc}`;

/**
 * __useFindUniqueBlockQuery__
 *
 * To run a query within a React component, call `useFindUniqueBlockQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueBlockQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueBlockQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueBlockQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueBlockQuery, FindUniqueBlockQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueBlockQuery, FindUniqueBlockQueryVariables>(FindUniqueBlockDocument, options);
      }
export function useFindUniqueBlockLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueBlockQuery, FindUniqueBlockQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueBlockQuery, FindUniqueBlockQueryVariables>(FindUniqueBlockDocument, options);
        }
export type FindUniqueBlockQueryHookResult = ReturnType<typeof useFindUniqueBlockQuery>;
export type FindUniqueBlockLazyQueryHookResult = ReturnType<typeof useFindUniqueBlockLazyQuery>;
export type FindUniqueBlockQueryResult = Apollo.QueryResult<FindUniqueBlockQuery, FindUniqueBlockQueryVariables>;
export const FindManyBlockDocument = gql`
    query findManyBlock($where: BlockWhereInput, $orderBy: [BlockOrderByWithRelationInput!], $cursor: BlockWhereUniqueInput, $skip: Int, $take: Int) {
  findManyBlock(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Block
  }
}
    ${BlockFragmentDoc}`;

/**
 * __useFindManyBlockQuery__
 *
 * To run a query within a React component, call `useFindManyBlockQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyBlockQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyBlockQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyBlockQuery(baseOptions?: Apollo.QueryHookOptions<FindManyBlockQuery, FindManyBlockQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyBlockQuery, FindManyBlockQueryVariables>(FindManyBlockDocument, options);
      }
export function useFindManyBlockLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyBlockQuery, FindManyBlockQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyBlockQuery, FindManyBlockQueryVariables>(FindManyBlockDocument, options);
        }
export type FindManyBlockQueryHookResult = ReturnType<typeof useFindManyBlockQuery>;
export type FindManyBlockLazyQueryHookResult = ReturnType<typeof useFindManyBlockLazyQuery>;
export type FindManyBlockQueryResult = Apollo.QueryResult<FindManyBlockQuery, FindManyBlockQueryVariables>;
export const FindManyBlockCountDocument = gql`
    query findManyBlockCount($where: BlockWhereInput, $orderBy: [BlockOrderByWithRelationInput!], $cursor: BlockWhereUniqueInput, $skip: Int, $take: Int) {
  findManyBlockCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyBlockCountQuery__
 *
 * To run a query within a React component, call `useFindManyBlockCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyBlockCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyBlockCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyBlockCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyBlockCountQuery, FindManyBlockCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyBlockCountQuery, FindManyBlockCountQueryVariables>(FindManyBlockCountDocument, options);
      }
export function useFindManyBlockCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyBlockCountQuery, FindManyBlockCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyBlockCountQuery, FindManyBlockCountQueryVariables>(FindManyBlockCountDocument, options);
        }
export type FindManyBlockCountQueryHookResult = ReturnType<typeof useFindManyBlockCountQuery>;
export type FindManyBlockCountLazyQueryHookResult = ReturnType<typeof useFindManyBlockCountLazyQuery>;
export type FindManyBlockCountQueryResult = Apollo.QueryResult<FindManyBlockCountQuery, FindManyBlockCountQueryVariables>;
export const CreateOneBlockDocument = gql`
    mutation createOneBlock($data: BlockCreateInput!) {
  createOneBlock(data: $data) {
    ...Block
  }
}
    ${BlockFragmentDoc}`;

/**
 * __useCreateOneBlockMutation__
 *
 * To run a mutation, you first call `useCreateOneBlockMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneBlockMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneBlockMutation, { data, loading, error }] = useCreateOneBlockMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneBlockMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneBlockMutation, CreateOneBlockMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneBlockMutation, CreateOneBlockMutationVariables>(CreateOneBlockDocument, options);
      }
export type CreateOneBlockMutationHookResult = ReturnType<typeof useCreateOneBlockMutation>;
export type CreateOneBlockMutationResult = Apollo.MutationResult<CreateOneBlockMutation>;
export type CreateOneBlockMutationOptions = Apollo.BaseMutationOptions<CreateOneBlockMutation, CreateOneBlockMutationVariables>;
export const UpdateOneBlockDocument = gql`
    mutation updateOneBlock($where: BlockWhereUniqueInput!, $data: BlockUpdateInput!) {
  updateOneBlock(where: $where, data: $data) {
    ...Block
  }
}
    ${BlockFragmentDoc}`;

/**
 * __useUpdateOneBlockMutation__
 *
 * To run a mutation, you first call `useUpdateOneBlockMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneBlockMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneBlockMutation, { data, loading, error }] = useUpdateOneBlockMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneBlockMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneBlockMutation, UpdateOneBlockMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneBlockMutation, UpdateOneBlockMutationVariables>(UpdateOneBlockDocument, options);
      }
export type UpdateOneBlockMutationHookResult = ReturnType<typeof useUpdateOneBlockMutation>;
export type UpdateOneBlockMutationResult = Apollo.MutationResult<UpdateOneBlockMutation>;
export type UpdateOneBlockMutationOptions = Apollo.BaseMutationOptions<UpdateOneBlockMutation, UpdateOneBlockMutationVariables>;
export const DeleteOneBlockDocument = gql`
    mutation deleteOneBlock($where: BlockWhereUniqueInput!) {
  deleteOneBlock(where: $where) {
    ...Block
  }
}
    ${BlockFragmentDoc}`;

/**
 * __useDeleteOneBlockMutation__
 *
 * To run a mutation, you first call `useDeleteOneBlockMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneBlockMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneBlockMutation, { data, loading, error }] = useDeleteOneBlockMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneBlockMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneBlockMutation, DeleteOneBlockMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneBlockMutation, DeleteOneBlockMutationVariables>(DeleteOneBlockDocument, options);
      }
export type DeleteOneBlockMutationHookResult = ReturnType<typeof useDeleteOneBlockMutation>;
export type DeleteOneBlockMutationResult = Apollo.MutationResult<DeleteOneBlockMutation>;
export type DeleteOneBlockMutationOptions = Apollo.BaseMutationOptions<DeleteOneBlockMutation, DeleteOneBlockMutationVariables>;
export const DeleteManyBlockDocument = gql`
    mutation deleteManyBlock($where: BlockWhereInput) {
  deleteManyBlock(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyBlockMutation__
 *
 * To run a mutation, you first call `useDeleteManyBlockMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyBlockMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyBlockMutation, { data, loading, error }] = useDeleteManyBlockMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyBlockMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyBlockMutation, DeleteManyBlockMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyBlockMutation, DeleteManyBlockMutationVariables>(DeleteManyBlockDocument, options);
      }
export type DeleteManyBlockMutationHookResult = ReturnType<typeof useDeleteManyBlockMutation>;
export type DeleteManyBlockMutationResult = Apollo.MutationResult<DeleteManyBlockMutation>;
export type DeleteManyBlockMutationOptions = Apollo.BaseMutationOptions<DeleteManyBlockMutation, DeleteManyBlockMutationVariables>;
export const UpdateManyBlockDocument = gql`
    mutation updateManyBlock($where: BlockWhereInput, $data: BlockUpdateManyMutationInput!) {
  updateManyBlock(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyBlockMutation__
 *
 * To run a mutation, you first call `useUpdateManyBlockMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyBlockMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyBlockMutation, { data, loading, error }] = useUpdateManyBlockMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyBlockMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyBlockMutation, UpdateManyBlockMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyBlockMutation, UpdateManyBlockMutationVariables>(UpdateManyBlockDocument, options);
      }
export type UpdateManyBlockMutationHookResult = ReturnType<typeof useUpdateManyBlockMutation>;
export type UpdateManyBlockMutationResult = Apollo.MutationResult<UpdateManyBlockMutation>;
export type UpdateManyBlockMutationOptions = Apollo.BaseMutationOptions<UpdateManyBlockMutation, UpdateManyBlockMutationVariables>;
export const FindUniqueCategoryDocument = gql`
    query findUniqueCategory($where: CategoryWhereUniqueInput!) {
  findUniqueCategory(where: $where) {
    ...Category
  }
}
    ${CategoryFragmentDoc}`;

/**
 * __useFindUniqueCategoryQuery__
 *
 * To run a query within a React component, call `useFindUniqueCategoryQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueCategoryQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueCategoryQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueCategoryQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueCategoryQuery, FindUniqueCategoryQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueCategoryQuery, FindUniqueCategoryQueryVariables>(FindUniqueCategoryDocument, options);
      }
export function useFindUniqueCategoryLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueCategoryQuery, FindUniqueCategoryQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueCategoryQuery, FindUniqueCategoryQueryVariables>(FindUniqueCategoryDocument, options);
        }
export type FindUniqueCategoryQueryHookResult = ReturnType<typeof useFindUniqueCategoryQuery>;
export type FindUniqueCategoryLazyQueryHookResult = ReturnType<typeof useFindUniqueCategoryLazyQuery>;
export type FindUniqueCategoryQueryResult = Apollo.QueryResult<FindUniqueCategoryQuery, FindUniqueCategoryQueryVariables>;
export const FindManyCategoryDocument = gql`
    query findManyCategory($where: CategoryWhereInput, $orderBy: [CategoryOrderByWithRelationInput!], $cursor: CategoryWhereUniqueInput, $skip: Int, $take: Int) {
  findManyCategory(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Category
  }
}
    ${CategoryFragmentDoc}`;

/**
 * __useFindManyCategoryQuery__
 *
 * To run a query within a React component, call `useFindManyCategoryQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyCategoryQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyCategoryQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyCategoryQuery(baseOptions?: Apollo.QueryHookOptions<FindManyCategoryQuery, FindManyCategoryQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyCategoryQuery, FindManyCategoryQueryVariables>(FindManyCategoryDocument, options);
      }
export function useFindManyCategoryLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyCategoryQuery, FindManyCategoryQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyCategoryQuery, FindManyCategoryQueryVariables>(FindManyCategoryDocument, options);
        }
export type FindManyCategoryQueryHookResult = ReturnType<typeof useFindManyCategoryQuery>;
export type FindManyCategoryLazyQueryHookResult = ReturnType<typeof useFindManyCategoryLazyQuery>;
export type FindManyCategoryQueryResult = Apollo.QueryResult<FindManyCategoryQuery, FindManyCategoryQueryVariables>;
export const FindManyCategoryCountDocument = gql`
    query findManyCategoryCount($where: CategoryWhereInput, $orderBy: [CategoryOrderByWithRelationInput!], $cursor: CategoryWhereUniqueInput, $skip: Int, $take: Int) {
  findManyCategoryCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyCategoryCountQuery__
 *
 * To run a query within a React component, call `useFindManyCategoryCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyCategoryCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyCategoryCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyCategoryCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyCategoryCountQuery, FindManyCategoryCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyCategoryCountQuery, FindManyCategoryCountQueryVariables>(FindManyCategoryCountDocument, options);
      }
export function useFindManyCategoryCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyCategoryCountQuery, FindManyCategoryCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyCategoryCountQuery, FindManyCategoryCountQueryVariables>(FindManyCategoryCountDocument, options);
        }
export type FindManyCategoryCountQueryHookResult = ReturnType<typeof useFindManyCategoryCountQuery>;
export type FindManyCategoryCountLazyQueryHookResult = ReturnType<typeof useFindManyCategoryCountLazyQuery>;
export type FindManyCategoryCountQueryResult = Apollo.QueryResult<FindManyCategoryCountQuery, FindManyCategoryCountQueryVariables>;
export const CreateOneCategoryDocument = gql`
    mutation createOneCategory($data: CategoryCreateInput!) {
  createOneCategory(data: $data) {
    ...Category
  }
}
    ${CategoryFragmentDoc}`;

/**
 * __useCreateOneCategoryMutation__
 *
 * To run a mutation, you first call `useCreateOneCategoryMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneCategoryMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneCategoryMutation, { data, loading, error }] = useCreateOneCategoryMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneCategoryMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneCategoryMutation, CreateOneCategoryMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneCategoryMutation, CreateOneCategoryMutationVariables>(CreateOneCategoryDocument, options);
      }
export type CreateOneCategoryMutationHookResult = ReturnType<typeof useCreateOneCategoryMutation>;
export type CreateOneCategoryMutationResult = Apollo.MutationResult<CreateOneCategoryMutation>;
export type CreateOneCategoryMutationOptions = Apollo.BaseMutationOptions<CreateOneCategoryMutation, CreateOneCategoryMutationVariables>;
export const UpdateOneCategoryDocument = gql`
    mutation updateOneCategory($where: CategoryWhereUniqueInput!, $data: CategoryUpdateInput!) {
  updateOneCategory(where: $where, data: $data) {
    ...Category
  }
}
    ${CategoryFragmentDoc}`;

/**
 * __useUpdateOneCategoryMutation__
 *
 * To run a mutation, you first call `useUpdateOneCategoryMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneCategoryMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneCategoryMutation, { data, loading, error }] = useUpdateOneCategoryMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneCategoryMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneCategoryMutation, UpdateOneCategoryMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneCategoryMutation, UpdateOneCategoryMutationVariables>(UpdateOneCategoryDocument, options);
      }
export type UpdateOneCategoryMutationHookResult = ReturnType<typeof useUpdateOneCategoryMutation>;
export type UpdateOneCategoryMutationResult = Apollo.MutationResult<UpdateOneCategoryMutation>;
export type UpdateOneCategoryMutationOptions = Apollo.BaseMutationOptions<UpdateOneCategoryMutation, UpdateOneCategoryMutationVariables>;
export const DeleteOneCategoryDocument = gql`
    mutation deleteOneCategory($where: CategoryWhereUniqueInput!) {
  deleteOneCategory(where: $where) {
    ...Category
  }
}
    ${CategoryFragmentDoc}`;

/**
 * __useDeleteOneCategoryMutation__
 *
 * To run a mutation, you first call `useDeleteOneCategoryMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneCategoryMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneCategoryMutation, { data, loading, error }] = useDeleteOneCategoryMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneCategoryMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneCategoryMutation, DeleteOneCategoryMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneCategoryMutation, DeleteOneCategoryMutationVariables>(DeleteOneCategoryDocument, options);
      }
export type DeleteOneCategoryMutationHookResult = ReturnType<typeof useDeleteOneCategoryMutation>;
export type DeleteOneCategoryMutationResult = Apollo.MutationResult<DeleteOneCategoryMutation>;
export type DeleteOneCategoryMutationOptions = Apollo.BaseMutationOptions<DeleteOneCategoryMutation, DeleteOneCategoryMutationVariables>;
export const DeleteManyCategoryDocument = gql`
    mutation deleteManyCategory($where: CategoryWhereInput) {
  deleteManyCategory(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyCategoryMutation__
 *
 * To run a mutation, you first call `useDeleteManyCategoryMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyCategoryMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyCategoryMutation, { data, loading, error }] = useDeleteManyCategoryMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyCategoryMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyCategoryMutation, DeleteManyCategoryMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyCategoryMutation, DeleteManyCategoryMutationVariables>(DeleteManyCategoryDocument, options);
      }
export type DeleteManyCategoryMutationHookResult = ReturnType<typeof useDeleteManyCategoryMutation>;
export type DeleteManyCategoryMutationResult = Apollo.MutationResult<DeleteManyCategoryMutation>;
export type DeleteManyCategoryMutationOptions = Apollo.BaseMutationOptions<DeleteManyCategoryMutation, DeleteManyCategoryMutationVariables>;
export const UpdateManyCategoryDocument = gql`
    mutation updateManyCategory($where: CategoryWhereInput, $data: CategoryUpdateManyMutationInput!) {
  updateManyCategory(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyCategoryMutation__
 *
 * To run a mutation, you first call `useUpdateManyCategoryMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyCategoryMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyCategoryMutation, { data, loading, error }] = useUpdateManyCategoryMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyCategoryMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyCategoryMutation, UpdateManyCategoryMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyCategoryMutation, UpdateManyCategoryMutationVariables>(UpdateManyCategoryDocument, options);
      }
export type UpdateManyCategoryMutationHookResult = ReturnType<typeof useUpdateManyCategoryMutation>;
export type UpdateManyCategoryMutationResult = Apollo.MutationResult<UpdateManyCategoryMutation>;
export type UpdateManyCategoryMutationOptions = Apollo.BaseMutationOptions<UpdateManyCategoryMutation, UpdateManyCategoryMutationVariables>;
export const FindUniqueCollectionDocument = gql`
    query findUniqueCollection($where: CollectionWhereUniqueInput!) {
  findUniqueCollection(where: $where) {
    ...Collection
  }
}
    ${CollectionFragmentDoc}`;

/**
 * __useFindUniqueCollectionQuery__
 *
 * To run a query within a React component, call `useFindUniqueCollectionQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueCollectionQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueCollectionQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueCollectionQuery, FindUniqueCollectionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueCollectionQuery, FindUniqueCollectionQueryVariables>(FindUniqueCollectionDocument, options);
      }
export function useFindUniqueCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueCollectionQuery, FindUniqueCollectionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueCollectionQuery, FindUniqueCollectionQueryVariables>(FindUniqueCollectionDocument, options);
        }
export type FindUniqueCollectionQueryHookResult = ReturnType<typeof useFindUniqueCollectionQuery>;
export type FindUniqueCollectionLazyQueryHookResult = ReturnType<typeof useFindUniqueCollectionLazyQuery>;
export type FindUniqueCollectionQueryResult = Apollo.QueryResult<FindUniqueCollectionQuery, FindUniqueCollectionQueryVariables>;
export const FindManyCollectionDocument = gql`
    query findManyCollection($where: CollectionWhereInput, $orderBy: [CollectionOrderByWithRelationInput!], $cursor: CollectionWhereUniqueInput, $skip: Int, $take: Int) {
  findManyCollection(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Collection
  }
}
    ${CollectionFragmentDoc}`;

/**
 * __useFindManyCollectionQuery__
 *
 * To run a query within a React component, call `useFindManyCollectionQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyCollectionQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyCollectionQuery(baseOptions?: Apollo.QueryHookOptions<FindManyCollectionQuery, FindManyCollectionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyCollectionQuery, FindManyCollectionQueryVariables>(FindManyCollectionDocument, options);
      }
export function useFindManyCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyCollectionQuery, FindManyCollectionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyCollectionQuery, FindManyCollectionQueryVariables>(FindManyCollectionDocument, options);
        }
export type FindManyCollectionQueryHookResult = ReturnType<typeof useFindManyCollectionQuery>;
export type FindManyCollectionLazyQueryHookResult = ReturnType<typeof useFindManyCollectionLazyQuery>;
export type FindManyCollectionQueryResult = Apollo.QueryResult<FindManyCollectionQuery, FindManyCollectionQueryVariables>;
export const FindManyCollectionCountDocument = gql`
    query findManyCollectionCount($where: CollectionWhereInput, $orderBy: [CollectionOrderByWithRelationInput!], $cursor: CollectionWhereUniqueInput, $skip: Int, $take: Int) {
  findManyCollectionCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyCollectionCountQuery__
 *
 * To run a query within a React component, call `useFindManyCollectionCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyCollectionCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyCollectionCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyCollectionCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyCollectionCountQuery, FindManyCollectionCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyCollectionCountQuery, FindManyCollectionCountQueryVariables>(FindManyCollectionCountDocument, options);
      }
export function useFindManyCollectionCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyCollectionCountQuery, FindManyCollectionCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyCollectionCountQuery, FindManyCollectionCountQueryVariables>(FindManyCollectionCountDocument, options);
        }
export type FindManyCollectionCountQueryHookResult = ReturnType<typeof useFindManyCollectionCountQuery>;
export type FindManyCollectionCountLazyQueryHookResult = ReturnType<typeof useFindManyCollectionCountLazyQuery>;
export type FindManyCollectionCountQueryResult = Apollo.QueryResult<FindManyCollectionCountQuery, FindManyCollectionCountQueryVariables>;
export const CreateOneCollectionDocument = gql`
    mutation createOneCollection($data: CollectionCreateInput!) {
  createOneCollection(data: $data) {
    ...Collection
  }
}
    ${CollectionFragmentDoc}`;

/**
 * __useCreateOneCollectionMutation__
 *
 * To run a mutation, you first call `useCreateOneCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneCollectionMutation, { data, loading, error }] = useCreateOneCollectionMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneCollectionMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneCollectionMutation, CreateOneCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneCollectionMutation, CreateOneCollectionMutationVariables>(CreateOneCollectionDocument, options);
      }
export type CreateOneCollectionMutationHookResult = ReturnType<typeof useCreateOneCollectionMutation>;
export type CreateOneCollectionMutationResult = Apollo.MutationResult<CreateOneCollectionMutation>;
export type CreateOneCollectionMutationOptions = Apollo.BaseMutationOptions<CreateOneCollectionMutation, CreateOneCollectionMutationVariables>;
export const UpdateOneCollectionDocument = gql`
    mutation updateOneCollection($where: CollectionWhereUniqueInput!, $data: CollectionUpdateInput!) {
  updateOneCollection(where: $where, data: $data) {
    ...Collection
  }
}
    ${CollectionFragmentDoc}`;

/**
 * __useUpdateOneCollectionMutation__
 *
 * To run a mutation, you first call `useUpdateOneCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneCollectionMutation, { data, loading, error }] = useUpdateOneCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneCollectionMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneCollectionMutation, UpdateOneCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneCollectionMutation, UpdateOneCollectionMutationVariables>(UpdateOneCollectionDocument, options);
      }
export type UpdateOneCollectionMutationHookResult = ReturnType<typeof useUpdateOneCollectionMutation>;
export type UpdateOneCollectionMutationResult = Apollo.MutationResult<UpdateOneCollectionMutation>;
export type UpdateOneCollectionMutationOptions = Apollo.BaseMutationOptions<UpdateOneCollectionMutation, UpdateOneCollectionMutationVariables>;
export const DeleteOneCollectionDocument = gql`
    mutation deleteOneCollection($where: CollectionWhereUniqueInput!) {
  deleteOneCollection(where: $where) {
    ...Collection
  }
}
    ${CollectionFragmentDoc}`;

/**
 * __useDeleteOneCollectionMutation__
 *
 * To run a mutation, you first call `useDeleteOneCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneCollectionMutation, { data, loading, error }] = useDeleteOneCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneCollectionMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneCollectionMutation, DeleteOneCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneCollectionMutation, DeleteOneCollectionMutationVariables>(DeleteOneCollectionDocument, options);
      }
export type DeleteOneCollectionMutationHookResult = ReturnType<typeof useDeleteOneCollectionMutation>;
export type DeleteOneCollectionMutationResult = Apollo.MutationResult<DeleteOneCollectionMutation>;
export type DeleteOneCollectionMutationOptions = Apollo.BaseMutationOptions<DeleteOneCollectionMutation, DeleteOneCollectionMutationVariables>;
export const DeleteManyCollectionDocument = gql`
    mutation deleteManyCollection($where: CollectionWhereInput) {
  deleteManyCollection(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyCollectionMutation__
 *
 * To run a mutation, you first call `useDeleteManyCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyCollectionMutation, { data, loading, error }] = useDeleteManyCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyCollectionMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyCollectionMutation, DeleteManyCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyCollectionMutation, DeleteManyCollectionMutationVariables>(DeleteManyCollectionDocument, options);
      }
export type DeleteManyCollectionMutationHookResult = ReturnType<typeof useDeleteManyCollectionMutation>;
export type DeleteManyCollectionMutationResult = Apollo.MutationResult<DeleteManyCollectionMutation>;
export type DeleteManyCollectionMutationOptions = Apollo.BaseMutationOptions<DeleteManyCollectionMutation, DeleteManyCollectionMutationVariables>;
export const UpdateManyCollectionDocument = gql`
    mutation updateManyCollection($where: CollectionWhereInput, $data: CollectionUpdateManyMutationInput!) {
  updateManyCollection(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyCollectionMutation__
 *
 * To run a mutation, you first call `useUpdateManyCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyCollectionMutation, { data, loading, error }] = useUpdateManyCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyCollectionMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyCollectionMutation, UpdateManyCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyCollectionMutation, UpdateManyCollectionMutationVariables>(UpdateManyCollectionDocument, options);
      }
export type UpdateManyCollectionMutationHookResult = ReturnType<typeof useUpdateManyCollectionMutation>;
export type UpdateManyCollectionMutationResult = Apollo.MutationResult<UpdateManyCollectionMutation>;
export type UpdateManyCollectionMutationOptions = Apollo.BaseMutationOptions<UpdateManyCollectionMutation, UpdateManyCollectionMutationVariables>;
export const FindUniqueCouponDocument = gql`
    query findUniqueCoupon($where: CouponWhereUniqueInput!) {
  findUniqueCoupon(where: $where) {
    ...Coupon
  }
}
    ${CouponFragmentDoc}`;

/**
 * __useFindUniqueCouponQuery__
 *
 * To run a query within a React component, call `useFindUniqueCouponQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueCouponQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueCouponQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueCouponQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueCouponQuery, FindUniqueCouponQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueCouponQuery, FindUniqueCouponQueryVariables>(FindUniqueCouponDocument, options);
      }
export function useFindUniqueCouponLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueCouponQuery, FindUniqueCouponQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueCouponQuery, FindUniqueCouponQueryVariables>(FindUniqueCouponDocument, options);
        }
export type FindUniqueCouponQueryHookResult = ReturnType<typeof useFindUniqueCouponQuery>;
export type FindUniqueCouponLazyQueryHookResult = ReturnType<typeof useFindUniqueCouponLazyQuery>;
export type FindUniqueCouponQueryResult = Apollo.QueryResult<FindUniqueCouponQuery, FindUniqueCouponQueryVariables>;
export const FindManyCouponDocument = gql`
    query findManyCoupon($where: CouponWhereInput, $orderBy: [CouponOrderByWithRelationInput!], $cursor: CouponWhereUniqueInput, $skip: Int, $take: Int) {
  findManyCoupon(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Coupon
  }
}
    ${CouponFragmentDoc}`;

/**
 * __useFindManyCouponQuery__
 *
 * To run a query within a React component, call `useFindManyCouponQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyCouponQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyCouponQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyCouponQuery(baseOptions?: Apollo.QueryHookOptions<FindManyCouponQuery, FindManyCouponQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyCouponQuery, FindManyCouponQueryVariables>(FindManyCouponDocument, options);
      }
export function useFindManyCouponLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyCouponQuery, FindManyCouponQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyCouponQuery, FindManyCouponQueryVariables>(FindManyCouponDocument, options);
        }
export type FindManyCouponQueryHookResult = ReturnType<typeof useFindManyCouponQuery>;
export type FindManyCouponLazyQueryHookResult = ReturnType<typeof useFindManyCouponLazyQuery>;
export type FindManyCouponQueryResult = Apollo.QueryResult<FindManyCouponQuery, FindManyCouponQueryVariables>;
export const FindManyCouponCountDocument = gql`
    query findManyCouponCount($where: CouponWhereInput, $orderBy: [CouponOrderByWithRelationInput!], $cursor: CouponWhereUniqueInput, $skip: Int, $take: Int) {
  findManyCouponCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyCouponCountQuery__
 *
 * To run a query within a React component, call `useFindManyCouponCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyCouponCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyCouponCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyCouponCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyCouponCountQuery, FindManyCouponCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyCouponCountQuery, FindManyCouponCountQueryVariables>(FindManyCouponCountDocument, options);
      }
export function useFindManyCouponCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyCouponCountQuery, FindManyCouponCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyCouponCountQuery, FindManyCouponCountQueryVariables>(FindManyCouponCountDocument, options);
        }
export type FindManyCouponCountQueryHookResult = ReturnType<typeof useFindManyCouponCountQuery>;
export type FindManyCouponCountLazyQueryHookResult = ReturnType<typeof useFindManyCouponCountLazyQuery>;
export type FindManyCouponCountQueryResult = Apollo.QueryResult<FindManyCouponCountQuery, FindManyCouponCountQueryVariables>;
export const CreateOneCouponDocument = gql`
    mutation createOneCoupon($data: CouponCreateInput!) {
  createOneCoupon(data: $data) {
    ...Coupon
  }
}
    ${CouponFragmentDoc}`;

/**
 * __useCreateOneCouponMutation__
 *
 * To run a mutation, you first call `useCreateOneCouponMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneCouponMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneCouponMutation, { data, loading, error }] = useCreateOneCouponMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneCouponMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneCouponMutation, CreateOneCouponMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneCouponMutation, CreateOneCouponMutationVariables>(CreateOneCouponDocument, options);
      }
export type CreateOneCouponMutationHookResult = ReturnType<typeof useCreateOneCouponMutation>;
export type CreateOneCouponMutationResult = Apollo.MutationResult<CreateOneCouponMutation>;
export type CreateOneCouponMutationOptions = Apollo.BaseMutationOptions<CreateOneCouponMutation, CreateOneCouponMutationVariables>;
export const UpdateOneCouponDocument = gql`
    mutation updateOneCoupon($where: CouponWhereUniqueInput!, $data: CouponUpdateInput!) {
  updateOneCoupon(where: $where, data: $data) {
    ...Coupon
  }
}
    ${CouponFragmentDoc}`;

/**
 * __useUpdateOneCouponMutation__
 *
 * To run a mutation, you first call `useUpdateOneCouponMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneCouponMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneCouponMutation, { data, loading, error }] = useUpdateOneCouponMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneCouponMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneCouponMutation, UpdateOneCouponMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneCouponMutation, UpdateOneCouponMutationVariables>(UpdateOneCouponDocument, options);
      }
export type UpdateOneCouponMutationHookResult = ReturnType<typeof useUpdateOneCouponMutation>;
export type UpdateOneCouponMutationResult = Apollo.MutationResult<UpdateOneCouponMutation>;
export type UpdateOneCouponMutationOptions = Apollo.BaseMutationOptions<UpdateOneCouponMutation, UpdateOneCouponMutationVariables>;
export const DeleteOneCouponDocument = gql`
    mutation deleteOneCoupon($where: CouponWhereUniqueInput!) {
  deleteOneCoupon(where: $where) {
    ...Coupon
  }
}
    ${CouponFragmentDoc}`;

/**
 * __useDeleteOneCouponMutation__
 *
 * To run a mutation, you first call `useDeleteOneCouponMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneCouponMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneCouponMutation, { data, loading, error }] = useDeleteOneCouponMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneCouponMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneCouponMutation, DeleteOneCouponMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneCouponMutation, DeleteOneCouponMutationVariables>(DeleteOneCouponDocument, options);
      }
export type DeleteOneCouponMutationHookResult = ReturnType<typeof useDeleteOneCouponMutation>;
export type DeleteOneCouponMutationResult = Apollo.MutationResult<DeleteOneCouponMutation>;
export type DeleteOneCouponMutationOptions = Apollo.BaseMutationOptions<DeleteOneCouponMutation, DeleteOneCouponMutationVariables>;
export const DeleteManyCouponDocument = gql`
    mutation deleteManyCoupon($where: CouponWhereInput) {
  deleteManyCoupon(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyCouponMutation__
 *
 * To run a mutation, you first call `useDeleteManyCouponMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyCouponMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyCouponMutation, { data, loading, error }] = useDeleteManyCouponMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyCouponMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyCouponMutation, DeleteManyCouponMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyCouponMutation, DeleteManyCouponMutationVariables>(DeleteManyCouponDocument, options);
      }
export type DeleteManyCouponMutationHookResult = ReturnType<typeof useDeleteManyCouponMutation>;
export type DeleteManyCouponMutationResult = Apollo.MutationResult<DeleteManyCouponMutation>;
export type DeleteManyCouponMutationOptions = Apollo.BaseMutationOptions<DeleteManyCouponMutation, DeleteManyCouponMutationVariables>;
export const UpdateManyCouponDocument = gql`
    mutation updateManyCoupon($where: CouponWhereInput, $data: CouponUpdateManyMutationInput!) {
  updateManyCoupon(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyCouponMutation__
 *
 * To run a mutation, you first call `useUpdateManyCouponMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyCouponMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyCouponMutation, { data, loading, error }] = useUpdateManyCouponMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyCouponMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyCouponMutation, UpdateManyCouponMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyCouponMutation, UpdateManyCouponMutationVariables>(UpdateManyCouponDocument, options);
      }
export type UpdateManyCouponMutationHookResult = ReturnType<typeof useUpdateManyCouponMutation>;
export type UpdateManyCouponMutationResult = Apollo.MutationResult<UpdateManyCouponMutation>;
export type UpdateManyCouponMutationOptions = Apollo.BaseMutationOptions<UpdateManyCouponMutation, UpdateManyCouponMutationVariables>;
export const FindUniqueCustomerDocument = gql`
    query findUniqueCustomer($where: CustomerWhereUniqueInput!) {
  findUniqueCustomer(where: $where) {
    ...Customer
  }
}
    ${CustomerFragmentDoc}`;

/**
 * __useFindUniqueCustomerQuery__
 *
 * To run a query within a React component, call `useFindUniqueCustomerQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueCustomerQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueCustomerQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueCustomerQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueCustomerQuery, FindUniqueCustomerQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueCustomerQuery, FindUniqueCustomerQueryVariables>(FindUniqueCustomerDocument, options);
      }
export function useFindUniqueCustomerLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueCustomerQuery, FindUniqueCustomerQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueCustomerQuery, FindUniqueCustomerQueryVariables>(FindUniqueCustomerDocument, options);
        }
export type FindUniqueCustomerQueryHookResult = ReturnType<typeof useFindUniqueCustomerQuery>;
export type FindUniqueCustomerLazyQueryHookResult = ReturnType<typeof useFindUniqueCustomerLazyQuery>;
export type FindUniqueCustomerQueryResult = Apollo.QueryResult<FindUniqueCustomerQuery, FindUniqueCustomerQueryVariables>;
export const FindManyCustomerDocument = gql`
    query findManyCustomer($where: CustomerWhereInput, $orderBy: [CustomerOrderByWithRelationInput!], $cursor: CustomerWhereUniqueInput, $skip: Int, $take: Int) {
  findManyCustomer(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Customer
  }
}
    ${CustomerFragmentDoc}`;

/**
 * __useFindManyCustomerQuery__
 *
 * To run a query within a React component, call `useFindManyCustomerQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyCustomerQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyCustomerQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyCustomerQuery(baseOptions?: Apollo.QueryHookOptions<FindManyCustomerQuery, FindManyCustomerQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyCustomerQuery, FindManyCustomerQueryVariables>(FindManyCustomerDocument, options);
      }
export function useFindManyCustomerLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyCustomerQuery, FindManyCustomerQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyCustomerQuery, FindManyCustomerQueryVariables>(FindManyCustomerDocument, options);
        }
export type FindManyCustomerQueryHookResult = ReturnType<typeof useFindManyCustomerQuery>;
export type FindManyCustomerLazyQueryHookResult = ReturnType<typeof useFindManyCustomerLazyQuery>;
export type FindManyCustomerQueryResult = Apollo.QueryResult<FindManyCustomerQuery, FindManyCustomerQueryVariables>;
export const FindManyCustomerCountDocument = gql`
    query findManyCustomerCount($where: CustomerWhereInput, $orderBy: [CustomerOrderByWithRelationInput!], $cursor: CustomerWhereUniqueInput, $skip: Int, $take: Int) {
  findManyCustomerCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyCustomerCountQuery__
 *
 * To run a query within a React component, call `useFindManyCustomerCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyCustomerCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyCustomerCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyCustomerCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyCustomerCountQuery, FindManyCustomerCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyCustomerCountQuery, FindManyCustomerCountQueryVariables>(FindManyCustomerCountDocument, options);
      }
export function useFindManyCustomerCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyCustomerCountQuery, FindManyCustomerCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyCustomerCountQuery, FindManyCustomerCountQueryVariables>(FindManyCustomerCountDocument, options);
        }
export type FindManyCustomerCountQueryHookResult = ReturnType<typeof useFindManyCustomerCountQuery>;
export type FindManyCustomerCountLazyQueryHookResult = ReturnType<typeof useFindManyCustomerCountLazyQuery>;
export type FindManyCustomerCountQueryResult = Apollo.QueryResult<FindManyCustomerCountQuery, FindManyCustomerCountQueryVariables>;
export const CreateOneCustomerDocument = gql`
    mutation createOneCustomer($data: CustomerCreateInput!) {
  createOneCustomer(data: $data) {
    ...Customer
  }
}
    ${CustomerFragmentDoc}`;

/**
 * __useCreateOneCustomerMutation__
 *
 * To run a mutation, you first call `useCreateOneCustomerMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneCustomerMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneCustomerMutation, { data, loading, error }] = useCreateOneCustomerMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneCustomerMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneCustomerMutation, CreateOneCustomerMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneCustomerMutation, CreateOneCustomerMutationVariables>(CreateOneCustomerDocument, options);
      }
export type CreateOneCustomerMutationHookResult = ReturnType<typeof useCreateOneCustomerMutation>;
export type CreateOneCustomerMutationResult = Apollo.MutationResult<CreateOneCustomerMutation>;
export type CreateOneCustomerMutationOptions = Apollo.BaseMutationOptions<CreateOneCustomerMutation, CreateOneCustomerMutationVariables>;
export const UpdateOneCustomerDocument = gql`
    mutation updateOneCustomer($where: CustomerWhereUniqueInput!, $data: CustomerUpdateInput!) {
  updateOneCustomer(where: $where, data: $data) {
    ...Customer
  }
}
    ${CustomerFragmentDoc}`;

/**
 * __useUpdateOneCustomerMutation__
 *
 * To run a mutation, you first call `useUpdateOneCustomerMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneCustomerMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneCustomerMutation, { data, loading, error }] = useUpdateOneCustomerMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneCustomerMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneCustomerMutation, UpdateOneCustomerMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneCustomerMutation, UpdateOneCustomerMutationVariables>(UpdateOneCustomerDocument, options);
      }
export type UpdateOneCustomerMutationHookResult = ReturnType<typeof useUpdateOneCustomerMutation>;
export type UpdateOneCustomerMutationResult = Apollo.MutationResult<UpdateOneCustomerMutation>;
export type UpdateOneCustomerMutationOptions = Apollo.BaseMutationOptions<UpdateOneCustomerMutation, UpdateOneCustomerMutationVariables>;
export const DeleteOneCustomerDocument = gql`
    mutation deleteOneCustomer($where: CustomerWhereUniqueInput!) {
  deleteOneCustomer(where: $where) {
    ...Customer
  }
}
    ${CustomerFragmentDoc}`;

/**
 * __useDeleteOneCustomerMutation__
 *
 * To run a mutation, you first call `useDeleteOneCustomerMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneCustomerMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneCustomerMutation, { data, loading, error }] = useDeleteOneCustomerMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneCustomerMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneCustomerMutation, DeleteOneCustomerMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneCustomerMutation, DeleteOneCustomerMutationVariables>(DeleteOneCustomerDocument, options);
      }
export type DeleteOneCustomerMutationHookResult = ReturnType<typeof useDeleteOneCustomerMutation>;
export type DeleteOneCustomerMutationResult = Apollo.MutationResult<DeleteOneCustomerMutation>;
export type DeleteOneCustomerMutationOptions = Apollo.BaseMutationOptions<DeleteOneCustomerMutation, DeleteOneCustomerMutationVariables>;
export const DeleteManyCustomerDocument = gql`
    mutation deleteManyCustomer($where: CustomerWhereInput) {
  deleteManyCustomer(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyCustomerMutation__
 *
 * To run a mutation, you first call `useDeleteManyCustomerMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyCustomerMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyCustomerMutation, { data, loading, error }] = useDeleteManyCustomerMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyCustomerMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyCustomerMutation, DeleteManyCustomerMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyCustomerMutation, DeleteManyCustomerMutationVariables>(DeleteManyCustomerDocument, options);
      }
export type DeleteManyCustomerMutationHookResult = ReturnType<typeof useDeleteManyCustomerMutation>;
export type DeleteManyCustomerMutationResult = Apollo.MutationResult<DeleteManyCustomerMutation>;
export type DeleteManyCustomerMutationOptions = Apollo.BaseMutationOptions<DeleteManyCustomerMutation, DeleteManyCustomerMutationVariables>;
export const UpdateManyCustomerDocument = gql`
    mutation updateManyCustomer($where: CustomerWhereInput, $data: CustomerUpdateManyMutationInput!) {
  updateManyCustomer(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyCustomerMutation__
 *
 * To run a mutation, you first call `useUpdateManyCustomerMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyCustomerMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyCustomerMutation, { data, loading, error }] = useUpdateManyCustomerMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyCustomerMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyCustomerMutation, UpdateManyCustomerMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyCustomerMutation, UpdateManyCustomerMutationVariables>(UpdateManyCustomerDocument, options);
      }
export type UpdateManyCustomerMutationHookResult = ReturnType<typeof useUpdateManyCustomerMutation>;
export type UpdateManyCustomerMutationResult = Apollo.MutationResult<UpdateManyCustomerMutation>;
export type UpdateManyCustomerMutationOptions = Apollo.BaseMutationOptions<UpdateManyCustomerMutation, UpdateManyCustomerMutationVariables>;
export const FindUniqueDocumentDocument = gql`
    query findUniqueDocument($where: DocumentWhereUniqueInput!) {
  findUniqueDocument(where: $where) {
    ...Document
  }
}
    ${DocumentFragmentDoc}`;

/**
 * __useFindUniqueDocumentQuery__
 *
 * To run a query within a React component, call `useFindUniqueDocumentQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueDocumentQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueDocumentQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueDocumentQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueDocumentQuery, FindUniqueDocumentQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueDocumentQuery, FindUniqueDocumentQueryVariables>(FindUniqueDocumentDocument, options);
      }
export function useFindUniqueDocumentLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueDocumentQuery, FindUniqueDocumentQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueDocumentQuery, FindUniqueDocumentQueryVariables>(FindUniqueDocumentDocument, options);
        }
export type FindUniqueDocumentQueryHookResult = ReturnType<typeof useFindUniqueDocumentQuery>;
export type FindUniqueDocumentLazyQueryHookResult = ReturnType<typeof useFindUniqueDocumentLazyQuery>;
export type FindUniqueDocumentQueryResult = Apollo.QueryResult<FindUniqueDocumentQuery, FindUniqueDocumentQueryVariables>;
export const FindManyDocumentDocument = gql`
    query findManyDocument($where: DocumentWhereInput, $orderBy: [DocumentOrderByWithRelationInput!], $cursor: DocumentWhereUniqueInput, $skip: Int, $take: Int) {
  findManyDocument(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Document
  }
}
    ${DocumentFragmentDoc}`;

/**
 * __useFindManyDocumentQuery__
 *
 * To run a query within a React component, call `useFindManyDocumentQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyDocumentQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyDocumentQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyDocumentQuery(baseOptions?: Apollo.QueryHookOptions<FindManyDocumentQuery, FindManyDocumentQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyDocumentQuery, FindManyDocumentQueryVariables>(FindManyDocumentDocument, options);
      }
export function useFindManyDocumentLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyDocumentQuery, FindManyDocumentQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyDocumentQuery, FindManyDocumentQueryVariables>(FindManyDocumentDocument, options);
        }
export type FindManyDocumentQueryHookResult = ReturnType<typeof useFindManyDocumentQuery>;
export type FindManyDocumentLazyQueryHookResult = ReturnType<typeof useFindManyDocumentLazyQuery>;
export type FindManyDocumentQueryResult = Apollo.QueryResult<FindManyDocumentQuery, FindManyDocumentQueryVariables>;
export const FindManyDocumentCountDocument = gql`
    query findManyDocumentCount($where: DocumentWhereInput, $orderBy: [DocumentOrderByWithRelationInput!], $cursor: DocumentWhereUniqueInput, $skip: Int, $take: Int) {
  findManyDocumentCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyDocumentCountQuery__
 *
 * To run a query within a React component, call `useFindManyDocumentCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyDocumentCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyDocumentCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyDocumentCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyDocumentCountQuery, FindManyDocumentCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyDocumentCountQuery, FindManyDocumentCountQueryVariables>(FindManyDocumentCountDocument, options);
      }
export function useFindManyDocumentCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyDocumentCountQuery, FindManyDocumentCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyDocumentCountQuery, FindManyDocumentCountQueryVariables>(FindManyDocumentCountDocument, options);
        }
export type FindManyDocumentCountQueryHookResult = ReturnType<typeof useFindManyDocumentCountQuery>;
export type FindManyDocumentCountLazyQueryHookResult = ReturnType<typeof useFindManyDocumentCountLazyQuery>;
export type FindManyDocumentCountQueryResult = Apollo.QueryResult<FindManyDocumentCountQuery, FindManyDocumentCountQueryVariables>;
export const CreateOneDocumentDocument = gql`
    mutation createOneDocument($data: DocumentCreateInput!) {
  createOneDocument(data: $data) {
    ...Document
  }
}
    ${DocumentFragmentDoc}`;

/**
 * __useCreateOneDocumentMutation__
 *
 * To run a mutation, you first call `useCreateOneDocumentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneDocumentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneDocumentMutation, { data, loading, error }] = useCreateOneDocumentMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneDocumentMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneDocumentMutation, CreateOneDocumentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneDocumentMutation, CreateOneDocumentMutationVariables>(CreateOneDocumentDocument, options);
      }
export type CreateOneDocumentMutationHookResult = ReturnType<typeof useCreateOneDocumentMutation>;
export type CreateOneDocumentMutationResult = Apollo.MutationResult<CreateOneDocumentMutation>;
export type CreateOneDocumentMutationOptions = Apollo.BaseMutationOptions<CreateOneDocumentMutation, CreateOneDocumentMutationVariables>;
export const UpdateOneDocumentDocument = gql`
    mutation updateOneDocument($where: DocumentWhereUniqueInput!, $data: DocumentUpdateInput!) {
  updateOneDocument(where: $where, data: $data) {
    ...Document
  }
}
    ${DocumentFragmentDoc}`;

/**
 * __useUpdateOneDocumentMutation__
 *
 * To run a mutation, you first call `useUpdateOneDocumentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneDocumentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneDocumentMutation, { data, loading, error }] = useUpdateOneDocumentMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneDocumentMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneDocumentMutation, UpdateOneDocumentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneDocumentMutation, UpdateOneDocumentMutationVariables>(UpdateOneDocumentDocument, options);
      }
export type UpdateOneDocumentMutationHookResult = ReturnType<typeof useUpdateOneDocumentMutation>;
export type UpdateOneDocumentMutationResult = Apollo.MutationResult<UpdateOneDocumentMutation>;
export type UpdateOneDocumentMutationOptions = Apollo.BaseMutationOptions<UpdateOneDocumentMutation, UpdateOneDocumentMutationVariables>;
export const DeleteOneDocumentDocument = gql`
    mutation deleteOneDocument($where: DocumentWhereUniqueInput!) {
  deleteOneDocument(where: $where) {
    ...Document
  }
}
    ${DocumentFragmentDoc}`;

/**
 * __useDeleteOneDocumentMutation__
 *
 * To run a mutation, you first call `useDeleteOneDocumentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneDocumentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneDocumentMutation, { data, loading, error }] = useDeleteOneDocumentMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneDocumentMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneDocumentMutation, DeleteOneDocumentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneDocumentMutation, DeleteOneDocumentMutationVariables>(DeleteOneDocumentDocument, options);
      }
export type DeleteOneDocumentMutationHookResult = ReturnType<typeof useDeleteOneDocumentMutation>;
export type DeleteOneDocumentMutationResult = Apollo.MutationResult<DeleteOneDocumentMutation>;
export type DeleteOneDocumentMutationOptions = Apollo.BaseMutationOptions<DeleteOneDocumentMutation, DeleteOneDocumentMutationVariables>;
export const DeleteManyDocumentDocument = gql`
    mutation deleteManyDocument($where: DocumentWhereInput) {
  deleteManyDocument(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyDocumentMutation__
 *
 * To run a mutation, you first call `useDeleteManyDocumentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyDocumentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyDocumentMutation, { data, loading, error }] = useDeleteManyDocumentMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyDocumentMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyDocumentMutation, DeleteManyDocumentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyDocumentMutation, DeleteManyDocumentMutationVariables>(DeleteManyDocumentDocument, options);
      }
export type DeleteManyDocumentMutationHookResult = ReturnType<typeof useDeleteManyDocumentMutation>;
export type DeleteManyDocumentMutationResult = Apollo.MutationResult<DeleteManyDocumentMutation>;
export type DeleteManyDocumentMutationOptions = Apollo.BaseMutationOptions<DeleteManyDocumentMutation, DeleteManyDocumentMutationVariables>;
export const UpdateManyDocumentDocument = gql`
    mutation updateManyDocument($where: DocumentWhereInput, $data: DocumentUpdateManyMutationInput!) {
  updateManyDocument(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyDocumentMutation__
 *
 * To run a mutation, you first call `useUpdateManyDocumentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyDocumentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyDocumentMutation, { data, loading, error }] = useUpdateManyDocumentMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyDocumentMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyDocumentMutation, UpdateManyDocumentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyDocumentMutation, UpdateManyDocumentMutationVariables>(UpdateManyDocumentDocument, options);
      }
export type UpdateManyDocumentMutationHookResult = ReturnType<typeof useUpdateManyDocumentMutation>;
export type UpdateManyDocumentMutationResult = Apollo.MutationResult<UpdateManyDocumentMutation>;
export type UpdateManyDocumentMutationOptions = Apollo.BaseMutationOptions<UpdateManyDocumentMutation, UpdateManyDocumentMutationVariables>;
export const FindUniqueEmbedDocument = gql`
    query findUniqueEmbed($where: EmbedWhereUniqueInput!) {
  findUniqueEmbed(where: $where) {
    ...Embed
  }
}
    ${EmbedFragmentDoc}`;

/**
 * __useFindUniqueEmbedQuery__
 *
 * To run a query within a React component, call `useFindUniqueEmbedQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueEmbedQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueEmbedQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueEmbedQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueEmbedQuery, FindUniqueEmbedQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueEmbedQuery, FindUniqueEmbedQueryVariables>(FindUniqueEmbedDocument, options);
      }
export function useFindUniqueEmbedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueEmbedQuery, FindUniqueEmbedQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueEmbedQuery, FindUniqueEmbedQueryVariables>(FindUniqueEmbedDocument, options);
        }
export type FindUniqueEmbedQueryHookResult = ReturnType<typeof useFindUniqueEmbedQuery>;
export type FindUniqueEmbedLazyQueryHookResult = ReturnType<typeof useFindUniqueEmbedLazyQuery>;
export type FindUniqueEmbedQueryResult = Apollo.QueryResult<FindUniqueEmbedQuery, FindUniqueEmbedQueryVariables>;
export const FindManyEmbedDocument = gql`
    query findManyEmbed($where: EmbedWhereInput, $orderBy: [EmbedOrderByWithRelationInput!], $cursor: EmbedWhereUniqueInput, $skip: Int, $take: Int) {
  findManyEmbed(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Embed
  }
}
    ${EmbedFragmentDoc}`;

/**
 * __useFindManyEmbedQuery__
 *
 * To run a query within a React component, call `useFindManyEmbedQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyEmbedQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyEmbedQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyEmbedQuery(baseOptions?: Apollo.QueryHookOptions<FindManyEmbedQuery, FindManyEmbedQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyEmbedQuery, FindManyEmbedQueryVariables>(FindManyEmbedDocument, options);
      }
export function useFindManyEmbedLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyEmbedQuery, FindManyEmbedQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyEmbedQuery, FindManyEmbedQueryVariables>(FindManyEmbedDocument, options);
        }
export type FindManyEmbedQueryHookResult = ReturnType<typeof useFindManyEmbedQuery>;
export type FindManyEmbedLazyQueryHookResult = ReturnType<typeof useFindManyEmbedLazyQuery>;
export type FindManyEmbedQueryResult = Apollo.QueryResult<FindManyEmbedQuery, FindManyEmbedQueryVariables>;
export const FindManyEmbedCountDocument = gql`
    query findManyEmbedCount($where: EmbedWhereInput, $orderBy: [EmbedOrderByWithRelationInput!], $cursor: EmbedWhereUniqueInput, $skip: Int, $take: Int) {
  findManyEmbedCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyEmbedCountQuery__
 *
 * To run a query within a React component, call `useFindManyEmbedCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyEmbedCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyEmbedCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyEmbedCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyEmbedCountQuery, FindManyEmbedCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyEmbedCountQuery, FindManyEmbedCountQueryVariables>(FindManyEmbedCountDocument, options);
      }
export function useFindManyEmbedCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyEmbedCountQuery, FindManyEmbedCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyEmbedCountQuery, FindManyEmbedCountQueryVariables>(FindManyEmbedCountDocument, options);
        }
export type FindManyEmbedCountQueryHookResult = ReturnType<typeof useFindManyEmbedCountQuery>;
export type FindManyEmbedCountLazyQueryHookResult = ReturnType<typeof useFindManyEmbedCountLazyQuery>;
export type FindManyEmbedCountQueryResult = Apollo.QueryResult<FindManyEmbedCountQuery, FindManyEmbedCountQueryVariables>;
export const CreateOneEmbedDocument = gql`
    mutation createOneEmbed($data: EmbedCreateInput!) {
  createOneEmbed(data: $data) {
    ...Embed
  }
}
    ${EmbedFragmentDoc}`;

/**
 * __useCreateOneEmbedMutation__
 *
 * To run a mutation, you first call `useCreateOneEmbedMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneEmbedMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneEmbedMutation, { data, loading, error }] = useCreateOneEmbedMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneEmbedMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneEmbedMutation, CreateOneEmbedMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneEmbedMutation, CreateOneEmbedMutationVariables>(CreateOneEmbedDocument, options);
      }
export type CreateOneEmbedMutationHookResult = ReturnType<typeof useCreateOneEmbedMutation>;
export type CreateOneEmbedMutationResult = Apollo.MutationResult<CreateOneEmbedMutation>;
export type CreateOneEmbedMutationOptions = Apollo.BaseMutationOptions<CreateOneEmbedMutation, CreateOneEmbedMutationVariables>;
export const UpdateOneEmbedDocument = gql`
    mutation updateOneEmbed($where: EmbedWhereUniqueInput!, $data: EmbedUpdateInput!) {
  updateOneEmbed(where: $where, data: $data) {
    ...Embed
  }
}
    ${EmbedFragmentDoc}`;

/**
 * __useUpdateOneEmbedMutation__
 *
 * To run a mutation, you first call `useUpdateOneEmbedMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneEmbedMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneEmbedMutation, { data, loading, error }] = useUpdateOneEmbedMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneEmbedMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneEmbedMutation, UpdateOneEmbedMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneEmbedMutation, UpdateOneEmbedMutationVariables>(UpdateOneEmbedDocument, options);
      }
export type UpdateOneEmbedMutationHookResult = ReturnType<typeof useUpdateOneEmbedMutation>;
export type UpdateOneEmbedMutationResult = Apollo.MutationResult<UpdateOneEmbedMutation>;
export type UpdateOneEmbedMutationOptions = Apollo.BaseMutationOptions<UpdateOneEmbedMutation, UpdateOneEmbedMutationVariables>;
export const DeleteOneEmbedDocument = gql`
    mutation deleteOneEmbed($where: EmbedWhereUniqueInput!) {
  deleteOneEmbed(where: $where) {
    ...Embed
  }
}
    ${EmbedFragmentDoc}`;

/**
 * __useDeleteOneEmbedMutation__
 *
 * To run a mutation, you first call `useDeleteOneEmbedMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneEmbedMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneEmbedMutation, { data, loading, error }] = useDeleteOneEmbedMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneEmbedMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneEmbedMutation, DeleteOneEmbedMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneEmbedMutation, DeleteOneEmbedMutationVariables>(DeleteOneEmbedDocument, options);
      }
export type DeleteOneEmbedMutationHookResult = ReturnType<typeof useDeleteOneEmbedMutation>;
export type DeleteOneEmbedMutationResult = Apollo.MutationResult<DeleteOneEmbedMutation>;
export type DeleteOneEmbedMutationOptions = Apollo.BaseMutationOptions<DeleteOneEmbedMutation, DeleteOneEmbedMutationVariables>;
export const DeleteManyEmbedDocument = gql`
    mutation deleteManyEmbed($where: EmbedWhereInput) {
  deleteManyEmbed(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyEmbedMutation__
 *
 * To run a mutation, you first call `useDeleteManyEmbedMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyEmbedMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyEmbedMutation, { data, loading, error }] = useDeleteManyEmbedMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyEmbedMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyEmbedMutation, DeleteManyEmbedMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyEmbedMutation, DeleteManyEmbedMutationVariables>(DeleteManyEmbedDocument, options);
      }
export type DeleteManyEmbedMutationHookResult = ReturnType<typeof useDeleteManyEmbedMutation>;
export type DeleteManyEmbedMutationResult = Apollo.MutationResult<DeleteManyEmbedMutation>;
export type DeleteManyEmbedMutationOptions = Apollo.BaseMutationOptions<DeleteManyEmbedMutation, DeleteManyEmbedMutationVariables>;
export const UpdateManyEmbedDocument = gql`
    mutation updateManyEmbed($where: EmbedWhereInput, $data: EmbedUpdateManyMutationInput!) {
  updateManyEmbed(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyEmbedMutation__
 *
 * To run a mutation, you first call `useUpdateManyEmbedMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyEmbedMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyEmbedMutation, { data, loading, error }] = useUpdateManyEmbedMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyEmbedMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyEmbedMutation, UpdateManyEmbedMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyEmbedMutation, UpdateManyEmbedMutationVariables>(UpdateManyEmbedDocument, options);
      }
export type UpdateManyEmbedMutationHookResult = ReturnType<typeof useUpdateManyEmbedMutation>;
export type UpdateManyEmbedMutationResult = Apollo.MutationResult<UpdateManyEmbedMutation>;
export type UpdateManyEmbedMutationOptions = Apollo.BaseMutationOptions<UpdateManyEmbedMutation, UpdateManyEmbedMutationVariables>;
export const FindUniqueGroupDocument = gql`
    query findUniqueGroup($where: GroupWhereUniqueInput!) {
  findUniqueGroup(where: $where) {
    ...Group
  }
}
    ${GroupFragmentDoc}`;

/**
 * __useFindUniqueGroupQuery__
 *
 * To run a query within a React component, call `useFindUniqueGroupQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueGroupQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueGroupQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueGroupQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueGroupQuery, FindUniqueGroupQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueGroupQuery, FindUniqueGroupQueryVariables>(FindUniqueGroupDocument, options);
      }
export function useFindUniqueGroupLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueGroupQuery, FindUniqueGroupQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueGroupQuery, FindUniqueGroupQueryVariables>(FindUniqueGroupDocument, options);
        }
export type FindUniqueGroupQueryHookResult = ReturnType<typeof useFindUniqueGroupQuery>;
export type FindUniqueGroupLazyQueryHookResult = ReturnType<typeof useFindUniqueGroupLazyQuery>;
export type FindUniqueGroupQueryResult = Apollo.QueryResult<FindUniqueGroupQuery, FindUniqueGroupQueryVariables>;
export const FindManyGroupDocument = gql`
    query findManyGroup($where: GroupWhereInput, $orderBy: [GroupOrderByWithRelationInput!], $cursor: GroupWhereUniqueInput, $skip: Int, $take: Int) {
  findManyGroup(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Group
  }
}
    ${GroupFragmentDoc}`;

/**
 * __useFindManyGroupQuery__
 *
 * To run a query within a React component, call `useFindManyGroupQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyGroupQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyGroupQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyGroupQuery(baseOptions?: Apollo.QueryHookOptions<FindManyGroupQuery, FindManyGroupQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyGroupQuery, FindManyGroupQueryVariables>(FindManyGroupDocument, options);
      }
export function useFindManyGroupLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyGroupQuery, FindManyGroupQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyGroupQuery, FindManyGroupQueryVariables>(FindManyGroupDocument, options);
        }
export type FindManyGroupQueryHookResult = ReturnType<typeof useFindManyGroupQuery>;
export type FindManyGroupLazyQueryHookResult = ReturnType<typeof useFindManyGroupLazyQuery>;
export type FindManyGroupQueryResult = Apollo.QueryResult<FindManyGroupQuery, FindManyGroupQueryVariables>;
export const FindManyGroupCountDocument = gql`
    query findManyGroupCount($where: GroupWhereInput, $orderBy: [GroupOrderByWithRelationInput!], $cursor: GroupWhereUniqueInput, $skip: Int, $take: Int) {
  findManyGroupCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyGroupCountQuery__
 *
 * To run a query within a React component, call `useFindManyGroupCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyGroupCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyGroupCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyGroupCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyGroupCountQuery, FindManyGroupCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyGroupCountQuery, FindManyGroupCountQueryVariables>(FindManyGroupCountDocument, options);
      }
export function useFindManyGroupCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyGroupCountQuery, FindManyGroupCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyGroupCountQuery, FindManyGroupCountQueryVariables>(FindManyGroupCountDocument, options);
        }
export type FindManyGroupCountQueryHookResult = ReturnType<typeof useFindManyGroupCountQuery>;
export type FindManyGroupCountLazyQueryHookResult = ReturnType<typeof useFindManyGroupCountLazyQuery>;
export type FindManyGroupCountQueryResult = Apollo.QueryResult<FindManyGroupCountQuery, FindManyGroupCountQueryVariables>;
export const CreateOneGroupDocument = gql`
    mutation createOneGroup($data: GroupCreateInput!) {
  createOneGroup(data: $data) {
    ...Group
  }
}
    ${GroupFragmentDoc}`;

/**
 * __useCreateOneGroupMutation__
 *
 * To run a mutation, you first call `useCreateOneGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneGroupMutation, { data, loading, error }] = useCreateOneGroupMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneGroupMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneGroupMutation, CreateOneGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneGroupMutation, CreateOneGroupMutationVariables>(CreateOneGroupDocument, options);
      }
export type CreateOneGroupMutationHookResult = ReturnType<typeof useCreateOneGroupMutation>;
export type CreateOneGroupMutationResult = Apollo.MutationResult<CreateOneGroupMutation>;
export type CreateOneGroupMutationOptions = Apollo.BaseMutationOptions<CreateOneGroupMutation, CreateOneGroupMutationVariables>;
export const UpdateOneGroupDocument = gql`
    mutation updateOneGroup($where: GroupWhereUniqueInput!, $data: GroupUpdateInput!) {
  updateOneGroup(where: $where, data: $data) {
    ...Group
  }
}
    ${GroupFragmentDoc}`;

/**
 * __useUpdateOneGroupMutation__
 *
 * To run a mutation, you first call `useUpdateOneGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneGroupMutation, { data, loading, error }] = useUpdateOneGroupMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneGroupMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneGroupMutation, UpdateOneGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneGroupMutation, UpdateOneGroupMutationVariables>(UpdateOneGroupDocument, options);
      }
export type UpdateOneGroupMutationHookResult = ReturnType<typeof useUpdateOneGroupMutation>;
export type UpdateOneGroupMutationResult = Apollo.MutationResult<UpdateOneGroupMutation>;
export type UpdateOneGroupMutationOptions = Apollo.BaseMutationOptions<UpdateOneGroupMutation, UpdateOneGroupMutationVariables>;
export const DeleteOneGroupDocument = gql`
    mutation deleteOneGroup($where: GroupWhereUniqueInput!) {
  deleteOneGroup(where: $where) {
    ...Group
  }
}
    ${GroupFragmentDoc}`;

/**
 * __useDeleteOneGroupMutation__
 *
 * To run a mutation, you first call `useDeleteOneGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneGroupMutation, { data, loading, error }] = useDeleteOneGroupMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneGroupMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneGroupMutation, DeleteOneGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneGroupMutation, DeleteOneGroupMutationVariables>(DeleteOneGroupDocument, options);
      }
export type DeleteOneGroupMutationHookResult = ReturnType<typeof useDeleteOneGroupMutation>;
export type DeleteOneGroupMutationResult = Apollo.MutationResult<DeleteOneGroupMutation>;
export type DeleteOneGroupMutationOptions = Apollo.BaseMutationOptions<DeleteOneGroupMutation, DeleteOneGroupMutationVariables>;
export const DeleteManyGroupDocument = gql`
    mutation deleteManyGroup($where: GroupWhereInput) {
  deleteManyGroup(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyGroupMutation__
 *
 * To run a mutation, you first call `useDeleteManyGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyGroupMutation, { data, loading, error }] = useDeleteManyGroupMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyGroupMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyGroupMutation, DeleteManyGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyGroupMutation, DeleteManyGroupMutationVariables>(DeleteManyGroupDocument, options);
      }
export type DeleteManyGroupMutationHookResult = ReturnType<typeof useDeleteManyGroupMutation>;
export type DeleteManyGroupMutationResult = Apollo.MutationResult<DeleteManyGroupMutation>;
export type DeleteManyGroupMutationOptions = Apollo.BaseMutationOptions<DeleteManyGroupMutation, DeleteManyGroupMutationVariables>;
export const UpdateManyGroupDocument = gql`
    mutation updateManyGroup($where: GroupWhereInput, $data: GroupUpdateManyMutationInput!) {
  updateManyGroup(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyGroupMutation__
 *
 * To run a mutation, you first call `useUpdateManyGroupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyGroupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyGroupMutation, { data, loading, error }] = useUpdateManyGroupMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyGroupMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyGroupMutation, UpdateManyGroupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyGroupMutation, UpdateManyGroupMutationVariables>(UpdateManyGroupDocument, options);
      }
export type UpdateManyGroupMutationHookResult = ReturnType<typeof useUpdateManyGroupMutation>;
export type UpdateManyGroupMutationResult = Apollo.MutationResult<UpdateManyGroupMutation>;
export type UpdateManyGroupMutationOptions = Apollo.BaseMutationOptions<UpdateManyGroupMutation, UpdateManyGroupMutationVariables>;
export const FindUniqueItemDocument = gql`
    query findUniqueItem($where: ItemWhereUniqueInput!) {
  findUniqueItem(where: $where) {
    ...Item
  }
}
    ${ItemFragmentDoc}`;

/**
 * __useFindUniqueItemQuery__
 *
 * To run a query within a React component, call `useFindUniqueItemQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueItemQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueItemQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueItemQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueItemQuery, FindUniqueItemQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueItemQuery, FindUniqueItemQueryVariables>(FindUniqueItemDocument, options);
      }
export function useFindUniqueItemLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueItemQuery, FindUniqueItemQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueItemQuery, FindUniqueItemQueryVariables>(FindUniqueItemDocument, options);
        }
export type FindUniqueItemQueryHookResult = ReturnType<typeof useFindUniqueItemQuery>;
export type FindUniqueItemLazyQueryHookResult = ReturnType<typeof useFindUniqueItemLazyQuery>;
export type FindUniqueItemQueryResult = Apollo.QueryResult<FindUniqueItemQuery, FindUniqueItemQueryVariables>;
export const FindManyItemDocument = gql`
    query findManyItem($where: ItemWhereInput, $orderBy: [ItemOrderByWithRelationInput!], $cursor: ItemWhereUniqueInput, $skip: Int, $take: Int) {
  findManyItem(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Item
  }
}
    ${ItemFragmentDoc}`;

/**
 * __useFindManyItemQuery__
 *
 * To run a query within a React component, call `useFindManyItemQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyItemQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyItemQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyItemQuery(baseOptions?: Apollo.QueryHookOptions<FindManyItemQuery, FindManyItemQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyItemQuery, FindManyItemQueryVariables>(FindManyItemDocument, options);
      }
export function useFindManyItemLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyItemQuery, FindManyItemQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyItemQuery, FindManyItemQueryVariables>(FindManyItemDocument, options);
        }
export type FindManyItemQueryHookResult = ReturnType<typeof useFindManyItemQuery>;
export type FindManyItemLazyQueryHookResult = ReturnType<typeof useFindManyItemLazyQuery>;
export type FindManyItemQueryResult = Apollo.QueryResult<FindManyItemQuery, FindManyItemQueryVariables>;
export const FindManyItemCountDocument = gql`
    query findManyItemCount($where: ItemWhereInput, $orderBy: [ItemOrderByWithRelationInput!], $cursor: ItemWhereUniqueInput, $skip: Int, $take: Int) {
  findManyItemCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyItemCountQuery__
 *
 * To run a query within a React component, call `useFindManyItemCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyItemCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyItemCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyItemCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyItemCountQuery, FindManyItemCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyItemCountQuery, FindManyItemCountQueryVariables>(FindManyItemCountDocument, options);
      }
export function useFindManyItemCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyItemCountQuery, FindManyItemCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyItemCountQuery, FindManyItemCountQueryVariables>(FindManyItemCountDocument, options);
        }
export type FindManyItemCountQueryHookResult = ReturnType<typeof useFindManyItemCountQuery>;
export type FindManyItemCountLazyQueryHookResult = ReturnType<typeof useFindManyItemCountLazyQuery>;
export type FindManyItemCountQueryResult = Apollo.QueryResult<FindManyItemCountQuery, FindManyItemCountQueryVariables>;
export const CreateOneItemDocument = gql`
    mutation createOneItem($data: ItemCreateInput!) {
  createOneItem(data: $data) {
    ...Item
  }
}
    ${ItemFragmentDoc}`;

/**
 * __useCreateOneItemMutation__
 *
 * To run a mutation, you first call `useCreateOneItemMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneItemMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneItemMutation, { data, loading, error }] = useCreateOneItemMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneItemMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneItemMutation, CreateOneItemMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneItemMutation, CreateOneItemMutationVariables>(CreateOneItemDocument, options);
      }
export type CreateOneItemMutationHookResult = ReturnType<typeof useCreateOneItemMutation>;
export type CreateOneItemMutationResult = Apollo.MutationResult<CreateOneItemMutation>;
export type CreateOneItemMutationOptions = Apollo.BaseMutationOptions<CreateOneItemMutation, CreateOneItemMutationVariables>;
export const UpdateOneItemDocument = gql`
    mutation updateOneItem($where: ItemWhereUniqueInput!, $data: ItemUpdateInput!) {
  updateOneItem(where: $where, data: $data) {
    ...Item
  }
}
    ${ItemFragmentDoc}`;

/**
 * __useUpdateOneItemMutation__
 *
 * To run a mutation, you first call `useUpdateOneItemMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneItemMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneItemMutation, { data, loading, error }] = useUpdateOneItemMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneItemMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneItemMutation, UpdateOneItemMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneItemMutation, UpdateOneItemMutationVariables>(UpdateOneItemDocument, options);
      }
export type UpdateOneItemMutationHookResult = ReturnType<typeof useUpdateOneItemMutation>;
export type UpdateOneItemMutationResult = Apollo.MutationResult<UpdateOneItemMutation>;
export type UpdateOneItemMutationOptions = Apollo.BaseMutationOptions<UpdateOneItemMutation, UpdateOneItemMutationVariables>;
export const DeleteOneItemDocument = gql`
    mutation deleteOneItem($where: ItemWhereUniqueInput!) {
  deleteOneItem(where: $where) {
    ...Item
  }
}
    ${ItemFragmentDoc}`;

/**
 * __useDeleteOneItemMutation__
 *
 * To run a mutation, you first call `useDeleteOneItemMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneItemMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneItemMutation, { data, loading, error }] = useDeleteOneItemMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneItemMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneItemMutation, DeleteOneItemMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneItemMutation, DeleteOneItemMutationVariables>(DeleteOneItemDocument, options);
      }
export type DeleteOneItemMutationHookResult = ReturnType<typeof useDeleteOneItemMutation>;
export type DeleteOneItemMutationResult = Apollo.MutationResult<DeleteOneItemMutation>;
export type DeleteOneItemMutationOptions = Apollo.BaseMutationOptions<DeleteOneItemMutation, DeleteOneItemMutationVariables>;
export const DeleteManyItemDocument = gql`
    mutation deleteManyItem($where: ItemWhereInput) {
  deleteManyItem(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyItemMutation__
 *
 * To run a mutation, you first call `useDeleteManyItemMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyItemMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyItemMutation, { data, loading, error }] = useDeleteManyItemMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyItemMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyItemMutation, DeleteManyItemMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyItemMutation, DeleteManyItemMutationVariables>(DeleteManyItemDocument, options);
      }
export type DeleteManyItemMutationHookResult = ReturnType<typeof useDeleteManyItemMutation>;
export type DeleteManyItemMutationResult = Apollo.MutationResult<DeleteManyItemMutation>;
export type DeleteManyItemMutationOptions = Apollo.BaseMutationOptions<DeleteManyItemMutation, DeleteManyItemMutationVariables>;
export const UpdateManyItemDocument = gql`
    mutation updateManyItem($where: ItemWhereInput, $data: ItemUpdateManyMutationInput!) {
  updateManyItem(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyItemMutation__
 *
 * To run a mutation, you first call `useUpdateManyItemMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyItemMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyItemMutation, { data, loading, error }] = useUpdateManyItemMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyItemMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyItemMutation, UpdateManyItemMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyItemMutation, UpdateManyItemMutationVariables>(UpdateManyItemDocument, options);
      }
export type UpdateManyItemMutationHookResult = ReturnType<typeof useUpdateManyItemMutation>;
export type UpdateManyItemMutationResult = Apollo.MutationResult<UpdateManyItemMutation>;
export type UpdateManyItemMutationOptions = Apollo.BaseMutationOptions<UpdateManyItemMutation, UpdateManyItemMutationVariables>;
export const FindUniqueLinkDocument = gql`
    query findUniqueLink($where: LinkWhereUniqueInput!) {
  findUniqueLink(where: $where) {
    ...Link
  }
}
    ${LinkFragmentDoc}`;

/**
 * __useFindUniqueLinkQuery__
 *
 * To run a query within a React component, call `useFindUniqueLinkQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueLinkQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueLinkQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueLinkQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueLinkQuery, FindUniqueLinkQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueLinkQuery, FindUniqueLinkQueryVariables>(FindUniqueLinkDocument, options);
      }
export function useFindUniqueLinkLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueLinkQuery, FindUniqueLinkQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueLinkQuery, FindUniqueLinkQueryVariables>(FindUniqueLinkDocument, options);
        }
export type FindUniqueLinkQueryHookResult = ReturnType<typeof useFindUniqueLinkQuery>;
export type FindUniqueLinkLazyQueryHookResult = ReturnType<typeof useFindUniqueLinkLazyQuery>;
export type FindUniqueLinkQueryResult = Apollo.QueryResult<FindUniqueLinkQuery, FindUniqueLinkQueryVariables>;
export const FindManyLinkDocument = gql`
    query findManyLink($where: LinkWhereInput, $orderBy: [LinkOrderByWithRelationInput!], $cursor: LinkWhereUniqueInput, $skip: Int, $take: Int) {
  findManyLink(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Link
  }
}
    ${LinkFragmentDoc}`;

/**
 * __useFindManyLinkQuery__
 *
 * To run a query within a React component, call `useFindManyLinkQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyLinkQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyLinkQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyLinkQuery(baseOptions?: Apollo.QueryHookOptions<FindManyLinkQuery, FindManyLinkQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyLinkQuery, FindManyLinkQueryVariables>(FindManyLinkDocument, options);
      }
export function useFindManyLinkLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyLinkQuery, FindManyLinkQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyLinkQuery, FindManyLinkQueryVariables>(FindManyLinkDocument, options);
        }
export type FindManyLinkQueryHookResult = ReturnType<typeof useFindManyLinkQuery>;
export type FindManyLinkLazyQueryHookResult = ReturnType<typeof useFindManyLinkLazyQuery>;
export type FindManyLinkQueryResult = Apollo.QueryResult<FindManyLinkQuery, FindManyLinkQueryVariables>;
export const FindManyLinkCountDocument = gql`
    query findManyLinkCount($where: LinkWhereInput, $orderBy: [LinkOrderByWithRelationInput!], $cursor: LinkWhereUniqueInput, $skip: Int, $take: Int) {
  findManyLinkCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyLinkCountQuery__
 *
 * To run a query within a React component, call `useFindManyLinkCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyLinkCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyLinkCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyLinkCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyLinkCountQuery, FindManyLinkCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyLinkCountQuery, FindManyLinkCountQueryVariables>(FindManyLinkCountDocument, options);
      }
export function useFindManyLinkCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyLinkCountQuery, FindManyLinkCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyLinkCountQuery, FindManyLinkCountQueryVariables>(FindManyLinkCountDocument, options);
        }
export type FindManyLinkCountQueryHookResult = ReturnType<typeof useFindManyLinkCountQuery>;
export type FindManyLinkCountLazyQueryHookResult = ReturnType<typeof useFindManyLinkCountLazyQuery>;
export type FindManyLinkCountQueryResult = Apollo.QueryResult<FindManyLinkCountQuery, FindManyLinkCountQueryVariables>;
export const CreateOneLinkDocument = gql`
    mutation createOneLink($data: LinkCreateInput!) {
  createOneLink(data: $data) {
    ...Link
  }
}
    ${LinkFragmentDoc}`;

/**
 * __useCreateOneLinkMutation__
 *
 * To run a mutation, you first call `useCreateOneLinkMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneLinkMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneLinkMutation, { data, loading, error }] = useCreateOneLinkMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneLinkMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneLinkMutation, CreateOneLinkMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneLinkMutation, CreateOneLinkMutationVariables>(CreateOneLinkDocument, options);
      }
export type CreateOneLinkMutationHookResult = ReturnType<typeof useCreateOneLinkMutation>;
export type CreateOneLinkMutationResult = Apollo.MutationResult<CreateOneLinkMutation>;
export type CreateOneLinkMutationOptions = Apollo.BaseMutationOptions<CreateOneLinkMutation, CreateOneLinkMutationVariables>;
export const UpdateOneLinkDocument = gql`
    mutation updateOneLink($where: LinkWhereUniqueInput!, $data: LinkUpdateInput!) {
  updateOneLink(where: $where, data: $data) {
    ...Link
  }
}
    ${LinkFragmentDoc}`;

/**
 * __useUpdateOneLinkMutation__
 *
 * To run a mutation, you first call `useUpdateOneLinkMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneLinkMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneLinkMutation, { data, loading, error }] = useUpdateOneLinkMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneLinkMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneLinkMutation, UpdateOneLinkMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneLinkMutation, UpdateOneLinkMutationVariables>(UpdateOneLinkDocument, options);
      }
export type UpdateOneLinkMutationHookResult = ReturnType<typeof useUpdateOneLinkMutation>;
export type UpdateOneLinkMutationResult = Apollo.MutationResult<UpdateOneLinkMutation>;
export type UpdateOneLinkMutationOptions = Apollo.BaseMutationOptions<UpdateOneLinkMutation, UpdateOneLinkMutationVariables>;
export const DeleteOneLinkDocument = gql`
    mutation deleteOneLink($where: LinkWhereUniqueInput!) {
  deleteOneLink(where: $where) {
    ...Link
  }
}
    ${LinkFragmentDoc}`;

/**
 * __useDeleteOneLinkMutation__
 *
 * To run a mutation, you first call `useDeleteOneLinkMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneLinkMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneLinkMutation, { data, loading, error }] = useDeleteOneLinkMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneLinkMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneLinkMutation, DeleteOneLinkMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneLinkMutation, DeleteOneLinkMutationVariables>(DeleteOneLinkDocument, options);
      }
export type DeleteOneLinkMutationHookResult = ReturnType<typeof useDeleteOneLinkMutation>;
export type DeleteOneLinkMutationResult = Apollo.MutationResult<DeleteOneLinkMutation>;
export type DeleteOneLinkMutationOptions = Apollo.BaseMutationOptions<DeleteOneLinkMutation, DeleteOneLinkMutationVariables>;
export const DeleteManyLinkDocument = gql`
    mutation deleteManyLink($where: LinkWhereInput) {
  deleteManyLink(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyLinkMutation__
 *
 * To run a mutation, you first call `useDeleteManyLinkMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyLinkMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyLinkMutation, { data, loading, error }] = useDeleteManyLinkMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyLinkMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyLinkMutation, DeleteManyLinkMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyLinkMutation, DeleteManyLinkMutationVariables>(DeleteManyLinkDocument, options);
      }
export type DeleteManyLinkMutationHookResult = ReturnType<typeof useDeleteManyLinkMutation>;
export type DeleteManyLinkMutationResult = Apollo.MutationResult<DeleteManyLinkMutation>;
export type DeleteManyLinkMutationOptions = Apollo.BaseMutationOptions<DeleteManyLinkMutation, DeleteManyLinkMutationVariables>;
export const UpdateManyLinkDocument = gql`
    mutation updateManyLink($where: LinkWhereInput, $data: LinkUpdateManyMutationInput!) {
  updateManyLink(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyLinkMutation__
 *
 * To run a mutation, you first call `useUpdateManyLinkMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyLinkMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyLinkMutation, { data, loading, error }] = useUpdateManyLinkMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyLinkMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyLinkMutation, UpdateManyLinkMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyLinkMutation, UpdateManyLinkMutationVariables>(UpdateManyLinkDocument, options);
      }
export type UpdateManyLinkMutationHookResult = ReturnType<typeof useUpdateManyLinkMutation>;
export type UpdateManyLinkMutationResult = Apollo.MutationResult<UpdateManyLinkMutation>;
export type UpdateManyLinkMutationOptions = Apollo.BaseMutationOptions<UpdateManyLinkMutation, UpdateManyLinkMutationVariables>;
export const FindUniqueLoginTokenDocument = gql`
    query findUniqueLoginToken($where: LoginTokenWhereUniqueInput!) {
  findUniqueLoginToken(where: $where) {
    ...LoginToken
  }
}
    ${LoginTokenFragmentDoc}`;

/**
 * __useFindUniqueLoginTokenQuery__
 *
 * To run a query within a React component, call `useFindUniqueLoginTokenQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueLoginTokenQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueLoginTokenQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueLoginTokenQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueLoginTokenQuery, FindUniqueLoginTokenQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueLoginTokenQuery, FindUniqueLoginTokenQueryVariables>(FindUniqueLoginTokenDocument, options);
      }
export function useFindUniqueLoginTokenLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueLoginTokenQuery, FindUniqueLoginTokenQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueLoginTokenQuery, FindUniqueLoginTokenQueryVariables>(FindUniqueLoginTokenDocument, options);
        }
export type FindUniqueLoginTokenQueryHookResult = ReturnType<typeof useFindUniqueLoginTokenQuery>;
export type FindUniqueLoginTokenLazyQueryHookResult = ReturnType<typeof useFindUniqueLoginTokenLazyQuery>;
export type FindUniqueLoginTokenQueryResult = Apollo.QueryResult<FindUniqueLoginTokenQuery, FindUniqueLoginTokenQueryVariables>;
export const FindManyLoginTokenDocument = gql`
    query findManyLoginToken($where: LoginTokenWhereInput, $orderBy: [LoginTokenOrderByWithRelationInput!], $cursor: LoginTokenWhereUniqueInput, $skip: Int, $take: Int) {
  findManyLoginToken(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...LoginToken
  }
}
    ${LoginTokenFragmentDoc}`;

/**
 * __useFindManyLoginTokenQuery__
 *
 * To run a query within a React component, call `useFindManyLoginTokenQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyLoginTokenQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyLoginTokenQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyLoginTokenQuery(baseOptions?: Apollo.QueryHookOptions<FindManyLoginTokenQuery, FindManyLoginTokenQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyLoginTokenQuery, FindManyLoginTokenQueryVariables>(FindManyLoginTokenDocument, options);
      }
export function useFindManyLoginTokenLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyLoginTokenQuery, FindManyLoginTokenQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyLoginTokenQuery, FindManyLoginTokenQueryVariables>(FindManyLoginTokenDocument, options);
        }
export type FindManyLoginTokenQueryHookResult = ReturnType<typeof useFindManyLoginTokenQuery>;
export type FindManyLoginTokenLazyQueryHookResult = ReturnType<typeof useFindManyLoginTokenLazyQuery>;
export type FindManyLoginTokenQueryResult = Apollo.QueryResult<FindManyLoginTokenQuery, FindManyLoginTokenQueryVariables>;
export const FindManyLoginTokenCountDocument = gql`
    query findManyLoginTokenCount($where: LoginTokenWhereInput, $orderBy: [LoginTokenOrderByWithRelationInput!], $cursor: LoginTokenWhereUniqueInput, $skip: Int, $take: Int) {
  findManyLoginTokenCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyLoginTokenCountQuery__
 *
 * To run a query within a React component, call `useFindManyLoginTokenCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyLoginTokenCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyLoginTokenCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyLoginTokenCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyLoginTokenCountQuery, FindManyLoginTokenCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyLoginTokenCountQuery, FindManyLoginTokenCountQueryVariables>(FindManyLoginTokenCountDocument, options);
      }
export function useFindManyLoginTokenCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyLoginTokenCountQuery, FindManyLoginTokenCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyLoginTokenCountQuery, FindManyLoginTokenCountQueryVariables>(FindManyLoginTokenCountDocument, options);
        }
export type FindManyLoginTokenCountQueryHookResult = ReturnType<typeof useFindManyLoginTokenCountQuery>;
export type FindManyLoginTokenCountLazyQueryHookResult = ReturnType<typeof useFindManyLoginTokenCountLazyQuery>;
export type FindManyLoginTokenCountQueryResult = Apollo.QueryResult<FindManyLoginTokenCountQuery, FindManyLoginTokenCountQueryVariables>;
export const CreateOneLoginTokenDocument = gql`
    mutation createOneLoginToken($data: LoginTokenCreateInput!) {
  createOneLoginToken(data: $data) {
    ...LoginToken
  }
}
    ${LoginTokenFragmentDoc}`;

/**
 * __useCreateOneLoginTokenMutation__
 *
 * To run a mutation, you first call `useCreateOneLoginTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneLoginTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneLoginTokenMutation, { data, loading, error }] = useCreateOneLoginTokenMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneLoginTokenMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneLoginTokenMutation, CreateOneLoginTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneLoginTokenMutation, CreateOneLoginTokenMutationVariables>(CreateOneLoginTokenDocument, options);
      }
export type CreateOneLoginTokenMutationHookResult = ReturnType<typeof useCreateOneLoginTokenMutation>;
export type CreateOneLoginTokenMutationResult = Apollo.MutationResult<CreateOneLoginTokenMutation>;
export type CreateOneLoginTokenMutationOptions = Apollo.BaseMutationOptions<CreateOneLoginTokenMutation, CreateOneLoginTokenMutationVariables>;
export const UpdateOneLoginTokenDocument = gql`
    mutation updateOneLoginToken($where: LoginTokenWhereUniqueInput!, $data: LoginTokenUpdateInput!) {
  updateOneLoginToken(where: $where, data: $data) {
    ...LoginToken
  }
}
    ${LoginTokenFragmentDoc}`;

/**
 * __useUpdateOneLoginTokenMutation__
 *
 * To run a mutation, you first call `useUpdateOneLoginTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneLoginTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneLoginTokenMutation, { data, loading, error }] = useUpdateOneLoginTokenMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneLoginTokenMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneLoginTokenMutation, UpdateOneLoginTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneLoginTokenMutation, UpdateOneLoginTokenMutationVariables>(UpdateOneLoginTokenDocument, options);
      }
export type UpdateOneLoginTokenMutationHookResult = ReturnType<typeof useUpdateOneLoginTokenMutation>;
export type UpdateOneLoginTokenMutationResult = Apollo.MutationResult<UpdateOneLoginTokenMutation>;
export type UpdateOneLoginTokenMutationOptions = Apollo.BaseMutationOptions<UpdateOneLoginTokenMutation, UpdateOneLoginTokenMutationVariables>;
export const DeleteOneLoginTokenDocument = gql`
    mutation deleteOneLoginToken($where: LoginTokenWhereUniqueInput!) {
  deleteOneLoginToken(where: $where) {
    ...LoginToken
  }
}
    ${LoginTokenFragmentDoc}`;

/**
 * __useDeleteOneLoginTokenMutation__
 *
 * To run a mutation, you first call `useDeleteOneLoginTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneLoginTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneLoginTokenMutation, { data, loading, error }] = useDeleteOneLoginTokenMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneLoginTokenMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneLoginTokenMutation, DeleteOneLoginTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneLoginTokenMutation, DeleteOneLoginTokenMutationVariables>(DeleteOneLoginTokenDocument, options);
      }
export type DeleteOneLoginTokenMutationHookResult = ReturnType<typeof useDeleteOneLoginTokenMutation>;
export type DeleteOneLoginTokenMutationResult = Apollo.MutationResult<DeleteOneLoginTokenMutation>;
export type DeleteOneLoginTokenMutationOptions = Apollo.BaseMutationOptions<DeleteOneLoginTokenMutation, DeleteOneLoginTokenMutationVariables>;
export const DeleteManyLoginTokenDocument = gql`
    mutation deleteManyLoginToken($where: LoginTokenWhereInput) {
  deleteManyLoginToken(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyLoginTokenMutation__
 *
 * To run a mutation, you first call `useDeleteManyLoginTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyLoginTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyLoginTokenMutation, { data, loading, error }] = useDeleteManyLoginTokenMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyLoginTokenMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyLoginTokenMutation, DeleteManyLoginTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyLoginTokenMutation, DeleteManyLoginTokenMutationVariables>(DeleteManyLoginTokenDocument, options);
      }
export type DeleteManyLoginTokenMutationHookResult = ReturnType<typeof useDeleteManyLoginTokenMutation>;
export type DeleteManyLoginTokenMutationResult = Apollo.MutationResult<DeleteManyLoginTokenMutation>;
export type DeleteManyLoginTokenMutationOptions = Apollo.BaseMutationOptions<DeleteManyLoginTokenMutation, DeleteManyLoginTokenMutationVariables>;
export const UpdateManyLoginTokenDocument = gql`
    mutation updateManyLoginToken($where: LoginTokenWhereInput, $data: LoginTokenUpdateManyMutationInput!) {
  updateManyLoginToken(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyLoginTokenMutation__
 *
 * To run a mutation, you first call `useUpdateManyLoginTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyLoginTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyLoginTokenMutation, { data, loading, error }] = useUpdateManyLoginTokenMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyLoginTokenMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyLoginTokenMutation, UpdateManyLoginTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyLoginTokenMutation, UpdateManyLoginTokenMutationVariables>(UpdateManyLoginTokenDocument, options);
      }
export type UpdateManyLoginTokenMutationHookResult = ReturnType<typeof useUpdateManyLoginTokenMutation>;
export type UpdateManyLoginTokenMutationResult = Apollo.MutationResult<UpdateManyLoginTokenMutation>;
export type UpdateManyLoginTokenMutationOptions = Apollo.BaseMutationOptions<UpdateManyLoginTokenMutation, UpdateManyLoginTokenMutationVariables>;
export const FindUniqueNotificationDocument = gql`
    query findUniqueNotification($where: NotificationWhereUniqueInput!) {
  findUniqueNotification(where: $where) {
    ...Notification
  }
}
    ${NotificationFragmentDoc}`;

/**
 * __useFindUniqueNotificationQuery__
 *
 * To run a query within a React component, call `useFindUniqueNotificationQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueNotificationQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueNotificationQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueNotificationQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueNotificationQuery, FindUniqueNotificationQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueNotificationQuery, FindUniqueNotificationQueryVariables>(FindUniqueNotificationDocument, options);
      }
export function useFindUniqueNotificationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueNotificationQuery, FindUniqueNotificationQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueNotificationQuery, FindUniqueNotificationQueryVariables>(FindUniqueNotificationDocument, options);
        }
export type FindUniqueNotificationQueryHookResult = ReturnType<typeof useFindUniqueNotificationQuery>;
export type FindUniqueNotificationLazyQueryHookResult = ReturnType<typeof useFindUniqueNotificationLazyQuery>;
export type FindUniqueNotificationQueryResult = Apollo.QueryResult<FindUniqueNotificationQuery, FindUniqueNotificationQueryVariables>;
export const FindManyNotificationDocument = gql`
    query findManyNotification($where: NotificationWhereInput, $orderBy: [NotificationOrderByWithRelationInput!], $cursor: NotificationWhereUniqueInput, $skip: Int, $take: Int) {
  findManyNotification(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Notification
  }
}
    ${NotificationFragmentDoc}`;

/**
 * __useFindManyNotificationQuery__
 *
 * To run a query within a React component, call `useFindManyNotificationQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyNotificationQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyNotificationQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyNotificationQuery(baseOptions?: Apollo.QueryHookOptions<FindManyNotificationQuery, FindManyNotificationQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyNotificationQuery, FindManyNotificationQueryVariables>(FindManyNotificationDocument, options);
      }
export function useFindManyNotificationLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyNotificationQuery, FindManyNotificationQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyNotificationQuery, FindManyNotificationQueryVariables>(FindManyNotificationDocument, options);
        }
export type FindManyNotificationQueryHookResult = ReturnType<typeof useFindManyNotificationQuery>;
export type FindManyNotificationLazyQueryHookResult = ReturnType<typeof useFindManyNotificationLazyQuery>;
export type FindManyNotificationQueryResult = Apollo.QueryResult<FindManyNotificationQuery, FindManyNotificationQueryVariables>;
export const FindManyNotificationCountDocument = gql`
    query findManyNotificationCount($where: NotificationWhereInput, $orderBy: [NotificationOrderByWithRelationInput!], $cursor: NotificationWhereUniqueInput, $skip: Int, $take: Int) {
  findManyNotificationCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyNotificationCountQuery__
 *
 * To run a query within a React component, call `useFindManyNotificationCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyNotificationCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyNotificationCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyNotificationCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyNotificationCountQuery, FindManyNotificationCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyNotificationCountQuery, FindManyNotificationCountQueryVariables>(FindManyNotificationCountDocument, options);
      }
export function useFindManyNotificationCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyNotificationCountQuery, FindManyNotificationCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyNotificationCountQuery, FindManyNotificationCountQueryVariables>(FindManyNotificationCountDocument, options);
        }
export type FindManyNotificationCountQueryHookResult = ReturnType<typeof useFindManyNotificationCountQuery>;
export type FindManyNotificationCountLazyQueryHookResult = ReturnType<typeof useFindManyNotificationCountLazyQuery>;
export type FindManyNotificationCountQueryResult = Apollo.QueryResult<FindManyNotificationCountQuery, FindManyNotificationCountQueryVariables>;
export const CreateOneNotificationDocument = gql`
    mutation createOneNotification($data: NotificationCreateInput!) {
  createOneNotification(data: $data) {
    ...Notification
  }
}
    ${NotificationFragmentDoc}`;

/**
 * __useCreateOneNotificationMutation__
 *
 * To run a mutation, you first call `useCreateOneNotificationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneNotificationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneNotificationMutation, { data, loading, error }] = useCreateOneNotificationMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneNotificationMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneNotificationMutation, CreateOneNotificationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneNotificationMutation, CreateOneNotificationMutationVariables>(CreateOneNotificationDocument, options);
      }
export type CreateOneNotificationMutationHookResult = ReturnType<typeof useCreateOneNotificationMutation>;
export type CreateOneNotificationMutationResult = Apollo.MutationResult<CreateOneNotificationMutation>;
export type CreateOneNotificationMutationOptions = Apollo.BaseMutationOptions<CreateOneNotificationMutation, CreateOneNotificationMutationVariables>;
export const UpdateOneNotificationDocument = gql`
    mutation updateOneNotification($where: NotificationWhereUniqueInput!, $data: NotificationUpdateInput!) {
  updateOneNotification(where: $where, data: $data) {
    ...Notification
  }
}
    ${NotificationFragmentDoc}`;

/**
 * __useUpdateOneNotificationMutation__
 *
 * To run a mutation, you first call `useUpdateOneNotificationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneNotificationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneNotificationMutation, { data, loading, error }] = useUpdateOneNotificationMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneNotificationMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneNotificationMutation, UpdateOneNotificationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneNotificationMutation, UpdateOneNotificationMutationVariables>(UpdateOneNotificationDocument, options);
      }
export type UpdateOneNotificationMutationHookResult = ReturnType<typeof useUpdateOneNotificationMutation>;
export type UpdateOneNotificationMutationResult = Apollo.MutationResult<UpdateOneNotificationMutation>;
export type UpdateOneNotificationMutationOptions = Apollo.BaseMutationOptions<UpdateOneNotificationMutation, UpdateOneNotificationMutationVariables>;
export const DeleteOneNotificationDocument = gql`
    mutation deleteOneNotification($where: NotificationWhereUniqueInput!) {
  deleteOneNotification(where: $where) {
    ...Notification
  }
}
    ${NotificationFragmentDoc}`;

/**
 * __useDeleteOneNotificationMutation__
 *
 * To run a mutation, you first call `useDeleteOneNotificationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneNotificationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneNotificationMutation, { data, loading, error }] = useDeleteOneNotificationMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneNotificationMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneNotificationMutation, DeleteOneNotificationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneNotificationMutation, DeleteOneNotificationMutationVariables>(DeleteOneNotificationDocument, options);
      }
export type DeleteOneNotificationMutationHookResult = ReturnType<typeof useDeleteOneNotificationMutation>;
export type DeleteOneNotificationMutationResult = Apollo.MutationResult<DeleteOneNotificationMutation>;
export type DeleteOneNotificationMutationOptions = Apollo.BaseMutationOptions<DeleteOneNotificationMutation, DeleteOneNotificationMutationVariables>;
export const DeleteManyNotificationDocument = gql`
    mutation deleteManyNotification($where: NotificationWhereInput) {
  deleteManyNotification(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyNotificationMutation__
 *
 * To run a mutation, you first call `useDeleteManyNotificationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyNotificationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyNotificationMutation, { data, loading, error }] = useDeleteManyNotificationMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyNotificationMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyNotificationMutation, DeleteManyNotificationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyNotificationMutation, DeleteManyNotificationMutationVariables>(DeleteManyNotificationDocument, options);
      }
export type DeleteManyNotificationMutationHookResult = ReturnType<typeof useDeleteManyNotificationMutation>;
export type DeleteManyNotificationMutationResult = Apollo.MutationResult<DeleteManyNotificationMutation>;
export type DeleteManyNotificationMutationOptions = Apollo.BaseMutationOptions<DeleteManyNotificationMutation, DeleteManyNotificationMutationVariables>;
export const UpdateManyNotificationDocument = gql`
    mutation updateManyNotification($where: NotificationWhereInput, $data: NotificationUpdateManyMutationInput!) {
  updateManyNotification(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyNotificationMutation__
 *
 * To run a mutation, you first call `useUpdateManyNotificationMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyNotificationMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyNotificationMutation, { data, loading, error }] = useUpdateManyNotificationMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyNotificationMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyNotificationMutation, UpdateManyNotificationMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyNotificationMutation, UpdateManyNotificationMutationVariables>(UpdateManyNotificationDocument, options);
      }
export type UpdateManyNotificationMutationHookResult = ReturnType<typeof useUpdateManyNotificationMutation>;
export type UpdateManyNotificationMutationResult = Apollo.MutationResult<UpdateManyNotificationMutation>;
export type UpdateManyNotificationMutationOptions = Apollo.BaseMutationOptions<UpdateManyNotificationMutation, UpdateManyNotificationMutationVariables>;
export const FindUniqueOrderDocument = gql`
    query findUniqueOrder($where: OrderWhereUniqueInput!) {
  findUniqueOrder(where: $where) {
    ...Order
  }
}
    ${OrderFragmentDoc}`;

/**
 * __useFindUniqueOrderQuery__
 *
 * To run a query within a React component, call `useFindUniqueOrderQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueOrderQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueOrderQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueOrderQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueOrderQuery, FindUniqueOrderQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueOrderQuery, FindUniqueOrderQueryVariables>(FindUniqueOrderDocument, options);
      }
export function useFindUniqueOrderLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueOrderQuery, FindUniqueOrderQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueOrderQuery, FindUniqueOrderQueryVariables>(FindUniqueOrderDocument, options);
        }
export type FindUniqueOrderQueryHookResult = ReturnType<typeof useFindUniqueOrderQuery>;
export type FindUniqueOrderLazyQueryHookResult = ReturnType<typeof useFindUniqueOrderLazyQuery>;
export type FindUniqueOrderQueryResult = Apollo.QueryResult<FindUniqueOrderQuery, FindUniqueOrderQueryVariables>;
export const FindManyOrderDocument = gql`
    query findManyOrder($where: OrderWhereInput, $orderBy: [OrderOrderByWithRelationInput!], $cursor: OrderWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrder(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Order
  }
}
    ${OrderFragmentDoc}`;

/**
 * __useFindManyOrderQuery__
 *
 * To run a query within a React component, call `useFindManyOrderQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderQuery, FindManyOrderQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderQuery, FindManyOrderQueryVariables>(FindManyOrderDocument, options);
      }
export function useFindManyOrderLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderQuery, FindManyOrderQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderQuery, FindManyOrderQueryVariables>(FindManyOrderDocument, options);
        }
export type FindManyOrderQueryHookResult = ReturnType<typeof useFindManyOrderQuery>;
export type FindManyOrderLazyQueryHookResult = ReturnType<typeof useFindManyOrderLazyQuery>;
export type FindManyOrderQueryResult = Apollo.QueryResult<FindManyOrderQuery, FindManyOrderQueryVariables>;
export const FindManyOrderCountDocument = gql`
    query findManyOrderCount($where: OrderWhereInput, $orderBy: [OrderOrderByWithRelationInput!], $cursor: OrderWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyOrderCountQuery__
 *
 * To run a query within a React component, call `useFindManyOrderCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderCountQuery, FindManyOrderCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderCountQuery, FindManyOrderCountQueryVariables>(FindManyOrderCountDocument, options);
      }
export function useFindManyOrderCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderCountQuery, FindManyOrderCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderCountQuery, FindManyOrderCountQueryVariables>(FindManyOrderCountDocument, options);
        }
export type FindManyOrderCountQueryHookResult = ReturnType<typeof useFindManyOrderCountQuery>;
export type FindManyOrderCountLazyQueryHookResult = ReturnType<typeof useFindManyOrderCountLazyQuery>;
export type FindManyOrderCountQueryResult = Apollo.QueryResult<FindManyOrderCountQuery, FindManyOrderCountQueryVariables>;
export const CreateOneOrderDocument = gql`
    mutation createOneOrder($data: OrderCreateInput!) {
  createOneOrder(data: $data) {
    ...Order
  }
}
    ${OrderFragmentDoc}`;

/**
 * __useCreateOneOrderMutation__
 *
 * To run a mutation, you first call `useCreateOneOrderMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneOrderMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneOrderMutation, { data, loading, error }] = useCreateOneOrderMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneOrderMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneOrderMutation, CreateOneOrderMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneOrderMutation, CreateOneOrderMutationVariables>(CreateOneOrderDocument, options);
      }
export type CreateOneOrderMutationHookResult = ReturnType<typeof useCreateOneOrderMutation>;
export type CreateOneOrderMutationResult = Apollo.MutationResult<CreateOneOrderMutation>;
export type CreateOneOrderMutationOptions = Apollo.BaseMutationOptions<CreateOneOrderMutation, CreateOneOrderMutationVariables>;
export const UpdateOneOrderDocument = gql`
    mutation updateOneOrder($where: OrderWhereUniqueInput!, $data: OrderUpdateInput!) {
  updateOneOrder(where: $where, data: $data) {
    ...Order
  }
}
    ${OrderFragmentDoc}`;

/**
 * __useUpdateOneOrderMutation__
 *
 * To run a mutation, you first call `useUpdateOneOrderMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneOrderMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneOrderMutation, { data, loading, error }] = useUpdateOneOrderMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneOrderMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneOrderMutation, UpdateOneOrderMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneOrderMutation, UpdateOneOrderMutationVariables>(UpdateOneOrderDocument, options);
      }
export type UpdateOneOrderMutationHookResult = ReturnType<typeof useUpdateOneOrderMutation>;
export type UpdateOneOrderMutationResult = Apollo.MutationResult<UpdateOneOrderMutation>;
export type UpdateOneOrderMutationOptions = Apollo.BaseMutationOptions<UpdateOneOrderMutation, UpdateOneOrderMutationVariables>;
export const DeleteOneOrderDocument = gql`
    mutation deleteOneOrder($where: OrderWhereUniqueInput!) {
  deleteOneOrder(where: $where) {
    ...Order
  }
}
    ${OrderFragmentDoc}`;

/**
 * __useDeleteOneOrderMutation__
 *
 * To run a mutation, you first call `useDeleteOneOrderMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneOrderMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneOrderMutation, { data, loading, error }] = useDeleteOneOrderMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneOrderMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneOrderMutation, DeleteOneOrderMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneOrderMutation, DeleteOneOrderMutationVariables>(DeleteOneOrderDocument, options);
      }
export type DeleteOneOrderMutationHookResult = ReturnType<typeof useDeleteOneOrderMutation>;
export type DeleteOneOrderMutationResult = Apollo.MutationResult<DeleteOneOrderMutation>;
export type DeleteOneOrderMutationOptions = Apollo.BaseMutationOptions<DeleteOneOrderMutation, DeleteOneOrderMutationVariables>;
export const DeleteManyOrderDocument = gql`
    mutation deleteManyOrder($where: OrderWhereInput) {
  deleteManyOrder(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyOrderMutation__
 *
 * To run a mutation, you first call `useDeleteManyOrderMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyOrderMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyOrderMutation, { data, loading, error }] = useDeleteManyOrderMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyOrderMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyOrderMutation, DeleteManyOrderMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyOrderMutation, DeleteManyOrderMutationVariables>(DeleteManyOrderDocument, options);
      }
export type DeleteManyOrderMutationHookResult = ReturnType<typeof useDeleteManyOrderMutation>;
export type DeleteManyOrderMutationResult = Apollo.MutationResult<DeleteManyOrderMutation>;
export type DeleteManyOrderMutationOptions = Apollo.BaseMutationOptions<DeleteManyOrderMutation, DeleteManyOrderMutationVariables>;
export const UpdateManyOrderDocument = gql`
    mutation updateManyOrder($where: OrderWhereInput, $data: OrderUpdateManyMutationInput!) {
  updateManyOrder(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyOrderMutation__
 *
 * To run a mutation, you first call `useUpdateManyOrderMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyOrderMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyOrderMutation, { data, loading, error }] = useUpdateManyOrderMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyOrderMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyOrderMutation, UpdateManyOrderMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyOrderMutation, UpdateManyOrderMutationVariables>(UpdateManyOrderDocument, options);
      }
export type UpdateManyOrderMutationHookResult = ReturnType<typeof useUpdateManyOrderMutation>;
export type UpdateManyOrderMutationResult = Apollo.MutationResult<UpdateManyOrderMutation>;
export type UpdateManyOrderMutationOptions = Apollo.BaseMutationOptions<UpdateManyOrderMutation, UpdateManyOrderMutationVariables>;
export const FindUniqueOrderedAudioDocument = gql`
    query findUniqueOrderedAudio($where: OrderedAudioWhereUniqueInput!) {
  findUniqueOrderedAudio(where: $where) {
    ...OrderedAudio
  }
}
    ${OrderedAudioFragmentDoc}`;

/**
 * __useFindUniqueOrderedAudioQuery__
 *
 * To run a query within a React component, call `useFindUniqueOrderedAudioQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueOrderedAudioQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueOrderedAudioQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueOrderedAudioQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueOrderedAudioQuery, FindUniqueOrderedAudioQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueOrderedAudioQuery, FindUniqueOrderedAudioQueryVariables>(FindUniqueOrderedAudioDocument, options);
      }
export function useFindUniqueOrderedAudioLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueOrderedAudioQuery, FindUniqueOrderedAudioQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueOrderedAudioQuery, FindUniqueOrderedAudioQueryVariables>(FindUniqueOrderedAudioDocument, options);
        }
export type FindUniqueOrderedAudioQueryHookResult = ReturnType<typeof useFindUniqueOrderedAudioQuery>;
export type FindUniqueOrderedAudioLazyQueryHookResult = ReturnType<typeof useFindUniqueOrderedAudioLazyQuery>;
export type FindUniqueOrderedAudioQueryResult = Apollo.QueryResult<FindUniqueOrderedAudioQuery, FindUniqueOrderedAudioQueryVariables>;
export const FindManyOrderedAudioDocument = gql`
    query findManyOrderedAudio($where: OrderedAudioWhereInput, $orderBy: [OrderedAudioOrderByWithRelationInput!], $cursor: OrderedAudioWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderedAudio(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...OrderedAudio
  }
}
    ${OrderedAudioFragmentDoc}`;

/**
 * __useFindManyOrderedAudioQuery__
 *
 * To run a query within a React component, call `useFindManyOrderedAudioQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderedAudioQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderedAudioQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderedAudioQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderedAudioQuery, FindManyOrderedAudioQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderedAudioQuery, FindManyOrderedAudioQueryVariables>(FindManyOrderedAudioDocument, options);
      }
export function useFindManyOrderedAudioLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderedAudioQuery, FindManyOrderedAudioQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderedAudioQuery, FindManyOrderedAudioQueryVariables>(FindManyOrderedAudioDocument, options);
        }
export type FindManyOrderedAudioQueryHookResult = ReturnType<typeof useFindManyOrderedAudioQuery>;
export type FindManyOrderedAudioLazyQueryHookResult = ReturnType<typeof useFindManyOrderedAudioLazyQuery>;
export type FindManyOrderedAudioQueryResult = Apollo.QueryResult<FindManyOrderedAudioQuery, FindManyOrderedAudioQueryVariables>;
export const FindManyOrderedAudioCountDocument = gql`
    query findManyOrderedAudioCount($where: OrderedAudioWhereInput, $orderBy: [OrderedAudioOrderByWithRelationInput!], $cursor: OrderedAudioWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderedAudioCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyOrderedAudioCountQuery__
 *
 * To run a query within a React component, call `useFindManyOrderedAudioCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderedAudioCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderedAudioCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderedAudioCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderedAudioCountQuery, FindManyOrderedAudioCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderedAudioCountQuery, FindManyOrderedAudioCountQueryVariables>(FindManyOrderedAudioCountDocument, options);
      }
export function useFindManyOrderedAudioCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderedAudioCountQuery, FindManyOrderedAudioCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderedAudioCountQuery, FindManyOrderedAudioCountQueryVariables>(FindManyOrderedAudioCountDocument, options);
        }
export type FindManyOrderedAudioCountQueryHookResult = ReturnType<typeof useFindManyOrderedAudioCountQuery>;
export type FindManyOrderedAudioCountLazyQueryHookResult = ReturnType<typeof useFindManyOrderedAudioCountLazyQuery>;
export type FindManyOrderedAudioCountQueryResult = Apollo.QueryResult<FindManyOrderedAudioCountQuery, FindManyOrderedAudioCountQueryVariables>;
export const CreateOneOrderedAudioDocument = gql`
    mutation createOneOrderedAudio($data: OrderedAudioCreateInput!) {
  createOneOrderedAudio(data: $data) {
    ...OrderedAudio
  }
}
    ${OrderedAudioFragmentDoc}`;

/**
 * __useCreateOneOrderedAudioMutation__
 *
 * To run a mutation, you first call `useCreateOneOrderedAudioMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneOrderedAudioMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneOrderedAudioMutation, { data, loading, error }] = useCreateOneOrderedAudioMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneOrderedAudioMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneOrderedAudioMutation, CreateOneOrderedAudioMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneOrderedAudioMutation, CreateOneOrderedAudioMutationVariables>(CreateOneOrderedAudioDocument, options);
      }
export type CreateOneOrderedAudioMutationHookResult = ReturnType<typeof useCreateOneOrderedAudioMutation>;
export type CreateOneOrderedAudioMutationResult = Apollo.MutationResult<CreateOneOrderedAudioMutation>;
export type CreateOneOrderedAudioMutationOptions = Apollo.BaseMutationOptions<CreateOneOrderedAudioMutation, CreateOneOrderedAudioMutationVariables>;
export const UpdateOneOrderedAudioDocument = gql`
    mutation updateOneOrderedAudio($where: OrderedAudioWhereUniqueInput!, $data: OrderedAudioUpdateInput!) {
  updateOneOrderedAudio(where: $where, data: $data) {
    ...OrderedAudio
  }
}
    ${OrderedAudioFragmentDoc}`;

/**
 * __useUpdateOneOrderedAudioMutation__
 *
 * To run a mutation, you first call `useUpdateOneOrderedAudioMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneOrderedAudioMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneOrderedAudioMutation, { data, loading, error }] = useUpdateOneOrderedAudioMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneOrderedAudioMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneOrderedAudioMutation, UpdateOneOrderedAudioMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneOrderedAudioMutation, UpdateOneOrderedAudioMutationVariables>(UpdateOneOrderedAudioDocument, options);
      }
export type UpdateOneOrderedAudioMutationHookResult = ReturnType<typeof useUpdateOneOrderedAudioMutation>;
export type UpdateOneOrderedAudioMutationResult = Apollo.MutationResult<UpdateOneOrderedAudioMutation>;
export type UpdateOneOrderedAudioMutationOptions = Apollo.BaseMutationOptions<UpdateOneOrderedAudioMutation, UpdateOneOrderedAudioMutationVariables>;
export const DeleteOneOrderedAudioDocument = gql`
    mutation deleteOneOrderedAudio($where: OrderedAudioWhereUniqueInput!) {
  deleteOneOrderedAudio(where: $where) {
    ...OrderedAudio
  }
}
    ${OrderedAudioFragmentDoc}`;

/**
 * __useDeleteOneOrderedAudioMutation__
 *
 * To run a mutation, you first call `useDeleteOneOrderedAudioMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneOrderedAudioMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneOrderedAudioMutation, { data, loading, error }] = useDeleteOneOrderedAudioMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneOrderedAudioMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneOrderedAudioMutation, DeleteOneOrderedAudioMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneOrderedAudioMutation, DeleteOneOrderedAudioMutationVariables>(DeleteOneOrderedAudioDocument, options);
      }
export type DeleteOneOrderedAudioMutationHookResult = ReturnType<typeof useDeleteOneOrderedAudioMutation>;
export type DeleteOneOrderedAudioMutationResult = Apollo.MutationResult<DeleteOneOrderedAudioMutation>;
export type DeleteOneOrderedAudioMutationOptions = Apollo.BaseMutationOptions<DeleteOneOrderedAudioMutation, DeleteOneOrderedAudioMutationVariables>;
export const DeleteManyOrderedAudioDocument = gql`
    mutation deleteManyOrderedAudio($where: OrderedAudioWhereInput) {
  deleteManyOrderedAudio(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyOrderedAudioMutation__
 *
 * To run a mutation, you first call `useDeleteManyOrderedAudioMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyOrderedAudioMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyOrderedAudioMutation, { data, loading, error }] = useDeleteManyOrderedAudioMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyOrderedAudioMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyOrderedAudioMutation, DeleteManyOrderedAudioMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyOrderedAudioMutation, DeleteManyOrderedAudioMutationVariables>(DeleteManyOrderedAudioDocument, options);
      }
export type DeleteManyOrderedAudioMutationHookResult = ReturnType<typeof useDeleteManyOrderedAudioMutation>;
export type DeleteManyOrderedAudioMutationResult = Apollo.MutationResult<DeleteManyOrderedAudioMutation>;
export type DeleteManyOrderedAudioMutationOptions = Apollo.BaseMutationOptions<DeleteManyOrderedAudioMutation, DeleteManyOrderedAudioMutationVariables>;
export const UpdateManyOrderedAudioDocument = gql`
    mutation updateManyOrderedAudio($where: OrderedAudioWhereInput, $data: OrderedAudioUpdateManyMutationInput!) {
  updateManyOrderedAudio(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyOrderedAudioMutation__
 *
 * To run a mutation, you first call `useUpdateManyOrderedAudioMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyOrderedAudioMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyOrderedAudioMutation, { data, loading, error }] = useUpdateManyOrderedAudioMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyOrderedAudioMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyOrderedAudioMutation, UpdateManyOrderedAudioMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyOrderedAudioMutation, UpdateManyOrderedAudioMutationVariables>(UpdateManyOrderedAudioDocument, options);
      }
export type UpdateManyOrderedAudioMutationHookResult = ReturnType<typeof useUpdateManyOrderedAudioMutation>;
export type UpdateManyOrderedAudioMutationResult = Apollo.MutationResult<UpdateManyOrderedAudioMutation>;
export type UpdateManyOrderedAudioMutationOptions = Apollo.BaseMutationOptions<UpdateManyOrderedAudioMutation, UpdateManyOrderedAudioMutationVariables>;
export const FindUniqueOrderedDocumentDocument = gql`
    query findUniqueOrderedDocument($where: OrderedDocumentWhereUniqueInput!) {
  findUniqueOrderedDocument(where: $where) {
    ...OrderedDocument
  }
}
    ${OrderedDocumentFragmentDoc}`;

/**
 * __useFindUniqueOrderedDocumentQuery__
 *
 * To run a query within a React component, call `useFindUniqueOrderedDocumentQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueOrderedDocumentQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueOrderedDocumentQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueOrderedDocumentQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueOrderedDocumentQuery, FindUniqueOrderedDocumentQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueOrderedDocumentQuery, FindUniqueOrderedDocumentQueryVariables>(FindUniqueOrderedDocumentDocument, options);
      }
export function useFindUniqueOrderedDocumentLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueOrderedDocumentQuery, FindUniqueOrderedDocumentQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueOrderedDocumentQuery, FindUniqueOrderedDocumentQueryVariables>(FindUniqueOrderedDocumentDocument, options);
        }
export type FindUniqueOrderedDocumentQueryHookResult = ReturnType<typeof useFindUniqueOrderedDocumentQuery>;
export type FindUniqueOrderedDocumentLazyQueryHookResult = ReturnType<typeof useFindUniqueOrderedDocumentLazyQuery>;
export type FindUniqueOrderedDocumentQueryResult = Apollo.QueryResult<FindUniqueOrderedDocumentQuery, FindUniqueOrderedDocumentQueryVariables>;
export const FindManyOrderedDocumentDocument = gql`
    query findManyOrderedDocument($where: OrderedDocumentWhereInput, $orderBy: [OrderedDocumentOrderByWithRelationInput!], $cursor: OrderedDocumentWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderedDocument(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...OrderedDocument
  }
}
    ${OrderedDocumentFragmentDoc}`;

/**
 * __useFindManyOrderedDocumentQuery__
 *
 * To run a query within a React component, call `useFindManyOrderedDocumentQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderedDocumentQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderedDocumentQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderedDocumentQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderedDocumentQuery, FindManyOrderedDocumentQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderedDocumentQuery, FindManyOrderedDocumentQueryVariables>(FindManyOrderedDocumentDocument, options);
      }
export function useFindManyOrderedDocumentLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderedDocumentQuery, FindManyOrderedDocumentQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderedDocumentQuery, FindManyOrderedDocumentQueryVariables>(FindManyOrderedDocumentDocument, options);
        }
export type FindManyOrderedDocumentQueryHookResult = ReturnType<typeof useFindManyOrderedDocumentQuery>;
export type FindManyOrderedDocumentLazyQueryHookResult = ReturnType<typeof useFindManyOrderedDocumentLazyQuery>;
export type FindManyOrderedDocumentQueryResult = Apollo.QueryResult<FindManyOrderedDocumentQuery, FindManyOrderedDocumentQueryVariables>;
export const FindManyOrderedDocumentCountDocument = gql`
    query findManyOrderedDocumentCount($where: OrderedDocumentWhereInput, $orderBy: [OrderedDocumentOrderByWithRelationInput!], $cursor: OrderedDocumentWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderedDocumentCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyOrderedDocumentCountQuery__
 *
 * To run a query within a React component, call `useFindManyOrderedDocumentCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderedDocumentCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderedDocumentCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderedDocumentCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderedDocumentCountQuery, FindManyOrderedDocumentCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderedDocumentCountQuery, FindManyOrderedDocumentCountQueryVariables>(FindManyOrderedDocumentCountDocument, options);
      }
export function useFindManyOrderedDocumentCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderedDocumentCountQuery, FindManyOrderedDocumentCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderedDocumentCountQuery, FindManyOrderedDocumentCountQueryVariables>(FindManyOrderedDocumentCountDocument, options);
        }
export type FindManyOrderedDocumentCountQueryHookResult = ReturnType<typeof useFindManyOrderedDocumentCountQuery>;
export type FindManyOrderedDocumentCountLazyQueryHookResult = ReturnType<typeof useFindManyOrderedDocumentCountLazyQuery>;
export type FindManyOrderedDocumentCountQueryResult = Apollo.QueryResult<FindManyOrderedDocumentCountQuery, FindManyOrderedDocumentCountQueryVariables>;
export const CreateOneOrderedDocumentDocument = gql`
    mutation createOneOrderedDocument($data: OrderedDocumentCreateInput!) {
  createOneOrderedDocument(data: $data) {
    ...OrderedDocument
  }
}
    ${OrderedDocumentFragmentDoc}`;

/**
 * __useCreateOneOrderedDocumentMutation__
 *
 * To run a mutation, you first call `useCreateOneOrderedDocumentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneOrderedDocumentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneOrderedDocumentMutation, { data, loading, error }] = useCreateOneOrderedDocumentMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneOrderedDocumentMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneOrderedDocumentMutation, CreateOneOrderedDocumentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneOrderedDocumentMutation, CreateOneOrderedDocumentMutationVariables>(CreateOneOrderedDocumentDocument, options);
      }
export type CreateOneOrderedDocumentMutationHookResult = ReturnType<typeof useCreateOneOrderedDocumentMutation>;
export type CreateOneOrderedDocumentMutationResult = Apollo.MutationResult<CreateOneOrderedDocumentMutation>;
export type CreateOneOrderedDocumentMutationOptions = Apollo.BaseMutationOptions<CreateOneOrderedDocumentMutation, CreateOneOrderedDocumentMutationVariables>;
export const UpdateOneOrderedDocumentDocument = gql`
    mutation updateOneOrderedDocument($where: OrderedDocumentWhereUniqueInput!, $data: OrderedDocumentUpdateInput!) {
  updateOneOrderedDocument(where: $where, data: $data) {
    ...OrderedDocument
  }
}
    ${OrderedDocumentFragmentDoc}`;

/**
 * __useUpdateOneOrderedDocumentMutation__
 *
 * To run a mutation, you first call `useUpdateOneOrderedDocumentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneOrderedDocumentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneOrderedDocumentMutation, { data, loading, error }] = useUpdateOneOrderedDocumentMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneOrderedDocumentMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneOrderedDocumentMutation, UpdateOneOrderedDocumentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneOrderedDocumentMutation, UpdateOneOrderedDocumentMutationVariables>(UpdateOneOrderedDocumentDocument, options);
      }
export type UpdateOneOrderedDocumentMutationHookResult = ReturnType<typeof useUpdateOneOrderedDocumentMutation>;
export type UpdateOneOrderedDocumentMutationResult = Apollo.MutationResult<UpdateOneOrderedDocumentMutation>;
export type UpdateOneOrderedDocumentMutationOptions = Apollo.BaseMutationOptions<UpdateOneOrderedDocumentMutation, UpdateOneOrderedDocumentMutationVariables>;
export const DeleteOneOrderedDocumentDocument = gql`
    mutation deleteOneOrderedDocument($where: OrderedDocumentWhereUniqueInput!) {
  deleteOneOrderedDocument(where: $where) {
    ...OrderedDocument
  }
}
    ${OrderedDocumentFragmentDoc}`;

/**
 * __useDeleteOneOrderedDocumentMutation__
 *
 * To run a mutation, you first call `useDeleteOneOrderedDocumentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneOrderedDocumentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneOrderedDocumentMutation, { data, loading, error }] = useDeleteOneOrderedDocumentMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneOrderedDocumentMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneOrderedDocumentMutation, DeleteOneOrderedDocumentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneOrderedDocumentMutation, DeleteOneOrderedDocumentMutationVariables>(DeleteOneOrderedDocumentDocument, options);
      }
export type DeleteOneOrderedDocumentMutationHookResult = ReturnType<typeof useDeleteOneOrderedDocumentMutation>;
export type DeleteOneOrderedDocumentMutationResult = Apollo.MutationResult<DeleteOneOrderedDocumentMutation>;
export type DeleteOneOrderedDocumentMutationOptions = Apollo.BaseMutationOptions<DeleteOneOrderedDocumentMutation, DeleteOneOrderedDocumentMutationVariables>;
export const DeleteManyOrderedDocumentDocument = gql`
    mutation deleteManyOrderedDocument($where: OrderedDocumentWhereInput) {
  deleteManyOrderedDocument(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyOrderedDocumentMutation__
 *
 * To run a mutation, you first call `useDeleteManyOrderedDocumentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyOrderedDocumentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyOrderedDocumentMutation, { data, loading, error }] = useDeleteManyOrderedDocumentMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyOrderedDocumentMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyOrderedDocumentMutation, DeleteManyOrderedDocumentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyOrderedDocumentMutation, DeleteManyOrderedDocumentMutationVariables>(DeleteManyOrderedDocumentDocument, options);
      }
export type DeleteManyOrderedDocumentMutationHookResult = ReturnType<typeof useDeleteManyOrderedDocumentMutation>;
export type DeleteManyOrderedDocumentMutationResult = Apollo.MutationResult<DeleteManyOrderedDocumentMutation>;
export type DeleteManyOrderedDocumentMutationOptions = Apollo.BaseMutationOptions<DeleteManyOrderedDocumentMutation, DeleteManyOrderedDocumentMutationVariables>;
export const UpdateManyOrderedDocumentDocument = gql`
    mutation updateManyOrderedDocument($where: OrderedDocumentWhereInput, $data: OrderedDocumentUpdateManyMutationInput!) {
  updateManyOrderedDocument(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyOrderedDocumentMutation__
 *
 * To run a mutation, you first call `useUpdateManyOrderedDocumentMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyOrderedDocumentMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyOrderedDocumentMutation, { data, loading, error }] = useUpdateManyOrderedDocumentMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyOrderedDocumentMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyOrderedDocumentMutation, UpdateManyOrderedDocumentMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyOrderedDocumentMutation, UpdateManyOrderedDocumentMutationVariables>(UpdateManyOrderedDocumentDocument, options);
      }
export type UpdateManyOrderedDocumentMutationHookResult = ReturnType<typeof useUpdateManyOrderedDocumentMutation>;
export type UpdateManyOrderedDocumentMutationResult = Apollo.MutationResult<UpdateManyOrderedDocumentMutation>;
export type UpdateManyOrderedDocumentMutationOptions = Apollo.BaseMutationOptions<UpdateManyOrderedDocumentMutation, UpdateManyOrderedDocumentMutationVariables>;
export const FindUniqueOrderedLinkDocument = gql`
    query findUniqueOrderedLink($where: OrderedLinkWhereUniqueInput!) {
  findUniqueOrderedLink(where: $where) {
    ...OrderedLink
  }
}
    ${OrderedLinkFragmentDoc}`;

/**
 * __useFindUniqueOrderedLinkQuery__
 *
 * To run a query within a React component, call `useFindUniqueOrderedLinkQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueOrderedLinkQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueOrderedLinkQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueOrderedLinkQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueOrderedLinkQuery, FindUniqueOrderedLinkQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueOrderedLinkQuery, FindUniqueOrderedLinkQueryVariables>(FindUniqueOrderedLinkDocument, options);
      }
export function useFindUniqueOrderedLinkLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueOrderedLinkQuery, FindUniqueOrderedLinkQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueOrderedLinkQuery, FindUniqueOrderedLinkQueryVariables>(FindUniqueOrderedLinkDocument, options);
        }
export type FindUniqueOrderedLinkQueryHookResult = ReturnType<typeof useFindUniqueOrderedLinkQuery>;
export type FindUniqueOrderedLinkLazyQueryHookResult = ReturnType<typeof useFindUniqueOrderedLinkLazyQuery>;
export type FindUniqueOrderedLinkQueryResult = Apollo.QueryResult<FindUniqueOrderedLinkQuery, FindUniqueOrderedLinkQueryVariables>;
export const FindManyOrderedLinkDocument = gql`
    query findManyOrderedLink($where: OrderedLinkWhereInput, $orderBy: [OrderedLinkOrderByWithRelationInput!], $cursor: OrderedLinkWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderedLink(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...OrderedLink
  }
}
    ${OrderedLinkFragmentDoc}`;

/**
 * __useFindManyOrderedLinkQuery__
 *
 * To run a query within a React component, call `useFindManyOrderedLinkQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderedLinkQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderedLinkQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderedLinkQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderedLinkQuery, FindManyOrderedLinkQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderedLinkQuery, FindManyOrderedLinkQueryVariables>(FindManyOrderedLinkDocument, options);
      }
export function useFindManyOrderedLinkLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderedLinkQuery, FindManyOrderedLinkQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderedLinkQuery, FindManyOrderedLinkQueryVariables>(FindManyOrderedLinkDocument, options);
        }
export type FindManyOrderedLinkQueryHookResult = ReturnType<typeof useFindManyOrderedLinkQuery>;
export type FindManyOrderedLinkLazyQueryHookResult = ReturnType<typeof useFindManyOrderedLinkLazyQuery>;
export type FindManyOrderedLinkQueryResult = Apollo.QueryResult<FindManyOrderedLinkQuery, FindManyOrderedLinkQueryVariables>;
export const FindManyOrderedLinkCountDocument = gql`
    query findManyOrderedLinkCount($where: OrderedLinkWhereInput, $orderBy: [OrderedLinkOrderByWithRelationInput!], $cursor: OrderedLinkWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderedLinkCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyOrderedLinkCountQuery__
 *
 * To run a query within a React component, call `useFindManyOrderedLinkCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderedLinkCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderedLinkCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderedLinkCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderedLinkCountQuery, FindManyOrderedLinkCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderedLinkCountQuery, FindManyOrderedLinkCountQueryVariables>(FindManyOrderedLinkCountDocument, options);
      }
export function useFindManyOrderedLinkCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderedLinkCountQuery, FindManyOrderedLinkCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderedLinkCountQuery, FindManyOrderedLinkCountQueryVariables>(FindManyOrderedLinkCountDocument, options);
        }
export type FindManyOrderedLinkCountQueryHookResult = ReturnType<typeof useFindManyOrderedLinkCountQuery>;
export type FindManyOrderedLinkCountLazyQueryHookResult = ReturnType<typeof useFindManyOrderedLinkCountLazyQuery>;
export type FindManyOrderedLinkCountQueryResult = Apollo.QueryResult<FindManyOrderedLinkCountQuery, FindManyOrderedLinkCountQueryVariables>;
export const CreateOneOrderedLinkDocument = gql`
    mutation createOneOrderedLink($data: OrderedLinkCreateInput!) {
  createOneOrderedLink(data: $data) {
    ...OrderedLink
  }
}
    ${OrderedLinkFragmentDoc}`;

/**
 * __useCreateOneOrderedLinkMutation__
 *
 * To run a mutation, you first call `useCreateOneOrderedLinkMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneOrderedLinkMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneOrderedLinkMutation, { data, loading, error }] = useCreateOneOrderedLinkMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneOrderedLinkMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneOrderedLinkMutation, CreateOneOrderedLinkMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneOrderedLinkMutation, CreateOneOrderedLinkMutationVariables>(CreateOneOrderedLinkDocument, options);
      }
export type CreateOneOrderedLinkMutationHookResult = ReturnType<typeof useCreateOneOrderedLinkMutation>;
export type CreateOneOrderedLinkMutationResult = Apollo.MutationResult<CreateOneOrderedLinkMutation>;
export type CreateOneOrderedLinkMutationOptions = Apollo.BaseMutationOptions<CreateOneOrderedLinkMutation, CreateOneOrderedLinkMutationVariables>;
export const UpdateOneOrderedLinkDocument = gql`
    mutation updateOneOrderedLink($where: OrderedLinkWhereUniqueInput!, $data: OrderedLinkUpdateInput!) {
  updateOneOrderedLink(where: $where, data: $data) {
    ...OrderedLink
  }
}
    ${OrderedLinkFragmentDoc}`;

/**
 * __useUpdateOneOrderedLinkMutation__
 *
 * To run a mutation, you first call `useUpdateOneOrderedLinkMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneOrderedLinkMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneOrderedLinkMutation, { data, loading, error }] = useUpdateOneOrderedLinkMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneOrderedLinkMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneOrderedLinkMutation, UpdateOneOrderedLinkMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneOrderedLinkMutation, UpdateOneOrderedLinkMutationVariables>(UpdateOneOrderedLinkDocument, options);
      }
export type UpdateOneOrderedLinkMutationHookResult = ReturnType<typeof useUpdateOneOrderedLinkMutation>;
export type UpdateOneOrderedLinkMutationResult = Apollo.MutationResult<UpdateOneOrderedLinkMutation>;
export type UpdateOneOrderedLinkMutationOptions = Apollo.BaseMutationOptions<UpdateOneOrderedLinkMutation, UpdateOneOrderedLinkMutationVariables>;
export const DeleteOneOrderedLinkDocument = gql`
    mutation deleteOneOrderedLink($where: OrderedLinkWhereUniqueInput!) {
  deleteOneOrderedLink(where: $where) {
    ...OrderedLink
  }
}
    ${OrderedLinkFragmentDoc}`;

/**
 * __useDeleteOneOrderedLinkMutation__
 *
 * To run a mutation, you first call `useDeleteOneOrderedLinkMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneOrderedLinkMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneOrderedLinkMutation, { data, loading, error }] = useDeleteOneOrderedLinkMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneOrderedLinkMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneOrderedLinkMutation, DeleteOneOrderedLinkMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneOrderedLinkMutation, DeleteOneOrderedLinkMutationVariables>(DeleteOneOrderedLinkDocument, options);
      }
export type DeleteOneOrderedLinkMutationHookResult = ReturnType<typeof useDeleteOneOrderedLinkMutation>;
export type DeleteOneOrderedLinkMutationResult = Apollo.MutationResult<DeleteOneOrderedLinkMutation>;
export type DeleteOneOrderedLinkMutationOptions = Apollo.BaseMutationOptions<DeleteOneOrderedLinkMutation, DeleteOneOrderedLinkMutationVariables>;
export const DeleteManyOrderedLinkDocument = gql`
    mutation deleteManyOrderedLink($where: OrderedLinkWhereInput) {
  deleteManyOrderedLink(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyOrderedLinkMutation__
 *
 * To run a mutation, you first call `useDeleteManyOrderedLinkMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyOrderedLinkMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyOrderedLinkMutation, { data, loading, error }] = useDeleteManyOrderedLinkMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyOrderedLinkMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyOrderedLinkMutation, DeleteManyOrderedLinkMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyOrderedLinkMutation, DeleteManyOrderedLinkMutationVariables>(DeleteManyOrderedLinkDocument, options);
      }
export type DeleteManyOrderedLinkMutationHookResult = ReturnType<typeof useDeleteManyOrderedLinkMutation>;
export type DeleteManyOrderedLinkMutationResult = Apollo.MutationResult<DeleteManyOrderedLinkMutation>;
export type DeleteManyOrderedLinkMutationOptions = Apollo.BaseMutationOptions<DeleteManyOrderedLinkMutation, DeleteManyOrderedLinkMutationVariables>;
export const UpdateManyOrderedLinkDocument = gql`
    mutation updateManyOrderedLink($where: OrderedLinkWhereInput, $data: OrderedLinkUpdateManyMutationInput!) {
  updateManyOrderedLink(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyOrderedLinkMutation__
 *
 * To run a mutation, you first call `useUpdateManyOrderedLinkMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyOrderedLinkMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyOrderedLinkMutation, { data, loading, error }] = useUpdateManyOrderedLinkMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyOrderedLinkMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyOrderedLinkMutation, UpdateManyOrderedLinkMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyOrderedLinkMutation, UpdateManyOrderedLinkMutationVariables>(UpdateManyOrderedLinkDocument, options);
      }
export type UpdateManyOrderedLinkMutationHookResult = ReturnType<typeof useUpdateManyOrderedLinkMutation>;
export type UpdateManyOrderedLinkMutationResult = Apollo.MutationResult<UpdateManyOrderedLinkMutation>;
export type UpdateManyOrderedLinkMutationOptions = Apollo.BaseMutationOptions<UpdateManyOrderedLinkMutation, UpdateManyOrderedLinkMutationVariables>;
export const FindUniqueOrderedPictureDocument = gql`
    query findUniqueOrderedPicture($where: OrderedPictureWhereUniqueInput!) {
  findUniqueOrderedPicture(where: $where) {
    ...OrderedPicture
  }
}
    ${OrderedPictureFragmentDoc}`;

/**
 * __useFindUniqueOrderedPictureQuery__
 *
 * To run a query within a React component, call `useFindUniqueOrderedPictureQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueOrderedPictureQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueOrderedPictureQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueOrderedPictureQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueOrderedPictureQuery, FindUniqueOrderedPictureQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueOrderedPictureQuery, FindUniqueOrderedPictureQueryVariables>(FindUniqueOrderedPictureDocument, options);
      }
export function useFindUniqueOrderedPictureLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueOrderedPictureQuery, FindUniqueOrderedPictureQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueOrderedPictureQuery, FindUniqueOrderedPictureQueryVariables>(FindUniqueOrderedPictureDocument, options);
        }
export type FindUniqueOrderedPictureQueryHookResult = ReturnType<typeof useFindUniqueOrderedPictureQuery>;
export type FindUniqueOrderedPictureLazyQueryHookResult = ReturnType<typeof useFindUniqueOrderedPictureLazyQuery>;
export type FindUniqueOrderedPictureQueryResult = Apollo.QueryResult<FindUniqueOrderedPictureQuery, FindUniqueOrderedPictureQueryVariables>;
export const FindManyOrderedPictureDocument = gql`
    query findManyOrderedPicture($where: OrderedPictureWhereInput, $orderBy: [OrderedPictureOrderByWithRelationInput!], $cursor: OrderedPictureWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderedPicture(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...OrderedPicture
  }
}
    ${OrderedPictureFragmentDoc}`;

/**
 * __useFindManyOrderedPictureQuery__
 *
 * To run a query within a React component, call `useFindManyOrderedPictureQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderedPictureQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderedPictureQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderedPictureQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderedPictureQuery, FindManyOrderedPictureQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderedPictureQuery, FindManyOrderedPictureQueryVariables>(FindManyOrderedPictureDocument, options);
      }
export function useFindManyOrderedPictureLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderedPictureQuery, FindManyOrderedPictureQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderedPictureQuery, FindManyOrderedPictureQueryVariables>(FindManyOrderedPictureDocument, options);
        }
export type FindManyOrderedPictureQueryHookResult = ReturnType<typeof useFindManyOrderedPictureQuery>;
export type FindManyOrderedPictureLazyQueryHookResult = ReturnType<typeof useFindManyOrderedPictureLazyQuery>;
export type FindManyOrderedPictureQueryResult = Apollo.QueryResult<FindManyOrderedPictureQuery, FindManyOrderedPictureQueryVariables>;
export const FindManyOrderedPictureCountDocument = gql`
    query findManyOrderedPictureCount($where: OrderedPictureWhereInput, $orderBy: [OrderedPictureOrderByWithRelationInput!], $cursor: OrderedPictureWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderedPictureCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyOrderedPictureCountQuery__
 *
 * To run a query within a React component, call `useFindManyOrderedPictureCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderedPictureCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderedPictureCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderedPictureCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderedPictureCountQuery, FindManyOrderedPictureCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderedPictureCountQuery, FindManyOrderedPictureCountQueryVariables>(FindManyOrderedPictureCountDocument, options);
      }
export function useFindManyOrderedPictureCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderedPictureCountQuery, FindManyOrderedPictureCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderedPictureCountQuery, FindManyOrderedPictureCountQueryVariables>(FindManyOrderedPictureCountDocument, options);
        }
export type FindManyOrderedPictureCountQueryHookResult = ReturnType<typeof useFindManyOrderedPictureCountQuery>;
export type FindManyOrderedPictureCountLazyQueryHookResult = ReturnType<typeof useFindManyOrderedPictureCountLazyQuery>;
export type FindManyOrderedPictureCountQueryResult = Apollo.QueryResult<FindManyOrderedPictureCountQuery, FindManyOrderedPictureCountQueryVariables>;
export const CreateOneOrderedPictureDocument = gql`
    mutation createOneOrderedPicture($data: OrderedPictureCreateInput!) {
  createOneOrderedPicture(data: $data) {
    ...OrderedPicture
  }
}
    ${OrderedPictureFragmentDoc}`;

/**
 * __useCreateOneOrderedPictureMutation__
 *
 * To run a mutation, you first call `useCreateOneOrderedPictureMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneOrderedPictureMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneOrderedPictureMutation, { data, loading, error }] = useCreateOneOrderedPictureMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneOrderedPictureMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneOrderedPictureMutation, CreateOneOrderedPictureMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneOrderedPictureMutation, CreateOneOrderedPictureMutationVariables>(CreateOneOrderedPictureDocument, options);
      }
export type CreateOneOrderedPictureMutationHookResult = ReturnType<typeof useCreateOneOrderedPictureMutation>;
export type CreateOneOrderedPictureMutationResult = Apollo.MutationResult<CreateOneOrderedPictureMutation>;
export type CreateOneOrderedPictureMutationOptions = Apollo.BaseMutationOptions<CreateOneOrderedPictureMutation, CreateOneOrderedPictureMutationVariables>;
export const UpdateOneOrderedPictureDocument = gql`
    mutation updateOneOrderedPicture($where: OrderedPictureWhereUniqueInput!, $data: OrderedPictureUpdateInput!) {
  updateOneOrderedPicture(where: $where, data: $data) {
    ...OrderedPicture
  }
}
    ${OrderedPictureFragmentDoc}`;

/**
 * __useUpdateOneOrderedPictureMutation__
 *
 * To run a mutation, you first call `useUpdateOneOrderedPictureMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneOrderedPictureMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneOrderedPictureMutation, { data, loading, error }] = useUpdateOneOrderedPictureMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneOrderedPictureMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneOrderedPictureMutation, UpdateOneOrderedPictureMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneOrderedPictureMutation, UpdateOneOrderedPictureMutationVariables>(UpdateOneOrderedPictureDocument, options);
      }
export type UpdateOneOrderedPictureMutationHookResult = ReturnType<typeof useUpdateOneOrderedPictureMutation>;
export type UpdateOneOrderedPictureMutationResult = Apollo.MutationResult<UpdateOneOrderedPictureMutation>;
export type UpdateOneOrderedPictureMutationOptions = Apollo.BaseMutationOptions<UpdateOneOrderedPictureMutation, UpdateOneOrderedPictureMutationVariables>;
export const DeleteOneOrderedPictureDocument = gql`
    mutation deleteOneOrderedPicture($where: OrderedPictureWhereUniqueInput!) {
  deleteOneOrderedPicture(where: $where) {
    ...OrderedPicture
  }
}
    ${OrderedPictureFragmentDoc}`;

/**
 * __useDeleteOneOrderedPictureMutation__
 *
 * To run a mutation, you first call `useDeleteOneOrderedPictureMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneOrderedPictureMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneOrderedPictureMutation, { data, loading, error }] = useDeleteOneOrderedPictureMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneOrderedPictureMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneOrderedPictureMutation, DeleteOneOrderedPictureMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneOrderedPictureMutation, DeleteOneOrderedPictureMutationVariables>(DeleteOneOrderedPictureDocument, options);
      }
export type DeleteOneOrderedPictureMutationHookResult = ReturnType<typeof useDeleteOneOrderedPictureMutation>;
export type DeleteOneOrderedPictureMutationResult = Apollo.MutationResult<DeleteOneOrderedPictureMutation>;
export type DeleteOneOrderedPictureMutationOptions = Apollo.BaseMutationOptions<DeleteOneOrderedPictureMutation, DeleteOneOrderedPictureMutationVariables>;
export const DeleteManyOrderedPictureDocument = gql`
    mutation deleteManyOrderedPicture($where: OrderedPictureWhereInput) {
  deleteManyOrderedPicture(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyOrderedPictureMutation__
 *
 * To run a mutation, you first call `useDeleteManyOrderedPictureMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyOrderedPictureMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyOrderedPictureMutation, { data, loading, error }] = useDeleteManyOrderedPictureMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyOrderedPictureMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyOrderedPictureMutation, DeleteManyOrderedPictureMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyOrderedPictureMutation, DeleteManyOrderedPictureMutationVariables>(DeleteManyOrderedPictureDocument, options);
      }
export type DeleteManyOrderedPictureMutationHookResult = ReturnType<typeof useDeleteManyOrderedPictureMutation>;
export type DeleteManyOrderedPictureMutationResult = Apollo.MutationResult<DeleteManyOrderedPictureMutation>;
export type DeleteManyOrderedPictureMutationOptions = Apollo.BaseMutationOptions<DeleteManyOrderedPictureMutation, DeleteManyOrderedPictureMutationVariables>;
export const UpdateManyOrderedPictureDocument = gql`
    mutation updateManyOrderedPicture($where: OrderedPictureWhereInput, $data: OrderedPictureUpdateManyMutationInput!) {
  updateManyOrderedPicture(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyOrderedPictureMutation__
 *
 * To run a mutation, you first call `useUpdateManyOrderedPictureMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyOrderedPictureMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyOrderedPictureMutation, { data, loading, error }] = useUpdateManyOrderedPictureMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyOrderedPictureMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyOrderedPictureMutation, UpdateManyOrderedPictureMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyOrderedPictureMutation, UpdateManyOrderedPictureMutationVariables>(UpdateManyOrderedPictureDocument, options);
      }
export type UpdateManyOrderedPictureMutationHookResult = ReturnType<typeof useUpdateManyOrderedPictureMutation>;
export type UpdateManyOrderedPictureMutationResult = Apollo.MutationResult<UpdateManyOrderedPictureMutation>;
export type UpdateManyOrderedPictureMutationOptions = Apollo.BaseMutationOptions<UpdateManyOrderedPictureMutation, UpdateManyOrderedPictureMutationVariables>;
export const FindUniqueOrderedProductDocument = gql`
    query findUniqueOrderedProduct($where: OrderedProductWhereUniqueInput!) {
  findUniqueOrderedProduct(where: $where) {
    ...OrderedProduct
  }
}
    ${OrderedProductFragmentDoc}`;

/**
 * __useFindUniqueOrderedProductQuery__
 *
 * To run a query within a React component, call `useFindUniqueOrderedProductQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueOrderedProductQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueOrderedProductQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueOrderedProductQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueOrderedProductQuery, FindUniqueOrderedProductQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueOrderedProductQuery, FindUniqueOrderedProductQueryVariables>(FindUniqueOrderedProductDocument, options);
      }
export function useFindUniqueOrderedProductLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueOrderedProductQuery, FindUniqueOrderedProductQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueOrderedProductQuery, FindUniqueOrderedProductQueryVariables>(FindUniqueOrderedProductDocument, options);
        }
export type FindUniqueOrderedProductQueryHookResult = ReturnType<typeof useFindUniqueOrderedProductQuery>;
export type FindUniqueOrderedProductLazyQueryHookResult = ReturnType<typeof useFindUniqueOrderedProductLazyQuery>;
export type FindUniqueOrderedProductQueryResult = Apollo.QueryResult<FindUniqueOrderedProductQuery, FindUniqueOrderedProductQueryVariables>;
export const FindManyOrderedProductDocument = gql`
    query findManyOrderedProduct($where: OrderedProductWhereInput, $orderBy: [OrderedProductOrderByWithRelationInput!], $cursor: OrderedProductWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderedProduct(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...OrderedProduct
  }
}
    ${OrderedProductFragmentDoc}`;

/**
 * __useFindManyOrderedProductQuery__
 *
 * To run a query within a React component, call `useFindManyOrderedProductQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderedProductQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderedProductQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderedProductQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderedProductQuery, FindManyOrderedProductQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderedProductQuery, FindManyOrderedProductQueryVariables>(FindManyOrderedProductDocument, options);
      }
export function useFindManyOrderedProductLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderedProductQuery, FindManyOrderedProductQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderedProductQuery, FindManyOrderedProductQueryVariables>(FindManyOrderedProductDocument, options);
        }
export type FindManyOrderedProductQueryHookResult = ReturnType<typeof useFindManyOrderedProductQuery>;
export type FindManyOrderedProductLazyQueryHookResult = ReturnType<typeof useFindManyOrderedProductLazyQuery>;
export type FindManyOrderedProductQueryResult = Apollo.QueryResult<FindManyOrderedProductQuery, FindManyOrderedProductQueryVariables>;
export const FindManyOrderedProductCountDocument = gql`
    query findManyOrderedProductCount($where: OrderedProductWhereInput, $orderBy: [OrderedProductOrderByWithRelationInput!], $cursor: OrderedProductWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderedProductCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyOrderedProductCountQuery__
 *
 * To run a query within a React component, call `useFindManyOrderedProductCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderedProductCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderedProductCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderedProductCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderedProductCountQuery, FindManyOrderedProductCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderedProductCountQuery, FindManyOrderedProductCountQueryVariables>(FindManyOrderedProductCountDocument, options);
      }
export function useFindManyOrderedProductCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderedProductCountQuery, FindManyOrderedProductCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderedProductCountQuery, FindManyOrderedProductCountQueryVariables>(FindManyOrderedProductCountDocument, options);
        }
export type FindManyOrderedProductCountQueryHookResult = ReturnType<typeof useFindManyOrderedProductCountQuery>;
export type FindManyOrderedProductCountLazyQueryHookResult = ReturnType<typeof useFindManyOrderedProductCountLazyQuery>;
export type FindManyOrderedProductCountQueryResult = Apollo.QueryResult<FindManyOrderedProductCountQuery, FindManyOrderedProductCountQueryVariables>;
export const CreateOneOrderedProductDocument = gql`
    mutation createOneOrderedProduct($data: OrderedProductCreateInput!) {
  createOneOrderedProduct(data: $data) {
    ...OrderedProduct
  }
}
    ${OrderedProductFragmentDoc}`;

/**
 * __useCreateOneOrderedProductMutation__
 *
 * To run a mutation, you first call `useCreateOneOrderedProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneOrderedProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneOrderedProductMutation, { data, loading, error }] = useCreateOneOrderedProductMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneOrderedProductMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneOrderedProductMutation, CreateOneOrderedProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneOrderedProductMutation, CreateOneOrderedProductMutationVariables>(CreateOneOrderedProductDocument, options);
      }
export type CreateOneOrderedProductMutationHookResult = ReturnType<typeof useCreateOneOrderedProductMutation>;
export type CreateOneOrderedProductMutationResult = Apollo.MutationResult<CreateOneOrderedProductMutation>;
export type CreateOneOrderedProductMutationOptions = Apollo.BaseMutationOptions<CreateOneOrderedProductMutation, CreateOneOrderedProductMutationVariables>;
export const UpdateOneOrderedProductDocument = gql`
    mutation updateOneOrderedProduct($where: OrderedProductWhereUniqueInput!, $data: OrderedProductUpdateInput!) {
  updateOneOrderedProduct(where: $where, data: $data) {
    ...OrderedProduct
  }
}
    ${OrderedProductFragmentDoc}`;

/**
 * __useUpdateOneOrderedProductMutation__
 *
 * To run a mutation, you first call `useUpdateOneOrderedProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneOrderedProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneOrderedProductMutation, { data, loading, error }] = useUpdateOneOrderedProductMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneOrderedProductMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneOrderedProductMutation, UpdateOneOrderedProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneOrderedProductMutation, UpdateOneOrderedProductMutationVariables>(UpdateOneOrderedProductDocument, options);
      }
export type UpdateOneOrderedProductMutationHookResult = ReturnType<typeof useUpdateOneOrderedProductMutation>;
export type UpdateOneOrderedProductMutationResult = Apollo.MutationResult<UpdateOneOrderedProductMutation>;
export type UpdateOneOrderedProductMutationOptions = Apollo.BaseMutationOptions<UpdateOneOrderedProductMutation, UpdateOneOrderedProductMutationVariables>;
export const DeleteOneOrderedProductDocument = gql`
    mutation deleteOneOrderedProduct($where: OrderedProductWhereUniqueInput!) {
  deleteOneOrderedProduct(where: $where) {
    ...OrderedProduct
  }
}
    ${OrderedProductFragmentDoc}`;

/**
 * __useDeleteOneOrderedProductMutation__
 *
 * To run a mutation, you first call `useDeleteOneOrderedProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneOrderedProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneOrderedProductMutation, { data, loading, error }] = useDeleteOneOrderedProductMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneOrderedProductMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneOrderedProductMutation, DeleteOneOrderedProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneOrderedProductMutation, DeleteOneOrderedProductMutationVariables>(DeleteOneOrderedProductDocument, options);
      }
export type DeleteOneOrderedProductMutationHookResult = ReturnType<typeof useDeleteOneOrderedProductMutation>;
export type DeleteOneOrderedProductMutationResult = Apollo.MutationResult<DeleteOneOrderedProductMutation>;
export type DeleteOneOrderedProductMutationOptions = Apollo.BaseMutationOptions<DeleteOneOrderedProductMutation, DeleteOneOrderedProductMutationVariables>;
export const DeleteManyOrderedProductDocument = gql`
    mutation deleteManyOrderedProduct($where: OrderedProductWhereInput) {
  deleteManyOrderedProduct(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyOrderedProductMutation__
 *
 * To run a mutation, you first call `useDeleteManyOrderedProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyOrderedProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyOrderedProductMutation, { data, loading, error }] = useDeleteManyOrderedProductMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyOrderedProductMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyOrderedProductMutation, DeleteManyOrderedProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyOrderedProductMutation, DeleteManyOrderedProductMutationVariables>(DeleteManyOrderedProductDocument, options);
      }
export type DeleteManyOrderedProductMutationHookResult = ReturnType<typeof useDeleteManyOrderedProductMutation>;
export type DeleteManyOrderedProductMutationResult = Apollo.MutationResult<DeleteManyOrderedProductMutation>;
export type DeleteManyOrderedProductMutationOptions = Apollo.BaseMutationOptions<DeleteManyOrderedProductMutation, DeleteManyOrderedProductMutationVariables>;
export const UpdateManyOrderedProductDocument = gql`
    mutation updateManyOrderedProduct($where: OrderedProductWhereInput, $data: OrderedProductUpdateManyMutationInput!) {
  updateManyOrderedProduct(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyOrderedProductMutation__
 *
 * To run a mutation, you first call `useUpdateManyOrderedProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyOrderedProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyOrderedProductMutation, { data, loading, error }] = useUpdateManyOrderedProductMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyOrderedProductMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyOrderedProductMutation, UpdateManyOrderedProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyOrderedProductMutation, UpdateManyOrderedProductMutationVariables>(UpdateManyOrderedProductDocument, options);
      }
export type UpdateManyOrderedProductMutationHookResult = ReturnType<typeof useUpdateManyOrderedProductMutation>;
export type UpdateManyOrderedProductMutationResult = Apollo.MutationResult<UpdateManyOrderedProductMutation>;
export type UpdateManyOrderedProductMutationOptions = Apollo.BaseMutationOptions<UpdateManyOrderedProductMutation, UpdateManyOrderedProductMutationVariables>;
export const FindUniqueOrderedRedeemableDocument = gql`
    query findUniqueOrderedRedeemable($where: OrderedRedeemableWhereUniqueInput!) {
  findUniqueOrderedRedeemable(where: $where) {
    ...OrderedRedeemable
  }
}
    ${OrderedRedeemableFragmentDoc}`;

/**
 * __useFindUniqueOrderedRedeemableQuery__
 *
 * To run a query within a React component, call `useFindUniqueOrderedRedeemableQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueOrderedRedeemableQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueOrderedRedeemableQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueOrderedRedeemableQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueOrderedRedeemableQuery, FindUniqueOrderedRedeemableQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueOrderedRedeemableQuery, FindUniqueOrderedRedeemableQueryVariables>(FindUniqueOrderedRedeemableDocument, options);
      }
export function useFindUniqueOrderedRedeemableLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueOrderedRedeemableQuery, FindUniqueOrderedRedeemableQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueOrderedRedeemableQuery, FindUniqueOrderedRedeemableQueryVariables>(FindUniqueOrderedRedeemableDocument, options);
        }
export type FindUniqueOrderedRedeemableQueryHookResult = ReturnType<typeof useFindUniqueOrderedRedeemableQuery>;
export type FindUniqueOrderedRedeemableLazyQueryHookResult = ReturnType<typeof useFindUniqueOrderedRedeemableLazyQuery>;
export type FindUniqueOrderedRedeemableQueryResult = Apollo.QueryResult<FindUniqueOrderedRedeemableQuery, FindUniqueOrderedRedeemableQueryVariables>;
export const FindManyOrderedRedeemableDocument = gql`
    query findManyOrderedRedeemable($where: OrderedRedeemableWhereInput, $orderBy: [OrderedRedeemableOrderByWithRelationInput!], $cursor: OrderedRedeemableWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderedRedeemable(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...OrderedRedeemable
  }
}
    ${OrderedRedeemableFragmentDoc}`;

/**
 * __useFindManyOrderedRedeemableQuery__
 *
 * To run a query within a React component, call `useFindManyOrderedRedeemableQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderedRedeemableQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderedRedeemableQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderedRedeemableQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderedRedeemableQuery, FindManyOrderedRedeemableQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderedRedeemableQuery, FindManyOrderedRedeemableQueryVariables>(FindManyOrderedRedeemableDocument, options);
      }
export function useFindManyOrderedRedeemableLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderedRedeemableQuery, FindManyOrderedRedeemableQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderedRedeemableQuery, FindManyOrderedRedeemableQueryVariables>(FindManyOrderedRedeemableDocument, options);
        }
export type FindManyOrderedRedeemableQueryHookResult = ReturnType<typeof useFindManyOrderedRedeemableQuery>;
export type FindManyOrderedRedeemableLazyQueryHookResult = ReturnType<typeof useFindManyOrderedRedeemableLazyQuery>;
export type FindManyOrderedRedeemableQueryResult = Apollo.QueryResult<FindManyOrderedRedeemableQuery, FindManyOrderedRedeemableQueryVariables>;
export const FindManyOrderedRedeemableCountDocument = gql`
    query findManyOrderedRedeemableCount($where: OrderedRedeemableWhereInput, $orderBy: [OrderedRedeemableOrderByWithRelationInput!], $cursor: OrderedRedeemableWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderedRedeemableCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyOrderedRedeemableCountQuery__
 *
 * To run a query within a React component, call `useFindManyOrderedRedeemableCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderedRedeemableCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderedRedeemableCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderedRedeemableCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderedRedeemableCountQuery, FindManyOrderedRedeemableCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderedRedeemableCountQuery, FindManyOrderedRedeemableCountQueryVariables>(FindManyOrderedRedeemableCountDocument, options);
      }
export function useFindManyOrderedRedeemableCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderedRedeemableCountQuery, FindManyOrderedRedeemableCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderedRedeemableCountQuery, FindManyOrderedRedeemableCountQueryVariables>(FindManyOrderedRedeemableCountDocument, options);
        }
export type FindManyOrderedRedeemableCountQueryHookResult = ReturnType<typeof useFindManyOrderedRedeemableCountQuery>;
export type FindManyOrderedRedeemableCountLazyQueryHookResult = ReturnType<typeof useFindManyOrderedRedeemableCountLazyQuery>;
export type FindManyOrderedRedeemableCountQueryResult = Apollo.QueryResult<FindManyOrderedRedeemableCountQuery, FindManyOrderedRedeemableCountQueryVariables>;
export const CreateOneOrderedRedeemableDocument = gql`
    mutation createOneOrderedRedeemable($data: OrderedRedeemableCreateInput!) {
  createOneOrderedRedeemable(data: $data) {
    ...OrderedRedeemable
  }
}
    ${OrderedRedeemableFragmentDoc}`;

/**
 * __useCreateOneOrderedRedeemableMutation__
 *
 * To run a mutation, you first call `useCreateOneOrderedRedeemableMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneOrderedRedeemableMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneOrderedRedeemableMutation, { data, loading, error }] = useCreateOneOrderedRedeemableMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneOrderedRedeemableMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneOrderedRedeemableMutation, CreateOneOrderedRedeemableMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneOrderedRedeemableMutation, CreateOneOrderedRedeemableMutationVariables>(CreateOneOrderedRedeemableDocument, options);
      }
export type CreateOneOrderedRedeemableMutationHookResult = ReturnType<typeof useCreateOneOrderedRedeemableMutation>;
export type CreateOneOrderedRedeemableMutationResult = Apollo.MutationResult<CreateOneOrderedRedeemableMutation>;
export type CreateOneOrderedRedeemableMutationOptions = Apollo.BaseMutationOptions<CreateOneOrderedRedeemableMutation, CreateOneOrderedRedeemableMutationVariables>;
export const UpdateOneOrderedRedeemableDocument = gql`
    mutation updateOneOrderedRedeemable($where: OrderedRedeemableWhereUniqueInput!, $data: OrderedRedeemableUpdateInput!) {
  updateOneOrderedRedeemable(where: $where, data: $data) {
    ...OrderedRedeemable
  }
}
    ${OrderedRedeemableFragmentDoc}`;

/**
 * __useUpdateOneOrderedRedeemableMutation__
 *
 * To run a mutation, you first call `useUpdateOneOrderedRedeemableMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneOrderedRedeemableMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneOrderedRedeemableMutation, { data, loading, error }] = useUpdateOneOrderedRedeemableMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneOrderedRedeemableMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneOrderedRedeemableMutation, UpdateOneOrderedRedeemableMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneOrderedRedeemableMutation, UpdateOneOrderedRedeemableMutationVariables>(UpdateOneOrderedRedeemableDocument, options);
      }
export type UpdateOneOrderedRedeemableMutationHookResult = ReturnType<typeof useUpdateOneOrderedRedeemableMutation>;
export type UpdateOneOrderedRedeemableMutationResult = Apollo.MutationResult<UpdateOneOrderedRedeemableMutation>;
export type UpdateOneOrderedRedeemableMutationOptions = Apollo.BaseMutationOptions<UpdateOneOrderedRedeemableMutation, UpdateOneOrderedRedeemableMutationVariables>;
export const DeleteOneOrderedRedeemableDocument = gql`
    mutation deleteOneOrderedRedeemable($where: OrderedRedeemableWhereUniqueInput!) {
  deleteOneOrderedRedeemable(where: $where) {
    ...OrderedRedeemable
  }
}
    ${OrderedRedeemableFragmentDoc}`;

/**
 * __useDeleteOneOrderedRedeemableMutation__
 *
 * To run a mutation, you first call `useDeleteOneOrderedRedeemableMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneOrderedRedeemableMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneOrderedRedeemableMutation, { data, loading, error }] = useDeleteOneOrderedRedeemableMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneOrderedRedeemableMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneOrderedRedeemableMutation, DeleteOneOrderedRedeemableMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneOrderedRedeemableMutation, DeleteOneOrderedRedeemableMutationVariables>(DeleteOneOrderedRedeemableDocument, options);
      }
export type DeleteOneOrderedRedeemableMutationHookResult = ReturnType<typeof useDeleteOneOrderedRedeemableMutation>;
export type DeleteOneOrderedRedeemableMutationResult = Apollo.MutationResult<DeleteOneOrderedRedeemableMutation>;
export type DeleteOneOrderedRedeemableMutationOptions = Apollo.BaseMutationOptions<DeleteOneOrderedRedeemableMutation, DeleteOneOrderedRedeemableMutationVariables>;
export const DeleteManyOrderedRedeemableDocument = gql`
    mutation deleteManyOrderedRedeemable($where: OrderedRedeemableWhereInput) {
  deleteManyOrderedRedeemable(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyOrderedRedeemableMutation__
 *
 * To run a mutation, you first call `useDeleteManyOrderedRedeemableMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyOrderedRedeemableMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyOrderedRedeemableMutation, { data, loading, error }] = useDeleteManyOrderedRedeemableMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyOrderedRedeemableMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyOrderedRedeemableMutation, DeleteManyOrderedRedeemableMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyOrderedRedeemableMutation, DeleteManyOrderedRedeemableMutationVariables>(DeleteManyOrderedRedeemableDocument, options);
      }
export type DeleteManyOrderedRedeemableMutationHookResult = ReturnType<typeof useDeleteManyOrderedRedeemableMutation>;
export type DeleteManyOrderedRedeemableMutationResult = Apollo.MutationResult<DeleteManyOrderedRedeemableMutation>;
export type DeleteManyOrderedRedeemableMutationOptions = Apollo.BaseMutationOptions<DeleteManyOrderedRedeemableMutation, DeleteManyOrderedRedeemableMutationVariables>;
export const UpdateManyOrderedRedeemableDocument = gql`
    mutation updateManyOrderedRedeemable($where: OrderedRedeemableWhereInput, $data: OrderedRedeemableUpdateManyMutationInput!) {
  updateManyOrderedRedeemable(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyOrderedRedeemableMutation__
 *
 * To run a mutation, you first call `useUpdateManyOrderedRedeemableMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyOrderedRedeemableMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyOrderedRedeemableMutation, { data, loading, error }] = useUpdateManyOrderedRedeemableMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyOrderedRedeemableMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyOrderedRedeemableMutation, UpdateManyOrderedRedeemableMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyOrderedRedeemableMutation, UpdateManyOrderedRedeemableMutationVariables>(UpdateManyOrderedRedeemableDocument, options);
      }
export type UpdateManyOrderedRedeemableMutationHookResult = ReturnType<typeof useUpdateManyOrderedRedeemableMutation>;
export type UpdateManyOrderedRedeemableMutationResult = Apollo.MutationResult<UpdateManyOrderedRedeemableMutation>;
export type UpdateManyOrderedRedeemableMutationOptions = Apollo.BaseMutationOptions<UpdateManyOrderedRedeemableMutation, UpdateManyOrderedRedeemableMutationVariables>;
export const FindUniqueOrderedVideoDocument = gql`
    query findUniqueOrderedVideo($where: OrderedVideoWhereUniqueInput!) {
  findUniqueOrderedVideo(where: $where) {
    ...OrderedVideo
  }
}
    ${OrderedVideoFragmentDoc}`;

/**
 * __useFindUniqueOrderedVideoQuery__
 *
 * To run a query within a React component, call `useFindUniqueOrderedVideoQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueOrderedVideoQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueOrderedVideoQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueOrderedVideoQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueOrderedVideoQuery, FindUniqueOrderedVideoQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueOrderedVideoQuery, FindUniqueOrderedVideoQueryVariables>(FindUniqueOrderedVideoDocument, options);
      }
export function useFindUniqueOrderedVideoLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueOrderedVideoQuery, FindUniqueOrderedVideoQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueOrderedVideoQuery, FindUniqueOrderedVideoQueryVariables>(FindUniqueOrderedVideoDocument, options);
        }
export type FindUniqueOrderedVideoQueryHookResult = ReturnType<typeof useFindUniqueOrderedVideoQuery>;
export type FindUniqueOrderedVideoLazyQueryHookResult = ReturnType<typeof useFindUniqueOrderedVideoLazyQuery>;
export type FindUniqueOrderedVideoQueryResult = Apollo.QueryResult<FindUniqueOrderedVideoQuery, FindUniqueOrderedVideoQueryVariables>;
export const FindManyOrderedVideoDocument = gql`
    query findManyOrderedVideo($where: OrderedVideoWhereInput, $orderBy: [OrderedVideoOrderByWithRelationInput!], $cursor: OrderedVideoWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderedVideo(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...OrderedVideo
  }
}
    ${OrderedVideoFragmentDoc}`;

/**
 * __useFindManyOrderedVideoQuery__
 *
 * To run a query within a React component, call `useFindManyOrderedVideoQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderedVideoQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderedVideoQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderedVideoQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderedVideoQuery, FindManyOrderedVideoQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderedVideoQuery, FindManyOrderedVideoQueryVariables>(FindManyOrderedVideoDocument, options);
      }
export function useFindManyOrderedVideoLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderedVideoQuery, FindManyOrderedVideoQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderedVideoQuery, FindManyOrderedVideoQueryVariables>(FindManyOrderedVideoDocument, options);
        }
export type FindManyOrderedVideoQueryHookResult = ReturnType<typeof useFindManyOrderedVideoQuery>;
export type FindManyOrderedVideoLazyQueryHookResult = ReturnType<typeof useFindManyOrderedVideoLazyQuery>;
export type FindManyOrderedVideoQueryResult = Apollo.QueryResult<FindManyOrderedVideoQuery, FindManyOrderedVideoQueryVariables>;
export const FindManyOrderedVideoCountDocument = gql`
    query findManyOrderedVideoCount($where: OrderedVideoWhereInput, $orderBy: [OrderedVideoOrderByWithRelationInput!], $cursor: OrderedVideoWhereUniqueInput, $skip: Int, $take: Int) {
  findManyOrderedVideoCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyOrderedVideoCountQuery__
 *
 * To run a query within a React component, call `useFindManyOrderedVideoCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyOrderedVideoCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyOrderedVideoCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyOrderedVideoCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyOrderedVideoCountQuery, FindManyOrderedVideoCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyOrderedVideoCountQuery, FindManyOrderedVideoCountQueryVariables>(FindManyOrderedVideoCountDocument, options);
      }
export function useFindManyOrderedVideoCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyOrderedVideoCountQuery, FindManyOrderedVideoCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyOrderedVideoCountQuery, FindManyOrderedVideoCountQueryVariables>(FindManyOrderedVideoCountDocument, options);
        }
export type FindManyOrderedVideoCountQueryHookResult = ReturnType<typeof useFindManyOrderedVideoCountQuery>;
export type FindManyOrderedVideoCountLazyQueryHookResult = ReturnType<typeof useFindManyOrderedVideoCountLazyQuery>;
export type FindManyOrderedVideoCountQueryResult = Apollo.QueryResult<FindManyOrderedVideoCountQuery, FindManyOrderedVideoCountQueryVariables>;
export const CreateOneOrderedVideoDocument = gql`
    mutation createOneOrderedVideo($data: OrderedVideoCreateInput!) {
  createOneOrderedVideo(data: $data) {
    ...OrderedVideo
  }
}
    ${OrderedVideoFragmentDoc}`;

/**
 * __useCreateOneOrderedVideoMutation__
 *
 * To run a mutation, you first call `useCreateOneOrderedVideoMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneOrderedVideoMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneOrderedVideoMutation, { data, loading, error }] = useCreateOneOrderedVideoMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneOrderedVideoMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneOrderedVideoMutation, CreateOneOrderedVideoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneOrderedVideoMutation, CreateOneOrderedVideoMutationVariables>(CreateOneOrderedVideoDocument, options);
      }
export type CreateOneOrderedVideoMutationHookResult = ReturnType<typeof useCreateOneOrderedVideoMutation>;
export type CreateOneOrderedVideoMutationResult = Apollo.MutationResult<CreateOneOrderedVideoMutation>;
export type CreateOneOrderedVideoMutationOptions = Apollo.BaseMutationOptions<CreateOneOrderedVideoMutation, CreateOneOrderedVideoMutationVariables>;
export const UpdateOneOrderedVideoDocument = gql`
    mutation updateOneOrderedVideo($where: OrderedVideoWhereUniqueInput!, $data: OrderedVideoUpdateInput!) {
  updateOneOrderedVideo(where: $where, data: $data) {
    ...OrderedVideo
  }
}
    ${OrderedVideoFragmentDoc}`;

/**
 * __useUpdateOneOrderedVideoMutation__
 *
 * To run a mutation, you first call `useUpdateOneOrderedVideoMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneOrderedVideoMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneOrderedVideoMutation, { data, loading, error }] = useUpdateOneOrderedVideoMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneOrderedVideoMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneOrderedVideoMutation, UpdateOneOrderedVideoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneOrderedVideoMutation, UpdateOneOrderedVideoMutationVariables>(UpdateOneOrderedVideoDocument, options);
      }
export type UpdateOneOrderedVideoMutationHookResult = ReturnType<typeof useUpdateOneOrderedVideoMutation>;
export type UpdateOneOrderedVideoMutationResult = Apollo.MutationResult<UpdateOneOrderedVideoMutation>;
export type UpdateOneOrderedVideoMutationOptions = Apollo.BaseMutationOptions<UpdateOneOrderedVideoMutation, UpdateOneOrderedVideoMutationVariables>;
export const DeleteOneOrderedVideoDocument = gql`
    mutation deleteOneOrderedVideo($where: OrderedVideoWhereUniqueInput!) {
  deleteOneOrderedVideo(where: $where) {
    ...OrderedVideo
  }
}
    ${OrderedVideoFragmentDoc}`;

/**
 * __useDeleteOneOrderedVideoMutation__
 *
 * To run a mutation, you first call `useDeleteOneOrderedVideoMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneOrderedVideoMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneOrderedVideoMutation, { data, loading, error }] = useDeleteOneOrderedVideoMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneOrderedVideoMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneOrderedVideoMutation, DeleteOneOrderedVideoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneOrderedVideoMutation, DeleteOneOrderedVideoMutationVariables>(DeleteOneOrderedVideoDocument, options);
      }
export type DeleteOneOrderedVideoMutationHookResult = ReturnType<typeof useDeleteOneOrderedVideoMutation>;
export type DeleteOneOrderedVideoMutationResult = Apollo.MutationResult<DeleteOneOrderedVideoMutation>;
export type DeleteOneOrderedVideoMutationOptions = Apollo.BaseMutationOptions<DeleteOneOrderedVideoMutation, DeleteOneOrderedVideoMutationVariables>;
export const DeleteManyOrderedVideoDocument = gql`
    mutation deleteManyOrderedVideo($where: OrderedVideoWhereInput) {
  deleteManyOrderedVideo(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyOrderedVideoMutation__
 *
 * To run a mutation, you first call `useDeleteManyOrderedVideoMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyOrderedVideoMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyOrderedVideoMutation, { data, loading, error }] = useDeleteManyOrderedVideoMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyOrderedVideoMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyOrderedVideoMutation, DeleteManyOrderedVideoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyOrderedVideoMutation, DeleteManyOrderedVideoMutationVariables>(DeleteManyOrderedVideoDocument, options);
      }
export type DeleteManyOrderedVideoMutationHookResult = ReturnType<typeof useDeleteManyOrderedVideoMutation>;
export type DeleteManyOrderedVideoMutationResult = Apollo.MutationResult<DeleteManyOrderedVideoMutation>;
export type DeleteManyOrderedVideoMutationOptions = Apollo.BaseMutationOptions<DeleteManyOrderedVideoMutation, DeleteManyOrderedVideoMutationVariables>;
export const UpdateManyOrderedVideoDocument = gql`
    mutation updateManyOrderedVideo($where: OrderedVideoWhereInput, $data: OrderedVideoUpdateManyMutationInput!) {
  updateManyOrderedVideo(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyOrderedVideoMutation__
 *
 * To run a mutation, you first call `useUpdateManyOrderedVideoMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyOrderedVideoMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyOrderedVideoMutation, { data, loading, error }] = useUpdateManyOrderedVideoMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyOrderedVideoMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyOrderedVideoMutation, UpdateManyOrderedVideoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyOrderedVideoMutation, UpdateManyOrderedVideoMutationVariables>(UpdateManyOrderedVideoDocument, options);
      }
export type UpdateManyOrderedVideoMutationHookResult = ReturnType<typeof useUpdateManyOrderedVideoMutation>;
export type UpdateManyOrderedVideoMutationResult = Apollo.MutationResult<UpdateManyOrderedVideoMutation>;
export type UpdateManyOrderedVideoMutationOptions = Apollo.BaseMutationOptions<UpdateManyOrderedVideoMutation, UpdateManyOrderedVideoMutationVariables>;
export const FindUniquePageDocument = gql`
    query findUniquePage($where: PageWhereUniqueInput!) {
  findUniquePage(where: $where) {
    ...Page
  }
}
    ${PageFragmentDoc}`;

/**
 * __useFindUniquePageQuery__
 *
 * To run a query within a React component, call `useFindUniquePageQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniquePageQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniquePageQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniquePageQuery(baseOptions: Apollo.QueryHookOptions<FindUniquePageQuery, FindUniquePageQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniquePageQuery, FindUniquePageQueryVariables>(FindUniquePageDocument, options);
      }
export function useFindUniquePageLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniquePageQuery, FindUniquePageQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniquePageQuery, FindUniquePageQueryVariables>(FindUniquePageDocument, options);
        }
export type FindUniquePageQueryHookResult = ReturnType<typeof useFindUniquePageQuery>;
export type FindUniquePageLazyQueryHookResult = ReturnType<typeof useFindUniquePageLazyQuery>;
export type FindUniquePageQueryResult = Apollo.QueryResult<FindUniquePageQuery, FindUniquePageQueryVariables>;
export const FindManyPageDocument = gql`
    query findManyPage($where: PageWhereInput, $orderBy: [PageOrderByWithRelationInput!], $cursor: PageWhereUniqueInput, $skip: Int, $take: Int) {
  findManyPage(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Page
  }
}
    ${PageFragmentDoc}`;

/**
 * __useFindManyPageQuery__
 *
 * To run a query within a React component, call `useFindManyPageQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyPageQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyPageQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyPageQuery(baseOptions?: Apollo.QueryHookOptions<FindManyPageQuery, FindManyPageQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyPageQuery, FindManyPageQueryVariables>(FindManyPageDocument, options);
      }
export function useFindManyPageLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyPageQuery, FindManyPageQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyPageQuery, FindManyPageQueryVariables>(FindManyPageDocument, options);
        }
export type FindManyPageQueryHookResult = ReturnType<typeof useFindManyPageQuery>;
export type FindManyPageLazyQueryHookResult = ReturnType<typeof useFindManyPageLazyQuery>;
export type FindManyPageQueryResult = Apollo.QueryResult<FindManyPageQuery, FindManyPageQueryVariables>;
export const FindManyPageCountDocument = gql`
    query findManyPageCount($where: PageWhereInput, $orderBy: [PageOrderByWithRelationInput!], $cursor: PageWhereUniqueInput, $skip: Int, $take: Int) {
  findManyPageCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyPageCountQuery__
 *
 * To run a query within a React component, call `useFindManyPageCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyPageCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyPageCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyPageCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyPageCountQuery, FindManyPageCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyPageCountQuery, FindManyPageCountQueryVariables>(FindManyPageCountDocument, options);
      }
export function useFindManyPageCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyPageCountQuery, FindManyPageCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyPageCountQuery, FindManyPageCountQueryVariables>(FindManyPageCountDocument, options);
        }
export type FindManyPageCountQueryHookResult = ReturnType<typeof useFindManyPageCountQuery>;
export type FindManyPageCountLazyQueryHookResult = ReturnType<typeof useFindManyPageCountLazyQuery>;
export type FindManyPageCountQueryResult = Apollo.QueryResult<FindManyPageCountQuery, FindManyPageCountQueryVariables>;
export const CreateOnePageDocument = gql`
    mutation createOnePage($data: PageCreateInput!) {
  createOnePage(data: $data) {
    ...Page
  }
}
    ${PageFragmentDoc}`;

/**
 * __useCreateOnePageMutation__
 *
 * To run a mutation, you first call `useCreateOnePageMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOnePageMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOnePageMutation, { data, loading, error }] = useCreateOnePageMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOnePageMutation(baseOptions?: Apollo.MutationHookOptions<CreateOnePageMutation, CreateOnePageMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOnePageMutation, CreateOnePageMutationVariables>(CreateOnePageDocument, options);
      }
export type CreateOnePageMutationHookResult = ReturnType<typeof useCreateOnePageMutation>;
export type CreateOnePageMutationResult = Apollo.MutationResult<CreateOnePageMutation>;
export type CreateOnePageMutationOptions = Apollo.BaseMutationOptions<CreateOnePageMutation, CreateOnePageMutationVariables>;
export const UpdateOnePageDocument = gql`
    mutation updateOnePage($where: PageWhereUniqueInput!, $data: PageUpdateInput!) {
  updateOnePage(where: $where, data: $data) {
    ...Page
  }
}
    ${PageFragmentDoc}`;

/**
 * __useUpdateOnePageMutation__
 *
 * To run a mutation, you first call `useUpdateOnePageMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOnePageMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOnePageMutation, { data, loading, error }] = useUpdateOnePageMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOnePageMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOnePageMutation, UpdateOnePageMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOnePageMutation, UpdateOnePageMutationVariables>(UpdateOnePageDocument, options);
      }
export type UpdateOnePageMutationHookResult = ReturnType<typeof useUpdateOnePageMutation>;
export type UpdateOnePageMutationResult = Apollo.MutationResult<UpdateOnePageMutation>;
export type UpdateOnePageMutationOptions = Apollo.BaseMutationOptions<UpdateOnePageMutation, UpdateOnePageMutationVariables>;
export const DeleteOnePageDocument = gql`
    mutation deleteOnePage($where: PageWhereUniqueInput!) {
  deleteOnePage(where: $where) {
    ...Page
  }
}
    ${PageFragmentDoc}`;

/**
 * __useDeleteOnePageMutation__
 *
 * To run a mutation, you first call `useDeleteOnePageMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOnePageMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOnePageMutation, { data, loading, error }] = useDeleteOnePageMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOnePageMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOnePageMutation, DeleteOnePageMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOnePageMutation, DeleteOnePageMutationVariables>(DeleteOnePageDocument, options);
      }
export type DeleteOnePageMutationHookResult = ReturnType<typeof useDeleteOnePageMutation>;
export type DeleteOnePageMutationResult = Apollo.MutationResult<DeleteOnePageMutation>;
export type DeleteOnePageMutationOptions = Apollo.BaseMutationOptions<DeleteOnePageMutation, DeleteOnePageMutationVariables>;
export const DeleteManyPageDocument = gql`
    mutation deleteManyPage($where: PageWhereInput) {
  deleteManyPage(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyPageMutation__
 *
 * To run a mutation, you first call `useDeleteManyPageMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyPageMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyPageMutation, { data, loading, error }] = useDeleteManyPageMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyPageMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyPageMutation, DeleteManyPageMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyPageMutation, DeleteManyPageMutationVariables>(DeleteManyPageDocument, options);
      }
export type DeleteManyPageMutationHookResult = ReturnType<typeof useDeleteManyPageMutation>;
export type DeleteManyPageMutationResult = Apollo.MutationResult<DeleteManyPageMutation>;
export type DeleteManyPageMutationOptions = Apollo.BaseMutationOptions<DeleteManyPageMutation, DeleteManyPageMutationVariables>;
export const UpdateManyPageDocument = gql`
    mutation updateManyPage($where: PageWhereInput, $data: PageUpdateManyMutationInput!) {
  updateManyPage(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyPageMutation__
 *
 * To run a mutation, you first call `useUpdateManyPageMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyPageMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyPageMutation, { data, loading, error }] = useUpdateManyPageMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyPageMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyPageMutation, UpdateManyPageMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyPageMutation, UpdateManyPageMutationVariables>(UpdateManyPageDocument, options);
      }
export type UpdateManyPageMutationHookResult = ReturnType<typeof useUpdateManyPageMutation>;
export type UpdateManyPageMutationResult = Apollo.MutationResult<UpdateManyPageMutation>;
export type UpdateManyPageMutationOptions = Apollo.BaseMutationOptions<UpdateManyPageMutation, UpdateManyPageMutationVariables>;
export const FindUniquePageCollectionDocument = gql`
    query findUniquePageCollection($where: PageCollectionWhereUniqueInput!) {
  findUniquePageCollection(where: $where) {
    ...PageCollection
  }
}
    ${PageCollectionFragmentDoc}`;

/**
 * __useFindUniquePageCollectionQuery__
 *
 * To run a query within a React component, call `useFindUniquePageCollectionQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniquePageCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniquePageCollectionQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniquePageCollectionQuery(baseOptions: Apollo.QueryHookOptions<FindUniquePageCollectionQuery, FindUniquePageCollectionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniquePageCollectionQuery, FindUniquePageCollectionQueryVariables>(FindUniquePageCollectionDocument, options);
      }
export function useFindUniquePageCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniquePageCollectionQuery, FindUniquePageCollectionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniquePageCollectionQuery, FindUniquePageCollectionQueryVariables>(FindUniquePageCollectionDocument, options);
        }
export type FindUniquePageCollectionQueryHookResult = ReturnType<typeof useFindUniquePageCollectionQuery>;
export type FindUniquePageCollectionLazyQueryHookResult = ReturnType<typeof useFindUniquePageCollectionLazyQuery>;
export type FindUniquePageCollectionQueryResult = Apollo.QueryResult<FindUniquePageCollectionQuery, FindUniquePageCollectionQueryVariables>;
export const FindManyPageCollectionDocument = gql`
    query findManyPageCollection($where: PageCollectionWhereInput, $orderBy: [PageCollectionOrderByWithRelationInput!], $cursor: PageCollectionWhereUniqueInput, $skip: Int, $take: Int) {
  findManyPageCollection(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...PageCollection
  }
}
    ${PageCollectionFragmentDoc}`;

/**
 * __useFindManyPageCollectionQuery__
 *
 * To run a query within a React component, call `useFindManyPageCollectionQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyPageCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyPageCollectionQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyPageCollectionQuery(baseOptions?: Apollo.QueryHookOptions<FindManyPageCollectionQuery, FindManyPageCollectionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyPageCollectionQuery, FindManyPageCollectionQueryVariables>(FindManyPageCollectionDocument, options);
      }
export function useFindManyPageCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyPageCollectionQuery, FindManyPageCollectionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyPageCollectionQuery, FindManyPageCollectionQueryVariables>(FindManyPageCollectionDocument, options);
        }
export type FindManyPageCollectionQueryHookResult = ReturnType<typeof useFindManyPageCollectionQuery>;
export type FindManyPageCollectionLazyQueryHookResult = ReturnType<typeof useFindManyPageCollectionLazyQuery>;
export type FindManyPageCollectionQueryResult = Apollo.QueryResult<FindManyPageCollectionQuery, FindManyPageCollectionQueryVariables>;
export const FindManyPageCollectionCountDocument = gql`
    query findManyPageCollectionCount($where: PageCollectionWhereInput, $orderBy: [PageCollectionOrderByWithRelationInput!], $cursor: PageCollectionWhereUniqueInput, $skip: Int, $take: Int) {
  findManyPageCollectionCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyPageCollectionCountQuery__
 *
 * To run a query within a React component, call `useFindManyPageCollectionCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyPageCollectionCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyPageCollectionCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyPageCollectionCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyPageCollectionCountQuery, FindManyPageCollectionCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyPageCollectionCountQuery, FindManyPageCollectionCountQueryVariables>(FindManyPageCollectionCountDocument, options);
      }
export function useFindManyPageCollectionCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyPageCollectionCountQuery, FindManyPageCollectionCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyPageCollectionCountQuery, FindManyPageCollectionCountQueryVariables>(FindManyPageCollectionCountDocument, options);
        }
export type FindManyPageCollectionCountQueryHookResult = ReturnType<typeof useFindManyPageCollectionCountQuery>;
export type FindManyPageCollectionCountLazyQueryHookResult = ReturnType<typeof useFindManyPageCollectionCountLazyQuery>;
export type FindManyPageCollectionCountQueryResult = Apollo.QueryResult<FindManyPageCollectionCountQuery, FindManyPageCollectionCountQueryVariables>;
export const CreateOnePageCollectionDocument = gql`
    mutation createOnePageCollection($data: PageCollectionCreateInput!) {
  createOnePageCollection(data: $data) {
    ...PageCollection
  }
}
    ${PageCollectionFragmentDoc}`;

/**
 * __useCreateOnePageCollectionMutation__
 *
 * To run a mutation, you first call `useCreateOnePageCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOnePageCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOnePageCollectionMutation, { data, loading, error }] = useCreateOnePageCollectionMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOnePageCollectionMutation(baseOptions?: Apollo.MutationHookOptions<CreateOnePageCollectionMutation, CreateOnePageCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOnePageCollectionMutation, CreateOnePageCollectionMutationVariables>(CreateOnePageCollectionDocument, options);
      }
export type CreateOnePageCollectionMutationHookResult = ReturnType<typeof useCreateOnePageCollectionMutation>;
export type CreateOnePageCollectionMutationResult = Apollo.MutationResult<CreateOnePageCollectionMutation>;
export type CreateOnePageCollectionMutationOptions = Apollo.BaseMutationOptions<CreateOnePageCollectionMutation, CreateOnePageCollectionMutationVariables>;
export const UpdateOnePageCollectionDocument = gql`
    mutation updateOnePageCollection($where: PageCollectionWhereUniqueInput!, $data: PageCollectionUpdateInput!) {
  updateOnePageCollection(where: $where, data: $data) {
    ...PageCollection
  }
}
    ${PageCollectionFragmentDoc}`;

/**
 * __useUpdateOnePageCollectionMutation__
 *
 * To run a mutation, you first call `useUpdateOnePageCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOnePageCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOnePageCollectionMutation, { data, loading, error }] = useUpdateOnePageCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOnePageCollectionMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOnePageCollectionMutation, UpdateOnePageCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOnePageCollectionMutation, UpdateOnePageCollectionMutationVariables>(UpdateOnePageCollectionDocument, options);
      }
export type UpdateOnePageCollectionMutationHookResult = ReturnType<typeof useUpdateOnePageCollectionMutation>;
export type UpdateOnePageCollectionMutationResult = Apollo.MutationResult<UpdateOnePageCollectionMutation>;
export type UpdateOnePageCollectionMutationOptions = Apollo.BaseMutationOptions<UpdateOnePageCollectionMutation, UpdateOnePageCollectionMutationVariables>;
export const DeleteOnePageCollectionDocument = gql`
    mutation deleteOnePageCollection($where: PageCollectionWhereUniqueInput!) {
  deleteOnePageCollection(where: $where) {
    ...PageCollection
  }
}
    ${PageCollectionFragmentDoc}`;

/**
 * __useDeleteOnePageCollectionMutation__
 *
 * To run a mutation, you first call `useDeleteOnePageCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOnePageCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOnePageCollectionMutation, { data, loading, error }] = useDeleteOnePageCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOnePageCollectionMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOnePageCollectionMutation, DeleteOnePageCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOnePageCollectionMutation, DeleteOnePageCollectionMutationVariables>(DeleteOnePageCollectionDocument, options);
      }
export type DeleteOnePageCollectionMutationHookResult = ReturnType<typeof useDeleteOnePageCollectionMutation>;
export type DeleteOnePageCollectionMutationResult = Apollo.MutationResult<DeleteOnePageCollectionMutation>;
export type DeleteOnePageCollectionMutationOptions = Apollo.BaseMutationOptions<DeleteOnePageCollectionMutation, DeleteOnePageCollectionMutationVariables>;
export const DeleteManyPageCollectionDocument = gql`
    mutation deleteManyPageCollection($where: PageCollectionWhereInput) {
  deleteManyPageCollection(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyPageCollectionMutation__
 *
 * To run a mutation, you first call `useDeleteManyPageCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyPageCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyPageCollectionMutation, { data, loading, error }] = useDeleteManyPageCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyPageCollectionMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyPageCollectionMutation, DeleteManyPageCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyPageCollectionMutation, DeleteManyPageCollectionMutationVariables>(DeleteManyPageCollectionDocument, options);
      }
export type DeleteManyPageCollectionMutationHookResult = ReturnType<typeof useDeleteManyPageCollectionMutation>;
export type DeleteManyPageCollectionMutationResult = Apollo.MutationResult<DeleteManyPageCollectionMutation>;
export type DeleteManyPageCollectionMutationOptions = Apollo.BaseMutationOptions<DeleteManyPageCollectionMutation, DeleteManyPageCollectionMutationVariables>;
export const UpdateManyPageCollectionDocument = gql`
    mutation updateManyPageCollection($where: PageCollectionWhereInput, $data: PageCollectionUpdateManyMutationInput!) {
  updateManyPageCollection(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyPageCollectionMutation__
 *
 * To run a mutation, you first call `useUpdateManyPageCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyPageCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyPageCollectionMutation, { data, loading, error }] = useUpdateManyPageCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyPageCollectionMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyPageCollectionMutation, UpdateManyPageCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyPageCollectionMutation, UpdateManyPageCollectionMutationVariables>(UpdateManyPageCollectionDocument, options);
      }
export type UpdateManyPageCollectionMutationHookResult = ReturnType<typeof useUpdateManyPageCollectionMutation>;
export type UpdateManyPageCollectionMutationResult = Apollo.MutationResult<UpdateManyPageCollectionMutation>;
export type UpdateManyPageCollectionMutationOptions = Apollo.BaseMutationOptions<UpdateManyPageCollectionMutation, UpdateManyPageCollectionMutationVariables>;
export const FindUniquePageViewDocument = gql`
    query findUniquePageView($where: PageViewWhereUniqueInput!) {
  findUniquePageView(where: $where) {
    ...PageView
  }
}
    ${PageViewFragmentDoc}`;

/**
 * __useFindUniquePageViewQuery__
 *
 * To run a query within a React component, call `useFindUniquePageViewQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniquePageViewQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniquePageViewQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniquePageViewQuery(baseOptions: Apollo.QueryHookOptions<FindUniquePageViewQuery, FindUniquePageViewQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniquePageViewQuery, FindUniquePageViewQueryVariables>(FindUniquePageViewDocument, options);
      }
export function useFindUniquePageViewLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniquePageViewQuery, FindUniquePageViewQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniquePageViewQuery, FindUniquePageViewQueryVariables>(FindUniquePageViewDocument, options);
        }
export type FindUniquePageViewQueryHookResult = ReturnType<typeof useFindUniquePageViewQuery>;
export type FindUniquePageViewLazyQueryHookResult = ReturnType<typeof useFindUniquePageViewLazyQuery>;
export type FindUniquePageViewQueryResult = Apollo.QueryResult<FindUniquePageViewQuery, FindUniquePageViewQueryVariables>;
export const FindManyPageViewDocument = gql`
    query findManyPageView($where: PageViewWhereInput, $orderBy: [PageViewOrderByWithRelationInput!], $cursor: PageViewWhereUniqueInput, $skip: Int, $take: Int) {
  findManyPageView(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...PageView
  }
}
    ${PageViewFragmentDoc}`;

/**
 * __useFindManyPageViewQuery__
 *
 * To run a query within a React component, call `useFindManyPageViewQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyPageViewQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyPageViewQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyPageViewQuery(baseOptions?: Apollo.QueryHookOptions<FindManyPageViewQuery, FindManyPageViewQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyPageViewQuery, FindManyPageViewQueryVariables>(FindManyPageViewDocument, options);
      }
export function useFindManyPageViewLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyPageViewQuery, FindManyPageViewQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyPageViewQuery, FindManyPageViewQueryVariables>(FindManyPageViewDocument, options);
        }
export type FindManyPageViewQueryHookResult = ReturnType<typeof useFindManyPageViewQuery>;
export type FindManyPageViewLazyQueryHookResult = ReturnType<typeof useFindManyPageViewLazyQuery>;
export type FindManyPageViewQueryResult = Apollo.QueryResult<FindManyPageViewQuery, FindManyPageViewQueryVariables>;
export const FindManyPageViewCountDocument = gql`
    query findManyPageViewCount($where: PageViewWhereInput, $orderBy: [PageViewOrderByWithRelationInput!], $cursor: PageViewWhereUniqueInput, $skip: Int, $take: Int) {
  findManyPageViewCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyPageViewCountQuery__
 *
 * To run a query within a React component, call `useFindManyPageViewCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyPageViewCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyPageViewCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyPageViewCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyPageViewCountQuery, FindManyPageViewCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyPageViewCountQuery, FindManyPageViewCountQueryVariables>(FindManyPageViewCountDocument, options);
      }
export function useFindManyPageViewCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyPageViewCountQuery, FindManyPageViewCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyPageViewCountQuery, FindManyPageViewCountQueryVariables>(FindManyPageViewCountDocument, options);
        }
export type FindManyPageViewCountQueryHookResult = ReturnType<typeof useFindManyPageViewCountQuery>;
export type FindManyPageViewCountLazyQueryHookResult = ReturnType<typeof useFindManyPageViewCountLazyQuery>;
export type FindManyPageViewCountQueryResult = Apollo.QueryResult<FindManyPageViewCountQuery, FindManyPageViewCountQueryVariables>;
export const CreateOnePageViewDocument = gql`
    mutation createOnePageView($data: PageViewCreateInput!) {
  createOnePageView(data: $data) {
    ...PageView
  }
}
    ${PageViewFragmentDoc}`;

/**
 * __useCreateOnePageViewMutation__
 *
 * To run a mutation, you first call `useCreateOnePageViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOnePageViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOnePageViewMutation, { data, loading, error }] = useCreateOnePageViewMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOnePageViewMutation(baseOptions?: Apollo.MutationHookOptions<CreateOnePageViewMutation, CreateOnePageViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOnePageViewMutation, CreateOnePageViewMutationVariables>(CreateOnePageViewDocument, options);
      }
export type CreateOnePageViewMutationHookResult = ReturnType<typeof useCreateOnePageViewMutation>;
export type CreateOnePageViewMutationResult = Apollo.MutationResult<CreateOnePageViewMutation>;
export type CreateOnePageViewMutationOptions = Apollo.BaseMutationOptions<CreateOnePageViewMutation, CreateOnePageViewMutationVariables>;
export const UpdateOnePageViewDocument = gql`
    mutation updateOnePageView($where: PageViewWhereUniqueInput!, $data: PageViewUpdateInput!) {
  updateOnePageView(where: $where, data: $data) {
    ...PageView
  }
}
    ${PageViewFragmentDoc}`;

/**
 * __useUpdateOnePageViewMutation__
 *
 * To run a mutation, you first call `useUpdateOnePageViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOnePageViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOnePageViewMutation, { data, loading, error }] = useUpdateOnePageViewMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOnePageViewMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOnePageViewMutation, UpdateOnePageViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOnePageViewMutation, UpdateOnePageViewMutationVariables>(UpdateOnePageViewDocument, options);
      }
export type UpdateOnePageViewMutationHookResult = ReturnType<typeof useUpdateOnePageViewMutation>;
export type UpdateOnePageViewMutationResult = Apollo.MutationResult<UpdateOnePageViewMutation>;
export type UpdateOnePageViewMutationOptions = Apollo.BaseMutationOptions<UpdateOnePageViewMutation, UpdateOnePageViewMutationVariables>;
export const DeleteOnePageViewDocument = gql`
    mutation deleteOnePageView($where: PageViewWhereUniqueInput!) {
  deleteOnePageView(where: $where) {
    ...PageView
  }
}
    ${PageViewFragmentDoc}`;

/**
 * __useDeleteOnePageViewMutation__
 *
 * To run a mutation, you first call `useDeleteOnePageViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOnePageViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOnePageViewMutation, { data, loading, error }] = useDeleteOnePageViewMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOnePageViewMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOnePageViewMutation, DeleteOnePageViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOnePageViewMutation, DeleteOnePageViewMutationVariables>(DeleteOnePageViewDocument, options);
      }
export type DeleteOnePageViewMutationHookResult = ReturnType<typeof useDeleteOnePageViewMutation>;
export type DeleteOnePageViewMutationResult = Apollo.MutationResult<DeleteOnePageViewMutation>;
export type DeleteOnePageViewMutationOptions = Apollo.BaseMutationOptions<DeleteOnePageViewMutation, DeleteOnePageViewMutationVariables>;
export const DeleteManyPageViewDocument = gql`
    mutation deleteManyPageView($where: PageViewWhereInput) {
  deleteManyPageView(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyPageViewMutation__
 *
 * To run a mutation, you first call `useDeleteManyPageViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyPageViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyPageViewMutation, { data, loading, error }] = useDeleteManyPageViewMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyPageViewMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyPageViewMutation, DeleteManyPageViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyPageViewMutation, DeleteManyPageViewMutationVariables>(DeleteManyPageViewDocument, options);
      }
export type DeleteManyPageViewMutationHookResult = ReturnType<typeof useDeleteManyPageViewMutation>;
export type DeleteManyPageViewMutationResult = Apollo.MutationResult<DeleteManyPageViewMutation>;
export type DeleteManyPageViewMutationOptions = Apollo.BaseMutationOptions<DeleteManyPageViewMutation, DeleteManyPageViewMutationVariables>;
export const UpdateManyPageViewDocument = gql`
    mutation updateManyPageView($where: PageViewWhereInput, $data: PageViewUpdateManyMutationInput!) {
  updateManyPageView(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyPageViewMutation__
 *
 * To run a mutation, you first call `useUpdateManyPageViewMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyPageViewMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyPageViewMutation, { data, loading, error }] = useUpdateManyPageViewMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyPageViewMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyPageViewMutation, UpdateManyPageViewMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyPageViewMutation, UpdateManyPageViewMutationVariables>(UpdateManyPageViewDocument, options);
      }
export type UpdateManyPageViewMutationHookResult = ReturnType<typeof useUpdateManyPageViewMutation>;
export type UpdateManyPageViewMutationResult = Apollo.MutationResult<UpdateManyPageViewMutation>;
export type UpdateManyPageViewMutationOptions = Apollo.BaseMutationOptions<UpdateManyPageViewMutation, UpdateManyPageViewMutationVariables>;
export const FindUniquePictureDocument = gql`
    query findUniquePicture($where: PictureWhereUniqueInput!) {
  findUniquePicture(where: $where) {
    ...Picture
  }
}
    ${PictureFragmentDoc}`;

/**
 * __useFindUniquePictureQuery__
 *
 * To run a query within a React component, call `useFindUniquePictureQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniquePictureQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniquePictureQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniquePictureQuery(baseOptions: Apollo.QueryHookOptions<FindUniquePictureQuery, FindUniquePictureQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniquePictureQuery, FindUniquePictureQueryVariables>(FindUniquePictureDocument, options);
      }
export function useFindUniquePictureLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniquePictureQuery, FindUniquePictureQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniquePictureQuery, FindUniquePictureQueryVariables>(FindUniquePictureDocument, options);
        }
export type FindUniquePictureQueryHookResult = ReturnType<typeof useFindUniquePictureQuery>;
export type FindUniquePictureLazyQueryHookResult = ReturnType<typeof useFindUniquePictureLazyQuery>;
export type FindUniquePictureQueryResult = Apollo.QueryResult<FindUniquePictureQuery, FindUniquePictureQueryVariables>;
export const FindManyPictureDocument = gql`
    query findManyPicture($where: PictureWhereInput, $orderBy: [PictureOrderByWithRelationInput!], $cursor: PictureWhereUniqueInput, $skip: Int, $take: Int) {
  findManyPicture(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Picture
  }
}
    ${PictureFragmentDoc}`;

/**
 * __useFindManyPictureQuery__
 *
 * To run a query within a React component, call `useFindManyPictureQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyPictureQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyPictureQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyPictureQuery(baseOptions?: Apollo.QueryHookOptions<FindManyPictureQuery, FindManyPictureQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyPictureQuery, FindManyPictureQueryVariables>(FindManyPictureDocument, options);
      }
export function useFindManyPictureLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyPictureQuery, FindManyPictureQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyPictureQuery, FindManyPictureQueryVariables>(FindManyPictureDocument, options);
        }
export type FindManyPictureQueryHookResult = ReturnType<typeof useFindManyPictureQuery>;
export type FindManyPictureLazyQueryHookResult = ReturnType<typeof useFindManyPictureLazyQuery>;
export type FindManyPictureQueryResult = Apollo.QueryResult<FindManyPictureQuery, FindManyPictureQueryVariables>;
export const FindManyPictureCountDocument = gql`
    query findManyPictureCount($where: PictureWhereInput, $orderBy: [PictureOrderByWithRelationInput!], $cursor: PictureWhereUniqueInput, $skip: Int, $take: Int) {
  findManyPictureCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyPictureCountQuery__
 *
 * To run a query within a React component, call `useFindManyPictureCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyPictureCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyPictureCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyPictureCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyPictureCountQuery, FindManyPictureCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyPictureCountQuery, FindManyPictureCountQueryVariables>(FindManyPictureCountDocument, options);
      }
export function useFindManyPictureCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyPictureCountQuery, FindManyPictureCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyPictureCountQuery, FindManyPictureCountQueryVariables>(FindManyPictureCountDocument, options);
        }
export type FindManyPictureCountQueryHookResult = ReturnType<typeof useFindManyPictureCountQuery>;
export type FindManyPictureCountLazyQueryHookResult = ReturnType<typeof useFindManyPictureCountLazyQuery>;
export type FindManyPictureCountQueryResult = Apollo.QueryResult<FindManyPictureCountQuery, FindManyPictureCountQueryVariables>;
export const CreateOnePictureDocument = gql`
    mutation createOnePicture($data: PictureCreateInput!) {
  createOnePicture(data: $data) {
    ...Picture
  }
}
    ${PictureFragmentDoc}`;

/**
 * __useCreateOnePictureMutation__
 *
 * To run a mutation, you first call `useCreateOnePictureMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOnePictureMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOnePictureMutation, { data, loading, error }] = useCreateOnePictureMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOnePictureMutation(baseOptions?: Apollo.MutationHookOptions<CreateOnePictureMutation, CreateOnePictureMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOnePictureMutation, CreateOnePictureMutationVariables>(CreateOnePictureDocument, options);
      }
export type CreateOnePictureMutationHookResult = ReturnType<typeof useCreateOnePictureMutation>;
export type CreateOnePictureMutationResult = Apollo.MutationResult<CreateOnePictureMutation>;
export type CreateOnePictureMutationOptions = Apollo.BaseMutationOptions<CreateOnePictureMutation, CreateOnePictureMutationVariables>;
export const UpdateOnePictureDocument = gql`
    mutation updateOnePicture($where: PictureWhereUniqueInput!, $data: PictureUpdateInput!) {
  updateOnePicture(where: $where, data: $data) {
    ...Picture
  }
}
    ${PictureFragmentDoc}`;

/**
 * __useUpdateOnePictureMutation__
 *
 * To run a mutation, you first call `useUpdateOnePictureMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOnePictureMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOnePictureMutation, { data, loading, error }] = useUpdateOnePictureMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOnePictureMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOnePictureMutation, UpdateOnePictureMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOnePictureMutation, UpdateOnePictureMutationVariables>(UpdateOnePictureDocument, options);
      }
export type UpdateOnePictureMutationHookResult = ReturnType<typeof useUpdateOnePictureMutation>;
export type UpdateOnePictureMutationResult = Apollo.MutationResult<UpdateOnePictureMutation>;
export type UpdateOnePictureMutationOptions = Apollo.BaseMutationOptions<UpdateOnePictureMutation, UpdateOnePictureMutationVariables>;
export const DeleteOnePictureDocument = gql`
    mutation deleteOnePicture($where: PictureWhereUniqueInput!) {
  deleteOnePicture(where: $where) {
    ...Picture
  }
}
    ${PictureFragmentDoc}`;

/**
 * __useDeleteOnePictureMutation__
 *
 * To run a mutation, you first call `useDeleteOnePictureMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOnePictureMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOnePictureMutation, { data, loading, error }] = useDeleteOnePictureMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOnePictureMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOnePictureMutation, DeleteOnePictureMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOnePictureMutation, DeleteOnePictureMutationVariables>(DeleteOnePictureDocument, options);
      }
export type DeleteOnePictureMutationHookResult = ReturnType<typeof useDeleteOnePictureMutation>;
export type DeleteOnePictureMutationResult = Apollo.MutationResult<DeleteOnePictureMutation>;
export type DeleteOnePictureMutationOptions = Apollo.BaseMutationOptions<DeleteOnePictureMutation, DeleteOnePictureMutationVariables>;
export const DeleteManyPictureDocument = gql`
    mutation deleteManyPicture($where: PictureWhereInput) {
  deleteManyPicture(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyPictureMutation__
 *
 * To run a mutation, you first call `useDeleteManyPictureMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyPictureMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyPictureMutation, { data, loading, error }] = useDeleteManyPictureMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyPictureMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyPictureMutation, DeleteManyPictureMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyPictureMutation, DeleteManyPictureMutationVariables>(DeleteManyPictureDocument, options);
      }
export type DeleteManyPictureMutationHookResult = ReturnType<typeof useDeleteManyPictureMutation>;
export type DeleteManyPictureMutationResult = Apollo.MutationResult<DeleteManyPictureMutation>;
export type DeleteManyPictureMutationOptions = Apollo.BaseMutationOptions<DeleteManyPictureMutation, DeleteManyPictureMutationVariables>;
export const UpdateManyPictureDocument = gql`
    mutation updateManyPicture($where: PictureWhereInput, $data: PictureUpdateManyMutationInput!) {
  updateManyPicture(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyPictureMutation__
 *
 * To run a mutation, you first call `useUpdateManyPictureMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyPictureMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyPictureMutation, { data, loading, error }] = useUpdateManyPictureMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyPictureMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyPictureMutation, UpdateManyPictureMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyPictureMutation, UpdateManyPictureMutationVariables>(UpdateManyPictureDocument, options);
      }
export type UpdateManyPictureMutationHookResult = ReturnType<typeof useUpdateManyPictureMutation>;
export type UpdateManyPictureMutationResult = Apollo.MutationResult<UpdateManyPictureMutation>;
export type UpdateManyPictureMutationOptions = Apollo.BaseMutationOptions<UpdateManyPictureMutation, UpdateManyPictureMutationVariables>;
export const FindUniqueProductDocument = gql`
    query findUniqueProduct($where: ProductWhereUniqueInput!) {
  findUniqueProduct(where: $where) {
    ...Product
  }
}
    ${ProductFragmentDoc}`;

/**
 * __useFindUniqueProductQuery__
 *
 * To run a query within a React component, call `useFindUniqueProductQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueProductQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueProductQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueProductQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueProductQuery, FindUniqueProductQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueProductQuery, FindUniqueProductQueryVariables>(FindUniqueProductDocument, options);
      }
export function useFindUniqueProductLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueProductQuery, FindUniqueProductQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueProductQuery, FindUniqueProductQueryVariables>(FindUniqueProductDocument, options);
        }
export type FindUniqueProductQueryHookResult = ReturnType<typeof useFindUniqueProductQuery>;
export type FindUniqueProductLazyQueryHookResult = ReturnType<typeof useFindUniqueProductLazyQuery>;
export type FindUniqueProductQueryResult = Apollo.QueryResult<FindUniqueProductQuery, FindUniqueProductQueryVariables>;
export const FindManyProductDocument = gql`
    query findManyProduct($where: ProductWhereInput, $orderBy: [ProductOrderByWithRelationInput!], $cursor: ProductWhereUniqueInput, $skip: Int, $take: Int) {
  findManyProduct(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Product
  }
}
    ${ProductFragmentDoc}`;

/**
 * __useFindManyProductQuery__
 *
 * To run a query within a React component, call `useFindManyProductQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyProductQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyProductQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyProductQuery(baseOptions?: Apollo.QueryHookOptions<FindManyProductQuery, FindManyProductQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyProductQuery, FindManyProductQueryVariables>(FindManyProductDocument, options);
      }
export function useFindManyProductLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyProductQuery, FindManyProductQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyProductQuery, FindManyProductQueryVariables>(FindManyProductDocument, options);
        }
export type FindManyProductQueryHookResult = ReturnType<typeof useFindManyProductQuery>;
export type FindManyProductLazyQueryHookResult = ReturnType<typeof useFindManyProductLazyQuery>;
export type FindManyProductQueryResult = Apollo.QueryResult<FindManyProductQuery, FindManyProductQueryVariables>;
export const FindManyProductCountDocument = gql`
    query findManyProductCount($where: ProductWhereInput, $orderBy: [ProductOrderByWithRelationInput!], $cursor: ProductWhereUniqueInput, $skip: Int, $take: Int) {
  findManyProductCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyProductCountQuery__
 *
 * To run a query within a React component, call `useFindManyProductCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyProductCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyProductCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyProductCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyProductCountQuery, FindManyProductCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyProductCountQuery, FindManyProductCountQueryVariables>(FindManyProductCountDocument, options);
      }
export function useFindManyProductCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyProductCountQuery, FindManyProductCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyProductCountQuery, FindManyProductCountQueryVariables>(FindManyProductCountDocument, options);
        }
export type FindManyProductCountQueryHookResult = ReturnType<typeof useFindManyProductCountQuery>;
export type FindManyProductCountLazyQueryHookResult = ReturnType<typeof useFindManyProductCountLazyQuery>;
export type FindManyProductCountQueryResult = Apollo.QueryResult<FindManyProductCountQuery, FindManyProductCountQueryVariables>;
export const CreateOneProductDocument = gql`
    mutation createOneProduct($data: ProductCreateInput!) {
  createOneProduct(data: $data) {
    ...Product
  }
}
    ${ProductFragmentDoc}`;

/**
 * __useCreateOneProductMutation__
 *
 * To run a mutation, you first call `useCreateOneProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneProductMutation, { data, loading, error }] = useCreateOneProductMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneProductMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneProductMutation, CreateOneProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneProductMutation, CreateOneProductMutationVariables>(CreateOneProductDocument, options);
      }
export type CreateOneProductMutationHookResult = ReturnType<typeof useCreateOneProductMutation>;
export type CreateOneProductMutationResult = Apollo.MutationResult<CreateOneProductMutation>;
export type CreateOneProductMutationOptions = Apollo.BaseMutationOptions<CreateOneProductMutation, CreateOneProductMutationVariables>;
export const UpdateOneProductDocument = gql`
    mutation updateOneProduct($where: ProductWhereUniqueInput!, $data: ProductUpdateInput!) {
  updateOneProduct(where: $where, data: $data) {
    ...Product
  }
}
    ${ProductFragmentDoc}`;

/**
 * __useUpdateOneProductMutation__
 *
 * To run a mutation, you first call `useUpdateOneProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneProductMutation, { data, loading, error }] = useUpdateOneProductMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneProductMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneProductMutation, UpdateOneProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneProductMutation, UpdateOneProductMutationVariables>(UpdateOneProductDocument, options);
      }
export type UpdateOneProductMutationHookResult = ReturnType<typeof useUpdateOneProductMutation>;
export type UpdateOneProductMutationResult = Apollo.MutationResult<UpdateOneProductMutation>;
export type UpdateOneProductMutationOptions = Apollo.BaseMutationOptions<UpdateOneProductMutation, UpdateOneProductMutationVariables>;
export const DeleteOneProductDocument = gql`
    mutation deleteOneProduct($where: ProductWhereUniqueInput!) {
  deleteOneProduct(where: $where) {
    ...Product
  }
}
    ${ProductFragmentDoc}`;

/**
 * __useDeleteOneProductMutation__
 *
 * To run a mutation, you first call `useDeleteOneProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneProductMutation, { data, loading, error }] = useDeleteOneProductMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneProductMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneProductMutation, DeleteOneProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneProductMutation, DeleteOneProductMutationVariables>(DeleteOneProductDocument, options);
      }
export type DeleteOneProductMutationHookResult = ReturnType<typeof useDeleteOneProductMutation>;
export type DeleteOneProductMutationResult = Apollo.MutationResult<DeleteOneProductMutation>;
export type DeleteOneProductMutationOptions = Apollo.BaseMutationOptions<DeleteOneProductMutation, DeleteOneProductMutationVariables>;
export const DeleteManyProductDocument = gql`
    mutation deleteManyProduct($where: ProductWhereInput) {
  deleteManyProduct(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyProductMutation__
 *
 * To run a mutation, you first call `useDeleteManyProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyProductMutation, { data, loading, error }] = useDeleteManyProductMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyProductMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyProductMutation, DeleteManyProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyProductMutation, DeleteManyProductMutationVariables>(DeleteManyProductDocument, options);
      }
export type DeleteManyProductMutationHookResult = ReturnType<typeof useDeleteManyProductMutation>;
export type DeleteManyProductMutationResult = Apollo.MutationResult<DeleteManyProductMutation>;
export type DeleteManyProductMutationOptions = Apollo.BaseMutationOptions<DeleteManyProductMutation, DeleteManyProductMutationVariables>;
export const UpdateManyProductDocument = gql`
    mutation updateManyProduct($where: ProductWhereInput, $data: ProductUpdateManyMutationInput!) {
  updateManyProduct(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyProductMutation__
 *
 * To run a mutation, you first call `useUpdateManyProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyProductMutation, { data, loading, error }] = useUpdateManyProductMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyProductMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyProductMutation, UpdateManyProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyProductMutation, UpdateManyProductMutationVariables>(UpdateManyProductDocument, options);
      }
export type UpdateManyProductMutationHookResult = ReturnType<typeof useUpdateManyProductMutation>;
export type UpdateManyProductMutationResult = Apollo.MutationResult<UpdateManyProductMutation>;
export type UpdateManyProductMutationOptions = Apollo.BaseMutationOptions<UpdateManyProductMutation, UpdateManyProductMutationVariables>;
export const FindUniqueProductCollectionDocument = gql`
    query findUniqueProductCollection($where: ProductCollectionWhereUniqueInput!) {
  findUniqueProductCollection(where: $where) {
    ...ProductCollection
  }
}
    ${ProductCollectionFragmentDoc}`;

/**
 * __useFindUniqueProductCollectionQuery__
 *
 * To run a query within a React component, call `useFindUniqueProductCollectionQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueProductCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueProductCollectionQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueProductCollectionQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueProductCollectionQuery, FindUniqueProductCollectionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueProductCollectionQuery, FindUniqueProductCollectionQueryVariables>(FindUniqueProductCollectionDocument, options);
      }
export function useFindUniqueProductCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueProductCollectionQuery, FindUniqueProductCollectionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueProductCollectionQuery, FindUniqueProductCollectionQueryVariables>(FindUniqueProductCollectionDocument, options);
        }
export type FindUniqueProductCollectionQueryHookResult = ReturnType<typeof useFindUniqueProductCollectionQuery>;
export type FindUniqueProductCollectionLazyQueryHookResult = ReturnType<typeof useFindUniqueProductCollectionLazyQuery>;
export type FindUniqueProductCollectionQueryResult = Apollo.QueryResult<FindUniqueProductCollectionQuery, FindUniqueProductCollectionQueryVariables>;
export const FindManyProductCollectionDocument = gql`
    query findManyProductCollection($where: ProductCollectionWhereInput, $orderBy: [ProductCollectionOrderByWithRelationInput!], $cursor: ProductCollectionWhereUniqueInput, $skip: Int, $take: Int) {
  findManyProductCollection(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...ProductCollection
  }
}
    ${ProductCollectionFragmentDoc}`;

/**
 * __useFindManyProductCollectionQuery__
 *
 * To run a query within a React component, call `useFindManyProductCollectionQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyProductCollectionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyProductCollectionQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyProductCollectionQuery(baseOptions?: Apollo.QueryHookOptions<FindManyProductCollectionQuery, FindManyProductCollectionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyProductCollectionQuery, FindManyProductCollectionQueryVariables>(FindManyProductCollectionDocument, options);
      }
export function useFindManyProductCollectionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyProductCollectionQuery, FindManyProductCollectionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyProductCollectionQuery, FindManyProductCollectionQueryVariables>(FindManyProductCollectionDocument, options);
        }
export type FindManyProductCollectionQueryHookResult = ReturnType<typeof useFindManyProductCollectionQuery>;
export type FindManyProductCollectionLazyQueryHookResult = ReturnType<typeof useFindManyProductCollectionLazyQuery>;
export type FindManyProductCollectionQueryResult = Apollo.QueryResult<FindManyProductCollectionQuery, FindManyProductCollectionQueryVariables>;
export const FindManyProductCollectionCountDocument = gql`
    query findManyProductCollectionCount($where: ProductCollectionWhereInput, $orderBy: [ProductCollectionOrderByWithRelationInput!], $cursor: ProductCollectionWhereUniqueInput, $skip: Int, $take: Int) {
  findManyProductCollectionCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyProductCollectionCountQuery__
 *
 * To run a query within a React component, call `useFindManyProductCollectionCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyProductCollectionCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyProductCollectionCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyProductCollectionCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyProductCollectionCountQuery, FindManyProductCollectionCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyProductCollectionCountQuery, FindManyProductCollectionCountQueryVariables>(FindManyProductCollectionCountDocument, options);
      }
export function useFindManyProductCollectionCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyProductCollectionCountQuery, FindManyProductCollectionCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyProductCollectionCountQuery, FindManyProductCollectionCountQueryVariables>(FindManyProductCollectionCountDocument, options);
        }
export type FindManyProductCollectionCountQueryHookResult = ReturnType<typeof useFindManyProductCollectionCountQuery>;
export type FindManyProductCollectionCountLazyQueryHookResult = ReturnType<typeof useFindManyProductCollectionCountLazyQuery>;
export type FindManyProductCollectionCountQueryResult = Apollo.QueryResult<FindManyProductCollectionCountQuery, FindManyProductCollectionCountQueryVariables>;
export const CreateOneProductCollectionDocument = gql`
    mutation createOneProductCollection($data: ProductCollectionCreateInput!) {
  createOneProductCollection(data: $data) {
    ...ProductCollection
  }
}
    ${ProductCollectionFragmentDoc}`;

/**
 * __useCreateOneProductCollectionMutation__
 *
 * To run a mutation, you first call `useCreateOneProductCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneProductCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneProductCollectionMutation, { data, loading, error }] = useCreateOneProductCollectionMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneProductCollectionMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneProductCollectionMutation, CreateOneProductCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneProductCollectionMutation, CreateOneProductCollectionMutationVariables>(CreateOneProductCollectionDocument, options);
      }
export type CreateOneProductCollectionMutationHookResult = ReturnType<typeof useCreateOneProductCollectionMutation>;
export type CreateOneProductCollectionMutationResult = Apollo.MutationResult<CreateOneProductCollectionMutation>;
export type CreateOneProductCollectionMutationOptions = Apollo.BaseMutationOptions<CreateOneProductCollectionMutation, CreateOneProductCollectionMutationVariables>;
export const UpdateOneProductCollectionDocument = gql`
    mutation updateOneProductCollection($where: ProductCollectionWhereUniqueInput!, $data: ProductCollectionUpdateInput!) {
  updateOneProductCollection(where: $where, data: $data) {
    ...ProductCollection
  }
}
    ${ProductCollectionFragmentDoc}`;

/**
 * __useUpdateOneProductCollectionMutation__
 *
 * To run a mutation, you first call `useUpdateOneProductCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneProductCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneProductCollectionMutation, { data, loading, error }] = useUpdateOneProductCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneProductCollectionMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneProductCollectionMutation, UpdateOneProductCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneProductCollectionMutation, UpdateOneProductCollectionMutationVariables>(UpdateOneProductCollectionDocument, options);
      }
export type UpdateOneProductCollectionMutationHookResult = ReturnType<typeof useUpdateOneProductCollectionMutation>;
export type UpdateOneProductCollectionMutationResult = Apollo.MutationResult<UpdateOneProductCollectionMutation>;
export type UpdateOneProductCollectionMutationOptions = Apollo.BaseMutationOptions<UpdateOneProductCollectionMutation, UpdateOneProductCollectionMutationVariables>;
export const DeleteOneProductCollectionDocument = gql`
    mutation deleteOneProductCollection($where: ProductCollectionWhereUniqueInput!) {
  deleteOneProductCollection(where: $where) {
    ...ProductCollection
  }
}
    ${ProductCollectionFragmentDoc}`;

/**
 * __useDeleteOneProductCollectionMutation__
 *
 * To run a mutation, you first call `useDeleteOneProductCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneProductCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneProductCollectionMutation, { data, loading, error }] = useDeleteOneProductCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneProductCollectionMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneProductCollectionMutation, DeleteOneProductCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneProductCollectionMutation, DeleteOneProductCollectionMutationVariables>(DeleteOneProductCollectionDocument, options);
      }
export type DeleteOneProductCollectionMutationHookResult = ReturnType<typeof useDeleteOneProductCollectionMutation>;
export type DeleteOneProductCollectionMutationResult = Apollo.MutationResult<DeleteOneProductCollectionMutation>;
export type DeleteOneProductCollectionMutationOptions = Apollo.BaseMutationOptions<DeleteOneProductCollectionMutation, DeleteOneProductCollectionMutationVariables>;
export const DeleteManyProductCollectionDocument = gql`
    mutation deleteManyProductCollection($where: ProductCollectionWhereInput) {
  deleteManyProductCollection(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyProductCollectionMutation__
 *
 * To run a mutation, you first call `useDeleteManyProductCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyProductCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyProductCollectionMutation, { data, loading, error }] = useDeleteManyProductCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyProductCollectionMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyProductCollectionMutation, DeleteManyProductCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyProductCollectionMutation, DeleteManyProductCollectionMutationVariables>(DeleteManyProductCollectionDocument, options);
      }
export type DeleteManyProductCollectionMutationHookResult = ReturnType<typeof useDeleteManyProductCollectionMutation>;
export type DeleteManyProductCollectionMutationResult = Apollo.MutationResult<DeleteManyProductCollectionMutation>;
export type DeleteManyProductCollectionMutationOptions = Apollo.BaseMutationOptions<DeleteManyProductCollectionMutation, DeleteManyProductCollectionMutationVariables>;
export const UpdateManyProductCollectionDocument = gql`
    mutation updateManyProductCollection($where: ProductCollectionWhereInput, $data: ProductCollectionUpdateManyMutationInput!) {
  updateManyProductCollection(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyProductCollectionMutation__
 *
 * To run a mutation, you first call `useUpdateManyProductCollectionMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyProductCollectionMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyProductCollectionMutation, { data, loading, error }] = useUpdateManyProductCollectionMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyProductCollectionMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyProductCollectionMutation, UpdateManyProductCollectionMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyProductCollectionMutation, UpdateManyProductCollectionMutationVariables>(UpdateManyProductCollectionDocument, options);
      }
export type UpdateManyProductCollectionMutationHookResult = ReturnType<typeof useUpdateManyProductCollectionMutation>;
export type UpdateManyProductCollectionMutationResult = Apollo.MutationResult<UpdateManyProductCollectionMutation>;
export type UpdateManyProductCollectionMutationOptions = Apollo.BaseMutationOptions<UpdateManyProductCollectionMutation, UpdateManyProductCollectionMutationVariables>;
export const FindUniqueRedeemableDocument = gql`
    query findUniqueRedeemable($where: RedeemableWhereUniqueInput!) {
  findUniqueRedeemable(where: $where) {
    ...Redeemable
  }
}
    ${RedeemableFragmentDoc}`;

/**
 * __useFindUniqueRedeemableQuery__
 *
 * To run a query within a React component, call `useFindUniqueRedeemableQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueRedeemableQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueRedeemableQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueRedeemableQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueRedeemableQuery, FindUniqueRedeemableQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueRedeemableQuery, FindUniqueRedeemableQueryVariables>(FindUniqueRedeemableDocument, options);
      }
export function useFindUniqueRedeemableLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueRedeemableQuery, FindUniqueRedeemableQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueRedeemableQuery, FindUniqueRedeemableQueryVariables>(FindUniqueRedeemableDocument, options);
        }
export type FindUniqueRedeemableQueryHookResult = ReturnType<typeof useFindUniqueRedeemableQuery>;
export type FindUniqueRedeemableLazyQueryHookResult = ReturnType<typeof useFindUniqueRedeemableLazyQuery>;
export type FindUniqueRedeemableQueryResult = Apollo.QueryResult<FindUniqueRedeemableQuery, FindUniqueRedeemableQueryVariables>;
export const FindManyRedeemableDocument = gql`
    query findManyRedeemable($where: RedeemableWhereInput, $orderBy: [RedeemableOrderByWithRelationInput!], $cursor: RedeemableWhereUniqueInput, $skip: Int, $take: Int) {
  findManyRedeemable(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Redeemable
  }
}
    ${RedeemableFragmentDoc}`;

/**
 * __useFindManyRedeemableQuery__
 *
 * To run a query within a React component, call `useFindManyRedeemableQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyRedeemableQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyRedeemableQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyRedeemableQuery(baseOptions?: Apollo.QueryHookOptions<FindManyRedeemableQuery, FindManyRedeemableQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyRedeemableQuery, FindManyRedeemableQueryVariables>(FindManyRedeemableDocument, options);
      }
export function useFindManyRedeemableLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyRedeemableQuery, FindManyRedeemableQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyRedeemableQuery, FindManyRedeemableQueryVariables>(FindManyRedeemableDocument, options);
        }
export type FindManyRedeemableQueryHookResult = ReturnType<typeof useFindManyRedeemableQuery>;
export type FindManyRedeemableLazyQueryHookResult = ReturnType<typeof useFindManyRedeemableLazyQuery>;
export type FindManyRedeemableQueryResult = Apollo.QueryResult<FindManyRedeemableQuery, FindManyRedeemableQueryVariables>;
export const FindManyRedeemableCountDocument = gql`
    query findManyRedeemableCount($where: RedeemableWhereInput, $orderBy: [RedeemableOrderByWithRelationInput!], $cursor: RedeemableWhereUniqueInput, $skip: Int, $take: Int) {
  findManyRedeemableCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyRedeemableCountQuery__
 *
 * To run a query within a React component, call `useFindManyRedeemableCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyRedeemableCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyRedeemableCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyRedeemableCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyRedeemableCountQuery, FindManyRedeemableCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyRedeemableCountQuery, FindManyRedeemableCountQueryVariables>(FindManyRedeemableCountDocument, options);
      }
export function useFindManyRedeemableCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyRedeemableCountQuery, FindManyRedeemableCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyRedeemableCountQuery, FindManyRedeemableCountQueryVariables>(FindManyRedeemableCountDocument, options);
        }
export type FindManyRedeemableCountQueryHookResult = ReturnType<typeof useFindManyRedeemableCountQuery>;
export type FindManyRedeemableCountLazyQueryHookResult = ReturnType<typeof useFindManyRedeemableCountLazyQuery>;
export type FindManyRedeemableCountQueryResult = Apollo.QueryResult<FindManyRedeemableCountQuery, FindManyRedeemableCountQueryVariables>;
export const CreateOneRedeemableDocument = gql`
    mutation createOneRedeemable($data: RedeemableCreateInput!) {
  createOneRedeemable(data: $data) {
    ...Redeemable
  }
}
    ${RedeemableFragmentDoc}`;

/**
 * __useCreateOneRedeemableMutation__
 *
 * To run a mutation, you first call `useCreateOneRedeemableMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneRedeemableMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneRedeemableMutation, { data, loading, error }] = useCreateOneRedeemableMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneRedeemableMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneRedeemableMutation, CreateOneRedeemableMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneRedeemableMutation, CreateOneRedeemableMutationVariables>(CreateOneRedeemableDocument, options);
      }
export type CreateOneRedeemableMutationHookResult = ReturnType<typeof useCreateOneRedeemableMutation>;
export type CreateOneRedeemableMutationResult = Apollo.MutationResult<CreateOneRedeemableMutation>;
export type CreateOneRedeemableMutationOptions = Apollo.BaseMutationOptions<CreateOneRedeemableMutation, CreateOneRedeemableMutationVariables>;
export const UpdateOneRedeemableDocument = gql`
    mutation updateOneRedeemable($where: RedeemableWhereUniqueInput!, $data: RedeemableUpdateInput!) {
  updateOneRedeemable(where: $where, data: $data) {
    ...Redeemable
  }
}
    ${RedeemableFragmentDoc}`;

/**
 * __useUpdateOneRedeemableMutation__
 *
 * To run a mutation, you first call `useUpdateOneRedeemableMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneRedeemableMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneRedeemableMutation, { data, loading, error }] = useUpdateOneRedeemableMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneRedeemableMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneRedeemableMutation, UpdateOneRedeemableMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneRedeemableMutation, UpdateOneRedeemableMutationVariables>(UpdateOneRedeemableDocument, options);
      }
export type UpdateOneRedeemableMutationHookResult = ReturnType<typeof useUpdateOneRedeemableMutation>;
export type UpdateOneRedeemableMutationResult = Apollo.MutationResult<UpdateOneRedeemableMutation>;
export type UpdateOneRedeemableMutationOptions = Apollo.BaseMutationOptions<UpdateOneRedeemableMutation, UpdateOneRedeemableMutationVariables>;
export const DeleteOneRedeemableDocument = gql`
    mutation deleteOneRedeemable($where: RedeemableWhereUniqueInput!) {
  deleteOneRedeemable(where: $where) {
    ...Redeemable
  }
}
    ${RedeemableFragmentDoc}`;

/**
 * __useDeleteOneRedeemableMutation__
 *
 * To run a mutation, you first call `useDeleteOneRedeemableMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneRedeemableMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneRedeemableMutation, { data, loading, error }] = useDeleteOneRedeemableMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneRedeemableMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneRedeemableMutation, DeleteOneRedeemableMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneRedeemableMutation, DeleteOneRedeemableMutationVariables>(DeleteOneRedeemableDocument, options);
      }
export type DeleteOneRedeemableMutationHookResult = ReturnType<typeof useDeleteOneRedeemableMutation>;
export type DeleteOneRedeemableMutationResult = Apollo.MutationResult<DeleteOneRedeemableMutation>;
export type DeleteOneRedeemableMutationOptions = Apollo.BaseMutationOptions<DeleteOneRedeemableMutation, DeleteOneRedeemableMutationVariables>;
export const DeleteManyRedeemableDocument = gql`
    mutation deleteManyRedeemable($where: RedeemableWhereInput) {
  deleteManyRedeemable(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyRedeemableMutation__
 *
 * To run a mutation, you first call `useDeleteManyRedeemableMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyRedeemableMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyRedeemableMutation, { data, loading, error }] = useDeleteManyRedeemableMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyRedeemableMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyRedeemableMutation, DeleteManyRedeemableMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyRedeemableMutation, DeleteManyRedeemableMutationVariables>(DeleteManyRedeemableDocument, options);
      }
export type DeleteManyRedeemableMutationHookResult = ReturnType<typeof useDeleteManyRedeemableMutation>;
export type DeleteManyRedeemableMutationResult = Apollo.MutationResult<DeleteManyRedeemableMutation>;
export type DeleteManyRedeemableMutationOptions = Apollo.BaseMutationOptions<DeleteManyRedeemableMutation, DeleteManyRedeemableMutationVariables>;
export const UpdateManyRedeemableDocument = gql`
    mutation updateManyRedeemable($where: RedeemableWhereInput, $data: RedeemableUpdateManyMutationInput!) {
  updateManyRedeemable(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyRedeemableMutation__
 *
 * To run a mutation, you first call `useUpdateManyRedeemableMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyRedeemableMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyRedeemableMutation, { data, loading, error }] = useUpdateManyRedeemableMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyRedeemableMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyRedeemableMutation, UpdateManyRedeemableMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyRedeemableMutation, UpdateManyRedeemableMutationVariables>(UpdateManyRedeemableDocument, options);
      }
export type UpdateManyRedeemableMutationHookResult = ReturnType<typeof useUpdateManyRedeemableMutation>;
export type UpdateManyRedeemableMutationResult = Apollo.MutationResult<UpdateManyRedeemableMutation>;
export type UpdateManyRedeemableMutationOptions = Apollo.BaseMutationOptions<UpdateManyRedeemableMutation, UpdateManyRedeemableMutationVariables>;
export const FindUniqueRefreshTokenDocument = gql`
    query findUniqueRefreshToken($where: RefreshTokenWhereUniqueInput!) {
  findUniqueRefreshToken(where: $where) {
    ...RefreshToken
  }
}
    ${RefreshTokenFragmentDoc}`;

/**
 * __useFindUniqueRefreshTokenQuery__
 *
 * To run a query within a React component, call `useFindUniqueRefreshTokenQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueRefreshTokenQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueRefreshTokenQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueRefreshTokenQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueRefreshTokenQuery, FindUniqueRefreshTokenQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueRefreshTokenQuery, FindUniqueRefreshTokenQueryVariables>(FindUniqueRefreshTokenDocument, options);
      }
export function useFindUniqueRefreshTokenLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueRefreshTokenQuery, FindUniqueRefreshTokenQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueRefreshTokenQuery, FindUniqueRefreshTokenQueryVariables>(FindUniqueRefreshTokenDocument, options);
        }
export type FindUniqueRefreshTokenQueryHookResult = ReturnType<typeof useFindUniqueRefreshTokenQuery>;
export type FindUniqueRefreshTokenLazyQueryHookResult = ReturnType<typeof useFindUniqueRefreshTokenLazyQuery>;
export type FindUniqueRefreshTokenQueryResult = Apollo.QueryResult<FindUniqueRefreshTokenQuery, FindUniqueRefreshTokenQueryVariables>;
export const FindManyRefreshTokenDocument = gql`
    query findManyRefreshToken($where: RefreshTokenWhereInput, $orderBy: [RefreshTokenOrderByWithRelationInput!], $cursor: RefreshTokenWhereUniqueInput, $skip: Int, $take: Int) {
  findManyRefreshToken(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...RefreshToken
  }
}
    ${RefreshTokenFragmentDoc}`;

/**
 * __useFindManyRefreshTokenQuery__
 *
 * To run a query within a React component, call `useFindManyRefreshTokenQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyRefreshTokenQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyRefreshTokenQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyRefreshTokenQuery(baseOptions?: Apollo.QueryHookOptions<FindManyRefreshTokenQuery, FindManyRefreshTokenQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyRefreshTokenQuery, FindManyRefreshTokenQueryVariables>(FindManyRefreshTokenDocument, options);
      }
export function useFindManyRefreshTokenLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyRefreshTokenQuery, FindManyRefreshTokenQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyRefreshTokenQuery, FindManyRefreshTokenQueryVariables>(FindManyRefreshTokenDocument, options);
        }
export type FindManyRefreshTokenQueryHookResult = ReturnType<typeof useFindManyRefreshTokenQuery>;
export type FindManyRefreshTokenLazyQueryHookResult = ReturnType<typeof useFindManyRefreshTokenLazyQuery>;
export type FindManyRefreshTokenQueryResult = Apollo.QueryResult<FindManyRefreshTokenQuery, FindManyRefreshTokenQueryVariables>;
export const FindManyRefreshTokenCountDocument = gql`
    query findManyRefreshTokenCount($where: RefreshTokenWhereInput, $orderBy: [RefreshTokenOrderByWithRelationInput!], $cursor: RefreshTokenWhereUniqueInput, $skip: Int, $take: Int) {
  findManyRefreshTokenCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyRefreshTokenCountQuery__
 *
 * To run a query within a React component, call `useFindManyRefreshTokenCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyRefreshTokenCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyRefreshTokenCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyRefreshTokenCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyRefreshTokenCountQuery, FindManyRefreshTokenCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyRefreshTokenCountQuery, FindManyRefreshTokenCountQueryVariables>(FindManyRefreshTokenCountDocument, options);
      }
export function useFindManyRefreshTokenCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyRefreshTokenCountQuery, FindManyRefreshTokenCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyRefreshTokenCountQuery, FindManyRefreshTokenCountQueryVariables>(FindManyRefreshTokenCountDocument, options);
        }
export type FindManyRefreshTokenCountQueryHookResult = ReturnType<typeof useFindManyRefreshTokenCountQuery>;
export type FindManyRefreshTokenCountLazyQueryHookResult = ReturnType<typeof useFindManyRefreshTokenCountLazyQuery>;
export type FindManyRefreshTokenCountQueryResult = Apollo.QueryResult<FindManyRefreshTokenCountQuery, FindManyRefreshTokenCountQueryVariables>;
export const CreateOneRefreshTokenDocument = gql`
    mutation createOneRefreshToken($data: RefreshTokenCreateInput!) {
  createOneRefreshToken(data: $data) {
    ...RefreshToken
  }
}
    ${RefreshTokenFragmentDoc}`;

/**
 * __useCreateOneRefreshTokenMutation__
 *
 * To run a mutation, you first call `useCreateOneRefreshTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneRefreshTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneRefreshTokenMutation, { data, loading, error }] = useCreateOneRefreshTokenMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneRefreshTokenMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneRefreshTokenMutation, CreateOneRefreshTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneRefreshTokenMutation, CreateOneRefreshTokenMutationVariables>(CreateOneRefreshTokenDocument, options);
      }
export type CreateOneRefreshTokenMutationHookResult = ReturnType<typeof useCreateOneRefreshTokenMutation>;
export type CreateOneRefreshTokenMutationResult = Apollo.MutationResult<CreateOneRefreshTokenMutation>;
export type CreateOneRefreshTokenMutationOptions = Apollo.BaseMutationOptions<CreateOneRefreshTokenMutation, CreateOneRefreshTokenMutationVariables>;
export const UpdateOneRefreshTokenDocument = gql`
    mutation updateOneRefreshToken($where: RefreshTokenWhereUniqueInput!, $data: RefreshTokenUpdateInput!) {
  updateOneRefreshToken(where: $where, data: $data) {
    ...RefreshToken
  }
}
    ${RefreshTokenFragmentDoc}`;

/**
 * __useUpdateOneRefreshTokenMutation__
 *
 * To run a mutation, you first call `useUpdateOneRefreshTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneRefreshTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneRefreshTokenMutation, { data, loading, error }] = useUpdateOneRefreshTokenMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneRefreshTokenMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneRefreshTokenMutation, UpdateOneRefreshTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneRefreshTokenMutation, UpdateOneRefreshTokenMutationVariables>(UpdateOneRefreshTokenDocument, options);
      }
export type UpdateOneRefreshTokenMutationHookResult = ReturnType<typeof useUpdateOneRefreshTokenMutation>;
export type UpdateOneRefreshTokenMutationResult = Apollo.MutationResult<UpdateOneRefreshTokenMutation>;
export type UpdateOneRefreshTokenMutationOptions = Apollo.BaseMutationOptions<UpdateOneRefreshTokenMutation, UpdateOneRefreshTokenMutationVariables>;
export const DeleteOneRefreshTokenDocument = gql`
    mutation deleteOneRefreshToken($where: RefreshTokenWhereUniqueInput!) {
  deleteOneRefreshToken(where: $where) {
    ...RefreshToken
  }
}
    ${RefreshTokenFragmentDoc}`;

/**
 * __useDeleteOneRefreshTokenMutation__
 *
 * To run a mutation, you first call `useDeleteOneRefreshTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneRefreshTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneRefreshTokenMutation, { data, loading, error }] = useDeleteOneRefreshTokenMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneRefreshTokenMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneRefreshTokenMutation, DeleteOneRefreshTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneRefreshTokenMutation, DeleteOneRefreshTokenMutationVariables>(DeleteOneRefreshTokenDocument, options);
      }
export type DeleteOneRefreshTokenMutationHookResult = ReturnType<typeof useDeleteOneRefreshTokenMutation>;
export type DeleteOneRefreshTokenMutationResult = Apollo.MutationResult<DeleteOneRefreshTokenMutation>;
export type DeleteOneRefreshTokenMutationOptions = Apollo.BaseMutationOptions<DeleteOneRefreshTokenMutation, DeleteOneRefreshTokenMutationVariables>;
export const DeleteManyRefreshTokenDocument = gql`
    mutation deleteManyRefreshToken($where: RefreshTokenWhereInput) {
  deleteManyRefreshToken(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyRefreshTokenMutation__
 *
 * To run a mutation, you first call `useDeleteManyRefreshTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyRefreshTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyRefreshTokenMutation, { data, loading, error }] = useDeleteManyRefreshTokenMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyRefreshTokenMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyRefreshTokenMutation, DeleteManyRefreshTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyRefreshTokenMutation, DeleteManyRefreshTokenMutationVariables>(DeleteManyRefreshTokenDocument, options);
      }
export type DeleteManyRefreshTokenMutationHookResult = ReturnType<typeof useDeleteManyRefreshTokenMutation>;
export type DeleteManyRefreshTokenMutationResult = Apollo.MutationResult<DeleteManyRefreshTokenMutation>;
export type DeleteManyRefreshTokenMutationOptions = Apollo.BaseMutationOptions<DeleteManyRefreshTokenMutation, DeleteManyRefreshTokenMutationVariables>;
export const UpdateManyRefreshTokenDocument = gql`
    mutation updateManyRefreshToken($where: RefreshTokenWhereInput, $data: RefreshTokenUpdateManyMutationInput!) {
  updateManyRefreshToken(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyRefreshTokenMutation__
 *
 * To run a mutation, you first call `useUpdateManyRefreshTokenMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyRefreshTokenMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyRefreshTokenMutation, { data, loading, error }] = useUpdateManyRefreshTokenMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyRefreshTokenMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyRefreshTokenMutation, UpdateManyRefreshTokenMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyRefreshTokenMutation, UpdateManyRefreshTokenMutationVariables>(UpdateManyRefreshTokenDocument, options);
      }
export type UpdateManyRefreshTokenMutationHookResult = ReturnType<typeof useUpdateManyRefreshTokenMutation>;
export type UpdateManyRefreshTokenMutationResult = Apollo.MutationResult<UpdateManyRefreshTokenMutation>;
export type UpdateManyRefreshTokenMutationOptions = Apollo.BaseMutationOptions<UpdateManyRefreshTokenMutation, UpdateManyRefreshTokenMutationVariables>;
export const FindUniqueRefundDocument = gql`
    query findUniqueRefund($where: RefundWhereUniqueInput!) {
  findUniqueRefund(where: $where) {
    ...Refund
  }
}
    ${RefundFragmentDoc}`;

/**
 * __useFindUniqueRefundQuery__
 *
 * To run a query within a React component, call `useFindUniqueRefundQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueRefundQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueRefundQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueRefundQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueRefundQuery, FindUniqueRefundQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueRefundQuery, FindUniqueRefundQueryVariables>(FindUniqueRefundDocument, options);
      }
export function useFindUniqueRefundLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueRefundQuery, FindUniqueRefundQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueRefundQuery, FindUniqueRefundQueryVariables>(FindUniqueRefundDocument, options);
        }
export type FindUniqueRefundQueryHookResult = ReturnType<typeof useFindUniqueRefundQuery>;
export type FindUniqueRefundLazyQueryHookResult = ReturnType<typeof useFindUniqueRefundLazyQuery>;
export type FindUniqueRefundQueryResult = Apollo.QueryResult<FindUniqueRefundQuery, FindUniqueRefundQueryVariables>;
export const FindManyRefundDocument = gql`
    query findManyRefund($where: RefundWhereInput, $orderBy: [RefundOrderByWithRelationInput!], $cursor: RefundWhereUniqueInput, $skip: Int, $take: Int) {
  findManyRefund(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Refund
  }
}
    ${RefundFragmentDoc}`;

/**
 * __useFindManyRefundQuery__
 *
 * To run a query within a React component, call `useFindManyRefundQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyRefundQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyRefundQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyRefundQuery(baseOptions?: Apollo.QueryHookOptions<FindManyRefundQuery, FindManyRefundQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyRefundQuery, FindManyRefundQueryVariables>(FindManyRefundDocument, options);
      }
export function useFindManyRefundLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyRefundQuery, FindManyRefundQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyRefundQuery, FindManyRefundQueryVariables>(FindManyRefundDocument, options);
        }
export type FindManyRefundQueryHookResult = ReturnType<typeof useFindManyRefundQuery>;
export type FindManyRefundLazyQueryHookResult = ReturnType<typeof useFindManyRefundLazyQuery>;
export type FindManyRefundQueryResult = Apollo.QueryResult<FindManyRefundQuery, FindManyRefundQueryVariables>;
export const FindManyRefundCountDocument = gql`
    query findManyRefundCount($where: RefundWhereInput, $orderBy: [RefundOrderByWithRelationInput!], $cursor: RefundWhereUniqueInput, $skip: Int, $take: Int) {
  findManyRefundCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyRefundCountQuery__
 *
 * To run a query within a React component, call `useFindManyRefundCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyRefundCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyRefundCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyRefundCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyRefundCountQuery, FindManyRefundCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyRefundCountQuery, FindManyRefundCountQueryVariables>(FindManyRefundCountDocument, options);
      }
export function useFindManyRefundCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyRefundCountQuery, FindManyRefundCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyRefundCountQuery, FindManyRefundCountQueryVariables>(FindManyRefundCountDocument, options);
        }
export type FindManyRefundCountQueryHookResult = ReturnType<typeof useFindManyRefundCountQuery>;
export type FindManyRefundCountLazyQueryHookResult = ReturnType<typeof useFindManyRefundCountLazyQuery>;
export type FindManyRefundCountQueryResult = Apollo.QueryResult<FindManyRefundCountQuery, FindManyRefundCountQueryVariables>;
export const CreateOneRefundDocument = gql`
    mutation createOneRefund($data: RefundCreateInput!) {
  createOneRefund(data: $data) {
    ...Refund
  }
}
    ${RefundFragmentDoc}`;

/**
 * __useCreateOneRefundMutation__
 *
 * To run a mutation, you first call `useCreateOneRefundMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneRefundMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneRefundMutation, { data, loading, error }] = useCreateOneRefundMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneRefundMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneRefundMutation, CreateOneRefundMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneRefundMutation, CreateOneRefundMutationVariables>(CreateOneRefundDocument, options);
      }
export type CreateOneRefundMutationHookResult = ReturnType<typeof useCreateOneRefundMutation>;
export type CreateOneRefundMutationResult = Apollo.MutationResult<CreateOneRefundMutation>;
export type CreateOneRefundMutationOptions = Apollo.BaseMutationOptions<CreateOneRefundMutation, CreateOneRefundMutationVariables>;
export const UpdateOneRefundDocument = gql`
    mutation updateOneRefund($where: RefundWhereUniqueInput!, $data: RefundUpdateInput!) {
  updateOneRefund(where: $where, data: $data) {
    ...Refund
  }
}
    ${RefundFragmentDoc}`;

/**
 * __useUpdateOneRefundMutation__
 *
 * To run a mutation, you first call `useUpdateOneRefundMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneRefundMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneRefundMutation, { data, loading, error }] = useUpdateOneRefundMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneRefundMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneRefundMutation, UpdateOneRefundMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneRefundMutation, UpdateOneRefundMutationVariables>(UpdateOneRefundDocument, options);
      }
export type UpdateOneRefundMutationHookResult = ReturnType<typeof useUpdateOneRefundMutation>;
export type UpdateOneRefundMutationResult = Apollo.MutationResult<UpdateOneRefundMutation>;
export type UpdateOneRefundMutationOptions = Apollo.BaseMutationOptions<UpdateOneRefundMutation, UpdateOneRefundMutationVariables>;
export const DeleteOneRefundDocument = gql`
    mutation deleteOneRefund($where: RefundWhereUniqueInput!) {
  deleteOneRefund(where: $where) {
    ...Refund
  }
}
    ${RefundFragmentDoc}`;

/**
 * __useDeleteOneRefundMutation__
 *
 * To run a mutation, you first call `useDeleteOneRefundMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneRefundMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneRefundMutation, { data, loading, error }] = useDeleteOneRefundMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneRefundMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneRefundMutation, DeleteOneRefundMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneRefundMutation, DeleteOneRefundMutationVariables>(DeleteOneRefundDocument, options);
      }
export type DeleteOneRefundMutationHookResult = ReturnType<typeof useDeleteOneRefundMutation>;
export type DeleteOneRefundMutationResult = Apollo.MutationResult<DeleteOneRefundMutation>;
export type DeleteOneRefundMutationOptions = Apollo.BaseMutationOptions<DeleteOneRefundMutation, DeleteOneRefundMutationVariables>;
export const DeleteManyRefundDocument = gql`
    mutation deleteManyRefund($where: RefundWhereInput) {
  deleteManyRefund(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyRefundMutation__
 *
 * To run a mutation, you first call `useDeleteManyRefundMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyRefundMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyRefundMutation, { data, loading, error }] = useDeleteManyRefundMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyRefundMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyRefundMutation, DeleteManyRefundMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyRefundMutation, DeleteManyRefundMutationVariables>(DeleteManyRefundDocument, options);
      }
export type DeleteManyRefundMutationHookResult = ReturnType<typeof useDeleteManyRefundMutation>;
export type DeleteManyRefundMutationResult = Apollo.MutationResult<DeleteManyRefundMutation>;
export type DeleteManyRefundMutationOptions = Apollo.BaseMutationOptions<DeleteManyRefundMutation, DeleteManyRefundMutationVariables>;
export const UpdateManyRefundDocument = gql`
    mutation updateManyRefund($where: RefundWhereInput, $data: RefundUpdateManyMutationInput!) {
  updateManyRefund(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyRefundMutation__
 *
 * To run a mutation, you first call `useUpdateManyRefundMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyRefundMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyRefundMutation, { data, loading, error }] = useUpdateManyRefundMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyRefundMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyRefundMutation, UpdateManyRefundMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyRefundMutation, UpdateManyRefundMutationVariables>(UpdateManyRefundDocument, options);
      }
export type UpdateManyRefundMutationHookResult = ReturnType<typeof useUpdateManyRefundMutation>;
export type UpdateManyRefundMutationResult = Apollo.MutationResult<UpdateManyRefundMutation>;
export type UpdateManyRefundMutationOptions = Apollo.BaseMutationOptions<UpdateManyRefundMutation, UpdateManyRefundMutationVariables>;
export const FindUniqueRequestDocument = gql`
    query findUniqueRequest($where: RequestWhereUniqueInput!) {
  findUniqueRequest(where: $where) {
    ...Request
  }
}
    ${RequestFragmentDoc}`;

/**
 * __useFindUniqueRequestQuery__
 *
 * To run a query within a React component, call `useFindUniqueRequestQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueRequestQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueRequestQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueRequestQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueRequestQuery, FindUniqueRequestQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueRequestQuery, FindUniqueRequestQueryVariables>(FindUniqueRequestDocument, options);
      }
export function useFindUniqueRequestLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueRequestQuery, FindUniqueRequestQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueRequestQuery, FindUniqueRequestQueryVariables>(FindUniqueRequestDocument, options);
        }
export type FindUniqueRequestQueryHookResult = ReturnType<typeof useFindUniqueRequestQuery>;
export type FindUniqueRequestLazyQueryHookResult = ReturnType<typeof useFindUniqueRequestLazyQuery>;
export type FindUniqueRequestQueryResult = Apollo.QueryResult<FindUniqueRequestQuery, FindUniqueRequestQueryVariables>;
export const FindManyRequestDocument = gql`
    query findManyRequest($where: RequestWhereInput, $orderBy: [RequestOrderByWithRelationInput!], $cursor: RequestWhereUniqueInput, $skip: Int, $take: Int) {
  findManyRequest(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Request
  }
}
    ${RequestFragmentDoc}`;

/**
 * __useFindManyRequestQuery__
 *
 * To run a query within a React component, call `useFindManyRequestQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyRequestQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyRequestQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyRequestQuery(baseOptions?: Apollo.QueryHookOptions<FindManyRequestQuery, FindManyRequestQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyRequestQuery, FindManyRequestQueryVariables>(FindManyRequestDocument, options);
      }
export function useFindManyRequestLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyRequestQuery, FindManyRequestQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyRequestQuery, FindManyRequestQueryVariables>(FindManyRequestDocument, options);
        }
export type FindManyRequestQueryHookResult = ReturnType<typeof useFindManyRequestQuery>;
export type FindManyRequestLazyQueryHookResult = ReturnType<typeof useFindManyRequestLazyQuery>;
export type FindManyRequestQueryResult = Apollo.QueryResult<FindManyRequestQuery, FindManyRequestQueryVariables>;
export const FindManyRequestCountDocument = gql`
    query findManyRequestCount($where: RequestWhereInput, $orderBy: [RequestOrderByWithRelationInput!], $cursor: RequestWhereUniqueInput, $skip: Int, $take: Int) {
  findManyRequestCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyRequestCountQuery__
 *
 * To run a query within a React component, call `useFindManyRequestCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyRequestCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyRequestCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyRequestCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyRequestCountQuery, FindManyRequestCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyRequestCountQuery, FindManyRequestCountQueryVariables>(FindManyRequestCountDocument, options);
      }
export function useFindManyRequestCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyRequestCountQuery, FindManyRequestCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyRequestCountQuery, FindManyRequestCountQueryVariables>(FindManyRequestCountDocument, options);
        }
export type FindManyRequestCountQueryHookResult = ReturnType<typeof useFindManyRequestCountQuery>;
export type FindManyRequestCountLazyQueryHookResult = ReturnType<typeof useFindManyRequestCountLazyQuery>;
export type FindManyRequestCountQueryResult = Apollo.QueryResult<FindManyRequestCountQuery, FindManyRequestCountQueryVariables>;
export const CreateOneRequestDocument = gql`
    mutation createOneRequest($data: RequestCreateInput!) {
  createOneRequest(data: $data) {
    ...Request
  }
}
    ${RequestFragmentDoc}`;

/**
 * __useCreateOneRequestMutation__
 *
 * To run a mutation, you first call `useCreateOneRequestMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneRequestMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneRequestMutation, { data, loading, error }] = useCreateOneRequestMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneRequestMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneRequestMutation, CreateOneRequestMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneRequestMutation, CreateOneRequestMutationVariables>(CreateOneRequestDocument, options);
      }
export type CreateOneRequestMutationHookResult = ReturnType<typeof useCreateOneRequestMutation>;
export type CreateOneRequestMutationResult = Apollo.MutationResult<CreateOneRequestMutation>;
export type CreateOneRequestMutationOptions = Apollo.BaseMutationOptions<CreateOneRequestMutation, CreateOneRequestMutationVariables>;
export const UpdateOneRequestDocument = gql`
    mutation updateOneRequest($where: RequestWhereUniqueInput!, $data: RequestUpdateInput!) {
  updateOneRequest(where: $where, data: $data) {
    ...Request
  }
}
    ${RequestFragmentDoc}`;

/**
 * __useUpdateOneRequestMutation__
 *
 * To run a mutation, you first call `useUpdateOneRequestMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneRequestMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneRequestMutation, { data, loading, error }] = useUpdateOneRequestMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneRequestMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneRequestMutation, UpdateOneRequestMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneRequestMutation, UpdateOneRequestMutationVariables>(UpdateOneRequestDocument, options);
      }
export type UpdateOneRequestMutationHookResult = ReturnType<typeof useUpdateOneRequestMutation>;
export type UpdateOneRequestMutationResult = Apollo.MutationResult<UpdateOneRequestMutation>;
export type UpdateOneRequestMutationOptions = Apollo.BaseMutationOptions<UpdateOneRequestMutation, UpdateOneRequestMutationVariables>;
export const DeleteOneRequestDocument = gql`
    mutation deleteOneRequest($where: RequestWhereUniqueInput!) {
  deleteOneRequest(where: $where) {
    ...Request
  }
}
    ${RequestFragmentDoc}`;

/**
 * __useDeleteOneRequestMutation__
 *
 * To run a mutation, you first call `useDeleteOneRequestMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneRequestMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneRequestMutation, { data, loading, error }] = useDeleteOneRequestMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneRequestMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneRequestMutation, DeleteOneRequestMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneRequestMutation, DeleteOneRequestMutationVariables>(DeleteOneRequestDocument, options);
      }
export type DeleteOneRequestMutationHookResult = ReturnType<typeof useDeleteOneRequestMutation>;
export type DeleteOneRequestMutationResult = Apollo.MutationResult<DeleteOneRequestMutation>;
export type DeleteOneRequestMutationOptions = Apollo.BaseMutationOptions<DeleteOneRequestMutation, DeleteOneRequestMutationVariables>;
export const DeleteManyRequestDocument = gql`
    mutation deleteManyRequest($where: RequestWhereInput) {
  deleteManyRequest(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyRequestMutation__
 *
 * To run a mutation, you first call `useDeleteManyRequestMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyRequestMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyRequestMutation, { data, loading, error }] = useDeleteManyRequestMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyRequestMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyRequestMutation, DeleteManyRequestMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyRequestMutation, DeleteManyRequestMutationVariables>(DeleteManyRequestDocument, options);
      }
export type DeleteManyRequestMutationHookResult = ReturnType<typeof useDeleteManyRequestMutation>;
export type DeleteManyRequestMutationResult = Apollo.MutationResult<DeleteManyRequestMutation>;
export type DeleteManyRequestMutationOptions = Apollo.BaseMutationOptions<DeleteManyRequestMutation, DeleteManyRequestMutationVariables>;
export const UpdateManyRequestDocument = gql`
    mutation updateManyRequest($where: RequestWhereInput, $data: RequestUpdateManyMutationInput!) {
  updateManyRequest(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyRequestMutation__
 *
 * To run a mutation, you first call `useUpdateManyRequestMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyRequestMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyRequestMutation, { data, loading, error }] = useUpdateManyRequestMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyRequestMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyRequestMutation, UpdateManyRequestMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyRequestMutation, UpdateManyRequestMutationVariables>(UpdateManyRequestDocument, options);
      }
export type UpdateManyRequestMutationHookResult = ReturnType<typeof useUpdateManyRequestMutation>;
export type UpdateManyRequestMutationResult = Apollo.MutationResult<UpdateManyRequestMutation>;
export type UpdateManyRequestMutationOptions = Apollo.BaseMutationOptions<UpdateManyRequestMutation, UpdateManyRequestMutationVariables>;
export const FindUniqueRequestClickDocument = gql`
    query findUniqueRequestClick($where: RequestClickWhereUniqueInput!) {
  findUniqueRequestClick(where: $where) {
    ...RequestClick
  }
}
    ${RequestClickFragmentDoc}`;

/**
 * __useFindUniqueRequestClickQuery__
 *
 * To run a query within a React component, call `useFindUniqueRequestClickQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueRequestClickQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueRequestClickQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueRequestClickQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueRequestClickQuery, FindUniqueRequestClickQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueRequestClickQuery, FindUniqueRequestClickQueryVariables>(FindUniqueRequestClickDocument, options);
      }
export function useFindUniqueRequestClickLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueRequestClickQuery, FindUniqueRequestClickQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueRequestClickQuery, FindUniqueRequestClickQueryVariables>(FindUniqueRequestClickDocument, options);
        }
export type FindUniqueRequestClickQueryHookResult = ReturnType<typeof useFindUniqueRequestClickQuery>;
export type FindUniqueRequestClickLazyQueryHookResult = ReturnType<typeof useFindUniqueRequestClickLazyQuery>;
export type FindUniqueRequestClickQueryResult = Apollo.QueryResult<FindUniqueRequestClickQuery, FindUniqueRequestClickQueryVariables>;
export const FindManyRequestClickDocument = gql`
    query findManyRequestClick($where: RequestClickWhereInput, $orderBy: [RequestClickOrderByWithRelationInput!], $cursor: RequestClickWhereUniqueInput, $skip: Int, $take: Int) {
  findManyRequestClick(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...RequestClick
  }
}
    ${RequestClickFragmentDoc}`;

/**
 * __useFindManyRequestClickQuery__
 *
 * To run a query within a React component, call `useFindManyRequestClickQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyRequestClickQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyRequestClickQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyRequestClickQuery(baseOptions?: Apollo.QueryHookOptions<FindManyRequestClickQuery, FindManyRequestClickQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyRequestClickQuery, FindManyRequestClickQueryVariables>(FindManyRequestClickDocument, options);
      }
export function useFindManyRequestClickLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyRequestClickQuery, FindManyRequestClickQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyRequestClickQuery, FindManyRequestClickQueryVariables>(FindManyRequestClickDocument, options);
        }
export type FindManyRequestClickQueryHookResult = ReturnType<typeof useFindManyRequestClickQuery>;
export type FindManyRequestClickLazyQueryHookResult = ReturnType<typeof useFindManyRequestClickLazyQuery>;
export type FindManyRequestClickQueryResult = Apollo.QueryResult<FindManyRequestClickQuery, FindManyRequestClickQueryVariables>;
export const FindManyRequestClickCountDocument = gql`
    query findManyRequestClickCount($where: RequestClickWhereInput, $orderBy: [RequestClickOrderByWithRelationInput!], $cursor: RequestClickWhereUniqueInput, $skip: Int, $take: Int) {
  findManyRequestClickCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyRequestClickCountQuery__
 *
 * To run a query within a React component, call `useFindManyRequestClickCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyRequestClickCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyRequestClickCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyRequestClickCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyRequestClickCountQuery, FindManyRequestClickCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyRequestClickCountQuery, FindManyRequestClickCountQueryVariables>(FindManyRequestClickCountDocument, options);
      }
export function useFindManyRequestClickCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyRequestClickCountQuery, FindManyRequestClickCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyRequestClickCountQuery, FindManyRequestClickCountQueryVariables>(FindManyRequestClickCountDocument, options);
        }
export type FindManyRequestClickCountQueryHookResult = ReturnType<typeof useFindManyRequestClickCountQuery>;
export type FindManyRequestClickCountLazyQueryHookResult = ReturnType<typeof useFindManyRequestClickCountLazyQuery>;
export type FindManyRequestClickCountQueryResult = Apollo.QueryResult<FindManyRequestClickCountQuery, FindManyRequestClickCountQueryVariables>;
export const CreateOneRequestClickDocument = gql`
    mutation createOneRequestClick($data: RequestClickCreateInput!) {
  createOneRequestClick(data: $data) {
    ...RequestClick
  }
}
    ${RequestClickFragmentDoc}`;

/**
 * __useCreateOneRequestClickMutation__
 *
 * To run a mutation, you first call `useCreateOneRequestClickMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneRequestClickMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneRequestClickMutation, { data, loading, error }] = useCreateOneRequestClickMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneRequestClickMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneRequestClickMutation, CreateOneRequestClickMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneRequestClickMutation, CreateOneRequestClickMutationVariables>(CreateOneRequestClickDocument, options);
      }
export type CreateOneRequestClickMutationHookResult = ReturnType<typeof useCreateOneRequestClickMutation>;
export type CreateOneRequestClickMutationResult = Apollo.MutationResult<CreateOneRequestClickMutation>;
export type CreateOneRequestClickMutationOptions = Apollo.BaseMutationOptions<CreateOneRequestClickMutation, CreateOneRequestClickMutationVariables>;
export const UpdateOneRequestClickDocument = gql`
    mutation updateOneRequestClick($where: RequestClickWhereUniqueInput!, $data: RequestClickUpdateInput!) {
  updateOneRequestClick(where: $where, data: $data) {
    ...RequestClick
  }
}
    ${RequestClickFragmentDoc}`;

/**
 * __useUpdateOneRequestClickMutation__
 *
 * To run a mutation, you first call `useUpdateOneRequestClickMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneRequestClickMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneRequestClickMutation, { data, loading, error }] = useUpdateOneRequestClickMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneRequestClickMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneRequestClickMutation, UpdateOneRequestClickMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneRequestClickMutation, UpdateOneRequestClickMutationVariables>(UpdateOneRequestClickDocument, options);
      }
export type UpdateOneRequestClickMutationHookResult = ReturnType<typeof useUpdateOneRequestClickMutation>;
export type UpdateOneRequestClickMutationResult = Apollo.MutationResult<UpdateOneRequestClickMutation>;
export type UpdateOneRequestClickMutationOptions = Apollo.BaseMutationOptions<UpdateOneRequestClickMutation, UpdateOneRequestClickMutationVariables>;
export const DeleteOneRequestClickDocument = gql`
    mutation deleteOneRequestClick($where: RequestClickWhereUniqueInput!) {
  deleteOneRequestClick(where: $where) {
    ...RequestClick
  }
}
    ${RequestClickFragmentDoc}`;

/**
 * __useDeleteOneRequestClickMutation__
 *
 * To run a mutation, you first call `useDeleteOneRequestClickMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneRequestClickMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneRequestClickMutation, { data, loading, error }] = useDeleteOneRequestClickMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneRequestClickMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneRequestClickMutation, DeleteOneRequestClickMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneRequestClickMutation, DeleteOneRequestClickMutationVariables>(DeleteOneRequestClickDocument, options);
      }
export type DeleteOneRequestClickMutationHookResult = ReturnType<typeof useDeleteOneRequestClickMutation>;
export type DeleteOneRequestClickMutationResult = Apollo.MutationResult<DeleteOneRequestClickMutation>;
export type DeleteOneRequestClickMutationOptions = Apollo.BaseMutationOptions<DeleteOneRequestClickMutation, DeleteOneRequestClickMutationVariables>;
export const DeleteManyRequestClickDocument = gql`
    mutation deleteManyRequestClick($where: RequestClickWhereInput) {
  deleteManyRequestClick(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyRequestClickMutation__
 *
 * To run a mutation, you first call `useDeleteManyRequestClickMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyRequestClickMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyRequestClickMutation, { data, loading, error }] = useDeleteManyRequestClickMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyRequestClickMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyRequestClickMutation, DeleteManyRequestClickMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyRequestClickMutation, DeleteManyRequestClickMutationVariables>(DeleteManyRequestClickDocument, options);
      }
export type DeleteManyRequestClickMutationHookResult = ReturnType<typeof useDeleteManyRequestClickMutation>;
export type DeleteManyRequestClickMutationResult = Apollo.MutationResult<DeleteManyRequestClickMutation>;
export type DeleteManyRequestClickMutationOptions = Apollo.BaseMutationOptions<DeleteManyRequestClickMutation, DeleteManyRequestClickMutationVariables>;
export const UpdateManyRequestClickDocument = gql`
    mutation updateManyRequestClick($where: RequestClickWhereInput, $data: RequestClickUpdateManyMutationInput!) {
  updateManyRequestClick(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyRequestClickMutation__
 *
 * To run a mutation, you first call `useUpdateManyRequestClickMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyRequestClickMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyRequestClickMutation, { data, loading, error }] = useUpdateManyRequestClickMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyRequestClickMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyRequestClickMutation, UpdateManyRequestClickMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyRequestClickMutation, UpdateManyRequestClickMutationVariables>(UpdateManyRequestClickDocument, options);
      }
export type UpdateManyRequestClickMutationHookResult = ReturnType<typeof useUpdateManyRequestClickMutation>;
export type UpdateManyRequestClickMutationResult = Apollo.MutationResult<UpdateManyRequestClickMutation>;
export type UpdateManyRequestClickMutationOptions = Apollo.BaseMutationOptions<UpdateManyRequestClickMutation, UpdateManyRequestClickMutationVariables>;
export const FindUniqueShippingDocument = gql`
    query findUniqueShipping($where: ShippingWhereUniqueInput!) {
  findUniqueShipping(where: $where) {
    ...Shipping
  }
}
    ${ShippingFragmentDoc}`;

/**
 * __useFindUniqueShippingQuery__
 *
 * To run a query within a React component, call `useFindUniqueShippingQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueShippingQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueShippingQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueShippingQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueShippingQuery, FindUniqueShippingQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueShippingQuery, FindUniqueShippingQueryVariables>(FindUniqueShippingDocument, options);
      }
export function useFindUniqueShippingLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueShippingQuery, FindUniqueShippingQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueShippingQuery, FindUniqueShippingQueryVariables>(FindUniqueShippingDocument, options);
        }
export type FindUniqueShippingQueryHookResult = ReturnType<typeof useFindUniqueShippingQuery>;
export type FindUniqueShippingLazyQueryHookResult = ReturnType<typeof useFindUniqueShippingLazyQuery>;
export type FindUniqueShippingQueryResult = Apollo.QueryResult<FindUniqueShippingQuery, FindUniqueShippingQueryVariables>;
export const FindManyShippingDocument = gql`
    query findManyShipping($where: ShippingWhereInput, $orderBy: [ShippingOrderByWithRelationInput!], $cursor: ShippingWhereUniqueInput, $skip: Int, $take: Int) {
  findManyShipping(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Shipping
  }
}
    ${ShippingFragmentDoc}`;

/**
 * __useFindManyShippingQuery__
 *
 * To run a query within a React component, call `useFindManyShippingQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyShippingQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyShippingQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyShippingQuery(baseOptions?: Apollo.QueryHookOptions<FindManyShippingQuery, FindManyShippingQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyShippingQuery, FindManyShippingQueryVariables>(FindManyShippingDocument, options);
      }
export function useFindManyShippingLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyShippingQuery, FindManyShippingQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyShippingQuery, FindManyShippingQueryVariables>(FindManyShippingDocument, options);
        }
export type FindManyShippingQueryHookResult = ReturnType<typeof useFindManyShippingQuery>;
export type FindManyShippingLazyQueryHookResult = ReturnType<typeof useFindManyShippingLazyQuery>;
export type FindManyShippingQueryResult = Apollo.QueryResult<FindManyShippingQuery, FindManyShippingQueryVariables>;
export const FindManyShippingCountDocument = gql`
    query findManyShippingCount($where: ShippingWhereInput, $orderBy: [ShippingOrderByWithRelationInput!], $cursor: ShippingWhereUniqueInput, $skip: Int, $take: Int) {
  findManyShippingCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyShippingCountQuery__
 *
 * To run a query within a React component, call `useFindManyShippingCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyShippingCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyShippingCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyShippingCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyShippingCountQuery, FindManyShippingCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyShippingCountQuery, FindManyShippingCountQueryVariables>(FindManyShippingCountDocument, options);
      }
export function useFindManyShippingCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyShippingCountQuery, FindManyShippingCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyShippingCountQuery, FindManyShippingCountQueryVariables>(FindManyShippingCountDocument, options);
        }
export type FindManyShippingCountQueryHookResult = ReturnType<typeof useFindManyShippingCountQuery>;
export type FindManyShippingCountLazyQueryHookResult = ReturnType<typeof useFindManyShippingCountLazyQuery>;
export type FindManyShippingCountQueryResult = Apollo.QueryResult<FindManyShippingCountQuery, FindManyShippingCountQueryVariables>;
export const CreateOneShippingDocument = gql`
    mutation createOneShipping($data: ShippingCreateInput!) {
  createOneShipping(data: $data) {
    ...Shipping
  }
}
    ${ShippingFragmentDoc}`;

/**
 * __useCreateOneShippingMutation__
 *
 * To run a mutation, you first call `useCreateOneShippingMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneShippingMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneShippingMutation, { data, loading, error }] = useCreateOneShippingMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneShippingMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneShippingMutation, CreateOneShippingMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneShippingMutation, CreateOneShippingMutationVariables>(CreateOneShippingDocument, options);
      }
export type CreateOneShippingMutationHookResult = ReturnType<typeof useCreateOneShippingMutation>;
export type CreateOneShippingMutationResult = Apollo.MutationResult<CreateOneShippingMutation>;
export type CreateOneShippingMutationOptions = Apollo.BaseMutationOptions<CreateOneShippingMutation, CreateOneShippingMutationVariables>;
export const UpdateOneShippingDocument = gql`
    mutation updateOneShipping($where: ShippingWhereUniqueInput!, $data: ShippingUpdateInput!) {
  updateOneShipping(where: $where, data: $data) {
    ...Shipping
  }
}
    ${ShippingFragmentDoc}`;

/**
 * __useUpdateOneShippingMutation__
 *
 * To run a mutation, you first call `useUpdateOneShippingMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneShippingMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneShippingMutation, { data, loading, error }] = useUpdateOneShippingMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneShippingMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneShippingMutation, UpdateOneShippingMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneShippingMutation, UpdateOneShippingMutationVariables>(UpdateOneShippingDocument, options);
      }
export type UpdateOneShippingMutationHookResult = ReturnType<typeof useUpdateOneShippingMutation>;
export type UpdateOneShippingMutationResult = Apollo.MutationResult<UpdateOneShippingMutation>;
export type UpdateOneShippingMutationOptions = Apollo.BaseMutationOptions<UpdateOneShippingMutation, UpdateOneShippingMutationVariables>;
export const DeleteOneShippingDocument = gql`
    mutation deleteOneShipping($where: ShippingWhereUniqueInput!) {
  deleteOneShipping(where: $where) {
    ...Shipping
  }
}
    ${ShippingFragmentDoc}`;

/**
 * __useDeleteOneShippingMutation__
 *
 * To run a mutation, you first call `useDeleteOneShippingMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneShippingMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneShippingMutation, { data, loading, error }] = useDeleteOneShippingMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneShippingMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneShippingMutation, DeleteOneShippingMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneShippingMutation, DeleteOneShippingMutationVariables>(DeleteOneShippingDocument, options);
      }
export type DeleteOneShippingMutationHookResult = ReturnType<typeof useDeleteOneShippingMutation>;
export type DeleteOneShippingMutationResult = Apollo.MutationResult<DeleteOneShippingMutation>;
export type DeleteOneShippingMutationOptions = Apollo.BaseMutationOptions<DeleteOneShippingMutation, DeleteOneShippingMutationVariables>;
export const DeleteManyShippingDocument = gql`
    mutation deleteManyShipping($where: ShippingWhereInput) {
  deleteManyShipping(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyShippingMutation__
 *
 * To run a mutation, you first call `useDeleteManyShippingMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyShippingMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyShippingMutation, { data, loading, error }] = useDeleteManyShippingMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyShippingMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyShippingMutation, DeleteManyShippingMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyShippingMutation, DeleteManyShippingMutationVariables>(DeleteManyShippingDocument, options);
      }
export type DeleteManyShippingMutationHookResult = ReturnType<typeof useDeleteManyShippingMutation>;
export type DeleteManyShippingMutationResult = Apollo.MutationResult<DeleteManyShippingMutation>;
export type DeleteManyShippingMutationOptions = Apollo.BaseMutationOptions<DeleteManyShippingMutation, DeleteManyShippingMutationVariables>;
export const UpdateManyShippingDocument = gql`
    mutation updateManyShipping($where: ShippingWhereInput, $data: ShippingUpdateManyMutationInput!) {
  updateManyShipping(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyShippingMutation__
 *
 * To run a mutation, you first call `useUpdateManyShippingMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyShippingMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyShippingMutation, { data, loading, error }] = useUpdateManyShippingMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyShippingMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyShippingMutation, UpdateManyShippingMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyShippingMutation, UpdateManyShippingMutationVariables>(UpdateManyShippingDocument, options);
      }
export type UpdateManyShippingMutationHookResult = ReturnType<typeof useUpdateManyShippingMutation>;
export type UpdateManyShippingMutationResult = Apollo.MutationResult<UpdateManyShippingMutation>;
export type UpdateManyShippingMutationOptions = Apollo.BaseMutationOptions<UpdateManyShippingMutation, UpdateManyShippingMutationVariables>;
export const FindUniqueSlugCounterDocument = gql`
    query findUniqueSlugCounter($where: SlugCounterWhereUniqueInput!) {
  findUniqueSlugCounter(where: $where) {
    ...SlugCounter
  }
}
    ${SlugCounterFragmentDoc}`;

/**
 * __useFindUniqueSlugCounterQuery__
 *
 * To run a query within a React component, call `useFindUniqueSlugCounterQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueSlugCounterQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueSlugCounterQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueSlugCounterQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueSlugCounterQuery, FindUniqueSlugCounterQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueSlugCounterQuery, FindUniqueSlugCounterQueryVariables>(FindUniqueSlugCounterDocument, options);
      }
export function useFindUniqueSlugCounterLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueSlugCounterQuery, FindUniqueSlugCounterQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueSlugCounterQuery, FindUniqueSlugCounterQueryVariables>(FindUniqueSlugCounterDocument, options);
        }
export type FindUniqueSlugCounterQueryHookResult = ReturnType<typeof useFindUniqueSlugCounterQuery>;
export type FindUniqueSlugCounterLazyQueryHookResult = ReturnType<typeof useFindUniqueSlugCounterLazyQuery>;
export type FindUniqueSlugCounterQueryResult = Apollo.QueryResult<FindUniqueSlugCounterQuery, FindUniqueSlugCounterQueryVariables>;
export const FindManySlugCounterDocument = gql`
    query findManySlugCounter($where: SlugCounterWhereInput, $orderBy: [SlugCounterOrderByWithRelationInput!], $cursor: SlugCounterWhereUniqueInput, $skip: Int, $take: Int) {
  findManySlugCounter(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...SlugCounter
  }
}
    ${SlugCounterFragmentDoc}`;

/**
 * __useFindManySlugCounterQuery__
 *
 * To run a query within a React component, call `useFindManySlugCounterQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManySlugCounterQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManySlugCounterQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManySlugCounterQuery(baseOptions?: Apollo.QueryHookOptions<FindManySlugCounterQuery, FindManySlugCounterQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManySlugCounterQuery, FindManySlugCounterQueryVariables>(FindManySlugCounterDocument, options);
      }
export function useFindManySlugCounterLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManySlugCounterQuery, FindManySlugCounterQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManySlugCounterQuery, FindManySlugCounterQueryVariables>(FindManySlugCounterDocument, options);
        }
export type FindManySlugCounterQueryHookResult = ReturnType<typeof useFindManySlugCounterQuery>;
export type FindManySlugCounterLazyQueryHookResult = ReturnType<typeof useFindManySlugCounterLazyQuery>;
export type FindManySlugCounterQueryResult = Apollo.QueryResult<FindManySlugCounterQuery, FindManySlugCounterQueryVariables>;
export const FindManySlugCounterCountDocument = gql`
    query findManySlugCounterCount($where: SlugCounterWhereInput, $orderBy: [SlugCounterOrderByWithRelationInput!], $cursor: SlugCounterWhereUniqueInput, $skip: Int, $take: Int) {
  findManySlugCounterCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManySlugCounterCountQuery__
 *
 * To run a query within a React component, call `useFindManySlugCounterCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManySlugCounterCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManySlugCounterCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManySlugCounterCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManySlugCounterCountQuery, FindManySlugCounterCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManySlugCounterCountQuery, FindManySlugCounterCountQueryVariables>(FindManySlugCounterCountDocument, options);
      }
export function useFindManySlugCounterCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManySlugCounterCountQuery, FindManySlugCounterCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManySlugCounterCountQuery, FindManySlugCounterCountQueryVariables>(FindManySlugCounterCountDocument, options);
        }
export type FindManySlugCounterCountQueryHookResult = ReturnType<typeof useFindManySlugCounterCountQuery>;
export type FindManySlugCounterCountLazyQueryHookResult = ReturnType<typeof useFindManySlugCounterCountLazyQuery>;
export type FindManySlugCounterCountQueryResult = Apollo.QueryResult<FindManySlugCounterCountQuery, FindManySlugCounterCountQueryVariables>;
export const CreateOneSlugCounterDocument = gql`
    mutation createOneSlugCounter($data: SlugCounterCreateInput!) {
  createOneSlugCounter(data: $data) {
    ...SlugCounter
  }
}
    ${SlugCounterFragmentDoc}`;

/**
 * __useCreateOneSlugCounterMutation__
 *
 * To run a mutation, you first call `useCreateOneSlugCounterMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneSlugCounterMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneSlugCounterMutation, { data, loading, error }] = useCreateOneSlugCounterMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneSlugCounterMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneSlugCounterMutation, CreateOneSlugCounterMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneSlugCounterMutation, CreateOneSlugCounterMutationVariables>(CreateOneSlugCounterDocument, options);
      }
export type CreateOneSlugCounterMutationHookResult = ReturnType<typeof useCreateOneSlugCounterMutation>;
export type CreateOneSlugCounterMutationResult = Apollo.MutationResult<CreateOneSlugCounterMutation>;
export type CreateOneSlugCounterMutationOptions = Apollo.BaseMutationOptions<CreateOneSlugCounterMutation, CreateOneSlugCounterMutationVariables>;
export const UpdateOneSlugCounterDocument = gql`
    mutation updateOneSlugCounter($where: SlugCounterWhereUniqueInput!, $data: SlugCounterUpdateInput!) {
  updateOneSlugCounter(where: $where, data: $data) {
    ...SlugCounter
  }
}
    ${SlugCounterFragmentDoc}`;

/**
 * __useUpdateOneSlugCounterMutation__
 *
 * To run a mutation, you first call `useUpdateOneSlugCounterMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneSlugCounterMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneSlugCounterMutation, { data, loading, error }] = useUpdateOneSlugCounterMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneSlugCounterMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneSlugCounterMutation, UpdateOneSlugCounterMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneSlugCounterMutation, UpdateOneSlugCounterMutationVariables>(UpdateOneSlugCounterDocument, options);
      }
export type UpdateOneSlugCounterMutationHookResult = ReturnType<typeof useUpdateOneSlugCounterMutation>;
export type UpdateOneSlugCounterMutationResult = Apollo.MutationResult<UpdateOneSlugCounterMutation>;
export type UpdateOneSlugCounterMutationOptions = Apollo.BaseMutationOptions<UpdateOneSlugCounterMutation, UpdateOneSlugCounterMutationVariables>;
export const DeleteOneSlugCounterDocument = gql`
    mutation deleteOneSlugCounter($where: SlugCounterWhereUniqueInput!) {
  deleteOneSlugCounter(where: $where) {
    ...SlugCounter
  }
}
    ${SlugCounterFragmentDoc}`;

/**
 * __useDeleteOneSlugCounterMutation__
 *
 * To run a mutation, you first call `useDeleteOneSlugCounterMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneSlugCounterMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneSlugCounterMutation, { data, loading, error }] = useDeleteOneSlugCounterMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneSlugCounterMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneSlugCounterMutation, DeleteOneSlugCounterMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneSlugCounterMutation, DeleteOneSlugCounterMutationVariables>(DeleteOneSlugCounterDocument, options);
      }
export type DeleteOneSlugCounterMutationHookResult = ReturnType<typeof useDeleteOneSlugCounterMutation>;
export type DeleteOneSlugCounterMutationResult = Apollo.MutationResult<DeleteOneSlugCounterMutation>;
export type DeleteOneSlugCounterMutationOptions = Apollo.BaseMutationOptions<DeleteOneSlugCounterMutation, DeleteOneSlugCounterMutationVariables>;
export const DeleteManySlugCounterDocument = gql`
    mutation deleteManySlugCounter($where: SlugCounterWhereInput) {
  deleteManySlugCounter(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManySlugCounterMutation__
 *
 * To run a mutation, you first call `useDeleteManySlugCounterMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManySlugCounterMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManySlugCounterMutation, { data, loading, error }] = useDeleteManySlugCounterMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManySlugCounterMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManySlugCounterMutation, DeleteManySlugCounterMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManySlugCounterMutation, DeleteManySlugCounterMutationVariables>(DeleteManySlugCounterDocument, options);
      }
export type DeleteManySlugCounterMutationHookResult = ReturnType<typeof useDeleteManySlugCounterMutation>;
export type DeleteManySlugCounterMutationResult = Apollo.MutationResult<DeleteManySlugCounterMutation>;
export type DeleteManySlugCounterMutationOptions = Apollo.BaseMutationOptions<DeleteManySlugCounterMutation, DeleteManySlugCounterMutationVariables>;
export const UpdateManySlugCounterDocument = gql`
    mutation updateManySlugCounter($where: SlugCounterWhereInput, $data: SlugCounterUpdateManyMutationInput!) {
  updateManySlugCounter(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManySlugCounterMutation__
 *
 * To run a mutation, you first call `useUpdateManySlugCounterMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManySlugCounterMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManySlugCounterMutation, { data, loading, error }] = useUpdateManySlugCounterMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManySlugCounterMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManySlugCounterMutation, UpdateManySlugCounterMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManySlugCounterMutation, UpdateManySlugCounterMutationVariables>(UpdateManySlugCounterDocument, options);
      }
export type UpdateManySlugCounterMutationHookResult = ReturnType<typeof useUpdateManySlugCounterMutation>;
export type UpdateManySlugCounterMutationResult = Apollo.MutationResult<UpdateManySlugCounterMutation>;
export type UpdateManySlugCounterMutationOptions = Apollo.BaseMutationOptions<UpdateManySlugCounterMutation, UpdateManySlugCounterMutationVariables>;
export const FindUniqueSocialDocument = gql`
    query findUniqueSocial($where: SocialWhereUniqueInput!) {
  findUniqueSocial(where: $where) {
    ...Social
  }
}
    ${SocialFragmentDoc}`;

/**
 * __useFindUniqueSocialQuery__
 *
 * To run a query within a React component, call `useFindUniqueSocialQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueSocialQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueSocialQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueSocialQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueSocialQuery, FindUniqueSocialQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueSocialQuery, FindUniqueSocialQueryVariables>(FindUniqueSocialDocument, options);
      }
export function useFindUniqueSocialLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueSocialQuery, FindUniqueSocialQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueSocialQuery, FindUniqueSocialQueryVariables>(FindUniqueSocialDocument, options);
        }
export type FindUniqueSocialQueryHookResult = ReturnType<typeof useFindUniqueSocialQuery>;
export type FindUniqueSocialLazyQueryHookResult = ReturnType<typeof useFindUniqueSocialLazyQuery>;
export type FindUniqueSocialQueryResult = Apollo.QueryResult<FindUniqueSocialQuery, FindUniqueSocialQueryVariables>;
export const FindManySocialDocument = gql`
    query findManySocial($where: SocialWhereInput, $orderBy: [SocialOrderByWithRelationInput!], $cursor: SocialWhereUniqueInput, $skip: Int, $take: Int) {
  findManySocial(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Social
  }
}
    ${SocialFragmentDoc}`;

/**
 * __useFindManySocialQuery__
 *
 * To run a query within a React component, call `useFindManySocialQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManySocialQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManySocialQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManySocialQuery(baseOptions?: Apollo.QueryHookOptions<FindManySocialQuery, FindManySocialQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManySocialQuery, FindManySocialQueryVariables>(FindManySocialDocument, options);
      }
export function useFindManySocialLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManySocialQuery, FindManySocialQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManySocialQuery, FindManySocialQueryVariables>(FindManySocialDocument, options);
        }
export type FindManySocialQueryHookResult = ReturnType<typeof useFindManySocialQuery>;
export type FindManySocialLazyQueryHookResult = ReturnType<typeof useFindManySocialLazyQuery>;
export type FindManySocialQueryResult = Apollo.QueryResult<FindManySocialQuery, FindManySocialQueryVariables>;
export const FindManySocialCountDocument = gql`
    query findManySocialCount($where: SocialWhereInput, $orderBy: [SocialOrderByWithRelationInput!], $cursor: SocialWhereUniqueInput, $skip: Int, $take: Int) {
  findManySocialCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManySocialCountQuery__
 *
 * To run a query within a React component, call `useFindManySocialCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManySocialCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManySocialCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManySocialCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManySocialCountQuery, FindManySocialCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManySocialCountQuery, FindManySocialCountQueryVariables>(FindManySocialCountDocument, options);
      }
export function useFindManySocialCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManySocialCountQuery, FindManySocialCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManySocialCountQuery, FindManySocialCountQueryVariables>(FindManySocialCountDocument, options);
        }
export type FindManySocialCountQueryHookResult = ReturnType<typeof useFindManySocialCountQuery>;
export type FindManySocialCountLazyQueryHookResult = ReturnType<typeof useFindManySocialCountLazyQuery>;
export type FindManySocialCountQueryResult = Apollo.QueryResult<FindManySocialCountQuery, FindManySocialCountQueryVariables>;
export const CreateOneSocialDocument = gql`
    mutation createOneSocial($data: SocialCreateInput!) {
  createOneSocial(data: $data) {
    ...Social
  }
}
    ${SocialFragmentDoc}`;

/**
 * __useCreateOneSocialMutation__
 *
 * To run a mutation, you first call `useCreateOneSocialMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneSocialMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneSocialMutation, { data, loading, error }] = useCreateOneSocialMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneSocialMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneSocialMutation, CreateOneSocialMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneSocialMutation, CreateOneSocialMutationVariables>(CreateOneSocialDocument, options);
      }
export type CreateOneSocialMutationHookResult = ReturnType<typeof useCreateOneSocialMutation>;
export type CreateOneSocialMutationResult = Apollo.MutationResult<CreateOneSocialMutation>;
export type CreateOneSocialMutationOptions = Apollo.BaseMutationOptions<CreateOneSocialMutation, CreateOneSocialMutationVariables>;
export const UpdateOneSocialDocument = gql`
    mutation updateOneSocial($where: SocialWhereUniqueInput!, $data: SocialUpdateInput!) {
  updateOneSocial(where: $where, data: $data) {
    ...Social
  }
}
    ${SocialFragmentDoc}`;

/**
 * __useUpdateOneSocialMutation__
 *
 * To run a mutation, you first call `useUpdateOneSocialMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneSocialMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneSocialMutation, { data, loading, error }] = useUpdateOneSocialMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneSocialMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneSocialMutation, UpdateOneSocialMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneSocialMutation, UpdateOneSocialMutationVariables>(UpdateOneSocialDocument, options);
      }
export type UpdateOneSocialMutationHookResult = ReturnType<typeof useUpdateOneSocialMutation>;
export type UpdateOneSocialMutationResult = Apollo.MutationResult<UpdateOneSocialMutation>;
export type UpdateOneSocialMutationOptions = Apollo.BaseMutationOptions<UpdateOneSocialMutation, UpdateOneSocialMutationVariables>;
export const DeleteOneSocialDocument = gql`
    mutation deleteOneSocial($where: SocialWhereUniqueInput!) {
  deleteOneSocial(where: $where) {
    ...Social
  }
}
    ${SocialFragmentDoc}`;

/**
 * __useDeleteOneSocialMutation__
 *
 * To run a mutation, you first call `useDeleteOneSocialMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneSocialMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneSocialMutation, { data, loading, error }] = useDeleteOneSocialMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneSocialMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneSocialMutation, DeleteOneSocialMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneSocialMutation, DeleteOneSocialMutationVariables>(DeleteOneSocialDocument, options);
      }
export type DeleteOneSocialMutationHookResult = ReturnType<typeof useDeleteOneSocialMutation>;
export type DeleteOneSocialMutationResult = Apollo.MutationResult<DeleteOneSocialMutation>;
export type DeleteOneSocialMutationOptions = Apollo.BaseMutationOptions<DeleteOneSocialMutation, DeleteOneSocialMutationVariables>;
export const DeleteManySocialDocument = gql`
    mutation deleteManySocial($where: SocialWhereInput) {
  deleteManySocial(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManySocialMutation__
 *
 * To run a mutation, you first call `useDeleteManySocialMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManySocialMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManySocialMutation, { data, loading, error }] = useDeleteManySocialMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManySocialMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManySocialMutation, DeleteManySocialMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManySocialMutation, DeleteManySocialMutationVariables>(DeleteManySocialDocument, options);
      }
export type DeleteManySocialMutationHookResult = ReturnType<typeof useDeleteManySocialMutation>;
export type DeleteManySocialMutationResult = Apollo.MutationResult<DeleteManySocialMutation>;
export type DeleteManySocialMutationOptions = Apollo.BaseMutationOptions<DeleteManySocialMutation, DeleteManySocialMutationVariables>;
export const UpdateManySocialDocument = gql`
    mutation updateManySocial($where: SocialWhereInput, $data: SocialUpdateManyMutationInput!) {
  updateManySocial(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManySocialMutation__
 *
 * To run a mutation, you first call `useUpdateManySocialMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManySocialMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManySocialMutation, { data, loading, error }] = useUpdateManySocialMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManySocialMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManySocialMutation, UpdateManySocialMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManySocialMutation, UpdateManySocialMutationVariables>(UpdateManySocialDocument, options);
      }
export type UpdateManySocialMutationHookResult = ReturnType<typeof useUpdateManySocialMutation>;
export type UpdateManySocialMutationResult = Apollo.MutationResult<UpdateManySocialMutation>;
export type UpdateManySocialMutationOptions = Apollo.BaseMutationOptions<UpdateManySocialMutation, UpdateManySocialMutationVariables>;
export const FindUniqueTagDocument = gql`
    query findUniqueTag($where: TagWhereUniqueInput!) {
  findUniqueTag(where: $where) {
    ...Tag
  }
}
    ${TagFragmentDoc}`;

/**
 * __useFindUniqueTagQuery__
 *
 * To run a query within a React component, call `useFindUniqueTagQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueTagQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueTagQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueTagQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueTagQuery, FindUniqueTagQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueTagQuery, FindUniqueTagQueryVariables>(FindUniqueTagDocument, options);
      }
export function useFindUniqueTagLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueTagQuery, FindUniqueTagQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueTagQuery, FindUniqueTagQueryVariables>(FindUniqueTagDocument, options);
        }
export type FindUniqueTagQueryHookResult = ReturnType<typeof useFindUniqueTagQuery>;
export type FindUniqueTagLazyQueryHookResult = ReturnType<typeof useFindUniqueTagLazyQuery>;
export type FindUniqueTagQueryResult = Apollo.QueryResult<FindUniqueTagQuery, FindUniqueTagQueryVariables>;
export const FindManyTagDocument = gql`
    query findManyTag($where: TagWhereInput, $orderBy: [TagOrderByWithRelationInput!], $cursor: TagWhereUniqueInput, $skip: Int, $take: Int) {
  findManyTag(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Tag
  }
}
    ${TagFragmentDoc}`;

/**
 * __useFindManyTagQuery__
 *
 * To run a query within a React component, call `useFindManyTagQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyTagQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyTagQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyTagQuery(baseOptions?: Apollo.QueryHookOptions<FindManyTagQuery, FindManyTagQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyTagQuery, FindManyTagQueryVariables>(FindManyTagDocument, options);
      }
export function useFindManyTagLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyTagQuery, FindManyTagQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyTagQuery, FindManyTagQueryVariables>(FindManyTagDocument, options);
        }
export type FindManyTagQueryHookResult = ReturnType<typeof useFindManyTagQuery>;
export type FindManyTagLazyQueryHookResult = ReturnType<typeof useFindManyTagLazyQuery>;
export type FindManyTagQueryResult = Apollo.QueryResult<FindManyTagQuery, FindManyTagQueryVariables>;
export const FindManyTagCountDocument = gql`
    query findManyTagCount($where: TagWhereInput, $orderBy: [TagOrderByWithRelationInput!], $cursor: TagWhereUniqueInput, $skip: Int, $take: Int) {
  findManyTagCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyTagCountQuery__
 *
 * To run a query within a React component, call `useFindManyTagCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyTagCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyTagCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyTagCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyTagCountQuery, FindManyTagCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyTagCountQuery, FindManyTagCountQueryVariables>(FindManyTagCountDocument, options);
      }
export function useFindManyTagCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyTagCountQuery, FindManyTagCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyTagCountQuery, FindManyTagCountQueryVariables>(FindManyTagCountDocument, options);
        }
export type FindManyTagCountQueryHookResult = ReturnType<typeof useFindManyTagCountQuery>;
export type FindManyTagCountLazyQueryHookResult = ReturnType<typeof useFindManyTagCountLazyQuery>;
export type FindManyTagCountQueryResult = Apollo.QueryResult<FindManyTagCountQuery, FindManyTagCountQueryVariables>;
export const CreateOneTagDocument = gql`
    mutation createOneTag($data: TagCreateInput!) {
  createOneTag(data: $data) {
    ...Tag
  }
}
    ${TagFragmentDoc}`;

/**
 * __useCreateOneTagMutation__
 *
 * To run a mutation, you first call `useCreateOneTagMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneTagMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneTagMutation, { data, loading, error }] = useCreateOneTagMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneTagMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneTagMutation, CreateOneTagMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneTagMutation, CreateOneTagMutationVariables>(CreateOneTagDocument, options);
      }
export type CreateOneTagMutationHookResult = ReturnType<typeof useCreateOneTagMutation>;
export type CreateOneTagMutationResult = Apollo.MutationResult<CreateOneTagMutation>;
export type CreateOneTagMutationOptions = Apollo.BaseMutationOptions<CreateOneTagMutation, CreateOneTagMutationVariables>;
export const UpdateOneTagDocument = gql`
    mutation updateOneTag($where: TagWhereUniqueInput!, $data: TagUpdateInput!) {
  updateOneTag(where: $where, data: $data) {
    ...Tag
  }
}
    ${TagFragmentDoc}`;

/**
 * __useUpdateOneTagMutation__
 *
 * To run a mutation, you first call `useUpdateOneTagMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneTagMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneTagMutation, { data, loading, error }] = useUpdateOneTagMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneTagMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneTagMutation, UpdateOneTagMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneTagMutation, UpdateOneTagMutationVariables>(UpdateOneTagDocument, options);
      }
export type UpdateOneTagMutationHookResult = ReturnType<typeof useUpdateOneTagMutation>;
export type UpdateOneTagMutationResult = Apollo.MutationResult<UpdateOneTagMutation>;
export type UpdateOneTagMutationOptions = Apollo.BaseMutationOptions<UpdateOneTagMutation, UpdateOneTagMutationVariables>;
export const DeleteOneTagDocument = gql`
    mutation deleteOneTag($where: TagWhereUniqueInput!) {
  deleteOneTag(where: $where) {
    ...Tag
  }
}
    ${TagFragmentDoc}`;

/**
 * __useDeleteOneTagMutation__
 *
 * To run a mutation, you first call `useDeleteOneTagMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneTagMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneTagMutation, { data, loading, error }] = useDeleteOneTagMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneTagMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneTagMutation, DeleteOneTagMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneTagMutation, DeleteOneTagMutationVariables>(DeleteOneTagDocument, options);
      }
export type DeleteOneTagMutationHookResult = ReturnType<typeof useDeleteOneTagMutation>;
export type DeleteOneTagMutationResult = Apollo.MutationResult<DeleteOneTagMutation>;
export type DeleteOneTagMutationOptions = Apollo.BaseMutationOptions<DeleteOneTagMutation, DeleteOneTagMutationVariables>;
export const DeleteManyTagDocument = gql`
    mutation deleteManyTag($where: TagWhereInput) {
  deleteManyTag(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyTagMutation__
 *
 * To run a mutation, you first call `useDeleteManyTagMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyTagMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyTagMutation, { data, loading, error }] = useDeleteManyTagMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyTagMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyTagMutation, DeleteManyTagMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyTagMutation, DeleteManyTagMutationVariables>(DeleteManyTagDocument, options);
      }
export type DeleteManyTagMutationHookResult = ReturnType<typeof useDeleteManyTagMutation>;
export type DeleteManyTagMutationResult = Apollo.MutationResult<DeleteManyTagMutation>;
export type DeleteManyTagMutationOptions = Apollo.BaseMutationOptions<DeleteManyTagMutation, DeleteManyTagMutationVariables>;
export const UpdateManyTagDocument = gql`
    mutation updateManyTag($where: TagWhereInput, $data: TagUpdateManyMutationInput!) {
  updateManyTag(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyTagMutation__
 *
 * To run a mutation, you first call `useUpdateManyTagMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyTagMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyTagMutation, { data, loading, error }] = useUpdateManyTagMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyTagMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyTagMutation, UpdateManyTagMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyTagMutation, UpdateManyTagMutationVariables>(UpdateManyTagDocument, options);
      }
export type UpdateManyTagMutationHookResult = ReturnType<typeof useUpdateManyTagMutation>;
export type UpdateManyTagMutationResult = Apollo.MutationResult<UpdateManyTagMutation>;
export type UpdateManyTagMutationOptions = Apollo.BaseMutationOptions<UpdateManyTagMutation, UpdateManyTagMutationVariables>;
export const FindUniqueTaxDocument = gql`
    query findUniqueTax($where: TaxWhereUniqueInput!) {
  findUniqueTax(where: $where) {
    ...Tax
  }
}
    ${TaxFragmentDoc}`;

/**
 * __useFindUniqueTaxQuery__
 *
 * To run a query within a React component, call `useFindUniqueTaxQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueTaxQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueTaxQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueTaxQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueTaxQuery, FindUniqueTaxQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueTaxQuery, FindUniqueTaxQueryVariables>(FindUniqueTaxDocument, options);
      }
export function useFindUniqueTaxLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueTaxQuery, FindUniqueTaxQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueTaxQuery, FindUniqueTaxQueryVariables>(FindUniqueTaxDocument, options);
        }
export type FindUniqueTaxQueryHookResult = ReturnType<typeof useFindUniqueTaxQuery>;
export type FindUniqueTaxLazyQueryHookResult = ReturnType<typeof useFindUniqueTaxLazyQuery>;
export type FindUniqueTaxQueryResult = Apollo.QueryResult<FindUniqueTaxQuery, FindUniqueTaxQueryVariables>;
export const FindManyTaxDocument = gql`
    query findManyTax($where: TaxWhereInput, $orderBy: [TaxOrderByWithRelationInput!], $cursor: TaxWhereUniqueInput, $skip: Int, $take: Int) {
  findManyTax(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Tax
  }
}
    ${TaxFragmentDoc}`;

/**
 * __useFindManyTaxQuery__
 *
 * To run a query within a React component, call `useFindManyTaxQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyTaxQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyTaxQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyTaxQuery(baseOptions?: Apollo.QueryHookOptions<FindManyTaxQuery, FindManyTaxQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyTaxQuery, FindManyTaxQueryVariables>(FindManyTaxDocument, options);
      }
export function useFindManyTaxLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyTaxQuery, FindManyTaxQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyTaxQuery, FindManyTaxQueryVariables>(FindManyTaxDocument, options);
        }
export type FindManyTaxQueryHookResult = ReturnType<typeof useFindManyTaxQuery>;
export type FindManyTaxLazyQueryHookResult = ReturnType<typeof useFindManyTaxLazyQuery>;
export type FindManyTaxQueryResult = Apollo.QueryResult<FindManyTaxQuery, FindManyTaxQueryVariables>;
export const FindManyTaxCountDocument = gql`
    query findManyTaxCount($where: TaxWhereInput, $orderBy: [TaxOrderByWithRelationInput!], $cursor: TaxWhereUniqueInput, $skip: Int, $take: Int) {
  findManyTaxCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyTaxCountQuery__
 *
 * To run a query within a React component, call `useFindManyTaxCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyTaxCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyTaxCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyTaxCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyTaxCountQuery, FindManyTaxCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyTaxCountQuery, FindManyTaxCountQueryVariables>(FindManyTaxCountDocument, options);
      }
export function useFindManyTaxCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyTaxCountQuery, FindManyTaxCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyTaxCountQuery, FindManyTaxCountQueryVariables>(FindManyTaxCountDocument, options);
        }
export type FindManyTaxCountQueryHookResult = ReturnType<typeof useFindManyTaxCountQuery>;
export type FindManyTaxCountLazyQueryHookResult = ReturnType<typeof useFindManyTaxCountLazyQuery>;
export type FindManyTaxCountQueryResult = Apollo.QueryResult<FindManyTaxCountQuery, FindManyTaxCountQueryVariables>;
export const CreateOneTaxDocument = gql`
    mutation createOneTax($data: TaxCreateInput!) {
  createOneTax(data: $data) {
    ...Tax
  }
}
    ${TaxFragmentDoc}`;

/**
 * __useCreateOneTaxMutation__
 *
 * To run a mutation, you first call `useCreateOneTaxMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneTaxMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneTaxMutation, { data, loading, error }] = useCreateOneTaxMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneTaxMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneTaxMutation, CreateOneTaxMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneTaxMutation, CreateOneTaxMutationVariables>(CreateOneTaxDocument, options);
      }
export type CreateOneTaxMutationHookResult = ReturnType<typeof useCreateOneTaxMutation>;
export type CreateOneTaxMutationResult = Apollo.MutationResult<CreateOneTaxMutation>;
export type CreateOneTaxMutationOptions = Apollo.BaseMutationOptions<CreateOneTaxMutation, CreateOneTaxMutationVariables>;
export const UpdateOneTaxDocument = gql`
    mutation updateOneTax($where: TaxWhereUniqueInput!, $data: TaxUpdateInput!) {
  updateOneTax(where: $where, data: $data) {
    ...Tax
  }
}
    ${TaxFragmentDoc}`;

/**
 * __useUpdateOneTaxMutation__
 *
 * To run a mutation, you first call `useUpdateOneTaxMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneTaxMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneTaxMutation, { data, loading, error }] = useUpdateOneTaxMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneTaxMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneTaxMutation, UpdateOneTaxMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneTaxMutation, UpdateOneTaxMutationVariables>(UpdateOneTaxDocument, options);
      }
export type UpdateOneTaxMutationHookResult = ReturnType<typeof useUpdateOneTaxMutation>;
export type UpdateOneTaxMutationResult = Apollo.MutationResult<UpdateOneTaxMutation>;
export type UpdateOneTaxMutationOptions = Apollo.BaseMutationOptions<UpdateOneTaxMutation, UpdateOneTaxMutationVariables>;
export const DeleteOneTaxDocument = gql`
    mutation deleteOneTax($where: TaxWhereUniqueInput!) {
  deleteOneTax(where: $where) {
    ...Tax
  }
}
    ${TaxFragmentDoc}`;

/**
 * __useDeleteOneTaxMutation__
 *
 * To run a mutation, you first call `useDeleteOneTaxMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneTaxMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneTaxMutation, { data, loading, error }] = useDeleteOneTaxMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneTaxMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneTaxMutation, DeleteOneTaxMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneTaxMutation, DeleteOneTaxMutationVariables>(DeleteOneTaxDocument, options);
      }
export type DeleteOneTaxMutationHookResult = ReturnType<typeof useDeleteOneTaxMutation>;
export type DeleteOneTaxMutationResult = Apollo.MutationResult<DeleteOneTaxMutation>;
export type DeleteOneTaxMutationOptions = Apollo.BaseMutationOptions<DeleteOneTaxMutation, DeleteOneTaxMutationVariables>;
export const DeleteManyTaxDocument = gql`
    mutation deleteManyTax($where: TaxWhereInput) {
  deleteManyTax(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyTaxMutation__
 *
 * To run a mutation, you first call `useDeleteManyTaxMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyTaxMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyTaxMutation, { data, loading, error }] = useDeleteManyTaxMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyTaxMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyTaxMutation, DeleteManyTaxMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyTaxMutation, DeleteManyTaxMutationVariables>(DeleteManyTaxDocument, options);
      }
export type DeleteManyTaxMutationHookResult = ReturnType<typeof useDeleteManyTaxMutation>;
export type DeleteManyTaxMutationResult = Apollo.MutationResult<DeleteManyTaxMutation>;
export type DeleteManyTaxMutationOptions = Apollo.BaseMutationOptions<DeleteManyTaxMutation, DeleteManyTaxMutationVariables>;
export const UpdateManyTaxDocument = gql`
    mutation updateManyTax($where: TaxWhereInput, $data: TaxUpdateManyMutationInput!) {
  updateManyTax(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyTaxMutation__
 *
 * To run a mutation, you first call `useUpdateManyTaxMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyTaxMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyTaxMutation, { data, loading, error }] = useUpdateManyTaxMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyTaxMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyTaxMutation, UpdateManyTaxMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyTaxMutation, UpdateManyTaxMutationVariables>(UpdateManyTaxDocument, options);
      }
export type UpdateManyTaxMutationHookResult = ReturnType<typeof useUpdateManyTaxMutation>;
export type UpdateManyTaxMutationResult = Apollo.MutationResult<UpdateManyTaxMutation>;
export type UpdateManyTaxMutationOptions = Apollo.BaseMutationOptions<UpdateManyTaxMutation, UpdateManyTaxMutationVariables>;
export const FindUniqueTraitDocument = gql`
    query findUniqueTrait($where: TraitWhereUniqueInput!) {
  findUniqueTrait(where: $where) {
    ...Trait
  }
}
    ${TraitFragmentDoc}`;

/**
 * __useFindUniqueTraitQuery__
 *
 * To run a query within a React component, call `useFindUniqueTraitQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueTraitQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueTraitQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueTraitQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueTraitQuery, FindUniqueTraitQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueTraitQuery, FindUniqueTraitQueryVariables>(FindUniqueTraitDocument, options);
      }
export function useFindUniqueTraitLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueTraitQuery, FindUniqueTraitQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueTraitQuery, FindUniqueTraitQueryVariables>(FindUniqueTraitDocument, options);
        }
export type FindUniqueTraitQueryHookResult = ReturnType<typeof useFindUniqueTraitQuery>;
export type FindUniqueTraitLazyQueryHookResult = ReturnType<typeof useFindUniqueTraitLazyQuery>;
export type FindUniqueTraitQueryResult = Apollo.QueryResult<FindUniqueTraitQuery, FindUniqueTraitQueryVariables>;
export const FindManyTraitDocument = gql`
    query findManyTrait($where: TraitWhereInput, $orderBy: [TraitOrderByWithRelationInput!], $cursor: TraitWhereUniqueInput, $skip: Int, $take: Int) {
  findManyTrait(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Trait
  }
}
    ${TraitFragmentDoc}`;

/**
 * __useFindManyTraitQuery__
 *
 * To run a query within a React component, call `useFindManyTraitQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyTraitQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyTraitQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyTraitQuery(baseOptions?: Apollo.QueryHookOptions<FindManyTraitQuery, FindManyTraitQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyTraitQuery, FindManyTraitQueryVariables>(FindManyTraitDocument, options);
      }
export function useFindManyTraitLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyTraitQuery, FindManyTraitQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyTraitQuery, FindManyTraitQueryVariables>(FindManyTraitDocument, options);
        }
export type FindManyTraitQueryHookResult = ReturnType<typeof useFindManyTraitQuery>;
export type FindManyTraitLazyQueryHookResult = ReturnType<typeof useFindManyTraitLazyQuery>;
export type FindManyTraitQueryResult = Apollo.QueryResult<FindManyTraitQuery, FindManyTraitQueryVariables>;
export const FindManyTraitCountDocument = gql`
    query findManyTraitCount($where: TraitWhereInput, $orderBy: [TraitOrderByWithRelationInput!], $cursor: TraitWhereUniqueInput, $skip: Int, $take: Int) {
  findManyTraitCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyTraitCountQuery__
 *
 * To run a query within a React component, call `useFindManyTraitCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyTraitCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyTraitCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyTraitCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyTraitCountQuery, FindManyTraitCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyTraitCountQuery, FindManyTraitCountQueryVariables>(FindManyTraitCountDocument, options);
      }
export function useFindManyTraitCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyTraitCountQuery, FindManyTraitCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyTraitCountQuery, FindManyTraitCountQueryVariables>(FindManyTraitCountDocument, options);
        }
export type FindManyTraitCountQueryHookResult = ReturnType<typeof useFindManyTraitCountQuery>;
export type FindManyTraitCountLazyQueryHookResult = ReturnType<typeof useFindManyTraitCountLazyQuery>;
export type FindManyTraitCountQueryResult = Apollo.QueryResult<FindManyTraitCountQuery, FindManyTraitCountQueryVariables>;
export const CreateOneTraitDocument = gql`
    mutation createOneTrait($data: TraitCreateInput!) {
  createOneTrait(data: $data) {
    ...Trait
  }
}
    ${TraitFragmentDoc}`;

/**
 * __useCreateOneTraitMutation__
 *
 * To run a mutation, you first call `useCreateOneTraitMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneTraitMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneTraitMutation, { data, loading, error }] = useCreateOneTraitMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneTraitMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneTraitMutation, CreateOneTraitMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneTraitMutation, CreateOneTraitMutationVariables>(CreateOneTraitDocument, options);
      }
export type CreateOneTraitMutationHookResult = ReturnType<typeof useCreateOneTraitMutation>;
export type CreateOneTraitMutationResult = Apollo.MutationResult<CreateOneTraitMutation>;
export type CreateOneTraitMutationOptions = Apollo.BaseMutationOptions<CreateOneTraitMutation, CreateOneTraitMutationVariables>;
export const UpdateOneTraitDocument = gql`
    mutation updateOneTrait($where: TraitWhereUniqueInput!, $data: TraitUpdateInput!) {
  updateOneTrait(where: $where, data: $data) {
    ...Trait
  }
}
    ${TraitFragmentDoc}`;

/**
 * __useUpdateOneTraitMutation__
 *
 * To run a mutation, you first call `useUpdateOneTraitMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneTraitMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneTraitMutation, { data, loading, error }] = useUpdateOneTraitMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneTraitMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneTraitMutation, UpdateOneTraitMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneTraitMutation, UpdateOneTraitMutationVariables>(UpdateOneTraitDocument, options);
      }
export type UpdateOneTraitMutationHookResult = ReturnType<typeof useUpdateOneTraitMutation>;
export type UpdateOneTraitMutationResult = Apollo.MutationResult<UpdateOneTraitMutation>;
export type UpdateOneTraitMutationOptions = Apollo.BaseMutationOptions<UpdateOneTraitMutation, UpdateOneTraitMutationVariables>;
export const DeleteOneTraitDocument = gql`
    mutation deleteOneTrait($where: TraitWhereUniqueInput!) {
  deleteOneTrait(where: $where) {
    ...Trait
  }
}
    ${TraitFragmentDoc}`;

/**
 * __useDeleteOneTraitMutation__
 *
 * To run a mutation, you first call `useDeleteOneTraitMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneTraitMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneTraitMutation, { data, loading, error }] = useDeleteOneTraitMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneTraitMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneTraitMutation, DeleteOneTraitMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneTraitMutation, DeleteOneTraitMutationVariables>(DeleteOneTraitDocument, options);
      }
export type DeleteOneTraitMutationHookResult = ReturnType<typeof useDeleteOneTraitMutation>;
export type DeleteOneTraitMutationResult = Apollo.MutationResult<DeleteOneTraitMutation>;
export type DeleteOneTraitMutationOptions = Apollo.BaseMutationOptions<DeleteOneTraitMutation, DeleteOneTraitMutationVariables>;
export const DeleteManyTraitDocument = gql`
    mutation deleteManyTrait($where: TraitWhereInput) {
  deleteManyTrait(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyTraitMutation__
 *
 * To run a mutation, you first call `useDeleteManyTraitMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyTraitMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyTraitMutation, { data, loading, error }] = useDeleteManyTraitMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyTraitMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyTraitMutation, DeleteManyTraitMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyTraitMutation, DeleteManyTraitMutationVariables>(DeleteManyTraitDocument, options);
      }
export type DeleteManyTraitMutationHookResult = ReturnType<typeof useDeleteManyTraitMutation>;
export type DeleteManyTraitMutationResult = Apollo.MutationResult<DeleteManyTraitMutation>;
export type DeleteManyTraitMutationOptions = Apollo.BaseMutationOptions<DeleteManyTraitMutation, DeleteManyTraitMutationVariables>;
export const UpdateManyTraitDocument = gql`
    mutation updateManyTrait($where: TraitWhereInput, $data: TraitUpdateManyMutationInput!) {
  updateManyTrait(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyTraitMutation__
 *
 * To run a mutation, you first call `useUpdateManyTraitMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyTraitMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyTraitMutation, { data, loading, error }] = useUpdateManyTraitMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyTraitMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyTraitMutation, UpdateManyTraitMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyTraitMutation, UpdateManyTraitMutationVariables>(UpdateManyTraitDocument, options);
      }
export type UpdateManyTraitMutationHookResult = ReturnType<typeof useUpdateManyTraitMutation>;
export type UpdateManyTraitMutationResult = Apollo.MutationResult<UpdateManyTraitMutation>;
export type UpdateManyTraitMutationOptions = Apollo.BaseMutationOptions<UpdateManyTraitMutation, UpdateManyTraitMutationVariables>;
export const FindUniqueTypeDocument = gql`
    query findUniqueType($where: TypeWhereUniqueInput!) {
  findUniqueType(where: $where) {
    ...Type
  }
}
    ${TypeFragmentDoc}`;

/**
 * __useFindUniqueTypeQuery__
 *
 * To run a query within a React component, call `useFindUniqueTypeQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueTypeQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueTypeQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueTypeQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueTypeQuery, FindUniqueTypeQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueTypeQuery, FindUniqueTypeQueryVariables>(FindUniqueTypeDocument, options);
      }
export function useFindUniqueTypeLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueTypeQuery, FindUniqueTypeQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueTypeQuery, FindUniqueTypeQueryVariables>(FindUniqueTypeDocument, options);
        }
export type FindUniqueTypeQueryHookResult = ReturnType<typeof useFindUniqueTypeQuery>;
export type FindUniqueTypeLazyQueryHookResult = ReturnType<typeof useFindUniqueTypeLazyQuery>;
export type FindUniqueTypeQueryResult = Apollo.QueryResult<FindUniqueTypeQuery, FindUniqueTypeQueryVariables>;
export const FindManyTypeDocument = gql`
    query findManyType($where: TypeWhereInput, $orderBy: [TypeOrderByWithRelationInput!], $cursor: TypeWhereUniqueInput, $skip: Int, $take: Int) {
  findManyType(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Type
  }
}
    ${TypeFragmentDoc}`;

/**
 * __useFindManyTypeQuery__
 *
 * To run a query within a React component, call `useFindManyTypeQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyTypeQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyTypeQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyTypeQuery(baseOptions?: Apollo.QueryHookOptions<FindManyTypeQuery, FindManyTypeQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyTypeQuery, FindManyTypeQueryVariables>(FindManyTypeDocument, options);
      }
export function useFindManyTypeLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyTypeQuery, FindManyTypeQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyTypeQuery, FindManyTypeQueryVariables>(FindManyTypeDocument, options);
        }
export type FindManyTypeQueryHookResult = ReturnType<typeof useFindManyTypeQuery>;
export type FindManyTypeLazyQueryHookResult = ReturnType<typeof useFindManyTypeLazyQuery>;
export type FindManyTypeQueryResult = Apollo.QueryResult<FindManyTypeQuery, FindManyTypeQueryVariables>;
export const FindManyTypeCountDocument = gql`
    query findManyTypeCount($where: TypeWhereInput, $orderBy: [TypeOrderByWithRelationInput!], $cursor: TypeWhereUniqueInput, $skip: Int, $take: Int) {
  findManyTypeCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyTypeCountQuery__
 *
 * To run a query within a React component, call `useFindManyTypeCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyTypeCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyTypeCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyTypeCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyTypeCountQuery, FindManyTypeCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyTypeCountQuery, FindManyTypeCountQueryVariables>(FindManyTypeCountDocument, options);
      }
export function useFindManyTypeCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyTypeCountQuery, FindManyTypeCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyTypeCountQuery, FindManyTypeCountQueryVariables>(FindManyTypeCountDocument, options);
        }
export type FindManyTypeCountQueryHookResult = ReturnType<typeof useFindManyTypeCountQuery>;
export type FindManyTypeCountLazyQueryHookResult = ReturnType<typeof useFindManyTypeCountLazyQuery>;
export type FindManyTypeCountQueryResult = Apollo.QueryResult<FindManyTypeCountQuery, FindManyTypeCountQueryVariables>;
export const CreateOneTypeDocument = gql`
    mutation createOneType($data: TypeCreateInput!) {
  createOneType(data: $data) {
    ...Type
  }
}
    ${TypeFragmentDoc}`;

/**
 * __useCreateOneTypeMutation__
 *
 * To run a mutation, you first call `useCreateOneTypeMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneTypeMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneTypeMutation, { data, loading, error }] = useCreateOneTypeMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneTypeMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneTypeMutation, CreateOneTypeMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneTypeMutation, CreateOneTypeMutationVariables>(CreateOneTypeDocument, options);
      }
export type CreateOneTypeMutationHookResult = ReturnType<typeof useCreateOneTypeMutation>;
export type CreateOneTypeMutationResult = Apollo.MutationResult<CreateOneTypeMutation>;
export type CreateOneTypeMutationOptions = Apollo.BaseMutationOptions<CreateOneTypeMutation, CreateOneTypeMutationVariables>;
export const UpdateOneTypeDocument = gql`
    mutation updateOneType($where: TypeWhereUniqueInput!, $data: TypeUpdateInput!) {
  updateOneType(where: $where, data: $data) {
    ...Type
  }
}
    ${TypeFragmentDoc}`;

/**
 * __useUpdateOneTypeMutation__
 *
 * To run a mutation, you first call `useUpdateOneTypeMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneTypeMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneTypeMutation, { data, loading, error }] = useUpdateOneTypeMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneTypeMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneTypeMutation, UpdateOneTypeMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneTypeMutation, UpdateOneTypeMutationVariables>(UpdateOneTypeDocument, options);
      }
export type UpdateOneTypeMutationHookResult = ReturnType<typeof useUpdateOneTypeMutation>;
export type UpdateOneTypeMutationResult = Apollo.MutationResult<UpdateOneTypeMutation>;
export type UpdateOneTypeMutationOptions = Apollo.BaseMutationOptions<UpdateOneTypeMutation, UpdateOneTypeMutationVariables>;
export const DeleteOneTypeDocument = gql`
    mutation deleteOneType($where: TypeWhereUniqueInput!) {
  deleteOneType(where: $where) {
    ...Type
  }
}
    ${TypeFragmentDoc}`;

/**
 * __useDeleteOneTypeMutation__
 *
 * To run a mutation, you first call `useDeleteOneTypeMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneTypeMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneTypeMutation, { data, loading, error }] = useDeleteOneTypeMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneTypeMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneTypeMutation, DeleteOneTypeMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneTypeMutation, DeleteOneTypeMutationVariables>(DeleteOneTypeDocument, options);
      }
export type DeleteOneTypeMutationHookResult = ReturnType<typeof useDeleteOneTypeMutation>;
export type DeleteOneTypeMutationResult = Apollo.MutationResult<DeleteOneTypeMutation>;
export type DeleteOneTypeMutationOptions = Apollo.BaseMutationOptions<DeleteOneTypeMutation, DeleteOneTypeMutationVariables>;
export const DeleteManyTypeDocument = gql`
    mutation deleteManyType($where: TypeWhereInput) {
  deleteManyType(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyTypeMutation__
 *
 * To run a mutation, you first call `useDeleteManyTypeMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyTypeMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyTypeMutation, { data, loading, error }] = useDeleteManyTypeMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyTypeMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyTypeMutation, DeleteManyTypeMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyTypeMutation, DeleteManyTypeMutationVariables>(DeleteManyTypeDocument, options);
      }
export type DeleteManyTypeMutationHookResult = ReturnType<typeof useDeleteManyTypeMutation>;
export type DeleteManyTypeMutationResult = Apollo.MutationResult<DeleteManyTypeMutation>;
export type DeleteManyTypeMutationOptions = Apollo.BaseMutationOptions<DeleteManyTypeMutation, DeleteManyTypeMutationVariables>;
export const UpdateManyTypeDocument = gql`
    mutation updateManyType($where: TypeWhereInput, $data: TypeUpdateManyMutationInput!) {
  updateManyType(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyTypeMutation__
 *
 * To run a mutation, you first call `useUpdateManyTypeMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyTypeMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyTypeMutation, { data, loading, error }] = useUpdateManyTypeMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyTypeMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyTypeMutation, UpdateManyTypeMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyTypeMutation, UpdateManyTypeMutationVariables>(UpdateManyTypeDocument, options);
      }
export type UpdateManyTypeMutationHookResult = ReturnType<typeof useUpdateManyTypeMutation>;
export type UpdateManyTypeMutationResult = Apollo.MutationResult<UpdateManyTypeMutation>;
export type UpdateManyTypeMutationOptions = Apollo.BaseMutationOptions<UpdateManyTypeMutation, UpdateManyTypeMutationVariables>;
export const FindUniqueUserDocument = gql`
    query findUniqueUser($where: UserWhereUniqueInput!) {
  findUniqueUser(where: $where) {
    ...User
  }
}
    ${UserFragmentDoc}`;

/**
 * __useFindUniqueUserQuery__
 *
 * To run a query within a React component, call `useFindUniqueUserQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueUserQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueUserQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueUserQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueUserQuery, FindUniqueUserQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueUserQuery, FindUniqueUserQueryVariables>(FindUniqueUserDocument, options);
      }
export function useFindUniqueUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueUserQuery, FindUniqueUserQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueUserQuery, FindUniqueUserQueryVariables>(FindUniqueUserDocument, options);
        }
export type FindUniqueUserQueryHookResult = ReturnType<typeof useFindUniqueUserQuery>;
export type FindUniqueUserLazyQueryHookResult = ReturnType<typeof useFindUniqueUserLazyQuery>;
export type FindUniqueUserQueryResult = Apollo.QueryResult<FindUniqueUserQuery, FindUniqueUserQueryVariables>;
export const FindManyUserDocument = gql`
    query findManyUser($where: UserWhereInput, $orderBy: [UserOrderByWithRelationInput!], $cursor: UserWhereUniqueInput, $skip: Int, $take: Int) {
  findManyUser(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...User
  }
}
    ${UserFragmentDoc}`;

/**
 * __useFindManyUserQuery__
 *
 * To run a query within a React component, call `useFindManyUserQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyUserQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyUserQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyUserQuery(baseOptions?: Apollo.QueryHookOptions<FindManyUserQuery, FindManyUserQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyUserQuery, FindManyUserQueryVariables>(FindManyUserDocument, options);
      }
export function useFindManyUserLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyUserQuery, FindManyUserQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyUserQuery, FindManyUserQueryVariables>(FindManyUserDocument, options);
        }
export type FindManyUserQueryHookResult = ReturnType<typeof useFindManyUserQuery>;
export type FindManyUserLazyQueryHookResult = ReturnType<typeof useFindManyUserLazyQuery>;
export type FindManyUserQueryResult = Apollo.QueryResult<FindManyUserQuery, FindManyUserQueryVariables>;
export const FindManyUserCountDocument = gql`
    query findManyUserCount($where: UserWhereInput, $orderBy: [UserOrderByWithRelationInput!], $cursor: UserWhereUniqueInput, $skip: Int, $take: Int) {
  findManyUserCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyUserCountQuery__
 *
 * To run a query within a React component, call `useFindManyUserCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyUserCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyUserCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyUserCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyUserCountQuery, FindManyUserCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyUserCountQuery, FindManyUserCountQueryVariables>(FindManyUserCountDocument, options);
      }
export function useFindManyUserCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyUserCountQuery, FindManyUserCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyUserCountQuery, FindManyUserCountQueryVariables>(FindManyUserCountDocument, options);
        }
export type FindManyUserCountQueryHookResult = ReturnType<typeof useFindManyUserCountQuery>;
export type FindManyUserCountLazyQueryHookResult = ReturnType<typeof useFindManyUserCountLazyQuery>;
export type FindManyUserCountQueryResult = Apollo.QueryResult<FindManyUserCountQuery, FindManyUserCountQueryVariables>;
export const CreateOneUserDocument = gql`
    mutation createOneUser($data: UserCreateInput!) {
  createOneUser(data: $data) {
    ...User
  }
}
    ${UserFragmentDoc}`;

/**
 * __useCreateOneUserMutation__
 *
 * To run a mutation, you first call `useCreateOneUserMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneUserMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneUserMutation, { data, loading, error }] = useCreateOneUserMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneUserMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneUserMutation, CreateOneUserMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneUserMutation, CreateOneUserMutationVariables>(CreateOneUserDocument, options);
      }
export type CreateOneUserMutationHookResult = ReturnType<typeof useCreateOneUserMutation>;
export type CreateOneUserMutationResult = Apollo.MutationResult<CreateOneUserMutation>;
export type CreateOneUserMutationOptions = Apollo.BaseMutationOptions<CreateOneUserMutation, CreateOneUserMutationVariables>;
export const UpdateOneUserDocument = gql`
    mutation updateOneUser($where: UserWhereUniqueInput!, $data: UserUpdateInput!) {
  updateOneUser(where: $where, data: $data) {
    ...User
  }
}
    ${UserFragmentDoc}`;

/**
 * __useUpdateOneUserMutation__
 *
 * To run a mutation, you first call `useUpdateOneUserMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneUserMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneUserMutation, { data, loading, error }] = useUpdateOneUserMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneUserMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneUserMutation, UpdateOneUserMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneUserMutation, UpdateOneUserMutationVariables>(UpdateOneUserDocument, options);
      }
export type UpdateOneUserMutationHookResult = ReturnType<typeof useUpdateOneUserMutation>;
export type UpdateOneUserMutationResult = Apollo.MutationResult<UpdateOneUserMutation>;
export type UpdateOneUserMutationOptions = Apollo.BaseMutationOptions<UpdateOneUserMutation, UpdateOneUserMutationVariables>;
export const DeleteOneUserDocument = gql`
    mutation deleteOneUser($where: UserWhereUniqueInput!) {
  deleteOneUser(where: $where) {
    ...User
  }
}
    ${UserFragmentDoc}`;

/**
 * __useDeleteOneUserMutation__
 *
 * To run a mutation, you first call `useDeleteOneUserMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneUserMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneUserMutation, { data, loading, error }] = useDeleteOneUserMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneUserMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneUserMutation, DeleteOneUserMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneUserMutation, DeleteOneUserMutationVariables>(DeleteOneUserDocument, options);
      }
export type DeleteOneUserMutationHookResult = ReturnType<typeof useDeleteOneUserMutation>;
export type DeleteOneUserMutationResult = Apollo.MutationResult<DeleteOneUserMutation>;
export type DeleteOneUserMutationOptions = Apollo.BaseMutationOptions<DeleteOneUserMutation, DeleteOneUserMutationVariables>;
export const DeleteManyUserDocument = gql`
    mutation deleteManyUser($where: UserWhereInput) {
  deleteManyUser(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyUserMutation__
 *
 * To run a mutation, you first call `useDeleteManyUserMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyUserMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyUserMutation, { data, loading, error }] = useDeleteManyUserMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyUserMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyUserMutation, DeleteManyUserMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyUserMutation, DeleteManyUserMutationVariables>(DeleteManyUserDocument, options);
      }
export type DeleteManyUserMutationHookResult = ReturnType<typeof useDeleteManyUserMutation>;
export type DeleteManyUserMutationResult = Apollo.MutationResult<DeleteManyUserMutation>;
export type DeleteManyUserMutationOptions = Apollo.BaseMutationOptions<DeleteManyUserMutation, DeleteManyUserMutationVariables>;
export const UpdateManyUserDocument = gql`
    mutation updateManyUser($where: UserWhereInput, $data: UserUpdateManyMutationInput!) {
  updateManyUser(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyUserMutation__
 *
 * To run a mutation, you first call `useUpdateManyUserMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyUserMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyUserMutation, { data, loading, error }] = useUpdateManyUserMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyUserMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyUserMutation, UpdateManyUserMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyUserMutation, UpdateManyUserMutationVariables>(UpdateManyUserDocument, options);
      }
export type UpdateManyUserMutationHookResult = ReturnType<typeof useUpdateManyUserMutation>;
export type UpdateManyUserMutationResult = Apollo.MutationResult<UpdateManyUserMutation>;
export type UpdateManyUserMutationOptions = Apollo.BaseMutationOptions<UpdateManyUserMutation, UpdateManyUserMutationVariables>;
export const FindUniqueValueDocument = gql`
    query findUniqueValue($where: ValueWhereUniqueInput!) {
  findUniqueValue(where: $where) {
    ...Value
  }
}
    ${ValueFragmentDoc}`;

/**
 * __useFindUniqueValueQuery__
 *
 * To run a query within a React component, call `useFindUniqueValueQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueValueQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueValueQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueValueQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueValueQuery, FindUniqueValueQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueValueQuery, FindUniqueValueQueryVariables>(FindUniqueValueDocument, options);
      }
export function useFindUniqueValueLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueValueQuery, FindUniqueValueQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueValueQuery, FindUniqueValueQueryVariables>(FindUniqueValueDocument, options);
        }
export type FindUniqueValueQueryHookResult = ReturnType<typeof useFindUniqueValueQuery>;
export type FindUniqueValueLazyQueryHookResult = ReturnType<typeof useFindUniqueValueLazyQuery>;
export type FindUniqueValueQueryResult = Apollo.QueryResult<FindUniqueValueQuery, FindUniqueValueQueryVariables>;
export const FindManyValueDocument = gql`
    query findManyValue($where: ValueWhereInput, $orderBy: [ValueOrderByWithRelationInput!], $cursor: ValueWhereUniqueInput, $skip: Int, $take: Int) {
  findManyValue(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Value
  }
}
    ${ValueFragmentDoc}`;

/**
 * __useFindManyValueQuery__
 *
 * To run a query within a React component, call `useFindManyValueQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyValueQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyValueQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyValueQuery(baseOptions?: Apollo.QueryHookOptions<FindManyValueQuery, FindManyValueQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyValueQuery, FindManyValueQueryVariables>(FindManyValueDocument, options);
      }
export function useFindManyValueLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyValueQuery, FindManyValueQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyValueQuery, FindManyValueQueryVariables>(FindManyValueDocument, options);
        }
export type FindManyValueQueryHookResult = ReturnType<typeof useFindManyValueQuery>;
export type FindManyValueLazyQueryHookResult = ReturnType<typeof useFindManyValueLazyQuery>;
export type FindManyValueQueryResult = Apollo.QueryResult<FindManyValueQuery, FindManyValueQueryVariables>;
export const FindManyValueCountDocument = gql`
    query findManyValueCount($where: ValueWhereInput, $orderBy: [ValueOrderByWithRelationInput!], $cursor: ValueWhereUniqueInput, $skip: Int, $take: Int) {
  findManyValueCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyValueCountQuery__
 *
 * To run a query within a React component, call `useFindManyValueCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyValueCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyValueCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyValueCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyValueCountQuery, FindManyValueCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyValueCountQuery, FindManyValueCountQueryVariables>(FindManyValueCountDocument, options);
      }
export function useFindManyValueCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyValueCountQuery, FindManyValueCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyValueCountQuery, FindManyValueCountQueryVariables>(FindManyValueCountDocument, options);
        }
export type FindManyValueCountQueryHookResult = ReturnType<typeof useFindManyValueCountQuery>;
export type FindManyValueCountLazyQueryHookResult = ReturnType<typeof useFindManyValueCountLazyQuery>;
export type FindManyValueCountQueryResult = Apollo.QueryResult<FindManyValueCountQuery, FindManyValueCountQueryVariables>;
export const CreateOneValueDocument = gql`
    mutation createOneValue($data: ValueCreateInput!) {
  createOneValue(data: $data) {
    ...Value
  }
}
    ${ValueFragmentDoc}`;

/**
 * __useCreateOneValueMutation__
 *
 * To run a mutation, you first call `useCreateOneValueMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneValueMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneValueMutation, { data, loading, error }] = useCreateOneValueMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneValueMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneValueMutation, CreateOneValueMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneValueMutation, CreateOneValueMutationVariables>(CreateOneValueDocument, options);
      }
export type CreateOneValueMutationHookResult = ReturnType<typeof useCreateOneValueMutation>;
export type CreateOneValueMutationResult = Apollo.MutationResult<CreateOneValueMutation>;
export type CreateOneValueMutationOptions = Apollo.BaseMutationOptions<CreateOneValueMutation, CreateOneValueMutationVariables>;
export const UpdateOneValueDocument = gql`
    mutation updateOneValue($where: ValueWhereUniqueInput!, $data: ValueUpdateInput!) {
  updateOneValue(where: $where, data: $data) {
    ...Value
  }
}
    ${ValueFragmentDoc}`;

/**
 * __useUpdateOneValueMutation__
 *
 * To run a mutation, you first call `useUpdateOneValueMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneValueMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneValueMutation, { data, loading, error }] = useUpdateOneValueMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneValueMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneValueMutation, UpdateOneValueMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneValueMutation, UpdateOneValueMutationVariables>(UpdateOneValueDocument, options);
      }
export type UpdateOneValueMutationHookResult = ReturnType<typeof useUpdateOneValueMutation>;
export type UpdateOneValueMutationResult = Apollo.MutationResult<UpdateOneValueMutation>;
export type UpdateOneValueMutationOptions = Apollo.BaseMutationOptions<UpdateOneValueMutation, UpdateOneValueMutationVariables>;
export const DeleteOneValueDocument = gql`
    mutation deleteOneValue($where: ValueWhereUniqueInput!) {
  deleteOneValue(where: $where) {
    ...Value
  }
}
    ${ValueFragmentDoc}`;

/**
 * __useDeleteOneValueMutation__
 *
 * To run a mutation, you first call `useDeleteOneValueMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneValueMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneValueMutation, { data, loading, error }] = useDeleteOneValueMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneValueMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneValueMutation, DeleteOneValueMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneValueMutation, DeleteOneValueMutationVariables>(DeleteOneValueDocument, options);
      }
export type DeleteOneValueMutationHookResult = ReturnType<typeof useDeleteOneValueMutation>;
export type DeleteOneValueMutationResult = Apollo.MutationResult<DeleteOneValueMutation>;
export type DeleteOneValueMutationOptions = Apollo.BaseMutationOptions<DeleteOneValueMutation, DeleteOneValueMutationVariables>;
export const DeleteManyValueDocument = gql`
    mutation deleteManyValue($where: ValueWhereInput) {
  deleteManyValue(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyValueMutation__
 *
 * To run a mutation, you first call `useDeleteManyValueMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyValueMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyValueMutation, { data, loading, error }] = useDeleteManyValueMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyValueMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyValueMutation, DeleteManyValueMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyValueMutation, DeleteManyValueMutationVariables>(DeleteManyValueDocument, options);
      }
export type DeleteManyValueMutationHookResult = ReturnType<typeof useDeleteManyValueMutation>;
export type DeleteManyValueMutationResult = Apollo.MutationResult<DeleteManyValueMutation>;
export type DeleteManyValueMutationOptions = Apollo.BaseMutationOptions<DeleteManyValueMutation, DeleteManyValueMutationVariables>;
export const UpdateManyValueDocument = gql`
    mutation updateManyValue($where: ValueWhereInput, $data: ValueUpdateManyMutationInput!) {
  updateManyValue(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyValueMutation__
 *
 * To run a mutation, you first call `useUpdateManyValueMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyValueMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyValueMutation, { data, loading, error }] = useUpdateManyValueMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyValueMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyValueMutation, UpdateManyValueMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyValueMutation, UpdateManyValueMutationVariables>(UpdateManyValueDocument, options);
      }
export type UpdateManyValueMutationHookResult = ReturnType<typeof useUpdateManyValueMutation>;
export type UpdateManyValueMutationResult = Apollo.MutationResult<UpdateManyValueMutation>;
export type UpdateManyValueMutationOptions = Apollo.BaseMutationOptions<UpdateManyValueMutation, UpdateManyValueMutationVariables>;
export const FindUniqueVideoDocument = gql`
    query findUniqueVideo($where: VideoWhereUniqueInput!) {
  findUniqueVideo(where: $where) {
    ...Video
  }
}
    ${VideoFragmentDoc}`;

/**
 * __useFindUniqueVideoQuery__
 *
 * To run a query within a React component, call `useFindUniqueVideoQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueVideoQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueVideoQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueVideoQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueVideoQuery, FindUniqueVideoQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueVideoQuery, FindUniqueVideoQueryVariables>(FindUniqueVideoDocument, options);
      }
export function useFindUniqueVideoLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueVideoQuery, FindUniqueVideoQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueVideoQuery, FindUniqueVideoQueryVariables>(FindUniqueVideoDocument, options);
        }
export type FindUniqueVideoQueryHookResult = ReturnType<typeof useFindUniqueVideoQuery>;
export type FindUniqueVideoLazyQueryHookResult = ReturnType<typeof useFindUniqueVideoLazyQuery>;
export type FindUniqueVideoQueryResult = Apollo.QueryResult<FindUniqueVideoQuery, FindUniqueVideoQueryVariables>;
export const FindManyVideoDocument = gql`
    query findManyVideo($where: VideoWhereInput, $orderBy: [VideoOrderByWithRelationInput!], $cursor: VideoWhereUniqueInput, $skip: Int, $take: Int) {
  findManyVideo(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Video
  }
}
    ${VideoFragmentDoc}`;

/**
 * __useFindManyVideoQuery__
 *
 * To run a query within a React component, call `useFindManyVideoQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyVideoQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyVideoQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyVideoQuery(baseOptions?: Apollo.QueryHookOptions<FindManyVideoQuery, FindManyVideoQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyVideoQuery, FindManyVideoQueryVariables>(FindManyVideoDocument, options);
      }
export function useFindManyVideoLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyVideoQuery, FindManyVideoQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyVideoQuery, FindManyVideoQueryVariables>(FindManyVideoDocument, options);
        }
export type FindManyVideoQueryHookResult = ReturnType<typeof useFindManyVideoQuery>;
export type FindManyVideoLazyQueryHookResult = ReturnType<typeof useFindManyVideoLazyQuery>;
export type FindManyVideoQueryResult = Apollo.QueryResult<FindManyVideoQuery, FindManyVideoQueryVariables>;
export const FindManyVideoCountDocument = gql`
    query findManyVideoCount($where: VideoWhereInput, $orderBy: [VideoOrderByWithRelationInput!], $cursor: VideoWhereUniqueInput, $skip: Int, $take: Int) {
  findManyVideoCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyVideoCountQuery__
 *
 * To run a query within a React component, call `useFindManyVideoCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyVideoCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyVideoCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyVideoCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyVideoCountQuery, FindManyVideoCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyVideoCountQuery, FindManyVideoCountQueryVariables>(FindManyVideoCountDocument, options);
      }
export function useFindManyVideoCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyVideoCountQuery, FindManyVideoCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyVideoCountQuery, FindManyVideoCountQueryVariables>(FindManyVideoCountDocument, options);
        }
export type FindManyVideoCountQueryHookResult = ReturnType<typeof useFindManyVideoCountQuery>;
export type FindManyVideoCountLazyQueryHookResult = ReturnType<typeof useFindManyVideoCountLazyQuery>;
export type FindManyVideoCountQueryResult = Apollo.QueryResult<FindManyVideoCountQuery, FindManyVideoCountQueryVariables>;
export const CreateOneVideoDocument = gql`
    mutation createOneVideo($data: VideoCreateInput!) {
  createOneVideo(data: $data) {
    ...Video
  }
}
    ${VideoFragmentDoc}`;

/**
 * __useCreateOneVideoMutation__
 *
 * To run a mutation, you first call `useCreateOneVideoMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneVideoMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneVideoMutation, { data, loading, error }] = useCreateOneVideoMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneVideoMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneVideoMutation, CreateOneVideoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneVideoMutation, CreateOneVideoMutationVariables>(CreateOneVideoDocument, options);
      }
export type CreateOneVideoMutationHookResult = ReturnType<typeof useCreateOneVideoMutation>;
export type CreateOneVideoMutationResult = Apollo.MutationResult<CreateOneVideoMutation>;
export type CreateOneVideoMutationOptions = Apollo.BaseMutationOptions<CreateOneVideoMutation, CreateOneVideoMutationVariables>;
export const UpdateOneVideoDocument = gql`
    mutation updateOneVideo($where: VideoWhereUniqueInput!, $data: VideoUpdateInput!) {
  updateOneVideo(where: $where, data: $data) {
    ...Video
  }
}
    ${VideoFragmentDoc}`;

/**
 * __useUpdateOneVideoMutation__
 *
 * To run a mutation, you first call `useUpdateOneVideoMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneVideoMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneVideoMutation, { data, loading, error }] = useUpdateOneVideoMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneVideoMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneVideoMutation, UpdateOneVideoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneVideoMutation, UpdateOneVideoMutationVariables>(UpdateOneVideoDocument, options);
      }
export type UpdateOneVideoMutationHookResult = ReturnType<typeof useUpdateOneVideoMutation>;
export type UpdateOneVideoMutationResult = Apollo.MutationResult<UpdateOneVideoMutation>;
export type UpdateOneVideoMutationOptions = Apollo.BaseMutationOptions<UpdateOneVideoMutation, UpdateOneVideoMutationVariables>;
export const DeleteOneVideoDocument = gql`
    mutation deleteOneVideo($where: VideoWhereUniqueInput!) {
  deleteOneVideo(where: $where) {
    ...Video
  }
}
    ${VideoFragmentDoc}`;

/**
 * __useDeleteOneVideoMutation__
 *
 * To run a mutation, you first call `useDeleteOneVideoMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneVideoMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneVideoMutation, { data, loading, error }] = useDeleteOneVideoMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneVideoMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneVideoMutation, DeleteOneVideoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneVideoMutation, DeleteOneVideoMutationVariables>(DeleteOneVideoDocument, options);
      }
export type DeleteOneVideoMutationHookResult = ReturnType<typeof useDeleteOneVideoMutation>;
export type DeleteOneVideoMutationResult = Apollo.MutationResult<DeleteOneVideoMutation>;
export type DeleteOneVideoMutationOptions = Apollo.BaseMutationOptions<DeleteOneVideoMutation, DeleteOneVideoMutationVariables>;
export const DeleteManyVideoDocument = gql`
    mutation deleteManyVideo($where: VideoWhereInput) {
  deleteManyVideo(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyVideoMutation__
 *
 * To run a mutation, you first call `useDeleteManyVideoMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyVideoMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyVideoMutation, { data, loading, error }] = useDeleteManyVideoMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyVideoMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyVideoMutation, DeleteManyVideoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyVideoMutation, DeleteManyVideoMutationVariables>(DeleteManyVideoDocument, options);
      }
export type DeleteManyVideoMutationHookResult = ReturnType<typeof useDeleteManyVideoMutation>;
export type DeleteManyVideoMutationResult = Apollo.MutationResult<DeleteManyVideoMutation>;
export type DeleteManyVideoMutationOptions = Apollo.BaseMutationOptions<DeleteManyVideoMutation, DeleteManyVideoMutationVariables>;
export const UpdateManyVideoDocument = gql`
    mutation updateManyVideo($where: VideoWhereInput, $data: VideoUpdateManyMutationInput!) {
  updateManyVideo(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyVideoMutation__
 *
 * To run a mutation, you first call `useUpdateManyVideoMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyVideoMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyVideoMutation, { data, loading, error }] = useUpdateManyVideoMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyVideoMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyVideoMutation, UpdateManyVideoMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyVideoMutation, UpdateManyVideoMutationVariables>(UpdateManyVideoDocument, options);
      }
export type UpdateManyVideoMutationHookResult = ReturnType<typeof useUpdateManyVideoMutation>;
export type UpdateManyVideoMutationResult = Apollo.MutationResult<UpdateManyVideoMutation>;
export type UpdateManyVideoMutationOptions = Apollo.BaseMutationOptions<UpdateManyVideoMutation, UpdateManyVideoMutationVariables>;
export const FindUniqueWebsiteDocument = gql`
    query findUniqueWebsite($where: WebsiteWhereUniqueInput!) {
  findUniqueWebsite(where: $where) {
    ...Website
  }
}
    ${WebsiteFragmentDoc}`;

/**
 * __useFindUniqueWebsiteQuery__
 *
 * To run a query within a React component, call `useFindUniqueWebsiteQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueWebsiteQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueWebsiteQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueWebsiteQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueWebsiteQuery, FindUniqueWebsiteQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueWebsiteQuery, FindUniqueWebsiteQueryVariables>(FindUniqueWebsiteDocument, options);
      }
export function useFindUniqueWebsiteLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueWebsiteQuery, FindUniqueWebsiteQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueWebsiteQuery, FindUniqueWebsiteQueryVariables>(FindUniqueWebsiteDocument, options);
        }
export type FindUniqueWebsiteQueryHookResult = ReturnType<typeof useFindUniqueWebsiteQuery>;
export type FindUniqueWebsiteLazyQueryHookResult = ReturnType<typeof useFindUniqueWebsiteLazyQuery>;
export type FindUniqueWebsiteQueryResult = Apollo.QueryResult<FindUniqueWebsiteQuery, FindUniqueWebsiteQueryVariables>;
export const FindManyWebsiteDocument = gql`
    query findManyWebsite($where: WebsiteWhereInput, $orderBy: [WebsiteOrderByWithRelationInput!], $cursor: WebsiteWhereUniqueInput, $skip: Int, $take: Int) {
  findManyWebsite(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Website
  }
}
    ${WebsiteFragmentDoc}`;

/**
 * __useFindManyWebsiteQuery__
 *
 * To run a query within a React component, call `useFindManyWebsiteQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyWebsiteQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyWebsiteQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyWebsiteQuery(baseOptions?: Apollo.QueryHookOptions<FindManyWebsiteQuery, FindManyWebsiteQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyWebsiteQuery, FindManyWebsiteQueryVariables>(FindManyWebsiteDocument, options);
      }
export function useFindManyWebsiteLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyWebsiteQuery, FindManyWebsiteQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyWebsiteQuery, FindManyWebsiteQueryVariables>(FindManyWebsiteDocument, options);
        }
export type FindManyWebsiteQueryHookResult = ReturnType<typeof useFindManyWebsiteQuery>;
export type FindManyWebsiteLazyQueryHookResult = ReturnType<typeof useFindManyWebsiteLazyQuery>;
export type FindManyWebsiteQueryResult = Apollo.QueryResult<FindManyWebsiteQuery, FindManyWebsiteQueryVariables>;
export const FindManyWebsiteCountDocument = gql`
    query findManyWebsiteCount($where: WebsiteWhereInput, $orderBy: [WebsiteOrderByWithRelationInput!], $cursor: WebsiteWhereUniqueInput, $skip: Int, $take: Int) {
  findManyWebsiteCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyWebsiteCountQuery__
 *
 * To run a query within a React component, call `useFindManyWebsiteCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyWebsiteCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyWebsiteCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyWebsiteCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyWebsiteCountQuery, FindManyWebsiteCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyWebsiteCountQuery, FindManyWebsiteCountQueryVariables>(FindManyWebsiteCountDocument, options);
      }
export function useFindManyWebsiteCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyWebsiteCountQuery, FindManyWebsiteCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyWebsiteCountQuery, FindManyWebsiteCountQueryVariables>(FindManyWebsiteCountDocument, options);
        }
export type FindManyWebsiteCountQueryHookResult = ReturnType<typeof useFindManyWebsiteCountQuery>;
export type FindManyWebsiteCountLazyQueryHookResult = ReturnType<typeof useFindManyWebsiteCountLazyQuery>;
export type FindManyWebsiteCountQueryResult = Apollo.QueryResult<FindManyWebsiteCountQuery, FindManyWebsiteCountQueryVariables>;
export const CreateOneWebsiteDocument = gql`
    mutation createOneWebsite($data: WebsiteCreateInput!) {
  createOneWebsite(data: $data) {
    ...Website
  }
}
    ${WebsiteFragmentDoc}`;

/**
 * __useCreateOneWebsiteMutation__
 *
 * To run a mutation, you first call `useCreateOneWebsiteMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneWebsiteMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneWebsiteMutation, { data, loading, error }] = useCreateOneWebsiteMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneWebsiteMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneWebsiteMutation, CreateOneWebsiteMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneWebsiteMutation, CreateOneWebsiteMutationVariables>(CreateOneWebsiteDocument, options);
      }
export type CreateOneWebsiteMutationHookResult = ReturnType<typeof useCreateOneWebsiteMutation>;
export type CreateOneWebsiteMutationResult = Apollo.MutationResult<CreateOneWebsiteMutation>;
export type CreateOneWebsiteMutationOptions = Apollo.BaseMutationOptions<CreateOneWebsiteMutation, CreateOneWebsiteMutationVariables>;
export const UpdateOneWebsiteDocument = gql`
    mutation updateOneWebsite($where: WebsiteWhereUniqueInput!, $data: WebsiteUpdateInput!) {
  updateOneWebsite(where: $where, data: $data) {
    ...Website
  }
}
    ${WebsiteFragmentDoc}`;

/**
 * __useUpdateOneWebsiteMutation__
 *
 * To run a mutation, you first call `useUpdateOneWebsiteMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneWebsiteMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneWebsiteMutation, { data, loading, error }] = useUpdateOneWebsiteMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneWebsiteMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneWebsiteMutation, UpdateOneWebsiteMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneWebsiteMutation, UpdateOneWebsiteMutationVariables>(UpdateOneWebsiteDocument, options);
      }
export type UpdateOneWebsiteMutationHookResult = ReturnType<typeof useUpdateOneWebsiteMutation>;
export type UpdateOneWebsiteMutationResult = Apollo.MutationResult<UpdateOneWebsiteMutation>;
export type UpdateOneWebsiteMutationOptions = Apollo.BaseMutationOptions<UpdateOneWebsiteMutation, UpdateOneWebsiteMutationVariables>;
export const DeleteOneWebsiteDocument = gql`
    mutation deleteOneWebsite($where: WebsiteWhereUniqueInput!) {
  deleteOneWebsite(where: $where) {
    ...Website
  }
}
    ${WebsiteFragmentDoc}`;

/**
 * __useDeleteOneWebsiteMutation__
 *
 * To run a mutation, you first call `useDeleteOneWebsiteMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneWebsiteMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneWebsiteMutation, { data, loading, error }] = useDeleteOneWebsiteMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneWebsiteMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneWebsiteMutation, DeleteOneWebsiteMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneWebsiteMutation, DeleteOneWebsiteMutationVariables>(DeleteOneWebsiteDocument, options);
      }
export type DeleteOneWebsiteMutationHookResult = ReturnType<typeof useDeleteOneWebsiteMutation>;
export type DeleteOneWebsiteMutationResult = Apollo.MutationResult<DeleteOneWebsiteMutation>;
export type DeleteOneWebsiteMutationOptions = Apollo.BaseMutationOptions<DeleteOneWebsiteMutation, DeleteOneWebsiteMutationVariables>;
export const DeleteManyWebsiteDocument = gql`
    mutation deleteManyWebsite($where: WebsiteWhereInput) {
  deleteManyWebsite(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyWebsiteMutation__
 *
 * To run a mutation, you first call `useDeleteManyWebsiteMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyWebsiteMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyWebsiteMutation, { data, loading, error }] = useDeleteManyWebsiteMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyWebsiteMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyWebsiteMutation, DeleteManyWebsiteMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyWebsiteMutation, DeleteManyWebsiteMutationVariables>(DeleteManyWebsiteDocument, options);
      }
export type DeleteManyWebsiteMutationHookResult = ReturnType<typeof useDeleteManyWebsiteMutation>;
export type DeleteManyWebsiteMutationResult = Apollo.MutationResult<DeleteManyWebsiteMutation>;
export type DeleteManyWebsiteMutationOptions = Apollo.BaseMutationOptions<DeleteManyWebsiteMutation, DeleteManyWebsiteMutationVariables>;
export const UpdateManyWebsiteDocument = gql`
    mutation updateManyWebsite($where: WebsiteWhereInput, $data: WebsiteUpdateManyMutationInput!) {
  updateManyWebsite(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyWebsiteMutation__
 *
 * To run a mutation, you first call `useUpdateManyWebsiteMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyWebsiteMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyWebsiteMutation, { data, loading, error }] = useUpdateManyWebsiteMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyWebsiteMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyWebsiteMutation, UpdateManyWebsiteMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyWebsiteMutation, UpdateManyWebsiteMutationVariables>(UpdateManyWebsiteDocument, options);
      }
export type UpdateManyWebsiteMutationHookResult = ReturnType<typeof useUpdateManyWebsiteMutation>;
export type UpdateManyWebsiteMutationResult = Apollo.MutationResult<UpdateManyWebsiteMutation>;
export type UpdateManyWebsiteMutationOptions = Apollo.BaseMutationOptions<UpdateManyWebsiteMutation, UpdateManyWebsiteMutationVariables>;
export const FindUniqueWithdrawDocument = gql`
    query findUniqueWithdraw($where: WithdrawWhereUniqueInput!) {
  findUniqueWithdraw(where: $where) {
    ...Withdraw
  }
}
    ${WithdrawFragmentDoc}`;

/**
 * __useFindUniqueWithdrawQuery__
 *
 * To run a query within a React component, call `useFindUniqueWithdrawQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindUniqueWithdrawQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindUniqueWithdrawQuery({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useFindUniqueWithdrawQuery(baseOptions: Apollo.QueryHookOptions<FindUniqueWithdrawQuery, FindUniqueWithdrawQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindUniqueWithdrawQuery, FindUniqueWithdrawQueryVariables>(FindUniqueWithdrawDocument, options);
      }
export function useFindUniqueWithdrawLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindUniqueWithdrawQuery, FindUniqueWithdrawQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindUniqueWithdrawQuery, FindUniqueWithdrawQueryVariables>(FindUniqueWithdrawDocument, options);
        }
export type FindUniqueWithdrawQueryHookResult = ReturnType<typeof useFindUniqueWithdrawQuery>;
export type FindUniqueWithdrawLazyQueryHookResult = ReturnType<typeof useFindUniqueWithdrawLazyQuery>;
export type FindUniqueWithdrawQueryResult = Apollo.QueryResult<FindUniqueWithdrawQuery, FindUniqueWithdrawQueryVariables>;
export const FindManyWithdrawDocument = gql`
    query findManyWithdraw($where: WithdrawWhereInput, $orderBy: [WithdrawOrderByWithRelationInput!], $cursor: WithdrawWhereUniqueInput, $skip: Int, $take: Int) {
  findManyWithdraw(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take) {
    ...Withdraw
  }
}
    ${WithdrawFragmentDoc}`;

/**
 * __useFindManyWithdrawQuery__
 *
 * To run a query within a React component, call `useFindManyWithdrawQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyWithdrawQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyWithdrawQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyWithdrawQuery(baseOptions?: Apollo.QueryHookOptions<FindManyWithdrawQuery, FindManyWithdrawQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyWithdrawQuery, FindManyWithdrawQueryVariables>(FindManyWithdrawDocument, options);
      }
export function useFindManyWithdrawLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyWithdrawQuery, FindManyWithdrawQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyWithdrawQuery, FindManyWithdrawQueryVariables>(FindManyWithdrawDocument, options);
        }
export type FindManyWithdrawQueryHookResult = ReturnType<typeof useFindManyWithdrawQuery>;
export type FindManyWithdrawLazyQueryHookResult = ReturnType<typeof useFindManyWithdrawLazyQuery>;
export type FindManyWithdrawQueryResult = Apollo.QueryResult<FindManyWithdrawQuery, FindManyWithdrawQueryVariables>;
export const FindManyWithdrawCountDocument = gql`
    query findManyWithdrawCount($where: WithdrawWhereInput, $orderBy: [WithdrawOrderByWithRelationInput!], $cursor: WithdrawWhereUniqueInput, $skip: Int, $take: Int) {
  findManyWithdrawCount(where: $where, orderBy: $orderBy, cursor: $cursor, skip: $skip, take: $take)
}
    `;

/**
 * __useFindManyWithdrawCountQuery__
 *
 * To run a query within a React component, call `useFindManyWithdrawCountQuery` and pass it any options that fit your needs.
 * When your component renders, `useFindManyWithdrawCountQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useFindManyWithdrawCountQuery({
 *   variables: {
 *      where: // value for 'where'
 *      orderBy: // value for 'orderBy'
 *      cursor: // value for 'cursor'
 *      skip: // value for 'skip'
 *      take: // value for 'take'
 *   },
 * });
 */
export function useFindManyWithdrawCountQuery(baseOptions?: Apollo.QueryHookOptions<FindManyWithdrawCountQuery, FindManyWithdrawCountQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<FindManyWithdrawCountQuery, FindManyWithdrawCountQueryVariables>(FindManyWithdrawCountDocument, options);
      }
export function useFindManyWithdrawCountLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<FindManyWithdrawCountQuery, FindManyWithdrawCountQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<FindManyWithdrawCountQuery, FindManyWithdrawCountQueryVariables>(FindManyWithdrawCountDocument, options);
        }
export type FindManyWithdrawCountQueryHookResult = ReturnType<typeof useFindManyWithdrawCountQuery>;
export type FindManyWithdrawCountLazyQueryHookResult = ReturnType<typeof useFindManyWithdrawCountLazyQuery>;
export type FindManyWithdrawCountQueryResult = Apollo.QueryResult<FindManyWithdrawCountQuery, FindManyWithdrawCountQueryVariables>;
export const CreateOneWithdrawDocument = gql`
    mutation createOneWithdraw($data: WithdrawCreateInput!) {
  createOneWithdraw(data: $data) {
    ...Withdraw
  }
}
    ${WithdrawFragmentDoc}`;

/**
 * __useCreateOneWithdrawMutation__
 *
 * To run a mutation, you first call `useCreateOneWithdrawMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useCreateOneWithdrawMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [createOneWithdrawMutation, { data, loading, error }] = useCreateOneWithdrawMutation({
 *   variables: {
 *      data: // value for 'data'
 *   },
 * });
 */
export function useCreateOneWithdrawMutation(baseOptions?: Apollo.MutationHookOptions<CreateOneWithdrawMutation, CreateOneWithdrawMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<CreateOneWithdrawMutation, CreateOneWithdrawMutationVariables>(CreateOneWithdrawDocument, options);
      }
export type CreateOneWithdrawMutationHookResult = ReturnType<typeof useCreateOneWithdrawMutation>;
export type CreateOneWithdrawMutationResult = Apollo.MutationResult<CreateOneWithdrawMutation>;
export type CreateOneWithdrawMutationOptions = Apollo.BaseMutationOptions<CreateOneWithdrawMutation, CreateOneWithdrawMutationVariables>;
export const UpdateOneWithdrawDocument = gql`
    mutation updateOneWithdraw($where: WithdrawWhereUniqueInput!, $data: WithdrawUpdateInput!) {
  updateOneWithdraw(where: $where, data: $data) {
    ...Withdraw
  }
}
    ${WithdrawFragmentDoc}`;

/**
 * __useUpdateOneWithdrawMutation__
 *
 * To run a mutation, you first call `useUpdateOneWithdrawMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOneWithdrawMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOneWithdrawMutation, { data, loading, error }] = useUpdateOneWithdrawMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateOneWithdrawMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOneWithdrawMutation, UpdateOneWithdrawMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOneWithdrawMutation, UpdateOneWithdrawMutationVariables>(UpdateOneWithdrawDocument, options);
      }
export type UpdateOneWithdrawMutationHookResult = ReturnType<typeof useUpdateOneWithdrawMutation>;
export type UpdateOneWithdrawMutationResult = Apollo.MutationResult<UpdateOneWithdrawMutation>;
export type UpdateOneWithdrawMutationOptions = Apollo.BaseMutationOptions<UpdateOneWithdrawMutation, UpdateOneWithdrawMutationVariables>;
export const DeleteOneWithdrawDocument = gql`
    mutation deleteOneWithdraw($where: WithdrawWhereUniqueInput!) {
  deleteOneWithdraw(where: $where) {
    ...Withdraw
  }
}
    ${WithdrawFragmentDoc}`;

/**
 * __useDeleteOneWithdrawMutation__
 *
 * To run a mutation, you first call `useDeleteOneWithdrawMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteOneWithdrawMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteOneWithdrawMutation, { data, loading, error }] = useDeleteOneWithdrawMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteOneWithdrawMutation(baseOptions?: Apollo.MutationHookOptions<DeleteOneWithdrawMutation, DeleteOneWithdrawMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteOneWithdrawMutation, DeleteOneWithdrawMutationVariables>(DeleteOneWithdrawDocument, options);
      }
export type DeleteOneWithdrawMutationHookResult = ReturnType<typeof useDeleteOneWithdrawMutation>;
export type DeleteOneWithdrawMutationResult = Apollo.MutationResult<DeleteOneWithdrawMutation>;
export type DeleteOneWithdrawMutationOptions = Apollo.BaseMutationOptions<DeleteOneWithdrawMutation, DeleteOneWithdrawMutationVariables>;
export const DeleteManyWithdrawDocument = gql`
    mutation deleteManyWithdraw($where: WithdrawWhereInput) {
  deleteManyWithdraw(where: $where) {
    count
  }
}
    `;

/**
 * __useDeleteManyWithdrawMutation__
 *
 * To run a mutation, you first call `useDeleteManyWithdrawMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useDeleteManyWithdrawMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [deleteManyWithdrawMutation, { data, loading, error }] = useDeleteManyWithdrawMutation({
 *   variables: {
 *      where: // value for 'where'
 *   },
 * });
 */
export function useDeleteManyWithdrawMutation(baseOptions?: Apollo.MutationHookOptions<DeleteManyWithdrawMutation, DeleteManyWithdrawMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<DeleteManyWithdrawMutation, DeleteManyWithdrawMutationVariables>(DeleteManyWithdrawDocument, options);
      }
export type DeleteManyWithdrawMutationHookResult = ReturnType<typeof useDeleteManyWithdrawMutation>;
export type DeleteManyWithdrawMutationResult = Apollo.MutationResult<DeleteManyWithdrawMutation>;
export type DeleteManyWithdrawMutationOptions = Apollo.BaseMutationOptions<DeleteManyWithdrawMutation, DeleteManyWithdrawMutationVariables>;
export const UpdateManyWithdrawDocument = gql`
    mutation updateManyWithdraw($where: WithdrawWhereInput, $data: WithdrawUpdateManyMutationInput!) {
  updateManyWithdraw(where: $where, data: $data) {
    count
  }
}
    `;

/**
 * __useUpdateManyWithdrawMutation__
 *
 * To run a mutation, you first call `useUpdateManyWithdrawMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateManyWithdrawMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateManyWithdrawMutation, { data, loading, error }] = useUpdateManyWithdrawMutation({
 *   variables: {
 *      where: // value for 'where'
 *      data: // value for 'data'
 *   },
 * });
 */
export function useUpdateManyWithdrawMutation(baseOptions?: Apollo.MutationHookOptions<UpdateManyWithdrawMutation, UpdateManyWithdrawMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateManyWithdrawMutation, UpdateManyWithdrawMutationVariables>(UpdateManyWithdrawDocument, options);
      }
export type UpdateManyWithdrawMutationHookResult = ReturnType<typeof useUpdateManyWithdrawMutation>;
export type UpdateManyWithdrawMutationResult = Apollo.MutationResult<UpdateManyWithdrawMutation>;
export type UpdateManyWithdrawMutationOptions = Apollo.BaseMutationOptions<UpdateManyWithdrawMutation, UpdateManyWithdrawMutationVariables>;
export const LoginDocument = gql`
    mutation login($email: String!, $password: String!) {
  login(email: $email, password: $password) {
    id
    email
    name
  }
}
    `;

/**
 * __useLoginMutation__
 *
 * To run a mutation, you first call `useLoginMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useLoginMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [loginMutation, { data, loading, error }] = useLoginMutation({
 *   variables: {
 *      email: // value for 'email'
 *      password: // value for 'password'
 *   },
 * });
 */
export function useLoginMutation(baseOptions?: Apollo.MutationHookOptions<LoginMutation, LoginMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<LoginMutation, LoginMutationVariables>(LoginDocument, options);
      }
export type LoginMutationHookResult = ReturnType<typeof useLoginMutation>;
export type LoginMutationResult = Apollo.MutationResult<LoginMutation>;
export type LoginMutationOptions = Apollo.BaseMutationOptions<LoginMutation, LoginMutationVariables>;
export const SignupDocument = gql`
    mutation signup($email: String!, $password: String!, $name: String!) {
  signup(email: $email, password: $password, name: $name) {
    id
    email
    name
  }
}
    `;

/**
 * __useSignupMutation__
 *
 * To run a mutation, you first call `useSignupMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useSignupMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [signupMutation, { data, loading, error }] = useSignupMutation({
 *   variables: {
 *      email: // value for 'email'
 *      password: // value for 'password'
 *      name: // value for 'name'
 *   },
 * });
 */
export function useSignupMutation(baseOptions?: Apollo.MutationHookOptions<SignupMutation, SignupMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<SignupMutation, SignupMutationVariables>(SignupDocument, options);
      }
export type SignupMutationHookResult = ReturnType<typeof useSignupMutation>;
export type SignupMutationResult = Apollo.MutationResult<SignupMutation>;
export type SignupMutationOptions = Apollo.BaseMutationOptions<SignupMutation, SignupMutationVariables>;
export const MeDocument = gql`
    query me {
  me {
    id
    name
    email
  }
}
    `;

/**
 * __useMeQuery__
 *
 * To run a query within a React component, call `useMeQuery` and pass it any options that fit your needs.
 * When your component renders, `useMeQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useMeQuery({
 *   variables: {
 *   },
 * });
 */
export function useMeQuery(baseOptions?: Apollo.QueryHookOptions<MeQuery, MeQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<MeQuery, MeQueryVariables>(MeDocument, options);
      }
export function useMeLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<MeQuery, MeQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<MeQuery, MeQueryVariables>(MeDocument, options);
        }
export type MeQueryHookResult = ReturnType<typeof useMeQuery>;
export type MeLazyQueryHookResult = ReturnType<typeof useMeLazyQuery>;
export type MeQueryResult = Apollo.QueryResult<MeQuery, MeQueryVariables>;
export const GetCustomerDocument = gql`
    query getCustomer($websiteSlug: String!) {
  getCustomer(websiteSlug: $websiteSlug)
}
    `;

/**
 * __useGetCustomerQuery__
 *
 * To run a query within a React component, call `useGetCustomerQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetCustomerQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetCustomerQuery({
 *   variables: {
 *      websiteSlug: // value for 'websiteSlug'
 *   },
 * });
 */
export function useGetCustomerQuery(baseOptions: Apollo.QueryHookOptions<GetCustomerQuery, GetCustomerQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<GetCustomerQuery, GetCustomerQueryVariables>(GetCustomerDocument, options);
      }
export function useGetCustomerLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetCustomerQuery, GetCustomerQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<GetCustomerQuery, GetCustomerQueryVariables>(GetCustomerDocument, options);
        }
export type GetCustomerQueryHookResult = ReturnType<typeof useGetCustomerQuery>;
export type GetCustomerLazyQueryHookResult = ReturnType<typeof useGetCustomerLazyQuery>;
export type GetCustomerQueryResult = Apollo.QueryResult<GetCustomerQuery, GetCustomerQueryVariables>;
export const SignUploadUrlDocument = gql`
    mutation signUploadUrl($filename: String!, $acl: String!, $contentType: String!) {
  signUploadUrl(filename: $filename, acl: $acl, contentType: $contentType)
}
    `;

/**
 * __useSignUploadUrlMutation__
 *
 * To run a mutation, you first call `useSignUploadUrlMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useSignUploadUrlMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [signUploadUrlMutation, { data, loading, error }] = useSignUploadUrlMutation({
 *   variables: {
 *      filename: // value for 'filename'
 *      acl: // value for 'acl'
 *      contentType: // value for 'contentType'
 *   },
 * });
 */
export function useSignUploadUrlMutation(baseOptions?: Apollo.MutationHookOptions<SignUploadUrlMutation, SignUploadUrlMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<SignUploadUrlMutation, SignUploadUrlMutationVariables>(SignUploadUrlDocument, options);
      }
export type SignUploadUrlMutationHookResult = ReturnType<typeof useSignUploadUrlMutation>;
export type SignUploadUrlMutationResult = Apollo.MutationResult<SignUploadUrlMutation>;
export type SignUploadUrlMutationOptions = Apollo.BaseMutationOptions<SignUploadUrlMutation, SignUploadUrlMutationVariables>;
export const PermissionDocument = gql`
    query permission {
  permission
}
    `;

/**
 * __usePermissionQuery__
 *
 * To run a query within a React component, call `usePermissionQuery` and pass it any options that fit your needs.
 * When your component renders, `usePermissionQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = usePermissionQuery({
 *   variables: {
 *   },
 * });
 */
export function usePermissionQuery(baseOptions?: Apollo.QueryHookOptions<PermissionQuery, PermissionQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<PermissionQuery, PermissionQueryVariables>(PermissionDocument, options);
      }
export function usePermissionLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<PermissionQuery, PermissionQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<PermissionQuery, PermissionQueryVariables>(PermissionDocument, options);
        }
export type PermissionQueryHookResult = ReturnType<typeof usePermissionQuery>;
export type PermissionLazyQueryHookResult = ReturnType<typeof usePermissionLazyQuery>;
export type PermissionQueryResult = Apollo.QueryResult<PermissionQuery, PermissionQueryVariables>;
export const EnterAdminDocument = gql`
    mutation enterAdmin($admin: String!, $id: String!) {
  enterAdmin(admin: $admin, id: $id)
}
    `;

/**
 * __useEnterAdminMutation__
 *
 * To run a mutation, you first call `useEnterAdminMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useEnterAdminMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [enterAdminMutation, { data, loading, error }] = useEnterAdminMutation({
 *   variables: {
 *      admin: // value for 'admin'
 *      id: // value for 'id'
 *   },
 * });
 */
export function useEnterAdminMutation(baseOptions?: Apollo.MutationHookOptions<EnterAdminMutation, EnterAdminMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<EnterAdminMutation, EnterAdminMutationVariables>(EnterAdminDocument, options);
      }
export type EnterAdminMutationHookResult = ReturnType<typeof useEnterAdminMutation>;
export type EnterAdminMutationResult = Apollo.MutationResult<EnterAdminMutation>;
export type EnterAdminMutationOptions = Apollo.BaseMutationOptions<EnterAdminMutation, EnterAdminMutationVariables>;
export const LogoutAdminDocument = gql`
    mutation logoutAdmin {
  logoutAdmin
}
    `;

/**
 * __useLogoutAdminMutation__
 *
 * To run a mutation, you first call `useLogoutAdminMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useLogoutAdminMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [logoutAdminMutation, { data, loading, error }] = useLogoutAdminMutation({
 *   variables: {
 *   },
 * });
 */
export function useLogoutAdminMutation(baseOptions?: Apollo.MutationHookOptions<LogoutAdminMutation, LogoutAdminMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<LogoutAdminMutation, LogoutAdminMutationVariables>(LogoutAdminDocument, options);
      }
export type LogoutAdminMutationHookResult = ReturnType<typeof useLogoutAdminMutation>;
export type LogoutAdminMutationResult = Apollo.MutationResult<LogoutAdminMutation>;
export type LogoutAdminMutationOptions = Apollo.BaseMutationOptions<LogoutAdminMutation, LogoutAdminMutationVariables>;
export const LogoutDocument = gql`
    mutation logout {
  logout
}
    `;

/**
 * __useLogoutMutation__
 *
 * To run a mutation, you first call `useLogoutMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useLogoutMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [logoutMutation, { data, loading, error }] = useLogoutMutation({
 *   variables: {
 *   },
 * });
 */
export function useLogoutMutation(baseOptions?: Apollo.MutationHookOptions<LogoutMutation, LogoutMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<LogoutMutation, LogoutMutationVariables>(LogoutDocument, options);
      }
export type LogoutMutationHookResult = ReturnType<typeof useLogoutMutation>;
export type LogoutMutationResult = Apollo.MutationResult<LogoutMutation>;
export type LogoutMutationOptions = Apollo.BaseMutationOptions<LogoutMutation, LogoutMutationVariables>;
export const AddTemplateDocument = gql`
    mutation addTemplate($id: String!, $currentJson: String!) {
  addTemplate(id: $id, currentJson: $currentJson)
}
    `;

/**
 * __useAddTemplateMutation__
 *
 * To run a mutation, you first call `useAddTemplateMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useAddTemplateMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [addTemplateMutation, { data, loading, error }] = useAddTemplateMutation({
 *   variables: {
 *      id: // value for 'id'
 *      currentJson: // value for 'currentJson'
 *   },
 * });
 */
export function useAddTemplateMutation(baseOptions?: Apollo.MutationHookOptions<AddTemplateMutation, AddTemplateMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<AddTemplateMutation, AddTemplateMutationVariables>(AddTemplateDocument, options);
      }
export type AddTemplateMutationHookResult = ReturnType<typeof useAddTemplateMutation>;
export type AddTemplateMutationResult = Apollo.MutationResult<AddTemplateMutation>;
export type AddTemplateMutationOptions = Apollo.BaseMutationOptions<AddTemplateMutation, AddTemplateMutationVariables>;
export const GetTemplatesDocument = gql`
    query getTemplates {
  getTemplates
}
    `;

/**
 * __useGetTemplatesQuery__
 *
 * To run a query within a React component, call `useGetTemplatesQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetTemplatesQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetTemplatesQuery({
 *   variables: {
 *   },
 * });
 */
export function useGetTemplatesQuery(baseOptions?: Apollo.QueryHookOptions<GetTemplatesQuery, GetTemplatesQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<GetTemplatesQuery, GetTemplatesQueryVariables>(GetTemplatesDocument, options);
      }
export function useGetTemplatesLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetTemplatesQuery, GetTemplatesQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<GetTemplatesQuery, GetTemplatesQueryVariables>(GetTemplatesDocument, options);
        }
export type GetTemplatesQueryHookResult = ReturnType<typeof useGetTemplatesQuery>;
export type GetTemplatesLazyQueryHookResult = ReturnType<typeof useGetTemplatesLazyQuery>;
export type GetTemplatesQueryResult = Apollo.QueryResult<GetTemplatesQuery, GetTemplatesQueryVariables>;
export const StripeCheckoutDocument = gql`
    mutation stripeCheckout($items: Json!, $websiteSlug: String!, $couponCode: String, $shippingId: String, $customerId: String!) {
  stripeCheckout(items: $items, websiteSlug: $websiteSlug, shippingId: $shippingId, customerId: $customerId, couponCode: $couponCode)
}
    `;

/**
 * __useStripeCheckoutMutation__
 *
 * To run a mutation, you first call `useStripeCheckoutMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useStripeCheckoutMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [stripeCheckoutMutation, { data, loading, error }] = useStripeCheckoutMutation({
 *   variables: {
 *      items: // value for 'items'
 *      websiteSlug: // value for 'websiteSlug'
 *      couponCode: // value for 'couponCode'
 *      shippingId: // value for 'shippingId'
 *      customerId: // value for 'customerId'
 *   },
 * });
 */
export function useStripeCheckoutMutation(baseOptions?: Apollo.MutationHookOptions<StripeCheckoutMutation, StripeCheckoutMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<StripeCheckoutMutation, StripeCheckoutMutationVariables>(StripeCheckoutDocument, options);
      }
export type StripeCheckoutMutationHookResult = ReturnType<typeof useStripeCheckoutMutation>;
export type StripeCheckoutMutationResult = Apollo.MutationResult<StripeCheckoutMutation>;
export type StripeCheckoutMutationOptions = Apollo.BaseMutationOptions<StripeCheckoutMutation, StripeCheckoutMutationVariables>;
export const GetAdminSettingsDocument = gql`
    query getAdminSettings($admin: String!, $Admin: String, $Version: String!) {
  getAdminSettings(admin: $admin, Admin: $Admin, Version: $Version)
}
    `;

/**
 * __useGetAdminSettingsQuery__
 *
 * To run a query within a React component, call `useGetAdminSettingsQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetAdminSettingsQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetAdminSettingsQuery({
 *   variables: {
 *      admin: // value for 'admin'
 *      Admin: // value for 'Admin'
 *      Version: // value for 'Version'
 *   },
 * });
 */
export function useGetAdminSettingsQuery(baseOptions: Apollo.QueryHookOptions<GetAdminSettingsQuery, GetAdminSettingsQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<GetAdminSettingsQuery, GetAdminSettingsQueryVariables>(GetAdminSettingsDocument, options);
      }
export function useGetAdminSettingsLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetAdminSettingsQuery, GetAdminSettingsQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<GetAdminSettingsQuery, GetAdminSettingsQueryVariables>(GetAdminSettingsDocument, options);
        }
export type GetAdminSettingsQueryHookResult = ReturnType<typeof useGetAdminSettingsQuery>;
export type GetAdminSettingsLazyQueryHookResult = ReturnType<typeof useGetAdminSettingsLazyQuery>;
export type GetAdminSettingsQueryResult = Apollo.QueryResult<GetAdminSettingsQuery, GetAdminSettingsQueryVariables>;
export const GetUiTreeDocument = gql`
    query getUiTree($adminId: String!) {
  getUiTree(adminId: $adminId)
}
    `;

/**
 * __useGetUiTreeQuery__
 *
 * To run a query within a React component, call `useGetUiTreeQuery` and pass it any options that fit your needs.
 * When your component renders, `useGetUiTreeQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useGetUiTreeQuery({
 *   variables: {
 *      adminId: // value for 'adminId'
 *   },
 * });
 */
export function useGetUiTreeQuery(baseOptions: Apollo.QueryHookOptions<GetUiTreeQuery, GetUiTreeQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<GetUiTreeQuery, GetUiTreeQueryVariables>(GetUiTreeDocument, options);
      }
export function useGetUiTreeLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<GetUiTreeQuery, GetUiTreeQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<GetUiTreeQuery, GetUiTreeQueryVariables>(GetUiTreeDocument, options);
        }
export type GetUiTreeQueryHookResult = ReturnType<typeof useGetUiTreeQuery>;
export type GetUiTreeLazyQueryHookResult = ReturnType<typeof useGetUiTreeLazyQuery>;
export type GetUiTreeQueryResult = Apollo.QueryResult<GetUiTreeQuery, GetUiTreeQueryVariables>;
export const StripeEnabledDocument = gql`
    query stripeEnabled($websiteSlug: String!) {
  stripeEnabled(websiteSlug: $websiteSlug)
}
    `;

/**
 * __useStripeEnabledQuery__
 *
 * To run a query within a React component, call `useStripeEnabledQuery` and pass it any options that fit your needs.
 * When your component renders, `useStripeEnabledQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useStripeEnabledQuery({
 *   variables: {
 *      websiteSlug: // value for 'websiteSlug'
 *   },
 * });
 */
export function useStripeEnabledQuery(baseOptions: Apollo.QueryHookOptions<StripeEnabledQuery, StripeEnabledQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<StripeEnabledQuery, StripeEnabledQueryVariables>(StripeEnabledDocument, options);
      }
export function useStripeEnabledLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<StripeEnabledQuery, StripeEnabledQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<StripeEnabledQuery, StripeEnabledQueryVariables>(StripeEnabledDocument, options);
        }
export type StripeEnabledQueryHookResult = ReturnType<typeof useStripeEnabledQuery>;
export type StripeEnabledLazyQueryHookResult = ReturnType<typeof useStripeEnabledLazyQuery>;
export type StripeEnabledQueryResult = Apollo.QueryResult<StripeEnabledQuery, StripeEnabledQueryVariables>;
export const StripeAccountStatusDocument = gql`
    query stripeAccountStatus {
  stripeAccountStatus
}
    `;

/**
 * __useStripeAccountStatusQuery__
 *
 * To run a query within a React component, call `useStripeAccountStatusQuery` and pass it any options that fit your needs.
 * When your component renders, `useStripeAccountStatusQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useStripeAccountStatusQuery({
 *   variables: {
 *   },
 * });
 */
export function useStripeAccountStatusQuery(baseOptions?: Apollo.QueryHookOptions<StripeAccountStatusQuery, StripeAccountStatusQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<StripeAccountStatusQuery, StripeAccountStatusQueryVariables>(StripeAccountStatusDocument, options);
      }
export function useStripeAccountStatusLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<StripeAccountStatusQuery, StripeAccountStatusQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<StripeAccountStatusQuery, StripeAccountStatusQueryVariables>(StripeAccountStatusDocument, options);
        }
export type StripeAccountStatusQueryHookResult = ReturnType<typeof useStripeAccountStatusQuery>;
export type StripeAccountStatusLazyQueryHookResult = ReturnType<typeof useStripeAccountStatusLazyQuery>;
export type StripeAccountStatusQueryResult = Apollo.QueryResult<StripeAccountStatusQuery, StripeAccountStatusQueryVariables>;
export const GetMetadataDocument = gql`
    mutation getMetadata($pageUrl: String!) {
  getMetadata(pageUrl: $pageUrl)
}
    `;

/**
 * __useGetMetadataMutation__
 *
 * To run a mutation, you first call `useGetMetadataMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useGetMetadataMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [getMetadataMutation, { data, loading, error }] = useGetMetadataMutation({
 *   variables: {
 *      pageUrl: // value for 'pageUrl'
 *   },
 * });
 */
export function useGetMetadataMutation(baseOptions?: Apollo.MutationHookOptions<GetMetadataMutation, GetMetadataMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<GetMetadataMutation, GetMetadataMutationVariables>(GetMetadataDocument, options);
      }
export type GetMetadataMutationHookResult = ReturnType<typeof useGetMetadataMutation>;
export type GetMetadataMutationResult = Apollo.MutationResult<GetMetadataMutation>;
export type GetMetadataMutationOptions = Apollo.BaseMutationOptions<GetMetadataMutation, GetMetadataMutationVariables>;
export const GetAnalyticsDocument = gql`
    mutation getAnalytics($type: String!, $beginSec: Int!, $endSec: Int!, $wedsiteId: String!, $isRenew: Boolean) {
  getAnalytics(type: $type, beginSec: $beginSec, endSec: $endSec, wedsiteId: $wedsiteId, isRenew: $isRenew)
}
    `;

/**
 * __useGetAnalyticsMutation__
 *
 * To run a mutation, you first call `useGetAnalyticsMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useGetAnalyticsMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [getAnalyticsMutation, { data, loading, error }] = useGetAnalyticsMutation({
 *   variables: {
 *      type: // value for 'type'
 *      beginSec: // value for 'beginSec'
 *      endSec: // value for 'endSec'
 *      wedsiteId: // value for 'wedsiteId'
 *      isRenew: // value for 'isRenew'
 *   },
 * });
 */
export function useGetAnalyticsMutation(baseOptions?: Apollo.MutationHookOptions<GetAnalyticsMutation, GetAnalyticsMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<GetAnalyticsMutation, GetAnalyticsMutationVariables>(GetAnalyticsDocument, options);
      }
export type GetAnalyticsMutationHookResult = ReturnType<typeof useGetAnalyticsMutation>;
export type GetAnalyticsMutationResult = Apollo.MutationResult<GetAnalyticsMutation>;
export type GetAnalyticsMutationOptions = Apollo.BaseMutationOptions<GetAnalyticsMutation, GetAnalyticsMutationVariables>;
export const ServerMintDocument = gql`
    mutation serverMint($orderedProductId: String!, $walletAddress: String!) {
  serverMint(orderedProductId: $orderedProductId, walletAddress: $walletAddress)
}
    `;

/**
 * __useServerMintMutation__
 *
 * To run a mutation, you first call `useServerMintMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useServerMintMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [serverMintMutation, { data, loading, error }] = useServerMintMutation({
 *   variables: {
 *      orderedProductId: // value for 'orderedProductId'
 *      walletAddress: // value for 'walletAddress'
 *   },
 * });
 */
export function useServerMintMutation(baseOptions?: Apollo.MutationHookOptions<ServerMintMutation, ServerMintMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<ServerMintMutation, ServerMintMutationVariables>(ServerMintDocument, options);
      }
export type ServerMintMutationHookResult = ReturnType<typeof useServerMintMutation>;
export type ServerMintMutationResult = Apollo.MutationResult<ServerMintMutation>;
export type ServerMintMutationOptions = Apollo.BaseMutationOptions<ServerMintMutation, ServerMintMutationVariables>;
export const AdminMintNftDocument = gql`
    mutation adminMintNft($orderId: String!) {
  adminMintNft(orderId: $orderId) {
    id
    amount
    applicationFee
    storageFee
  }
}
    `;

/**
 * __useAdminMintNftMutation__
 *
 * To run a mutation, you first call `useAdminMintNftMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useAdminMintNftMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [adminMintNftMutation, { data, loading, error }] = useAdminMintNftMutation({
 *   variables: {
 *      orderId: // value for 'orderId'
 *   },
 * });
 */
export function useAdminMintNftMutation(baseOptions?: Apollo.MutationHookOptions<AdminMintNftMutation, AdminMintNftMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<AdminMintNftMutation, AdminMintNftMutationVariables>(AdminMintNftDocument, options);
      }
export type AdminMintNftMutationHookResult = ReturnType<typeof useAdminMintNftMutation>;
export type AdminMintNftMutationResult = Apollo.MutationResult<AdminMintNftMutation>;
export type AdminMintNftMutationOptions = Apollo.BaseMutationOptions<AdminMintNftMutation, AdminMintNftMutationVariables>;
export const PayProductDocument = gql`
    mutation payProduct($productId: String!, $websiteSlug: String!, $customerId: String!, $paymentAddress: String!) {
  payProduct(productId: $productId, websiteSlug: $websiteSlug, customerId: $customerId, paymentAddress: $paymentAddress) {
    id
    amount
    applicationFee
    storageFee
  }
}
    `;

/**
 * __usePayProductMutation__
 *
 * To run a mutation, you first call `usePayProductMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `usePayProductMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [payProductMutation, { data, loading, error }] = usePayProductMutation({
 *   variables: {
 *      productId: // value for 'productId'
 *      websiteSlug: // value for 'websiteSlug'
 *      customerId: // value for 'customerId'
 *      paymentAddress: // value for 'paymentAddress'
 *   },
 * });
 */
export function usePayProductMutation(baseOptions?: Apollo.MutationHookOptions<PayProductMutation, PayProductMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<PayProductMutation, PayProductMutationVariables>(PayProductDocument, options);
      }
export type PayProductMutationHookResult = ReturnType<typeof usePayProductMutation>;
export type PayProductMutationResult = Apollo.MutationResult<PayProductMutation>;
export type PayProductMutationOptions = Apollo.BaseMutationOptions<PayProductMutation, PayProductMutationVariables>;
export const PreparePurchaseDocument = gql`
    mutation preparePurchase($productId: String!, $websiteSlug: String!, $customerId: String, $paymentAddress: String!) {
  preparePurchase(productId: $productId, websiteSlug: $websiteSlug, customerId: $customerId, paymentAddress: $paymentAddress) {
    id
    amount
    applicationFee
    storageFee
  }
}
    `;

/**
 * __usePreparePurchaseMutation__
 *
 * To run a mutation, you first call `usePreparePurchaseMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `usePreparePurchaseMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [preparePurchaseMutation, { data, loading, error }] = usePreparePurchaseMutation({
 *   variables: {
 *      productId: // value for 'productId'
 *      websiteSlug: // value for 'websiteSlug'
 *      customerId: // value for 'customerId'
 *      paymentAddress: // value for 'paymentAddress'
 *   },
 * });
 */
export function usePreparePurchaseMutation(baseOptions?: Apollo.MutationHookOptions<PreparePurchaseMutation, PreparePurchaseMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<PreparePurchaseMutation, PreparePurchaseMutationVariables>(PreparePurchaseDocument, options);
      }
export type PreparePurchaseMutationHookResult = ReturnType<typeof usePreparePurchaseMutation>;
export type PreparePurchaseMutationResult = Apollo.MutationResult<PreparePurchaseMutation>;
export type PreparePurchaseMutationOptions = Apollo.BaseMutationOptions<PreparePurchaseMutation, PreparePurchaseMutationVariables>;
export const PrepareStripePurchaseDocument = gql`
    mutation prepareStripePurchase($productId: String!, $websiteSlug: String!, $customerId: String!) {
  prepareStripePurchase(productId: $productId, websiteSlug: $websiteSlug, customerId: $customerId)
}
    `;

/**
 * __usePrepareStripePurchaseMutation__
 *
 * To run a mutation, you first call `usePrepareStripePurchaseMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `usePrepareStripePurchaseMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [prepareStripePurchaseMutation, { data, loading, error }] = usePrepareStripePurchaseMutation({
 *   variables: {
 *      productId: // value for 'productId'
 *      websiteSlug: // value for 'websiteSlug'
 *      customerId: // value for 'customerId'
 *   },
 * });
 */
export function usePrepareStripePurchaseMutation(baseOptions?: Apollo.MutationHookOptions<PrepareStripePurchaseMutation, PrepareStripePurchaseMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<PrepareStripePurchaseMutation, PrepareStripePurchaseMutationVariables>(PrepareStripePurchaseDocument, options);
      }
export type PrepareStripePurchaseMutationHookResult = ReturnType<typeof usePrepareStripePurchaseMutation>;
export type PrepareStripePurchaseMutationResult = Apollo.MutationResult<PrepareStripePurchaseMutation>;
export type PrepareStripePurchaseMutationOptions = Apollo.BaseMutationOptions<PrepareStripePurchaseMutation, PrepareStripePurchaseMutationVariables>;
export const UpdateOrderDocument = gql`
    mutation updateOrder($orderId: String!, $transactionHash: String) {
  updateOrder(orderId: $orderId, transactionHash: $transactionHash) {
    id
  }
}
    `;

/**
 * __useUpdateOrderMutation__
 *
 * To run a mutation, you first call `useUpdateOrderMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `useUpdateOrderMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [updateOrderMutation, { data, loading, error }] = useUpdateOrderMutation({
 *   variables: {
 *      orderId: // value for 'orderId'
 *      transactionHash: // value for 'transactionHash'
 *   },
 * });
 */
export function useUpdateOrderMutation(baseOptions?: Apollo.MutationHookOptions<UpdateOrderMutation, UpdateOrderMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<UpdateOrderMutation, UpdateOrderMutationVariables>(UpdateOrderDocument, options);
      }
export type UpdateOrderMutationHookResult = ReturnType<typeof useUpdateOrderMutation>;
export type UpdateOrderMutationResult = Apollo.MutationResult<UpdateOrderMutation>;
export type UpdateOrderMutationOptions = Apollo.BaseMutationOptions<UpdateOrderMutation, UpdateOrderMutationVariables>;
export const PrepareRequestDocument = gql`
    mutation prepareRequest($requestId: String!) {
  prepareRequest(requestId: $requestId)
}
    `;

/**
 * __usePrepareRequestMutation__
 *
 * To run a mutation, you first call `usePrepareRequestMutation` within a React component and pass it any options that fit your needs.
 * When your component renders, `usePrepareRequestMutation` returns a tuple that includes:
 * - A mutate function that you can call at any time to execute the mutation
 * - An object with fields that represent the current status of the mutation's execution
 *
 * @param baseOptions options that will be passed into the mutation, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options-2;
 *
 * @example
 * const [prepareRequestMutation, { data, loading, error }] = usePrepareRequestMutation({
 *   variables: {
 *      requestId: // value for 'requestId'
 *   },
 * });
 */
export function usePrepareRequestMutation(baseOptions?: Apollo.MutationHookOptions<PrepareRequestMutation, PrepareRequestMutationVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useMutation<PrepareRequestMutation, PrepareRequestMutationVariables>(PrepareRequestDocument, options);
      }
export type PrepareRequestMutationHookResult = ReturnType<typeof usePrepareRequestMutation>;
export type PrepareRequestMutationResult = Apollo.MutationResult<PrepareRequestMutation>;
export type PrepareRequestMutationOptions = Apollo.BaseMutationOptions<PrepareRequestMutation, PrepareRequestMutationVariables>;